{
  "version": 3,
  "sources": ["../node_modules/@wonderlandengine/components/8thwall-camera.js", "../node_modules/@wonderlandengine/components/cursor-target.js", "../node_modules/gl-matrix/esm/common.js", "../node_modules/gl-matrix/esm/mat3.js", "../node_modules/gl-matrix/esm/mat4.js", "../node_modules/gl-matrix/esm/vec3.js", "../node_modules/gl-matrix/esm/vec4.js", "../node_modules/gl-matrix/esm/quat.js", "../node_modules/gl-matrix/esm/quat2.js", "../node_modules/gl-matrix/esm/vec2.js", "../node_modules/gl-matrix/esm/index.js", "../node_modules/@wonderlandengine/components/cursor.js", "../node_modules/@wonderlandengine/components/debug-object.js", "../node_modules/@wonderlandengine/components/device-orientation-look.js", "../node_modules/@wonderlandengine/components/finger-cursor.js", "../node_modules/@wonderlandengine/components/fixed-foveation.js", "../node_modules/@wonderlandengine/components/hand-tracking.js", "../node_modules/@wonderlandengine/components/hit-test-location.js", "../node_modules/howler/dist/howler.js", "../node_modules/@wonderlandengine/components/howler-audio-listener.js", "../node_modules/@wonderlandengine/components/howler-audio-source.js", "../node_modules/@wonderlandengine/components/image-texture.js", "../node_modules/@wonderlandengine/components/mouse-look.js", "../node_modules/@wonderlandengine/components/target-framerate.js", "../node_modules/@wonderlandengine/components/teleport.js", "../node_modules/@wonderlandengine/components/two-joint-ik-solver.js", "../node_modules/@wonderlandengine/components/video-texture.js", "../node_modules/@wonderlandengine/components/vr-mode-active-switch.js", "../node_modules/@wonderlandengine/components/wasd-controls.js", "../node_modules/@wonderlandengine/components/wonderleap-ad.js", "../js/pp/pp.js", "../js/pp/plugin/extensions/array_extension.js", "../js/pp/plugin/extensions/object_extension.js", "../js/pp/plugin/extensions/math_extension.js", "../js/pp/plugin/extensions/scene_extension.js", "../js/pp/plugin/component_mods/clone_component_mod.js", "../js/pp/plugin/component_mods/cursor_component_mod.js", "../js/pp/plugin/component_mods/cursor_target_component_mod.js", "../js/pp/plugin/component_mods/mouse_look_component_mod.js", "../js/pp/audio/spatial_audio_listener.js", "../node_modules/wasm-feature-detect/dist/esm/index.js", "../node_modules/@wonderlandengine/api/wonderland.js", "../node_modules/@wonderlandengine/api/index.js", "../js/pp/audio/audio_manager_component.js", "../js/pp/audio/audio_manager.js", "../js/pp/audio/audio_player.js", "../js/pp/audio/audio_setup.js", "../js/pp/audio/audio_utils.js", "../js/pp/audio/mute_everything.js", "../js/pp/audio/howler/howler_audio_player.js", "../js/pp/cauldron/benchmarks/max_physx.js", "../js/pp/cauldron/benchmarks/max_visible_triangles.js", "../js/pp/cauldron/cauldron/object_pool_manager.js", "../js/pp/cauldron/cauldron/save_manager.js", "../js/pp/cauldron/cauldron/timer.js", "../js/pp/cauldron/components/clear_console_on_xr_session_start.js", "../js/pp/cauldron/components/set_active.js", "../js/pp/cauldron/components/adjust_hierarchy_physx_scale.js", "../js/pp/cauldron/components/get_player_objects.js", "../js/pp/cauldron/components/get_default_resources.js", "../js/pp/cauldron/components/show_fps.js", "../js/pp/cauldron/fsm/fsm.js", "../js/pp/cauldron/fsm/state.js", "../js/pp/cauldron/fsm/transition.js", "../js/pp/cauldron/fsm/states/timer_state.js", "../js/pp/cauldron/utils/color_utils.js", "../js/pp/cauldron/utils/material_utils.js", "../js/pp/cauldron/utils/mesh_utils.js", "../js/pp/cauldron/utils/save_utils.js", "../js/pp/cauldron/utils/text_utils.js", "../js/pp/cauldron/utils/xr_utils.js", "../js/pp/cauldron/utils/browser_utils.js", "../js/pp/cauldron/physics/physics_utils.js", "../js/pp/cauldron/physics/physics_raycast_data.js", "../js/pp/cauldron/physics/physics_layer_flags.js", "../js/pp/cauldron/physics/physics_collision_collector.js", "../js/pp/cauldron/visual/visual_manager.js", "../js/pp/cauldron/visual/elements/visual_element_types.js", "../js/pp/cauldron/visual/elements/visual_line.js", "../js/pp/cauldron/visual/elements/visual_mesh.js", "../js/pp/cauldron/visual/elements/visual_point.js", "../js/pp/cauldron/visual/elements/visual_arrow.js", "../js/pp/cauldron/visual/elements/visual_text.js", "../js/pp/cauldron/visual/elements/visual_transform.js", "../js/pp/cauldron/visual/elements/visual_raycast.js", "../js/pp/cauldron/visual/elements/visual_torus.js", "../js/pp/cauldron/visual/components/visual_manager_component.js", "../js/pp/debug/debug_manager.js", "../js/pp/debug/debug_visual_manager.js", "../js/pp/debug/components/debug_transform_component.js", "../js/pp/debug/components/debug_manager_component.js", "../js/pp/gameplay/cauldron/cauldron/direction_2D_to_3D_converter.js", "../js/pp/gameplay/cauldron/cauldron/number_over_value.js", "../js/pp/gameplay/cauldron/player/player_head_controller.js", "../js/pp/gameplay/cauldron/player/player_occlusion.js", "../js/pp/gameplay/cauldron/player/components/player_head_controller_component.js", "../js/pp/gameplay/cauldron/player/components/player_occlusion_component.js", "../js/pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/collision_params.js", "../js/pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/collision_check.js", "../js/pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/collision_movement_check.js", "../js/pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/collision_teleport_check.js", "../js/pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/collision_position_check.js", "../js/pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/horizontal_collision_check.js", "../js/pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/horizontal_collision_sliding.js", "../js/pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/horizontal_collision_movement_check.js", "../js/pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/horizontal_collision_position_check.js", "../js/pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/vertical_collision_check.js", "../js/pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/collision_surface_check.js", "../js/pp/gameplay/character_controller/collision/collision_check_bridge/collision_check_bridge.js", "../js/pp/gameplay/character_controller/collision/character_collider_setup.js", "../js/pp/gameplay/character_controller/collision/character_collider_utils.js", "../js/pp/gameplay/character_controller/collision/character_collision_results.js", "../js/pp/gameplay/character_controller/collision/character_collision_system.js", "../js/pp/gameplay/character_controller/collision/components/character_collision_system_component.js", "../js/pp/gameplay/character_controller/character_controller.js", "../js/pp/gameplay/character_controller/synced_character_controller.js", "../js/pp/gameplay/character_controller/character_controller_utils.js", "../js/pp/gameplay/character_controller/components/character_controller_component.js", "../js/pp/gameplay/character_controller/player/player_character_controller.js", "../js/pp/gameplay/character_controller/player/player_head_character_controller.js", "../js/pp/gameplay/character_controller/player/player_hand_character_controller.js", "../js/pp/gameplay/character_controller/player/components/player_character_controller_component.js", "../js/pp/gameplay/character_controller/player/components/player_head_character_controller_component.js", "../js/pp/gameplay/character_controller/player/components/player_hand_character_controller_component.js", "../js/pp/gameplay/grab_throw/grabbable.js", "../js/pp/gameplay/grab_throw/grabber_hand.js", "../js/pp/gameplay/locomotion/components/global_gravity.js", "../js/pp/gameplay/locomotion/player/player_locomotion_smooth.js", "../js/pp/gameplay/locomotion/player/player_locomotion_rotate.js", "../js/pp/gameplay/locomotion/player/player_locomotion_gravity.js", "../js/pp/gameplay/locomotion/player/teleport/player_locomotion_teleport.js", "../js/pp/gameplay/locomotion/player/components/player_locomotion_teleport_component.js", "../js/pp/gameplay/locomotion/player/components/player_locomotion_smooth_component.js", "../js/pp/gameplay/locomotion/player/components/player_locomotion_rotate_component.js", "../js/pp/gameplay/locomotion/player/components/player_locomotion_gravity_component.js", "../js/pp/gameplay/utils/ca_utils.js", "../js/pp/input/cauldron/finger_cursor.js", "../js/pp/input/cauldron/input_types.js", "../js/pp/input/cauldron/input_utils.js", "../js/pp/input/cauldron/keyboard.js", "../js/pp/input/cauldron/mouse.js", "../js/pp/input/cauldron/input_manager.js", "../js/pp/input/cauldron/input_manager_component.js", "../js/pp/input/cauldron/switch_hand_object.js", "../js/pp/input/cauldron/tracked_hand_draw_joint.js", "../js/pp/input/cauldron/tracked_hand_draw_all_joints.js", "../js/pp/input/cauldron/tracked_hand_draw_skin.js", "../js/pp/input/gamepad/gamepad_buttons.js", "../js/pp/input/gamepad/base_gamepad.js", "../js/pp/input/gamepad/universal_gamepad.js", "../js/pp/input/gamepad/gamepad_cores/gamepad_core.js", "../js/pp/input/gamepad/gamepad_cores/xr_gamepad_core.js", "../js/pp/input/gamepad/gamepad_cores/keyboard_gamepad_core.js", "../js/pp/input/gamepad/gamepad_cores/virtual_gamepad_gamepad_core.js", "../js/pp/input/gamepad/cauldron/gamepad_mesh_animator.js", "../js/pp/input/gamepad/cauldron/gamepad_manager.js", "../js/pp/input/gamepad/cauldron/gamepad_utils.js", "../js/pp/input/gamepad/cauldron/gamepad_control_scheme.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_component.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_params.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_virtual_button.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_virtual_thumbstick.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_icon.js", "../js/pp/input/pose/base_pose.js", "../js/pp/input/pose/hand_pose.js", "../js/pp/input/pose/head_pose.js", "../js/pp/input/pose/tracked_hand_joint_pose.js", "../js/pp/input/pose/tracked_hand_pose.js", "../js/pp/input/pose/components/set_player_height.js", "../js/pp/input/pose/components/set_hand_local_transform.js", "../js/pp/input/pose/components/set_head_local_transform.js", "../js/pp/input/pose/components/set_vr_head_local_transform.js", "../js/pp/input/pose/components/set_non_vr_head_local_transform.js", "../js/pp/input/pose/components/set_tracked_hand_joint_local_transform.js", "../js/pp/input/pose/components/copy_hand_transform.js", "../js/pp/input/pose/components/copy_head_transform.js", "../js/pp/input/pose/components/copy_player_transform.js", "../js/pp/input/pose/components/copy_player_pivot_transform.js", "../js/pp/tool/cauldron/cauldron/tool_types.js", "../js/pp/tool/cauldron/components/tool_cursor.js", "../js/pp/tool/console_vr/console_vr_widget_setup.js", "../js/pp/tool/console_vr/console_vr_widget_ui.js", "../js/pp/tool/console_vr/console_vr_widget.js", "../js/pp/tool/console_vr/console_vr.js", "../js/pp/tool/console_vr/console_vr_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_object_tuner.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_light_attenuation.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_light_color.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_mesh_color.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_mesh_ambient_factor.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_scale.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_set_tune_target_child_number.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_set_tune_target_grab.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_transform.js", "../js/pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_selector.js", "../js/pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_widget_selector.js", "../js/pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_variables.js", "../js/pp/tool/easy_tune/easy_tune_variable_types.js", "../js/pp/tool/easy_tune/easy_tune_globals.js", "../js/pp/tool/easy_tune/components/easy_tune_component.js", "../js/pp/tool/easy_tune/components/easy_tune_import_variables.js", "../js/pp/tool/widget_frame/widget_frame_setup.js", "../js/pp/tool/widget_frame/widget_frame_ui.js", "../js/pp/tool/widget_frame/widget_frame.js", "../js/locomotion/locomotion_utils.js", "../js/locomotion/player_head_manager.js", "../js/locomotion/player_transform_manager.js", "../js/locomotion/player_locomotion_rotate.js", "../js/locomotion/player_locomotion_movement.js", "../js/locomotion/player_locomotion_smooth.js", "../js/locomotion/player_obscure_manager.js", "../js/locomotion/player_locomotion.js", "../js/locomotion/player_locomotion_component.js", "../js/locomotion/teleport/player_locomotion_teleport_parable.js", "../js/locomotion/teleport/player_locomotion_teleport_state.js", "../js/locomotion/teleport/player_locomotion_teleport_detection_visualizer.js", "../js/locomotion/teleport/player_locomotion_teleport_detection_state.js", "../js/locomotion/teleport/player_locomotion_teleport_detection_state_visibility.js", "../js/locomotion/teleport/player_locomotion_teleport_teleport_state.js", "../js/locomotion/teleport/player_locomotion_teleport_teleport_blink_state.js", "../js/locomotion/teleport/player_locomotion_teleport_teleport_shift_state.js", "../js/locomotion/teleport/player_locomotion_teleport.js", "../js/locomotion/cleaned/player_locomotion_cleaned.js", "../js/locomotion/cleaned/player_locomotion_smooth_cleaned.js", "../js/locomotion/cleaned/player_transform_manager_cleaned.js", "../js/labyroots/labyroots_gateway.js", "../js/labyroots/json/file_manager.js", "../js/labyroots/maze/maze.js", "../js/labyroots/maze/maze_item_type.js", "../js/labyroots/maze/mazeverse_maze.js", "../js/labyroots/maze/mazeverse_create_walls.js", "../js/labyroots/maze/mazeverse_add_elements.js", "../js/labyroots/cauldron/billboard_player.js", "../js/labyroots/cauldron/story.js", "../js/labyroots/cauldron/audio_load.js", "../js/labyroots/cauldron/deactivate_on_story.js", "../js/labyroots/cauldron/open_ggj.js", "../js/labyroots/cauldron/open_github.js", "../js/labyroots/cauldron/open_zesty.js", "../js/labyroots/cauldron/zesty-wonderland-sdk-compat.js", "../js/labyroots/cauldron/set_texture_after_delay.js", "../js/labyroots/cauldron/secret_zone_check.js", "../js/labyroots/cauldron/display_leaderboard.js", "../js/labyroots/cauldron/lr_ca_dummy_server.js", "../js/labyroots/cauldron/activate_if_wedding.js", "../js/labyroots/cauldron/deactivate_physx_if_far_from_player.js", "../js/labyroots/cauldron/follow_axe.js", "../js/labyroots/cauldron/fix_drifting.js", "../js/labyroots/cauldron/show_drifting.js", "../js/labyroots/cauldron/increase_floor_tile.js", "../js/labyroots/cauldron/render_closest_walls_first.js", "../js/labyroots/cauldron/send_all_events.js", "../js/labyroots/cauldron/sky_setter.js", "../js/labyroots/cauldron/lights_setter.js", "../js/labyroots/cauldron/wondermelon.js", "../js/labyroots/cauldron/spawn_floor.js", "../js/labyroots/cauldron/hide_if_pose_not_valid.js", "../js/labyroots/player/transformation.js", "../js/labyroots/player/stage_switch.js", "../js/labyroots/player/mouth.js", "../js/labyroots/player/swap_grab_hand.js", "../js/labyroots/player/axe.js", "../js/labyroots/tree/fruit.js", "../js/labyroots/tree/root.js", "../js/labyroots/tree/root_wall.js", "../js/labyroots/tree/big_tree.js", "../js/labyroots/tree/human_tree.js", "../js/labyroots/tree/big_tree_die.js", "../js/labyroots/test/test.js", "../js/bundle.js"],
  "sourcesContent": ["/**\r\n * Sets up the 8thwall pipeline and retrieves tracking events to place an\r\n * object at the location of the tracked AR camera / mobile device.\r\n *\r\n * Use this for SLAM tracking based on 8thwall.\r\n *\r\n * Make sure to enable 8thwall in \"Project Settings\" > \"AR\". See also the\r\n * [AR Getting Started Guide](/getting-started/quick-start-ar). */\r\nWL.registerComponent('8thwall-camera', {\r\n    /** Choose front/back camera */\r\n    camera: {type: WL.Type.Enum, values: ['auto', 'back', 'front'], default: 'auto'},\r\n}, {\r\n    name: 'wonderland-engine',\r\n\r\n    init: function() {\r\n        this.position = [0, 0, 0, 0];\r\n        this.rotation = [0, 0, 0, 0];\r\n        this.started = false;\r\n\r\n        const vals = ['auto', 'back', 'front'];\r\n        this.camera = vals[this.camera];\r\n        if(this.camera == 'auto') {\r\n            this.camera = 'back';\r\n        }\r\n\r\n        this.onStart = this.onStart.bind(this);\r\n        this.onUpdate = this.onUpdate.bind(this);\r\n\r\n        XR8.addCameraPipelineModules([\r\n            /* Draw the camera feed */\r\n            XR8.GlTextureRenderer.pipelineModule(),\r\n            XR8.XrController.pipelineModule(),\r\n            this,\r\n        ]);\r\n\r\n        if(this.camera == 'back') {\r\n            XR8.run({canvas: Module['canvas'], ownRunLoop: false});\r\n\r\n        } else if(this.camera == 'back') {\r\n            XR8.XrController.configure({disableWorldTracking: true});\r\n            XR8.run({canvas: Module['canvas'], ownRunLoop: false, cameraConfig: {\r\n                direction: XR8.XrConfig.camera().FRONT\r\n            }});\r\n        } else {\r\n            console.error(\"[8thwall-camera] Invalid camera setting:\", this.camera);\r\n        }\r\n    },\r\n\r\n    update: function() {\r\n        if(this.started) {\r\n            if(WL.scene.onPostRender.length == 0) {\r\n                WL.scene.onPreRender.push(function() {\r\n                    XR8.runPreRender(Date.now());\r\n                    _wl_reset_context();\r\n                });\r\n                WL.scene.onPostRender.push(function() {\r\n                    XR8.runPostRender(Date.now());\r\n                    //_wl_reset_context();\r\n                });\r\n            }\r\n\r\n            if(this.rotation[0] == 0 && this.rotation[1] == 0 &&\r\n                this.rotation[2] == 0 && this.rotation[3] == 0) {\r\n                return;\r\n            }\r\n\r\n            /* Apply the transform retrieved from 8thwall */\r\n            this.object.resetTransform();\r\n            this.object.rotate(this.rotation);\r\n            this.object.translate(this.position);\r\n        }\r\n    },\r\n\r\n    /* XR8 CameraPipelineModule functions\r\n     * See: https://www.8thwall.com/docs/web/#camerapipelinemodule */\r\n    onUpdate: function(data) {\r\n        if (!data.processCpuResult.reality) return;\r\n        let r = data.processCpuResult.reality.rotation;\r\n        this.rotation[0] = r.x;\r\n        this.rotation[1] = r.y;\r\n        this.rotation[2] = r.z;\r\n        this.rotation[3] = r.w;\r\n        let p = data.processCpuResult.reality.position;\r\n        this.position[0] = p.x;\r\n        this.position[1] = p.y;\r\n        this.position[2] = p.z;\r\n    },\r\n\r\n    onStart: function() {\r\n        this.started = true;\r\n    }\r\n});\r\n", "/**\r\n * Click/hover/move/button target for [cursor](#cursor).\r\n *\r\n * To trigger code when clicking, hovering, unhovering, moving cursor, pressing\r\n * cursor button or releasing cursor button, use `.addClickFunction(f)`,\r\n * `.addHoverFunction(f)`, `.addUnHoverFunction(f)`,\r\n * `.addMoveFunction(f)`, `.addDownFunction(f)` and\r\n * `.addUpFunction(f)` respectively with any `function f() {}`.\r\n *\r\n * To call members on a different component, you can set up a cursor target like\r\n * so:\r\n *\r\n * ```js\r\n * start: function() {\r\n *   let target = this.object.addComponent('cursor-target');\r\n *   target.addClickFunction(this.onClick.bind(this));\r\n * },\r\n * onClick: function() {\r\n *   console.log(this.object.name, \"was clicked!\");\r\n * }\r\n * ```\r\n * **Functions:**\r\n *\r\n * ```js\r\n * callback = function(object, cursorComponent) {};\r\n *\r\n * addHoverFunction(callback);\r\n * removeHoverFunction(callback);\r\n *\r\n * addUnHoverFunction(callback);\r\n * removeUnHoverFunction(callback);\r\n *\r\n * addClickFunction(callback);\r\n * removeClickFunction(callback);\r\n *\r\n * addMoveFunction(callback);\r\n * removeMoveFunction(callback);\r\n *\r\n * addDownFunction(callback);\r\n * removeDownFunction(callback);\r\n *\r\n * addUpFunction(callback);\r\n * removeUpFunction(callback);\r\n * ```\r\n *\r\n * **Requirements:**\r\n * - a `collision` component to be attached to the same object.\r\n *\r\n * See [Animation Example](/showcase/animation).\r\n */\r\nWL.registerComponent(\"cursor-target\", {\r\n  }, {\r\n    init: function () {\r\n      this.hoverFunctions = [];\r\n      this.unHoverFunctions = [];\r\n      this.clickFunctions = [];\r\n      this.moveFunctions = [];\r\n      this.downFunctions = [];\r\n      this.upFunctions = [];\r\n    },\r\n    onHover: function(object, cursor) {\r\n        for(let f of this.hoverFunctions) f(object, cursor);\r\n    },\r\n    onUnhover: function(object, cursor) {\r\n        for(let f of this.unHoverFunctions) f(object, cursor);\r\n    },\r\n    onClick: function(object, cursor) {\r\n        for(let f of this.clickFunctions) f(object, cursor);\r\n    },\r\n    onMove: function(object, cursor) {\r\n        for(let f of this.moveFunctions) f(object, cursor);\r\n    },\r\n    onDown: function(object, cursor) {\r\n        for(let f of this.downFunctions) f(object, cursor);\r\n    },\r\n    onUp: function(object, cursor) {\r\n        for(let f of this.upFunctions) f(object, cursor);\r\n    },\r\n    addHoverFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this.hoverFunctions.push(f);\r\n    },\r\n    removeHoverFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.hoverFunctions, f);\r\n    },\r\n    addUnHoverFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this.unHoverFunctions.push(f);\r\n    },\r\n    removeUnHoverFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.unHoverFunctions, f);\r\n    },\r\n    addClickFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this.clickFunctions.push(f);\r\n    },\r\n    removeClickFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.clickFunctions, f);\r\n    },\r\n    addMoveFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this.moveFunctions.push(f);\r\n    },\r\n    removeMoveFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.moveFunctions, f);\r\n    },\r\n    addDownFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this.downFunctions.push(f);\r\n    },\r\n    removeDownFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.downFunctions, f);\r\n    },\r\n    addUpFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this.upFunctions.push(f);\r\n    },\r\n    removeUpFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.upFunctions, f);\r\n    },\r\n\r\n    _removeItemOnce: function(arr, value) {\r\n        var index = arr.indexOf(value);\r\n        if(index > -1) arr.splice(index, 1);\r\n        return arr;\r\n    },\r\n    _validateCallback: function(f) {\r\n        if(typeof f !== \"function\") {\r\n            throw new TypeError(this.object.name\r\n                + \".cursor-target: Argument needs to be a function\");\r\n        }\r\n    },\r\n});\r\n\r\n", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();", "import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\n\nexport var getReal = quat.copy;\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\n\nexport var setReal = quat.copy;\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = quat.dot;\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\n\nexport var length = quat.length;\n/**\n * Alias for {@link quat2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\n\nexport function str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}", "import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };", "import {vec3, mat4} from 'gl-matrix';\r\n/**\r\n * 3D cursor for desktop/mobile/VR.\r\n *\r\n * Implements a ray-casting cursor into the scene. To react to\r\n * clicking/hover/unhover/cursor down/cursor up/move use a\r\n * [cursor-target](#cursor-target).\r\n *\r\n * For VR, the ray is cast in direction of\r\n * [this.object.getForward()](/jsapi/object/#getforward). For desktop and mobile, the\r\n * forward vector is inverse-projected to account for where on screen the user clicked.\r\n *\r\n * `.globalTarget` can be used to call callbacks for all objects, even those that\r\n * do not have a cursor target attached, but match the collision group.\r\n *\r\n * See [Animation Example](/showcase/animation).\r\n */\r\nWL.registerComponent('cursor', {\r\n    /** Collision group for the ray cast. Only objects in this group will be affected by this cursor. */\r\n    collisionGroup: {type: WL.Type.Int, default: 1},\r\n    /** (optional) Object that visualizes the cursor's ray. */\r\n    cursorRayObject: {type: WL.Type.Object},\r\n    /** Axis along which to scale the `cursorRayObject`. */\r\n    cursorRayScalingAxis: {type: WL.Type.Enum, values: ['x', 'y', 'z', 'none'], default: 'z'},\r\n    /** (optional) Object that visualizes the cursor's hit location. */\r\n    cursorObject: {type: WL.Type.Object},\r\n    /** Handedness for VR cursors to accept trigger events only from respective controller. */\r\n    handedness: {type: WL.Type.Enum, values: ['input component', 'left', 'right', 'none'], default: 'input component'},\r\n    /** Mode for raycasting, whether to use PhysX or simple collision components */\r\n    rayCastMode: {type: WL.Type.Enum, values: ['collision', 'physx'], default: 'collision'},\r\n    /** Whether to set the CSS style of the mouse cursor on desktop */\r\n    styleCursor: {type: WL.Type.Bool, default: true},\r\n  }, {\r\n    init: function() {\r\n        /* VR session cache, in case in VR */\r\n        this.session = null;\r\n        this.collisionMask = (1 << this.collisionGroup);\r\n        this.maxDistance = 100;\r\n\r\n        const sceneLoaded = this.onDestroy.bind(this);\r\n        WL.onSceneLoaded.push(sceneLoaded);\r\n        this.onDestroyCallbacks = [() => {\r\n            const index = WL.onSceneLoaded.indexOf(sceneLoaded);\r\n            if(index >= 0) WL.onSceneLoaded.splice(index, 1);\r\n        }];\r\n    },\r\n    start: function() {\r\n        if(this.handedness == 0) {\r\n            const inputComp = this.object.getComponent('input');\r\n            if(!inputComp) {\r\n                console.warn('cursor component on object', this.object.name,\r\n                    'was configured with handedness \"input component\", ' +\r\n                    'but object has no input component.');\r\n            } else {\r\n                this.handedness = inputComp.handedness;\r\n                this.input = inputComp;\r\n            }\r\n        } else {\r\n            this.handedness = ['left', 'right'][this.handedness - 1];\r\n        }\r\n\r\n        this.globalTarget = this.object.addComponent('cursor-target');\r\n\r\n        this.origin = new Float32Array(3);\r\n        this.cursorObjScale = new Float32Array(3);\r\n        this.direction = [0, 0, 0];\r\n        this.tempQuat = new Float32Array(4);\r\n        this.viewComponent = this.object.getComponent(\"view\");\r\n        /* If this object also has a view component, we will enable inverse-projected mouse clicks,\r\n         * otherwise just use the objects transformation */\r\n        if(this.viewComponent != null) {\r\n            const onClick = this.onClick.bind(this);\r\n            WL.canvas.addEventListener(\"click\", onClick);\r\n            const onPointerMove = this.onPointerMove.bind(this);\r\n            WL.canvas.addEventListener(\"pointermove\", onPointerMove);\r\n            const onPointerDown = this.onPointerDown.bind(this);\r\n            WL.canvas.addEventListener(\"pointerdown\", onPointerDown);\r\n            const onPointerUp = this.onPointerUp.bind(this);\r\n            WL.canvas.addEventListener(\"pointerup\", onPointerUp);\r\n\r\n            this.projectionMatrix = new Float32Array(16);\r\n            mat4.invert(this.projectionMatrix, this.viewComponent.projectionMatrix);\r\n            const onViewportResize = this.onViewportResize.bind(this);\r\n            window.addEventListener(\"resize\", onViewportResize);\r\n\r\n            this.onDestroyCallbacks.push(() => {\r\n                WL.canvas.removeEventListener(\"click\", onClick);\r\n                WL.canvas.removeEventListener(\"pointermove\", onPointerMove);\r\n                WL.canvas.removeEventListener(\"pointerdown\", onPointerDown);\r\n                WL.canvas.removeEventListener(\"pointerup\", onPointerUp);\r\n                window.removeEventListener(\"resize\", onViewportResize);\r\n            });\r\n\r\n        }\r\n        this.isHovering = false;\r\n        this.visible = true;\r\n        this.isDown = false;\r\n        this.lastIsDown = false;\r\n\r\n        this.cursorPos = new Float32Array(3);\r\n        this.hoveringObject = null;\r\n\r\n        const onXRSessionStart = this.setupVREvents.bind(this);\r\n        WL.onXRSessionStart.push(onXRSessionStart);\r\n        this.onDestroyCallbacks.push(() => {\r\n            const index = WL.onXRSessionStart.indexOf(onXRSessionStart);\r\n            if(index >= 0) WL.onXRSessionStart.splice(index, 1);\r\n        });\r\n\r\n        if(this.cursorRayObject) {\r\n            this.cursorRayScale = new Float32Array(3);\r\n            this.cursorRayScale.set(this.cursorRayObject.scalingLocal);\r\n\r\n            /* Set ray to a good default distance of the cursor of 1m */\r\n            this.object.getTranslationWorld(this.origin);\r\n            this.object.getForward(this.direction);\r\n            this._setCursorRayTransform([\r\n                this.origin[0] + this.direction[0],\r\n                this.origin[1] + this.direction[1],\r\n                this.origin[2] + this.direction[2]]);\r\n        }\r\n    },\r\n    onViewportResize: function() {\r\n        if(!this.viewComponent) return;\r\n        /* Projection matrix will change if the viewport is resized, which will affect the\r\n         * projection matrix because of the aspect ratio. */\r\n        mat4.invert(this.projectionMatrix, this.viewComponent.projectionMatrix);\r\n    },\r\n\r\n    _setCursorRayTransform: function(hitPosition) {\r\n        if(!this.cursorRayObject) return;\r\n        const dist = vec3.dist(this.origin, hitPosition);\r\n        this.cursorRayObject.setTranslationLocal([0.0, 0.0, -dist / 2]);\r\n        if(this.cursorRayScalingAxis != 4) {\r\n            this.cursorRayObject.resetScaling();\r\n            this.cursorRayScale[this.cursorRayScalingAxis] = dist/2;\r\n            this.cursorRayObject.scale(this.cursorRayScale);\r\n        }\r\n    },\r\n\r\n    _setCursorVisibility: function(visible) {\r\n        if(this.visible == visible) return;\r\n        this.visible = visible;\r\n        if(!this.cursorObject) return;\r\n\r\n        if(visible) {\r\n            this.cursorObject.resetScaling();\r\n            this.cursorObject.scale(this.cursorObjScale);\r\n        } else {\r\n            this.cursorObjScale.set(this.cursorObject.scalingLocal);\r\n            this.cursorObject.scale([0, 0, 0]);\r\n        }\r\n    },\r\n\r\n    update: function() {\r\n        this.doUpdate(false);\r\n    },\r\n\r\n    doUpdate: function(doClick) {\r\n        /* If in VR, set the cursor ray based on object transform */\r\n        if(this.session) {\r\n            /* Since Google Cardboard tap is registered as arTouchDown without a gamepad, we need to check for gamepad presence */\r\n            if(this.arTouchDown && this.input && WL.xrSession.inputSources[0].handedness === 'none' && WL.xrSession.inputSources[0].gamepad) {\r\n                const p = WL.xrSession.inputSources[0].gamepad.axes;\r\n                /* Screenspace Y is inverted */\r\n                this.direction = [p[0], -p[1], -1.0];\r\n                this.updateDirection();\r\n            } else {\r\n                this.object.getTranslationWorld(this.origin);\r\n                this.object.getForward(this.direction);\r\n            }\r\n            const rayHit = this.rayHit = (this.rayCastMode == 0) ?\r\n                WL.scene.rayCast(this.origin, this.direction, this.collisionMask) :\r\n                WL.physics.rayCast(this.origin, this.direction, this.collisionMask, this.maxDistance);\r\n\r\n            if(rayHit.hitCount > 0) {\r\n                this.cursorPos.set(rayHit.locations[0]);\r\n            } else {\r\n                this.cursorPos.fill(0);\r\n            }\r\n\r\n            this.hoverBehaviour(rayHit, doClick);\r\n        }\r\n\r\n        if(this.cursorObject) {\r\n            if(this.hoveringObject && (this.cursorPos[0] != 0 || this.cursorPos[1] != 0 || this.cursorPos[2] != 0)) {\r\n                this._setCursorVisibility(true);\r\n                this.cursorObject.setTranslationWorld(this.cursorPos);\r\n                this._setCursorRayTransform(this.cursorPos);\r\n            } else {\r\n                this._setCursorVisibility(false);\r\n            }\r\n        }\r\n    },\r\n\r\n    hoverBehaviour: function(rayHit, doClick) {\r\n        if(rayHit.hitCount > 0) {\r\n            if(!this.hoveringObject || !this.hoveringObject.equals(rayHit.objects[0])) {\r\n                /* Unhover previous, if exists */\r\n                if(this.hoveringObject) {\r\n                    const cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n                    if(cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n                    this.globalTarget.onUnhover(this.hoveringObject, this);\r\n                }\r\n\r\n                /* Hover new object */\r\n                this.hoveringObject = rayHit.objects[0];\r\n                if(this.styleCursor) WL.canvas.style.cursor = \"pointer\";\r\n\r\n                let cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n                if(cursorTarget) {\r\n                    this.hoveringObjectTarget = cursorTarget;\r\n                    cursorTarget.onHover(this.hoveringObject, this);\r\n                }\r\n                this.globalTarget.onHover(this.hoveringObject, this);\r\n            }\r\n\r\n            if(this.hoveringObjectTarget) {\r\n                this.hoveringObjectTarget.onMove(this.hoveringObject, this);\r\n            }\r\n\r\n            /* Cursor up/down */\r\n            const cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n            if(this.isDown !== this.lastIsDown) {\r\n                if(this.isDown) {\r\n                    /* Down */\r\n                    if(cursorTarget) cursorTarget.onDown(this.hoveringObject, this);\r\n                    this.globalTarget.onDown(this.hoveringObject, this);\r\n                } else {\r\n                    /* Up */\r\n                    if(cursorTarget) cursorTarget.onUp(this.hoveringObject, this);\r\n                    this.globalTarget.onUp(this.hoveringObject, this);\r\n                }\r\n            }\r\n\r\n            /* Click */\r\n            if(doClick) {\r\n                if(cursorTarget) cursorTarget.onClick(this.hoveringObject, this);\r\n                this.globalTarget.onClick(this.hoveringObject, this);\r\n            }\r\n        } else if(this.hoveringObject && rayHit.hitCount == 0) {\r\n            const cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n            if(cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n            this.globalTarget.onUnhover(this.hoveringObject, this);\r\n            this.hoveringObject = null;\r\n            this.hoveringObjectTarget = null;\r\n            if(this.styleCursor) WL.canvas.style.cursor = \"default\";\r\n        }\r\n\r\n        this.lastIsDown = this.isDown;\r\n    },\r\n\r\n    /**\r\n     * Setup event listeners on session object\r\n     * @param s WebXR session\r\n     *\r\n     * Sets up 'select' and 'end' events and caches the session to avoid\r\n     * Module object access.\r\n     */\r\n    setupVREvents: function(s) {\r\n        /* If in VR, one-time bind the listener */\r\n        this.session = s;\r\n        const onSessionEnd = function(e) {\r\n            /* Reset cache once the session ends to rebind select etc, in case\r\n             * it starts again */\r\n            this.session = null;\r\n        }.bind(this);\r\n        s.addEventListener('end', onSessionEnd);\r\n\r\n        const onSelect = this.onSelect.bind(this);\r\n        s.addEventListener('select', onSelect);\r\n        const onSelectStart = this.onSelectStart.bind(this);\r\n        s.addEventListener('selectstart', onSelectStart);\r\n        const onSelectEnd = this.onSelectEnd.bind(this);\r\n        s.addEventListener('selectend', onSelectEnd);\r\n\r\n        this.onDestroyCallbacks.push(() => {\r\n            if(!this.session) return;\r\n            s.removeEventListener('end', onSessionEnd);\r\n            s.removeEventListener('select', onSelect);\r\n            s.removeEventListener('selectstart', onSelectStart);\r\n            s.removeEventListener('selectend', onSelectEnd);\r\n        });\r\n\r\n        /* After AR session was entered, the projection matrix changed */\r\n        this.onViewportResize();\r\n    },\r\n\r\n    /** 'select' event listener */\r\n    onSelect: function(e) {\r\n        if(e.inputSource.handedness != this.handedness) return;\r\n        this.doUpdate(true);\r\n    },\r\n\r\n    /** 'selectstart' event listener */\r\n    onSelectStart: function(e) {\r\n        this.arTouchDown = true;\r\n        if(e.inputSource.handedness == this.handedness) this.isDown = true;\r\n    },\r\n\r\n    /** 'selectend' event listener */\r\n    onSelectEnd: function(e) {\r\n        this.arTouchDown = false;\r\n        if(e.inputSource.handedness == this.handedness) this.isDown = false;\r\n    },\r\n\r\n    /** 'pointermove' event listener */\r\n    onPointerMove: function (e) {\r\n        /* Don't care about secondary pointers */\r\n        if(!e.isPrimary) return;\r\n        const bounds = e.target.getBoundingClientRect();\r\n        const rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n\r\n        this.hoverBehaviour(rayHit, false);\r\n    },\r\n\r\n    /** 'click' event listener */\r\n    onClick: function (e) {\r\n        const bounds = e.target.getBoundingClientRect();\r\n        const rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n        this.hoverBehaviour(rayHit, true);\r\n    },\r\n\r\n    /** 'pointerdown' event listener */\r\n    onPointerDown: function (e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if(!e.isPrimary || e.button !== 0) return;\r\n        const bounds = e.target.getBoundingClientRect();\r\n        const rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n        this.isDown = true;\r\n\r\n        this.hoverBehaviour(rayHit, false);\r\n    },\r\n\r\n    /** 'pointerup' event listener */\r\n    onPointerUp: function (e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if(!e.isPrimary || e.button !== 0) return;\r\n        const bounds = e.target.getBoundingClientRect();\r\n        const rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n        this.isDown = false;\r\n\r\n        this.hoverBehaviour(rayHit, false);\r\n    },\r\n\r\n    /**\r\n     * Update mouse position in non-VR mode and raycast for new position\r\n     * @returns @ref WL.RayHit for new position.\r\n     */\r\n    updateMousePos: function(clientX, clientY, w, h) {\r\n        /* Get direction in normalized device coordinate space from mouse position */\r\n        const left = clientX/w;\r\n        const top = clientY/h;\r\n        this.direction = [left*2 - 1, -top*2 + 1, -1.0];\r\n        return this.updateDirection();\r\n    },\r\n\r\n    updateDirection: function() {\r\n        this.object.getTranslationWorld(this.origin);\r\n\r\n        /* Reverse-project the direction into view space */\r\n        vec3.transformMat4(this.direction, this.direction,\r\n            this.projectionMatrix);\r\n        vec3.normalize(this.direction, this.direction);\r\n        vec3.transformQuat(this.direction, this.direction, this.object.transformWorld);\r\n        const rayHit = this.rayHit = (this.rayCastMode == 0) ?\r\n            WL.scene.rayCast(this.origin, this.direction, this.collisionMask) :\r\n            WL.physics.rayCast(this.origin, this.direction, this.collisionMask, this.maxDistance);\r\n\r\n        if(rayHit.hitCount > 0) {\r\n            this.cursorPos.set(rayHit.locations[0]);\r\n        } else {\r\n            this.cursorPos.fill(0);\r\n        }\r\n\r\n        return rayHit;\r\n    },\r\n\r\n    onDeactivate: function() {\r\n        this._setCursorVisibility(false);\r\n        if(this.hoveringObject) {\r\n            const target = this.hoveringObject.getComponent('cursor-target');\r\n            if(target) target.onUnhover(this.hoveringObject, this);\r\n            this.globalTarget.onUnhover(this.hoveringObject, this);\r\n        }\r\n        if(this.cursorRayObject) this.cursorRayObject.scale([0, 0, 0]);\r\n    },\r\n\r\n    onActivate: function() {\r\n        this._setCursorVisibility(true);\r\n    },\r\n\r\n    onDestroy: function() {\r\n        for(const f of this.onDestroyCallbacks) f();\r\n    },\r\n});\r\n", "/**\r\n * Prints some limited debug information about the object.\r\n *\r\n * Information consists of: This object's name, an object parameter's name,\r\n * the object's world translation, world transform and local transform.\r\n *\r\n * Mainly used by engine developers for debug purposes or as example code.\r\n */\r\nWL.registerComponent('debug-object', {\r\n    /** A second object to print the name of */\r\n    obj: {type: WL.Type.Object}\r\n}, {\r\n    start: function() {\r\n    },\r\n    init: function() {\r\n        let origin = [0, 0, 0];\r\n        glMatrix.quat2.getTranslation(origin, this.object.transformWorld);\r\n        console.log(\"Debug Object:\", this.object.name);\r\n        console.log(\"Other object:\", this.obj.name);\r\n        console.log(\"\\ttranslation\", origin);\r\n        console.log(\"\\ttransformWorld\", this.object.transformWorld);\r\n        console.log(\"\\ttransformLocal\", this.object.transformLocal);\r\n    },\r\n    update: function() {}\r\n});\r\n", "/**\r\n * Function to convert a Euler in YXZ order to a quaternion\r\n */\r\nfunction quatFromEulerYXZ (out, x, y, z) {\r\n    const c1 = Math.cos(x/2);\r\n    const c2 = Math.cos(y/2);\r\n    const c3 = Math.cos(z/2);\r\n\r\n    const s1 = Math.sin(x/2);\r\n    const s2 = Math.sin(y/2);\r\n    const s3 = Math.sin(z/2);\r\n\r\n    out[0] = s1*c2*c3 + c1*s2*s3;\r\n    out[1] = c1*s2*c3 - s1*c2*s3;\r\n    out[2] = c1*c2*s3 - s1*s2*c3;\r\n    out[3] = c1*c2*c3 + s1*s2*s3;\r\n};\r\n\r\n/**\r\n * Retrieve device orientation from a mobile device and set the object's\r\n * orientation accordingly.\r\n *\r\n * Useful for magic window experiences.\r\n */\r\nWL.registerComponent('device-orientation-look', {\r\n}, {\r\n    start: function() {\r\n        this.rotationX = 0;\r\n        this.rotationY = 0;\r\n\r\n        this.lastClientX = -1;\r\n        this.lastClientY = -1;\r\n    },\r\n    init: function() {\r\n        /* Initialize device orientation with Identity Quaternion */\r\n        this.deviceOrientation = [0, 0, 0, 1];\r\n        this.screenOrientation = 0;\r\n        this._origin = [0, 0, 0];\r\n\r\n        window.addEventListener('deviceorientation',function(e) {\r\n            let alpha = e.alpha || 0;\r\n            let beta = e.beta || 0;\r\n            let gamma = e.gamma || 0;\r\n            const toRad = Math.PI/180;\r\n            quatFromEulerYXZ(this.deviceOrientation, beta*toRad, alpha*toRad, -gamma*toRad);\r\n        }.bind(this));\r\n\r\n        window.addEventListener('orientationchange', function(e) {\r\n            this.screenOrientation = window.orientation || 0;\r\n        }.bind(this), false);\r\n    },\r\n\r\n    update: function() {\r\n        /* Don't use device orientation in VR */\r\n        if(Module['webxr_session'] != null) return;\r\n\r\n        glMatrix.quat2.getTranslation(this._origin, this.object.transformLocal);\r\n\r\n        this.object.resetTransform();\r\n        if(this.screenOrientation != 0) {\r\n            this.object.rotateAxisAngleDeg([0, 0, 1], this.screenOrientation);\r\n        }\r\n        this.object.rotate([-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5)]);\r\n        this.object.rotate(this.deviceOrientation);\r\n        this.object.translate(this._origin);\r\n    }\r\n});\r\n", "/**\r\n * Enables interaction with cursor-targets through collision overlaps,\r\n * e.g. on the tip of a finger on a tracked hand.\r\n *\r\n * **Requirements:**\r\n *  - A collision component (usually a sphere with `0.05` radius) on the same object\r\n *\r\n * @since 0.8.5\r\n */\r\nWL.registerComponent('finger-cursor', {\r\n}, {\r\n    init: function() {\r\n        this.lastTarget = null;\r\n    },\r\n    start: function() {\r\n        this.tip = this.object.getComponent('collision');\r\n    },\r\n    update: function() {\r\n        const overlaps = this.tip.queryOverlaps();\r\n\r\n        let overlapFound = null;\r\n        for(let i = 0; i < overlaps.length; ++i) {\r\n            const o = overlaps[i].object;\r\n            const target = o.getComponent('cursor-target');\r\n            if(target) {\r\n                if(!target.equals(this.lastTarget)) {\r\n                    target.onHover(o, this);\r\n                    target.onClick(o, this);\r\n                }\r\n                overlapFound = target;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!overlapFound) {\r\n            if(this.lastTarget) this.lastTarget.onUnhover(this.lastTarget.object, this);\r\n            this.lastTarget = null;\r\n            return;\r\n        } else {\r\n            this.lastTarget = overlapFound;\r\n        }\r\n    },\r\n});\r\n", "/**\r\n * Applies [fixed foveation](https://www.w3.org/TR/webxrlayers-1/#dom-xrcompositionlayer-fixedfoveation)\r\n * once a WebXR session is started\r\n *\r\n * Fixed foveation reduces shading cost at the periphery by rendering at lower resolutions at the\r\n * edges of the users vision.\r\n */\r\nWL.registerComponent('fixed-foveation', {\r\n    /** Amount to apply from 0 (none) to 1 (full) */\r\n    fixedFoveation: {type: WL.Type.Float, default: 0.5},\r\n}, {\r\n    start: function() {\r\n        if(WL.xrSession) {\r\n            this.setFixedFoveation();\r\n        } else {\r\n            WL.onXRSessionStart.push(this.setFixedFoveation.bind(this));\r\n        }\r\n    },\r\n    setFixedFoveation: function() {\r\n        if('webxr_baseLayer' in Module) {\r\n            Module.webxr_baseLayer.fixedFoveation = this.fixedFoveation;\r\n        }\r\n    },\r\n});\r\n", "import {vec3,quat,quat2} from 'gl-matrix';\r\n/**\r\n * Easy hand tracking through the WebXR Device API\r\n * [\"Hand Input\" API](https://immersive-web.github.io/webxr-hand-input/).\r\n *\r\n * Allows displaying hands either as sphere-joints or skinned mesh.\r\n *\r\n * To react to grabbing, use `this.isGrabbing()`. For other gestures, refer\r\n * to `this.joints` - an array of [WL.Object](/jsapi/object) and use the joint\r\n * indices listed [in the WebXR Hand Input specification](https://immersive-web.github.io/webxr-hand-input/#skeleton-joints-section).\r\n *\r\n * It is often desired to use either hand tracking or controllers, not both.\r\n * This component provides `deactivateChildrenWithoutPose` to hide the hand\r\n * tracking visualization if no pose is available and `controllerToDeactivate`\r\n * for disabling another object once a hand tracking pose *is* available.\r\n * Outside of XR sessions, tracking or controllers are neither enabled nor disabled\r\n * to play well with the [vr-mode-active-switch](#vr-mode-active-switch) component.\r\n *\r\n * **Requirements:**\r\n *  - To use hand-tracking, enable \"joint tracking\" in `chrome://flags` on\r\n *    Oculus Browser for Oculus Quest/Oculus Quest 2.\r\n *\r\n * See [Hand Tracking Example](/showcase/hand-tracking).\r\n */\r\nWL.registerComponent('hand-tracking', {\r\n    /** Handedness determining whether to receive tracking input from right or left hand */\r\n    handedness: {type: WL.Type.Enum, default: 'left', values: ['left', 'right']},\r\n    /** (optional) Mesh to use to visualize joints */\r\n    jointMesh: {type: WL.Type.Mesh, default: null},\r\n    /** Material to use for display. Applied to either the spawned skinned mesh or the joint spheres. */\r\n    jointMaterial: {type: WL.Type.Material, default: null},\r\n    /** (optional) Skin to apply tracked joint poses to. If not present, joint spheres will be used for display instead. */\r\n    handSkin: {type: WL.Type.Skin, default: null},\r\n    /** Deactivate children if no pose was tracked */\r\n    deactivateChildrenWithoutPose: {type: WL.Type.Bool, default: true},\r\n    /** Controller objects to activate including children if no pose is available */\r\n    controllerToDeactivate: {type: WL.Type.Object},\r\n}, {\r\n    ORDERED_JOINTS: [\r\n        \"wrist\",\r\n        \"thumb-metacarpal\", \"thumb-phalanx-proximal\", \"thumb-phalanx-distal\", \"thumb-tip\",\r\n        \"index-finger-metacarpal\", \"index-finger-phalanx-proximal\", \"index-finger-phalanx-intermediate\", \"index-finger-phalanx-distal\", \"index-finger-tip\",\r\n        \"middle-finger-metacarpal\", \"middle-finger-phalanx-proximal\", \"middle-finger-phalanx-intermediate\", \"middle-finger-phalanx-distal\", \"middle-finger-tip\",\r\n        \"ring-finger-metacarpal\", \"ring-finger-phalanx-proximal\", \"ring-finger-phalanx-intermediate\", \"ring-finger-phalanx-distal\", \"ring-finger-tip\",\r\n        \"pinky-finger-metacarpal\", \"pinky-finger-phalanx-proximal\", \"pinky-finger-phalanx-intermediate\", \"pinky-finger-phalanx-distal\", \"pinky-finger-tip\"\r\n    ],\r\n    init: function() {\r\n        this.handedness = ['left', 'right'][this.handedness];\r\n    },\r\n    start: function() {\r\n        this.joints = [];\r\n        this.session = null;\r\n        /* Whether last update had a hand pose */\r\n        this.hasPose = false;\r\n        this._childrenActive = true;\r\n\r\n        if(!('XRHand' in window)) {\r\n            console.warn(\"WebXR Hand Tracking not supported by this browser.\");\r\n            this.active = false;\r\n            return;\r\n        }\r\n\r\n        if(this.handSkin) {\r\n            let skin = this.handSkin;\r\n            let jointIds = skin.jointIds;\r\n            /* Map the wrist */\r\n            this.joints[this.ORDERED_JOINTS[0]] = new WL.Object(jointIds[0]);\r\n\r\n            /* Index in ORDERED_JOINTS that we are mapping to our joints */\r\n            /* Skip thumb0 joint, start at thumb1 */\r\n            for(let j = 0; j < jointIds.length; ++j) {\r\n                let joint = new WL.Object(jointIds[j]);\r\n                /* tip joints are only needed for joint rendering, so we skip those while mapping */\r\n                this.joints[joint.name] = joint;\r\n            }\r\n\r\n            /* If we have a hand skin, no need to spawn the joints-based one */\r\n            return;\r\n        }\r\n\r\n        /* Spawn joints */\r\n        for(let j = 0; j <= this.ORDERED_JOINTS.length; ++j) {\r\n            let joint = WL.scene.addObject(this.object.parent);\r\n            let mesh = joint.addComponent('mesh');\r\n\r\n            mesh.mesh = this.jointMesh;\r\n            mesh.material = this.jointMaterial;\r\n\r\n            this.joints[this.ORDERED_JOINTS[j]] = joint;\r\n        }\r\n    },\r\n\r\n    update: function(dt) {\r\n        if(!this.session) {\r\n            if(WL.xrSession) this.setupVREvents(WL.xrSession);\r\n        }\r\n\r\n        if(!this.session) return;\r\n\r\n        this.hasPose = false;\r\n        if(this.session && this.session.inputSources) {\r\n            for(let i = 0; i <= this.session.inputSources.length; ++i) {\r\n                const inputSource = this.session.inputSources[i];\r\n                if(!inputSource || !inputSource.hand || inputSource.handedness != this.handedness) continue;\r\n                this.hasPose = true;\r\n\r\n                if(inputSource.hand.get('wrist') !== null) {\r\n                    const p = Module['webxr_frame'].getJointPose(inputSource.hand.get('wrist'), WebXR.refSpaces[WebXR.refSpace]);\r\n                    if(p) {\r\n                        this.object.resetTranslationRotation();\r\n                        this.object.transformLocal.set([\r\n                            p.transform.orientation.x,\r\n                            p.transform.orientation.y,\r\n                            p.transform.orientation.z,\r\n                            p.transform.orientation.w]);\r\n                        this.object.translate([\r\n                            p.transform.position.x,\r\n                            p.transform.position.y,\r\n                            p.transform.position.z]);\r\n                    }\r\n                }\r\n\r\n                let invTranslation = new Float32Array(3);\r\n                let invRotation = new Float32Array(4);\r\n                quat.invert(invRotation, this.object.transformLocal);\r\n                this.object.getTranslationLocal(invTranslation);\r\n\r\n                for(let j = 0; j < this.ORDERED_JOINTS.length; ++j) {\r\n                    const jointName = this.ORDERED_JOINTS[j];\r\n                    const joint = this.joints[jointName];\r\n                    if(joint == null) continue;\r\n\r\n                    let jointPose = null;\r\n                    if(inputSource.hand.get(jointName) !== null) {\r\n                        jointPose = Module['webxr_frame'].getJointPose(inputSource.hand.get(jointName), WebXR.refSpaces[WebXR.refSpace]);\r\n                    }\r\n                    if(jointPose !== null) {\r\n                        if(this.handSkin) {\r\n                            joint.resetTranslationRotation();\r\n\r\n                            joint.translate([\r\n                                (jointPose.transform.position.x - invTranslation[0]),\r\n                                (jointPose.transform.position.y - invTranslation[1]),\r\n                                (jointPose.transform.position.z - invTranslation[2])]);\r\n                            joint.rotate(invRotation);\r\n                            joint.rotateObject([\r\n                                jointPose.transform.orientation.x,\r\n                                jointPose.transform.orientation.y,\r\n                                jointPose.transform.orientation.z,\r\n                                jointPose.transform.orientation.w]);\r\n                        } else {\r\n                            joint.resetTransform();\r\n                            joint.transformLocal.set([\r\n                                jointPose.transform.orientation.x,\r\n                                jointPose.transform.orientation.y,\r\n                                jointPose.transform.orientation.z,\r\n                                jointPose.transform.orientation.w]);\r\n                            joint.translate([\r\n                                jointPose.transform.position.x,\r\n                                jointPose.transform.position.y,\r\n                                jointPose.transform.position.z]);\r\n\r\n                            /* Last joint radius of each finger is null */\r\n                            const r = jointPose.radius || 0.007;\r\n                            joint.scale([r, r, r]);\r\n                        }\r\n                    } else {\r\n                        /* Hack to hide the object */\r\n                        if(!this.handSkin) joint.scale([0, 0, 0]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(!this.hasPose && this._childrenActive) {\r\n            this._childrenActive = false;\r\n\r\n            if(this.deactivateChildrenWithoutPose) {\r\n                this.setChildrenActive(false);\r\n            }\r\n\r\n            if(this.controllerToDeactivate) {\r\n                this.controllerToDeactivate.active = true;\r\n                this.setChildrenActive(true, this.controllerToDeactivate);\r\n            }\r\n        } else if(this.hasPose && !this._childrenActive) {\r\n            this._childrenActive = true;\r\n\r\n            if(this.deactivateChildrenWithoutPose) {\r\n                this.setChildrenActive(true);\r\n            }\r\n\r\n            if(this.controllerToDeactivate) {\r\n                this.controllerToDeactivate.active = false;\r\n                this.setChildrenActive(false, this.controllerToDeactivate);\r\n            }\r\n        }\r\n    },\r\n\r\n    setChildrenActive: function(active, object) {\r\n        object = object || this.object;\r\n\r\n        const children = object.children;\r\n        for(const o of children) {\r\n            o.active = active;\r\n            this.setChildrenActive(active, o);\r\n        }\r\n    },\r\n\r\n    isGrabbing: function() {\r\n        const indexTipPos = [0, 0, 0];\r\n        quat2.getTranslation(indexTipPos, this.joints['index-finger-tip'].transformLocal);\r\n        const thumbTipPos = [0, 0, 0];\r\n        quat2.getTranslation(thumbTipPos, this.joints['thumb-tip'].transformLocal);\r\n\r\n        return vec3.sqrDist(thumbTipPos, indexTipPos) < 0.001;\r\n    },\r\n\r\n    setupVREvents: function(s) {\r\n        this.session = s;\r\n    },\r\n});\r\n", "import {quat2} from 'gl-matrix';\r\n/**\r\n * Sets up a [WebXR Device API \"Hit Test\"](https://immersive-web.github.io/hit-test/)\r\n * and places the object to the hit location.\r\n *\r\n * **Requirements:**\r\n *  - Specify `'hit-test'` in the required or optional features on the AR button in your html file.\r\n *    See [Wastepaperbin AR](/showcase/wpb-ar) as an example.\r\n */\r\nWL.registerComponent('hit-test-location', {\r\n}, {\r\n    init: function() {\r\n        WL.onXRSessionStart.push(this.xrSessionStart.bind(this));\r\n        WL.onXRSessionStart.push(this.xrSessionEnd.bind(this));\r\n\r\n        this.tempScaling = new Float32Array(3);\r\n        this.tempScaling.set(this.object.scalingLocal);\r\n        this.visible = false;\r\n        this.object.scale([0, 0, 0]);\r\n    },\r\n    update: function(dt) {\r\n        const wasVisible = this.visible;\r\n        if(this.xrHitTestSource) {\r\n            const frame = Module['webxr_frame'];\r\n            if(!frame) return;\r\n            let hitTestResults = frame.getHitTestResults(this.xrHitTestSource);\r\n            if(hitTestResults.length > 0) {\r\n                let pose = hitTestResults[0].getPose(this.xrViewerSpace);\r\n                this.visible = true;\r\n                quat2.fromMat4(this.object.transformLocal, pose.transform.matrix);\r\n                this.object.setDirty();\r\n            } else {\r\n                this.visible = false;\r\n            }\r\n        }\r\n\r\n        if(this.visible != wasVisible) {\r\n            if(!this.visible) {\r\n                this.tempScaling.set(this.object.scalingLocal);\r\n                this.object.scale([0, 0, 0]);\r\n            } else {\r\n                this.object.scalingLocal.set(this.tempScaling);\r\n                this.object.setDirty();\r\n            }\r\n        }\r\n    },\r\n    xrSessionStart: function(session) {\r\n        session.requestReferenceSpace('viewer').then(function(refSpace) {\r\n            this.xrViewerSpace = refSpace;\r\n            session.requestHitTestSource({space: this.xrViewerSpace}).then(function(hitTestSource) {\r\n                this.xrHitTestSource = hitTestSource;\r\n            }.bind(this)).catch(console.error);\r\n        }.bind(this)).catch(console.error);\r\n    },\r\n    xrSessionEnd: function() {\r\n        if(!this.xrHitTestSource) return;\r\n        this.xrHitTestSource.cancel();\r\n        this.xrHitTestSource = null;\r\n    },\r\n});\r\n", "/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, \u221E]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n", "import 'howler';\r\n/**\r\n * (Spatial) audio listener based on [Howler.js](https://howlerjs.com/).\r\n *\r\n * Retrieves the location and orientation of the object and passes it\r\n * to [Howler.pos()](https://github.com/goldfire/howler.js#posx-y-z-id)\r\n * and [Howler.orientation()](https://github.com/goldfire/howler.js#orientationx-y-z-id).\r\n */\r\nWL.registerComponent(\"howler-audio-listener\", {\r\n  /** Whether audio should be spatialized/positional. */\r\n  spatial: {type: WL.Type.Bool, default: true},\r\n}, {\r\n  init: function() {\r\n    this.origin = new Float32Array(3);\r\n    this.fwd = new Float32Array(3);\r\n    this.up = new Float32Array(3);\r\n  },\r\n  update: function() {\r\n    if(!this.spatial) return\r\n    this.object.getTranslationWorld(this.origin);\r\n    this.object.getForward(this.fwd);\r\n    this.object.getUp(this.up);\r\n\r\n    Howler.pos(this.origin[0], this.origin[1], this.origin[2]);\r\n    Howler.orientation(this.fwd[0], this.fwd[1], this.fwd[2],\r\n      this.up[0], this.up[1], this.up[2]);\r\n  },\r\n});\r\n", "import {Howl} from 'howler';\r\n/**\r\n * (Spatial) audio source based on [Howler.js](https://howlerjs.com/).\r\n *\r\n * Creates a Howler audio source, plays an audio file on it and updates\r\n * its position.\r\n *\r\n * Optimizes the position update to only update if the difference to last\r\n * position is larger than half a centimeter. To force updates (e.g. if\r\n * the sound source is _very_ close to the listener),\r\n * use `.updatePosition()`.\r\n */\r\nWL.registerComponent(\"howler-audio-source\", {\r\n  /** Volume */\r\n  volume: {type: WL.Type.Float, default: 1.0},\r\n  /** Whether audio should be spatialized/positional */\r\n  spatial: {type: WL.Type.Bool, default: true},\r\n  /** Whether to loop the sound */\r\n  loop: {type: WL.Type.Bool, default: false},\r\n  /** Whether to start playing automatically */\r\n  autoplay: {type: WL.Type.Bool, default: false},\r\n  /** URL to a sound file to play */\r\n  src: {type: WL.Type.String, default: \"\"}\r\n}, {\r\n  start: function() {\r\n    this.audio = new Howl({\r\n      src: [this.src],\r\n      loop: this.loop,\r\n      volume: this.volume,\r\n      autoplay: this.autoplay\r\n    });\r\n\r\n    this.lastPlayedAudioId = null;\r\n    this.origin = new Float32Array(3);\r\n    this.lastOrigin = new Float32Array(3);\r\n\r\n    if(this.spatial && this.autoplay) {\r\n      this.updatePosition();\r\n      this.play();\r\n    }\r\n\r\n    /* Stop sound after switching scenes */\r\n    const callback = () => {\r\n        this.stop();\r\n        const idx = WL.onSceneLoaded.indexOf(callback);\r\n        if(idx >= 0) WL.onSceneLoaded.splice(idx, 1);\r\n    };\r\n    WL.onSceneLoaded.push(callback);\r\n  },\r\n\r\n  update: function() {\r\n    if(!this.spatial || !this.lastPlayedAudioId) return;\r\n\r\n    this.object.getTranslationWorld(this.origin);\r\n    /* Only call pos() if the position moved more than half a centimeter\r\n     * otherwise this gets very performance heavy.\r\n     * Smaller movement should only be perceivable if close to the\r\n     * ear anyway. */\r\n    if(Math.abs(this.lastOrigin[0] - this.origin[0]) > 0.005 ||\r\n       Math.abs(this.lastOrigin[1] - this.origin[1]) > 0.005 ||\r\n       Math.abs(this.lastOrigin[2] - this.origin[2]) > 0.005)\r\n    {\r\n      this.updatePosition();\r\n    }\r\n  },\r\n\r\n  updatePosition: function() {\r\n      this.audio.pos(this.origin[0], this.origin[1], this.origin[2],\r\n        this.lastPlayedAudioId);\r\n      this.lastOrigin.set(this.origin);\r\n  },\r\n\r\n  play: function() {\r\n    if(this.lastPlayedAudioId) this.audio.stop(this.lastPlayedAudioId);\r\n    this.lastPlayedAudioId = this.audio.play();\r\n    if(this.spatial) this.updatePosition();\r\n  },\r\n\r\n  stop: function() {\r\n    if(!this.lastPlayedAudioId) return;\r\n    this.audio.stop(this.lastPlayedAudioId);\r\n    this.lastPlayedAudioId = null;\r\n  }\r\n});\r\n", "/**\r\n * Downloads an image from URL and applies it as `diffuseTexture` or `flatTexture`\r\n * to an attached mesh component.\r\n * Only \"Phong Opaque Textured\" and \"Flat Opaque Textured\" materials are supported.\r\n *\r\n * **Warning:** This component will soon be changed to be consistent with\r\n *   [video-texture](#video-texture) and change a material rather than mesh.\r\n *   To keep backwards compatibility, please copy the source of this component\r\n *   into your project.\r\n */\r\nWL.registerComponent('image-texture', {\r\n    /** URL to download the image from */\r\n    url: {type: WL.Type.String, default: \"\"},\r\n    /** 0-based mesh component index on this object (e.g. 1 for \"second mesh\") */\r\n    meshIndex: {type: WL.Type.Int, default: 0}\r\n}, {\r\n    init: function() {\r\n        let obj = this.object;\r\n        WL.textures.load(this.url, 'anonymous')\r\n            .then(function(texture) {\r\n                const mat = obj.getComponent(\"mesh\", this.meshIndex).material;\r\n                if(mat.shader == \"Flat Opaque Textured\") {\r\n                    mat.flatTexture = texture;\r\n                } else if(mat.shader == \"Phong Opaque Textured\") {\r\n                    mat.diffuseTexture = texture;\r\n                } else {\r\n                    console.error(\"Shader\", mat.shader, \"not supported by image-texture\");\r\n                }\r\n            }).catch(console.err);\r\n    }\r\n});\r\n", "import {vec3} from 'gl-matrix';\r\n/**\r\n * Controls the camera through mouse movement.\r\n *\r\n * Efficiently implemented to affect object orientation only\r\n * when the mouse moves.\r\n */\r\nWL.registerComponent('mouse-look', {\r\n    /** Mouse look sensitivity */\r\n    sensitity: {type: WL.Type.Float, default: 0.25},\r\n    /** Require a mouse button to be pressed to control view.\r\n     * Otherwise view will allways follow mouse movement */\r\n    requireMouseDown: {type: WL.Type.Bool, default: true},\r\n    /** If \"moveOnClick\" is enabled, mouse button which should\r\n     * be held down to control view */\r\n    mouseButtonIndex: {type: WL.Type.Int, default: 0},\r\n}, {\r\n    init: function() {\r\n        this.currentRotationY = 0;\r\n        this.currentRotationX = 0;\r\n        this.origin = new Float32Array(3);\r\n        this.parentOrigin = new Float32Array(3);\r\n        document.addEventListener('mousemove', function(e) {\r\n            if(this.active && (this.mouseDown || !this.requireMouseDown)) {\r\n                this.rotationY = -this.sensitity*e.movementX/100;\r\n                this.rotationX = -this.sensitity*e.movementY/100;\r\n\r\n                this.currentRotationX += this.rotationX;\r\n                this.currentRotationY += this.rotationY;\r\n\r\n                /* 1.507 = PI/2 = 90\u00B0 */\r\n                this.currentRotationX = Math.min(1.507, this.currentRotationX);\r\n                this.currentRotationX = Math.max(-1.507, this.currentRotationX);\r\n\r\n                this.object.getTranslationWorld(this.origin);\r\n                this.object.parent.getTranslationWorld(this.parentOrigin);\r\n                vec3.sub(this.origin, this.origin, this.parentOrigin);\r\n\r\n                this.object.resetTranslationRotation();\r\n                this.object.rotateAxisAngleRad([1, 0, 0], this.currentRotationX);\r\n                this.object.rotateAxisAngleRad([0, 1, 0], this.currentRotationY);\r\n                this.object.translate(this.origin);\r\n            }\r\n        }.bind(this));\r\n\r\n        if(this.requireMouseDown) {\r\n            if(this.mouseButtonIndex == 2) {\r\n                WL.canvas.addEventListener(\"contextmenu\", function(e) {\r\n                    e.preventDefault();\r\n                }, false);\r\n            }\r\n            WL.canvas.addEventListener('mousedown', function(e) {\r\n                if(e.button == this.mouseButtonIndex) {\r\n                    this.mouseDown = true;\r\n                    document.body.style.cursor = \"grabbing\";\r\n                    if(e.button == 1) {\r\n                        e.preventDefault();\r\n                        /* Prevent scrolling */\r\n                        return false;\r\n                    }\r\n                }\r\n            }.bind(this));\r\n            WL.canvas.addEventListener('mouseup', function(e) {\r\n                if(e.button == this.mouseButtonIndex) {\r\n                    this.mouseDown = false;\r\n                    document.body.style.cursor = \"initial\";\r\n                }\r\n            }.bind(this));\r\n        }\r\n    },\r\n    start: function() {\r\n        this.rotationX = 0;\r\n        this.rotationY = 0;\r\n    }\r\n});\r\n", "/**\r\n * Sets the target framerate\r\n *\r\n * [Updates the target framerate](https://immersive-web.github.io/webxr/#dom-xrsession-updatetargetframerate)\r\n * to the closest [supported target framerate](https://immersive-web.github.io/webxr/#dom-xrsession-supportedFrameRates)\r\n * to the given `framerate`.\r\n *\r\n * The target framerate is used for the device's VR compositor as an indication of how often to refresh the\r\n * screen with new images. This means the app will be asked to produce frames in more regular intervals,\r\n * potentially spending less time on frames that are likely to be dropped.\r\n *\r\n * For apps with heavy load, setting a well matching target framerate can improve the apps rendering stability\r\n * and reduce stutter.\r\n *\r\n * Likewise, the target framerate can be used to enable 120Hz refresh rates on Oculus Quest 2 on simpler apps.\r\n */\r\nWL.registerComponent('target-framerate', {\r\n    framerate: {type: WL.Type.Float, default: 90.0},\r\n}, {\r\n    start: function() {\r\n        if(WL.xrSession) {\r\n            this.setTargetFramerate(WL.xrSession);\r\n        } else {\r\n            WL.onXRSessionStart.push(this.setTargetFramerate.bind(this));\r\n        }\r\n    },\r\n\r\n    setTargetFramerate: function(s) {\r\n        if(s.supportedFrameRates && s.updateTargetFrameRate) {\r\n            const a = WL.xrSession.supportedFrameRates;\r\n            a.sort((a, b) => Math.abs(a - this.framerate) - Math.abs(b - this.framerate));\r\n            WL.xrSession.updateTargetFrameRate(a[0]);\r\n        }\r\n    },\r\n});\r\n", "import {vec3,quat2} from 'gl-matrix';\r\n/**\r\n * Teleport VR locomotion.\r\n *\r\n * See [Teleport Example](/showcase/teleport).\r\n */\r\nWL.registerComponent('teleport', {\r\n    /** Object that will be placed as indiciation forwhere the player will teleport to. */\r\n    teleportIndicatorMeshObject: { type: WL.Type.Object },\r\n    /** Root of the player, the object that will be positioned on teleportation. */\r\n    camRoot: { type: WL.Type.Object },\r\n    /** Non-vr camera for use outside of VR */\r\n    cam: { type: WL.Type.Object },\r\n    /** Left eye for use in VR*/\r\n    eyeLeft: { type: WL.Type.Object },\r\n    /** Right eye for use in VR*/\r\n    eyeRight: { type: WL.Type.Object },\r\n    /** Handedness for VR cursors to accept trigger events only from respective controller. */\r\n    handedness: {type: WL.Type.Enum, values: ['input component', 'left', 'right', 'none'], default: 'input component'},\r\n    /** Collision group of valid \"floor\" objects that can be teleported on */\r\n    floorGroup: { type: WL.Type.Int, default: 1 },\r\n    /** How far the thumbstick needs to be pushed to have the teleport target indicator show up */\r\n    thumbstickActivationThreshhold: { type: WL.Type.Float, default: -0.7 },\r\n    /** How far the thumbstick needs to be released to execute the teleport */\r\n    thumbstickDeactivationThreshhold: { type: WL.Type.Float, default: 0.3 },\r\n    /** Offset to apply to the indicator object, e.g. to avoid it from Z-fighting with the floor */\r\n    indicatorYOffset: { type: WL.Type.Float, default: 0.01 },\r\n\r\n    /** Mode for raycasting, whether to use PhysX or simple collision components */\r\n    rayCastMode: {type: WL.Type.Enum, values: ['collision', 'physx'], default: 'collision'},\r\n    /** Max distance for PhysX raycast */\r\n    maxDistance: { type: WL.Type.Float, default: 100.0 },\r\n}, {\r\n    init: function() {\r\n        this._prevThumbstickAxis = new Float32Array(2);\r\n        this._tempVec = new Float32Array(3);\r\n        this._tempVec0 = new Float32Array(3);\r\n        this._currentIndicatorRotation = 0;\r\n\r\n        this.input = this.object.getComponent('input');\r\n        if(!this.input) {\r\n            console.error(this.object.name, \"generic-teleport-component.js: input component is required on the object\")\r\n            return;\r\n        }\r\n        if(!this.teleportIndicatorMeshObject) {\r\n            console.error(this.object.name, 'generic-teleport-component.js: Teleport indicator mesh is missing');\r\n            return;\r\n        }\r\n        if(!this.camRoot) {\r\n            console.error(this.object.name, 'generic-teleport-component.js: camRoot not set');\r\n            return;\r\n        }\r\n        this.isIndicating = false;\r\n\r\n        if(this.cam) {\r\n            this.isMouseIndicating = false;\r\n            WL.canvas.addEventListener('mousedown', this.onMouseDown.bind(this));\r\n            WL.canvas.addEventListener('mouseup', this.onMouseUp.bind(this));\r\n        }\r\n\r\n        this.indicatorHidden = true;\r\n        this.hitSpot = new Float32Array(3);\r\n        this._hasHit = false;\r\n\r\n        this._extraRotation = 0;\r\n        this._currentStickAxes = new Float32Array(2);\r\n    },\r\n\r\n    start: function() {\r\n        if(this.handedness == 0) {\r\n            const inputComp = this.object.getComponent('input');\r\n            if(!inputComp) {\r\n                console.warn('teleport component on object', this.object.name,\r\n                    'was configured with handedness \"input component\", ' +\r\n                    'but object has no input component.');\r\n            } else {\r\n                this.handedness = inputComp.handedness;\r\n                this.input = inputComp;\r\n            }\r\n        } else {\r\n            this.handedness = ['left', 'right'][this.handedness - 1];\r\n        }\r\n\r\n        WL.onXRSessionStart.push(this.setupVREvents.bind(this));\r\n        this.teleportIndicatorMeshObject.active = false;\r\n    },\r\n\r\n    /* Get current camera Y rotation */\r\n    _getCamRotation: function() {\r\n        this.eyeLeft.getForward(this._tempVec);\r\n        this._tempVec[1] = 0;\r\n        vec3.normalize(this._tempVec, this._tempVec);\r\n        return Math.atan2(this._tempVec[0], this._tempVec[2]);\r\n    },\r\n\r\n    update: function() {\r\n        let inputLength = 0;\r\n        if(this.gamepad && this.gamepad.axes) {\r\n            this._currentStickAxes[0] = this.gamepad.axes[2];\r\n            this._currentStickAxes[1] = this.gamepad.axes[3];\r\n            inputLength = Math.abs(this._currentStickAxes[0]) + Math.abs(this._currentStickAxes[1]);\r\n        }\r\n\r\n        if(!this.isIndicating && this._prevThumbstickAxis[1] >= this.thumbstickActivationThreshhold && this._currentStickAxes[1] < this.thumbstickActivationThreshhold) {\r\n            this.isIndicating = true;\r\n        } else if(this.isIndicating && inputLength < this.thumbstickDeactivationThreshhold) {\r\n            this.isIndicating = false;\r\n            this.teleportIndicatorMeshObject.active = false;\r\n\r\n            if(this._hasHit) {\r\n                this._teleportPlayer(this.hitSpot, this._extraRotation);\r\n            }\r\n        }\r\n\r\n        if(this.isIndicating && this.teleportIndicatorMeshObject && this.input) {\r\n            const origin = this._tempVec0;\r\n            quat2.getTranslation(origin, this.object.transformWorld);\r\n\r\n            const direction = this.object.getForward(this._tempVec)\r\n            let rayHit = this.rayHit = (this.rayCastMode == 0) ?\r\n                WL.scene.rayCast(origin, direction, 1 << this.floorGroup) :\r\n                WL.physics.rayCast(origin, direction, 1 << this.floorGroup, this.maxDistance);\r\n            if(rayHit.hitCount > 0) {\r\n                this.indicatorHidden = false;\r\n\r\n                this._extraRotation = Math.PI + Math.atan2(this._currentStickAxes[0], this._currentStickAxes[1]);\r\n                this._currentIndicatorRotation = this._getCamRotation() + (this._extraRotation - Math.PI);\r\n                this.teleportIndicatorMeshObject.resetTranslationRotation();\r\n                this.teleportIndicatorMeshObject.rotateAxisAngleRad([0, 1, 0], this._currentIndicatorRotation);\r\n\r\n                this.teleportIndicatorMeshObject.translate(rayHit.locations[0]);\r\n                this.teleportIndicatorMeshObject.translate([0.0, this.indicatorYOffset, 0.0]);\r\n                this.teleportIndicatorMeshObject.active = true;\r\n\r\n                this.hitSpot.set(rayHit.locations[0]);\r\n                this._hasHit = true;\r\n            } else {\r\n                if(!this.indicatorHidden) {\r\n                    this.teleportIndicatorMeshObject.active = false;\r\n                    this.indicatorHidden = true;\r\n                }\r\n                this._hasHit = false;\r\n            }\r\n        } else if(this.teleportIndicatorMeshObject && this.isMouseIndicating) {\r\n            this.onMousePressed();\r\n        }\r\n\r\n        this._prevThumbstickAxis.set(this._currentStickAxes);\r\n    },\r\n    setupVREvents: function(s) {\r\n        /* If in VR, one-time bind the listener */\r\n        this.session = s;\r\n        s.addEventListener('end', function() {\r\n            /* Reset cache once the session ends to rebind select etc, in case\r\n             * it starts again */\r\n            this.gamepad = null;\r\n            this.session = null;\r\n        }.bind(this));\r\n\r\n        if(s.inputSources && s.inputSources.length) {\r\n            for(let i = 0; i < s.inputSources.length; i++) {\r\n                let inputSource = s.inputSources[i];\r\n\r\n                if(inputSource.handedness == this.handedness) {\r\n                    this.gamepad = inputSource.gamepad;\r\n                }\r\n            }\r\n        }\r\n\r\n        s.addEventListener('inputsourceschange', function(e) {\r\n            if(e.added && e.added.length) {\r\n                for(let i = 0; i < e.added.length; i++) {\r\n                    let inputSource = e.added[i];\r\n                    if(inputSource.handedness == this.handedness) {\r\n                        this.gamepad = inputSource.gamepad;\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this));\r\n    },\r\n    onMouseDown: function() {\r\n        this.isMouseIndicating = true;\r\n    },\r\n    onMouseUp: function() {\r\n        this.isMouseIndicating = false;\r\n        this.teleportIndicatorMeshObject.active = false;\r\n        if(this._hasHit) {\r\n            this._teleportPlayer(this.hitSpot, 0.0);\r\n        }\r\n    },\r\n    onMousePressed: function() {\r\n        let origin = [0, 0, 0];\r\n        quat2.getTranslation(origin, this.cam.transformWorld);\r\n\r\n        const direction = this.cam.getForward(this._tempVec);\r\n        let rayHit = this.rayHit = (this.rayCastMode == 0) ?\r\n            WL.scene.rayCast(origin, direction, 1 << this.floorGroup) :\r\n            WL.physics.rayCast(origin, direction, 1 << this.floorGroup, this.maxDistance);\r\n        if(rayHit.hitCount > 0) {\r\n            this.indicatorHidden = false;\r\n\r\n            direction[1] = 0;\r\n            vec3.normalize(direction, direction);\r\n\r\n            this._currentIndicatorRotation = -Math.sign(direction[2])*Math.acos(direction[0]) - Math.PI*0.5;\r\n\r\n            this.teleportIndicatorMeshObject.resetTranslationRotation();\r\n            this.teleportIndicatorMeshObject.rotateAxisAngleRad([0, 1, 0], this._currentIndicatorRotation);\r\n            this.teleportIndicatorMeshObject.translate(rayHit.locations[0]);\r\n            this.teleportIndicatorMeshObject.active = true;\r\n\r\n            this.hitSpot = rayHit.locations[0];\r\n            this._hasHit = true;\r\n        } else {\r\n            if(!this.indicatorHidden) {\r\n                this.teleportIndicatorMeshObject.active = false;\r\n                this.indicatorHidden = true;\r\n            }\r\n            this._hasHit = false;\r\n        }\r\n    },\r\n\r\n    _teleportPlayer: function(newPosition, rotationToAdd) {\r\n        this.camRoot.rotateAxisAngleRad([0, 1, 0], rotationToAdd);\r\n\r\n        const p = this._tempVec;\r\n        const p1 = this._tempVec0;\r\n\r\n        if(this.session) {\r\n            this.eyeLeft.getTranslationWorld(p);\r\n            this.eyeRight.getTranslationWorld(p1);\r\n\r\n            vec3.add(p, p, p1);\r\n            vec3.scale(p, p, 0.5);\r\n        } else {\r\n            this.cam.getTranslationWorld(p);\r\n        }\r\n\r\n        this.camRoot.getTranslationWorld(p1);\r\n        vec3.sub(p, p1, p);\r\n        p[0] += newPosition[0];\r\n        p[1] = newPosition[1];\r\n        p[2] += newPosition[2];\r\n\r\n        this.camRoot.setTranslationWorld(p);\r\n    },\r\n});\r\n\r\nWL.registerComponent('player-height', {\r\n    height: { type: WL.Type.Float, default: 1.75 }\r\n}, {\r\n    init: function() {\r\n        WL.onXRSessionStart.push(this.onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this.onXRSessionEnd.bind(this));\r\n    },\r\n\r\n    start: function() {\r\n        this.object.resetTranslationRotation();\r\n        this.object.translate([0.0, this.height, 0.0]);\r\n    },\r\n\r\n    onXRSessionStart: function() {\r\n        if(!['local', 'viewer'].includes(WebXR.refSpace)) {\r\n            this.object.resetTranslationRotation();\r\n        }\r\n    },\r\n\r\n    onXRSessionEnd: function() {\r\n        if(!['local', 'viewer'].includes(WebXR.refSpace)) {\r\n            this.object.resetTranslationRotation();\r\n            this.object.translate([0.0, this.height, 0.0]);\r\n        }\r\n    }\r\n});\r\n", "import {vec3, quat} from 'gl-matrix';\r\n\r\nMath.clamp = function(v, a, b) {\r\n    return Math.max(a, Math.min(v, b));\r\n}\r\n\r\n// From http://theorangeduck.com/page/simple-two-joint\r\nconst twoJointIK = (function() {\r\n    let ta = new Float32Array(3);\r\n    let ca = new Float32Array(3);\r\n    let ba = new Float32Array(3);\r\n    let ab = new Float32Array(3);\r\n    let cb = new Float32Array(3);\r\n\r\n    let axis0 = new Float32Array(3);\r\n    let axis1 = new Float32Array(3);\r\n\r\n    let temp = new Float32Array(4);\r\n\r\n    let r0 = new Float32Array(4);\r\n    let r1 = new Float32Array(4);\r\n    let r2 = new Float32Array(4);\r\n\r\n    return function(a_lr, b_lr, a, b, c, t, eps, a_gr, b_gr, helper) {\r\n        vec3.sub(ba, b, a);\r\n        const lab = vec3.length(ba);\r\n        vec3.sub(ta, b, c);\r\n        const lcb = vec3.length(ta);\r\n        vec3.sub(ta, t, a);\r\n        const lat = Math.clamp(vec3.length(ta), eps, lab + lcb - eps);\r\n\r\n        vec3.sub(ca, c, a);\r\n        vec3.sub(ab, a, b);\r\n        vec3.sub(cb, c, b);\r\n\r\n        vec3.normalize(ca, ca);\r\n        vec3.normalize(ba, ba);\r\n        vec3.normalize(ab, ab);\r\n        vec3.normalize(cb, cb);\r\n        vec3.normalize(ta, ta);\r\n\r\n        const ac_ab_0 = Math.acos(Math.clamp(vec3.dot(ca, ba), -1, 1));\r\n        const ba_bc_0 = Math.acos(Math.clamp(vec3.dot(ab, cb), -1, 1));\r\n        const ac_at_0 = Math.acos(Math.clamp(vec3.dot(ca, ta), -1, 1));\r\n\r\n        const ac_ab_1 = Math.acos(Math.clamp((lcb*lcb-lab*lab-lat*lat) / (-2*lab*lat), -1, 1));\r\n        const ba_bc_1 = Math.acos(Math.clamp((lat*lat-lab*lab-lcb*lcb) / (-2*lab*lcb), -1, 1));\r\n\r\n        vec3.sub(ca, c, a);\r\n        vec3.sub(ba, b, a);\r\n        vec3.sub(ta, t, a);\r\n\r\n        vec3.cross(axis0, ca, ba);\r\n        vec3.cross(axis1, ca, ta);\r\n\r\n        if(helper) {\r\n            vec3.sub(ba, helper, b);\r\n            vec3.transformQuat(ba, [0, 0, -1], b_gr);\r\n        } else {\r\n            vec3.sub(ba, b, a);\r\n        }\r\n\r\n        const l = vec3.length(axis0);\r\n        if(l == 0) {\r\n            axis0.set([1, 0, 0]);\r\n        } else {\r\n            vec3.scale(axis0, axis0, 1/l);\r\n        }\r\n        vec3.normalize(axis1, axis1);\r\n\r\n        quat.conjugate(a_gr, a_gr);\r\n        quat.setAxisAngle(r0, vec3.transformQuat(temp, axis0, a_gr), (ac_ab_1 - ac_ab_0));\r\n        quat.setAxisAngle(r2, vec3.transformQuat(temp, axis1, a_gr), (ac_at_0));\r\n        quat.mul(a_lr, a_lr, quat.mul(temp, r0, r2));\r\n        quat.normalize(a_lr, a_lr);\r\n\r\n        quat.conjugate(b_gr, b_gr);\r\n        quat.setAxisAngle(r1, vec3.transformQuat(temp, axis0, b_gr), (ba_bc_1 - ba_bc_0));\r\n        quat.mul(b_lr, b_lr, r1);\r\n        quat.normalize(b_lr, b_lr);\r\n    }\r\n})();\r\n\r\n/**\r\n * Inverse Kinematics for two-joint chains (e.g. knees or ellbows)\r\n */\r\nWL.registerComponent('two-joint-ik-solver', {\r\n    /** Root bone, never moves */\r\n    root: {type: WL.Type.Object},\r\n    /** Bone attached to the root */\r\n    middle: {type: WL.Type.Object},\r\n    /** Bone attached to the middle */\r\n    end: {type: WL.Type.Object},\r\n    /** Target the joins should reach for */\r\n    target: {type: WL.Type.Object},\r\n    /** Helper object to use to determine joint rotation axis */\r\n    helper: {type: WL.Type.Object},\r\n}, {\r\n    init: function() {\r\n        this.pos = new Float32Array(3*7);\r\n        this.p = [\r\n            this.pos.subarray(0, 3),\r\n            this.pos.subarray(3, 6),\r\n            this.pos.subarray(6, 9),\r\n            this.pos.subarray(9, 12),\r\n            this.pos.subarray(12, 15),\r\n            this.pos.subarray(15, 18),\r\n            this.pos.subarray(18, 21)];\r\n    },\r\n    update: function() {\r\n        const p = this.p;\r\n        this.root.getTranslationWorld(p[0]);\r\n        this.middle.getTranslationWorld(p[1]);\r\n        this.end.getTranslationWorld(p[2]);\r\n        this.target.getTranslationWorld(p[3]);\r\n        const tla = p[4];\r\n        const tlb = p[5];\r\n        this.root.getTranslationLocal(tla);\r\n        this.middle.getTranslationLocal(tlb);\r\n        if(this.helper) this.helper.getTranslationWorld(p[6]);\r\n\r\n        twoJointIK(this.root.transformLocal, this.middle.transformLocal,\r\n            p[0], p[1], p[2], p[3], 0.01,\r\n            this.root.transformWorld.subarray(0, 4),\r\n            this.middle.transformWorld.subarray(0, 4),\r\n            this.helper ? p[6] : null\r\n        );\r\n\r\n        this.root.setTranslationLocal(tla);\r\n        this.middle.setTranslationLocal(tlb);\r\n\r\n        this.root.setDirty();\r\n        this.middle.setDirty();\r\n    },\r\n});\r\n", "/**\r\n * Downloads a video from URL and applies it as `diffuseTexture` or `flatTexture` on given material.\r\n *\r\n * Video textures need to be updated reqularly whenever\r\n * a new frame is available. This component handles the\r\n * detection of a new frame and updates the texture to\r\n * reflect the video's current frame.\r\n * Only \"Phong Opaque Textured\" and \"Flat Opaque Textured\" materials are supported.\r\n *\r\n * The video can be accessed through `this.video`.\r\n *\r\n * See [Video Example](/showcase/video).\r\n */\r\nWL.registerComponent('video-texture', {\r\n    /** URL to download video from */\r\n    url: {type: WL.Type.String, default: \"\"},\r\n    /** Material to apply the video texture to */\r\n    material: {type: WL.Type.Material},\r\n    /** Whether to loop the video */\r\n    loop: {type: WL.Type.Bool, default: true},\r\n    /** Whether to automatically start playing the video */\r\n    autoplay: {type: WL.Type.Bool, default: true},\r\n    /** Whether to mute sound */\r\n    muted: {type: WL.Type.Bool, default: true},\r\n}, {\r\n    init: function() {\r\n        if(!this.material) {\r\n            console.error(\"video-texture: material property not set\");\r\n            return;\r\n        }\r\n        this.loaded = false;\r\n        this.frameUpdateRequested = true;\r\n\r\n        this.video = document.createElement('video');\r\n        this.video.src = this.url;\r\n        this.video.crossorigin = 'anonymous';\r\n        this.video.autoplay = this.autoplay;\r\n        this.video.loop = this.loop;\r\n        this.video.muted = this.muted;\r\n        this.video.addEventListener('playing', function() { this.loaded = true; }.bind(this));\r\n        this.video.play();\r\n    },\r\n\r\n    applyTexture: function() {\r\n        const mat = this.material;\r\n        this.texture = new WL.Texture(this.video);\r\n        if(mat.shader == \"Flat Opaque Textured\") {\r\n            mat.flatTexture = this.texture;\r\n        } else if(mat.shader == \"Phong Opaque Textured\") {\r\n            mat.diffuseTexture = this.texture;\r\n        } else {\r\n            console.error(\"Shader\", mat.shader, \"not supported by video-texture\");\r\n        }\r\n\r\n        if('requestVideoFrameCallback' in this.video) {\r\n            this.video.requestVideoFrameCallback(this.updateVideo.bind(this));\r\n        } else {\r\n            this.video.addEventListener('timeupdate', function() { this.frameUpdateRequested = true; }.bind(this));\r\n        }\r\n    },\r\n\r\n    update: function(dt) {\r\n        if(this.loaded && this.frameUpdateRequested) {\r\n            if(this.texture) {\r\n                this.texture.update();\r\n            } else {\r\n                /* Apply texture on first frame update request */\r\n                this.applyTexture();\r\n            }\r\n            this.frameUpdateRequested = false;\r\n        }\r\n    },\r\n\r\n    updateVideo: function() {\r\n        this.frameUpdateRequested = true;\r\n        this.video.requestVideoFrameCallback(this.updateVideo.bind(this));\r\n    }\r\n});\r\n", "/**\r\n * Allows switching all other components on an object to active/inactive\r\n * depending on whether a VR/AR session is active.\r\n *\r\n * Useful for hiding controllers until the user enters VR for example.\r\n */\r\nWL.registerComponent(\"vr-mode-active-switch\", {\r\n    /** When components should be active: In VR or when not in VR */\r\n    activateComponents: {type: WL.Type.Enum, values: [\"in VR\", \"in non-VR\"], default: \"in VR\"},\r\n    /** Whether child object's components should be affected */\r\n    affectChildren: {type: WL.Type.Bool, default: true},\r\n}, {\r\n    start: function() {\r\n        this.components = [];\r\n        this.getComponents(this.object);\r\n\r\n        /* Initial activation/deactivation */\r\n        this.onXRSessionEnd();\r\n\r\n        WL.onXRSessionStart.push(this.onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this.onXRSessionEnd.bind(this));\r\n    },\r\n\r\n    getComponents: function(obj) {\r\n        const comps = obj.getComponents().filter(c => c.type != \"vr-mode-active-switch\");\r\n        this.components = this.components.concat(comps);\r\n\r\n        if(this.affectChildren) {\r\n            let children = obj.children;\r\n            for(let i = 0; i < children.length; ++i) {\r\n                this.getComponents(children[i]);\r\n            }\r\n        }\r\n    },\r\n\r\n    setComponentsActive: function(active) {\r\n        const comps = this.components;\r\n        for (let i = 0; i < comps.length; ++i) {\r\n            comps[i].active = active;\r\n        }\r\n    },\r\n\r\n    onXRSessionStart: function() {\r\n        if(!this.active) return;\r\n        this.setComponentsActive(this.activateComponents == 0);\r\n    },\r\n\r\n    onXRSessionEnd: function() {\r\n        if(!this.active) return;\r\n        this.setComponentsActive(this.activateComponents != 0);\r\n    },\r\n}\r\n);\r\n", "import {vec3} from 'gl-matrix';\r\n/**\r\n * Basic movement with W/A/S/D keys.\r\n */\r\nWL.registerComponent('wasd-controls', {\r\n    /** Movement speed in m/s. */\r\n    speed: { type: WL.Type.Float, default: 0.1 },\r\n    /** Object of which the orientation is used to determine forward direction */\r\n    headObject: { type: WL.Type.Object }\r\n}, {\r\n    init: function() {\r\n        this.up = false;\r\n        this.right = false;\r\n        this.down = false;\r\n        this.left = false;\r\n\r\n        window.addEventListener('keydown', this.press.bind(this));\r\n        window.addEventListener('keyup', this.release.bind(this));\r\n    },\r\n\r\n    start: function() {\r\n        this.headObject = this.headObject || this.object;\r\n    },\r\n\r\n    update: function() {\r\n        let direction = [0, 0, 0];\r\n\r\n        if (this.up) direction[2] -= 1.0;\r\n        if (this.down) direction[2] += 1.0;\r\n        if (this.left) direction[0] -= 1.0;\r\n        if (this.right) direction[0] += 1.0;\r\n\r\n        vec3.normalize(direction, direction);\r\n        direction[0] *= this.speed;\r\n        direction[2] *= this.speed;\r\n        vec3.transformQuat(direction, direction, this.headObject.transformWorld);\r\n        this.object.translate(direction);\r\n    },\r\n\r\n    press: function(e) {\r\n        if (e.keyCode === 38 /* up */ || e.keyCode === 87 /* w */ || e.keyCode === 90 /* z */ ) {\r\n            this.up = true\r\n        } else if (e.keyCode === 39 /* right */ || e.keyCode === 68 /* d */ ) {\r\n            this.right = true\r\n        } else if (e.keyCode === 40 /* down */ || e.keyCode === 83 /* s */ ) {\r\n            this.down = true\r\n        } else if (e.keyCode === 37 /* left */ || e.keyCode === 65 /* a */ || e.keyCode === 81 /* q */ ) {\r\n            this.left = true\r\n        }\r\n    },\r\n\r\n    release: function(e) {\r\n        if (e.keyCode === 38 /* up */ || e.keyCode === 87 /* w */ || e.keyCode === 90 /* z */ ) {\r\n            this.up = false\r\n        } else if (e.keyCode === 39 /* right */ || e.keyCode === 68 /* d */ ) {\r\n            this.right = false\r\n        } else if (e.keyCode === 40 /* down */ || e.keyCode === 83 /* s */ ) {\r\n            this.down = false\r\n        } else if (e.keyCode === 37 /* left */ || e.keyCode === 65 /* a */ || e.keyCode === 81 /* q */ ) {\r\n            this.left = false\r\n        }\r\n    }\r\n});\r\n", "import {vec3,quat2} from 'gl-matrix';\r\n/**\r\n * [Wonderleap](https://wonderleap.co/) Ad Space\r\n *\r\n * To serve ads using this component, contact Wonderleap for\r\n * an Ad User and Ad ID via their website.\r\n *\r\n * See [Wonderleap Ad Example](/showcase/wonderleap-ad).\r\n */\r\nWL.registerComponent('wonderleap-ad', {\r\n    /** Ad user id */\r\n    auId: {type: WL.Type.String, default: 'ce6f68fc-4809-4409-8f57-c631283ce5a3'},\r\n    /** Ad id */\r\n    adId: {type: WL.Type.String}\r\n}, {\r\n    init: function() {\r\n        // TODO: Better let the ad create the correct mesh:\r\n        // this.mesh = this.object.addComponent('mesh');\r\n        // this.mesh.mesh = ...;\r\n        //\r\n        // Missing features:\r\n        //  - [ ] Create Material from shader\r\n        //  - [ ] Reference plane mesh (could create one instead)\r\n        this.mesh = this.object.getComponent('mesh', 0);\r\n\r\n        this.collision = this.object.addComponent('collision');\r\n        this.collision.collider = WL.Collider.Box;\r\n        this.collision.group = 0x2;\r\n\r\n        this.cursorTarget = this.object.addComponent('cursor-target');\r\n\r\n        this.timeSinceLastVizCheck = 0;\r\n        this.visibleDuration = 0;\r\n\r\n        /* 10 Seconds min vizibility threshold */\r\n        this.durationThreshold = 10.0;\r\n    },\r\n    start: function() {\r\n        Wonderleap.fetchAd(this.auId).then(function(ad) {\r\n            this.ad = ad;\r\n            WL.textures.load(ad.asset, '')\r\n                .then(function(texture) {\r\n                    const image = WL._images[texture._imageIndex];\r\n                    /* Make ad always 1 meter height, adjust width according to ad aspect ratio */\r\n                    this.collision.extents = [image.width/image.height, 1.0, 0.1];\r\n                    this.object.scale([image.width/image.height, 1.0, 1.0]);\r\n                    if(this.mesh.material.shader == 'Phong Textured') {\r\n                        this.mesh.material.diffuseTexture = texture;\r\n                    } else {\r\n                        this.mesh.material.flatTexture = texture;\r\n                    }\r\n                }.bind(this))\r\n                .catch(console.err);\r\n        }.bind(this));\r\n\r\n        this.cursorTarget.addClickFunction(this.click.bind(this));\r\n    },\r\n    update: function(dt) {\r\n        this.timeSinceLastVizCheck += dt;\r\n\r\n        /* visibility check */\r\n        if(this.timeSinceLastVizCheck > 0.5) {\r\n            const isVisible = this.isVisible();\r\n\r\n            if(isVisible) {\r\n                this.visibleDuration += this.timeSinceLastVizCheck;\r\n            }\r\n            this.timeSinceLastVizCheck = 0;\r\n\r\n            if((!isVisible && this.visibleDuration > 0) ||\r\n                this.visibleDuration > this.durationThreshold)\r\n            {\r\n                Wonderleap.sendMetric('gaze', this.visibleDuration, this.ad.adId, this.ad.auId);\r\n                this.visibleDuration = 0;\r\n            }\r\n        }\r\n    },\r\n\r\n    isVisible: function() {\r\n        /* Ensure there is a view and it's active */\r\n        const view = WL.scene.activeViews[0];\r\n        if(!view || !view.active) {\r\n            console.warn(\"wonderleap-ad: camera object does not have an active view\");\r\n            return false;\r\n        }\r\n\r\n        const transform = view.object.transformWorld;\r\n        const rayOrigin = [0, 0, 0];\r\n        quat2.getTranslation(rayOrigin, transform);\r\n        const rayDir = [0, 0, -1];\r\n        vec3.transformQuat(rayDir, rayDir, transform);\r\n\r\n        let hits = WL.scene.rayCast(rayOrigin, rayDir, 0x2);\r\n        for(let i = 0; i < hits.hitCount; ++i) {\r\n            const obj = hits.objects[i];\r\n            if(obj.objectId == this.object.objectId) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    click: function() {\r\n        /* Exit VR, in case active, then open link, otherwise open directly */\r\n        const s = Module['webxr_session'];\r\n        if(s) {\r\n            /* Try calling click again once the session ended,\r\n             * this time, the session will be null */\r\n            s.end().then(this.click.bind(this));\r\n            return;\r\n        }\r\n\r\n        Wonderleap.sendMetric('click', 0, this.ad.adId, this.ad.auId);\r\n        if(this.ad.url) {\r\n            window.open(this.ad.url, '_blank');\r\n        }\r\n    }\r\n});\r\n", "PP = {};", "/*\r\n    How to use\r\n\r\n    Warning: The extension is a WIP so not all the functions are available for all kinds of vector.\r\n\r\n    By default rotations are in Degrees and transforms are Matrix 4 (and not Quat 2)    \r\n    For functions that work with rotations, Matrix means Matrix 3 and Quat means Quat\r\n    For functions that work with transforms, Matrix means Matrix 4 and Quat means Quat 2\r\n    \r\n    For rotations u can add a suffix like Degrees/Radians/Quat/Matrix to use a specific version, example:\r\n        - vec3_rotateAroundRadians\r\n        - vec3_degreesAddRotationDegrees\r\n        \r\n    For transform u can add a suffix like Quat/Matrix to use a specific version, example:\r\n        - vec3_convertPositionToWorldMatrix\r\n        - vec3_convertDirectionToWorldQuat\r\n\r\n    Some vec3 functions let u add a prefix to specify if the vec3 represent a rotation in degrees or radians, where degrees is the default:\r\n        - vec3_toQuat\r\n        - vec3_degreesToQuat\r\n        - vec3_radiansToQuat\r\n        - vec3_degreesAddRotation\r\n\r\n    Rotation operations return a rotation of the same kind of the starting variable:\r\n        - vec3_degreesAddRotationQuat   -> returns a rotation in degrees\r\n        - quat_addRotationDegrees       -> returns a rotation in quat\r\n\r\n    The functions leave u the choice of forwarding an out parameter or just get the return value, example:\r\n        - let quat = this.vec3_toQuat()\r\n        - this.vec3_toQuat(quat)\r\n        - the out parameter is always the last one\r\n\r\n    List of functions:\r\n        Notes:\r\n            - If a group of functions starts with \u25CB it means it modifies the variable itself\r\n            - The suffixes (like Matrix or Radians) or prefixes (like degrees) are omitted \r\n\r\n        CREATION (u can call these functions without any object):\r\n            - PP.vec2_create\r\n\r\n            - PP.vec3_create\r\n\r\n            - PP.vec4_create\r\n\r\n            - PP.quat_create\r\n\r\n            - PP.quat2_create\r\n            - PP.quat2_fromPositionRotation\r\n\r\n            - PP.mat4_create\r\n            - PP.mat4_fromPositionRotation     / PP.mat4_fromPositionRotationScale\r\n\r\n        ARRAY:\r\n            - pp_first      / pp_last\r\n            - pp_has        / pp_hasEqual\r\n            - pp_find       / pp_findIndex      / pp_findAll        / pp_findAllIndexes / pp_findEqual      / pp_findAllEqual   / pp_findIndexEqual / pp_findAllIndexesEqual\r\n            \u25CB pp_remove     / pp_removeIndex    / pp_removeAll      / pp_removeEqual    / pp_removeAllEqual\r\n            \u25CB pp_pushUnique / pp_unshiftUnique\r\n            \u25CB pp_copy    \r\n            - pp_clone      \r\n            - pp_equals      \r\n            \u25CB pp_clear      \r\n\r\n        GENERIC VECTOR (array with only numbers):\r\n            - vec_scale\r\n            - vec_round     / vec_floor         / vec_ceil      / vec_clamp\r\n            - vec_log       / vec_error         / vec_warn   \r\n            - vec_equals   \r\n\r\n        VECTOR 2:\r\n            \u25CB vec2_set      / vec2_copy     / vec2_zero\r\n            - vec2_clone \r\n            - vec2_normalize\r\n            - vec2_length\r\n            - vec2_isZero\r\n\r\n        VECTOR 3:\r\n            \u25CB vec3_set      / vec3_copy     / vec3_zero\r\n            - vec3_clone \r\n            - vec3_normalize    / vec3_negate\r\n            - vec3_isNormalized / vec3_isZero\r\n            - vec3_length       / vec3_lengthSigned\r\n            - vec3_distance\r\n            - vec3_add              / vec3_sub              / vec3_mul      / vec3_div      / vec3_scale\r\n            - vec3_transformQuat    / vec3_transformMat4\r\n            - vec3_componentAlongAxis           / vec3_removeComponentAlongAxis / vec3_copyComponentAlongAxis   / vec3_valueAlongAxis  \r\n            - vec3_isConcordant\r\n            - vec3_isFartherAlongAxis\r\n            - vec3_isToTheRight\r\n            - vec3_isOnAxis\r\n            - vec3_isOnPlane\r\n            - vec3_signTo\r\n            - vec3_projectOnAxis                / vec3_projectOnAxisAlongAxis\r\n            - vec3_projectOnPlane               / vec3_projectOnPlaneAlongAxis\r\n            - vec3_convertPositionToWorld       / vec3_convertPositionToLocal \r\n            - vec3_convertDirectionToWorld      / vec3_convertDirectionToLocal   \r\n            - vec3_angle\r\n            - vec3_rotate           / vec3_rotateAxis           / vec3_rotateAround / vec3_rotateAroundAxis\r\n            - vec3_rotationTo       / vec3_rotationToPivoted\r\n            - vec3_toRadians        / vec3_toDegrees            / vec3_toQuat       / vec3_toMatrix\r\n            - vec3_addRotation\r\n            - vec3_log       / vec3_error         / vec3_warn    \r\n            - vec3_lerp      / vec3_interpolate \r\n            \r\n        VECTOR 4:\r\n            \u25CB vec4_set      / vec4_copy\r\n\r\n        QUAT:\r\n            \u25CB quat_set          / quat_copy     / quat_identity\r\n            - quat_clone \r\n            - quat_normalize    / quat_invert\r\n            - quat_isNormalized\r\n            - quat_length\r\n            - quat_mul\r\n            - quat_getAxis          / quat_getAngle         / quat_getAxisScaled\r\n            - quat_getAxes          / quat_getRight         / quat_getUp    / quat_getForward   / quat_getLeft  / quat_getDown  / quat_getBackward\r\n            \u25CB quat_setAxes          / quat_setRight         / quat_setUp    / quat_setForward   / quat_setLeft  / quat_setDown  / quat_setBackward\r\n            - quat_toWorld          / quat_toLocal\r\n            - quat_rotate           / quat_rotateAxis  \r\n            - quat_rotationTo     \r\n            - quat_getTwist         / quat_getSwing         / quat_getTwistFromSwing    / quat_getSwingFromTwist    / quat_fromTwistSwing\r\n            \u25CB quat_fromRadians      / quat_fromDegrees      / quat_fromAxis / quat_fromAxes\r\n            - quat_toRadians        / quat_toDegrees        / quat_toMatrix\r\n            - quat_addRotation      / quat_subRotation\r\n            - quat_lerp             / quat_interpolate      / quat_slerp    / quat_sinterpolate\r\n\r\n        QUAT 2:\r\n            \u25CB quat2_copy        / quat2_identity\r\n            - quat2_normalize\r\n            - quat2_isNormalized\r\n            - quat2_getPosition     / quat2_getRotation\r\n            \u25CB quat2_setPosition     / quat2_setRotation     / quat2_setPositionRotation\r\n            - quat2_getAxes     / quat2_getRight    / quat2_getUp   / quat2_getForward  / quat2_getLeft    / quat2_getDown   / quat2_getBackward\r\n            - quat2_toWorld     / quat2_toLocal\r\n            - quat2_toMatrix\r\n            \u25CB quat2_fromMatrix\r\n            - quat2_lerp        / quat2_interpolate\r\n\r\n        MATRIX 3:\r\n            - mat3_toDegrees    / mat3_toRadians    / mat3_toQuat\r\n            - mat3_fromAxes\r\n\r\n        MATRIX 4:\r\n            \u25CB mat4_copy         / mat4_identity\r\n            - mat4_clone\r\n            - mat4_invert\r\n            - mat4_getPosition  / mat4_getRotation  / mat4_getScale\r\n            \u25CB mat4_setPosition  / mat4_setRotation  / mat4_setScale\r\n            \u25CB mat4_setPositionRotation      / mat4_setPositionRotationScale\r\n            - mat4_getAxes     / mat4_getRight    / mat4_getUp   / mat4_getForward  / mat4_getLeft    / mat4_getDown   / mat4_getBackward\r\n            - mat4_toWorld      / mat4_toLocal\r\n            - mat4_hasUniformScale\r\n            - mat4_toQuat\r\n            \u25CB mat4_fromQuat\r\n*/\r\n\r\nimport * as glMatrix from 'gl-matrix';\r\n\r\n//ARRAY\r\n\r\n//New Functions\r\n\r\nArray.prototype.pp_first = function () {\r\n    return this.length > 0 ? this[0] : undefined;\r\n};\r\n\r\nArray.prototype.pp_last = function () {\r\n    return this.length > 0 ? this[this.length - 1] : undefined;\r\n};\r\n\r\nArray.prototype.pp_has = function (callback) {\r\n    return this.pp_find(callback) != undefined;\r\n};\r\n\r\nArray.prototype.pp_hasEqual = function (elementToFind, elementsEqualCallback = null) {\r\n    return this.pp_findEqual(elementToFind, elementsEqualCallback) != undefined;\r\n};\r\n\r\nArray.prototype.pp_find = function (callback) {\r\n    let elementFound = undefined;\r\n\r\n    let index = this.findIndex(callback);\r\n    if (index >= 0) {\r\n        elementFound = this[index];\r\n    }\r\n\r\n    return elementFound;\r\n};\r\n\r\nArray.prototype.pp_findIndex = function (callback) {\r\n    return this.findIndex(callback);\r\n};\r\n\r\nArray.prototype.pp_findAll = function (callback) {\r\n    let elementsFound = this.filter(callback);\r\n\r\n    return elementsFound;\r\n};\r\n\r\nArray.prototype.pp_findAllIndexes = function (callback) {\r\n    let indexes = [];\r\n    for (let i = 0; i < this.length; i++) {\r\n        let element = this[i];\r\n        if (callback(element)) {\r\n            indexes.push(i);\r\n        }\r\n    }\r\n    return indexes;\r\n};\r\n\r\nArray.prototype.pp_findEqual = function (elementToFind, elementsEqualCallback = null) {\r\n    if (elementsEqualCallback == null) {\r\n        return this.pp_find(element => element === elementToFind);\r\n    }\r\n    return this.pp_find(element => elementsEqualCallback(element, elementToFind));\r\n};\r\n\r\nArray.prototype.pp_findAllEqual = function (elementToFind, elementsEqualCallback = null) {\r\n    if (elementsEqualCallback == null) {\r\n        return this.pp_findAll(element => element === elementToFind);\r\n    }\r\n    return this.pp_findAll(element => elementsEqualCallback(element, elementToFind));\r\n};\r\n\r\nArray.prototype.pp_findIndexEqual = function (elementToFind, elementsEqualCallback = null) {\r\n    if (elementsEqualCallback == null) {\r\n        return this.findIndex(element => element === elementToFind);\r\n    }\r\n    return this.findIndex(element => elementsEqualCallback(element, elementToFind));\r\n};\r\n\r\nArray.prototype.pp_findAllIndexesEqual = function (elementToFind, elementsEqualCallback = null) {\r\n    if (elementsEqualCallback == null) {\r\n        return this.pp_findAllIndexes(element => element === elementToFind);\r\n    }\r\n    return this.pp_findAllIndexes(element => elementsEqualCallback(element, elementToFind));\r\n};\r\n\r\nArray.prototype.pp_removeIndex = function (index) {\r\n    let elementRemoved = undefined;\r\n\r\n    if (index >= 0 && index < this.length) {\r\n        let arrayRemoved = this.splice(index, 1);\r\n        if (arrayRemoved.length == 1) {\r\n            elementRemoved = arrayRemoved[0];\r\n        }\r\n    }\r\n\r\n    return elementRemoved;\r\n};\r\n\r\nArray.prototype.pp_remove = function (callback) {\r\n    let elementRemoved = undefined;\r\n\r\n    let index = this.findIndex(callback);\r\n    if (index >= 0) {\r\n        elementRemoved = this.pp_removeIndex(index);\r\n    }\r\n\r\n    return elementRemoved;\r\n};\r\n\r\nArray.prototype.pp_removeAll = function (callback) {\r\n    let elementsRemoved = [];\r\n\r\n    let currentElement = undefined;\r\n    do {\r\n        currentElement = this.pp_remove(callback);\r\n        if (currentElement !== undefined) {\r\n            elementsRemoved.push(currentElement);\r\n        }\r\n    } while (currentElement !== undefined);\r\n\r\n    return elementsRemoved;\r\n};\r\n\r\nArray.prototype.pp_removeEqual = function (elementToRemove, elementsEqualCallback = null) {\r\n    if (elementsEqualCallback == null) {\r\n        return this.pp_remove(element => element === elementToRemove);\r\n    }\r\n    return this.pp_remove(element => elementsEqualCallback(element, elementToRemove));\r\n};\r\n\r\nArray.prototype.pp_removeAllEqual = function (elementToRemove, elementsEqualCallback = null) {\r\n    if (elementsEqualCallback == null) {\r\n        return this.pp_removeAll(element => element === elementToRemove);\r\n    }\r\n    return this.pp_removeAll(element => elementsEqualCallback(element, elementToRemove));\r\n};\r\n\r\nArray.prototype.pp_pushUnique = function (element, elementsEqualCallback = null) {\r\n    let length = this.length;\r\n\r\n    let hasElement = this.pp_hasEqual(element, elementsEqualCallback);\r\n\r\n    if (!hasElement) {\r\n        length = this.push(element);\r\n    }\r\n\r\n    return length;\r\n};\r\n\r\nArray.prototype.pp_unshiftUnique = function (element, elementsEqualCallback = null) {\r\n    let length = this.length;\r\n\r\n    let hasElement = this.pp_hasEqual(element, elementsEqualCallback);\r\n\r\n    if (!hasElement) {\r\n        length = this.unshift(element);\r\n    }\r\n\r\n    return length;\r\n};\r\n\r\nArray.prototype.pp_copy = function (array, copyCallback = null) {\r\n    while (this.length > array.length) {\r\n        this.pop();\r\n    }\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (copyCallback == null) {\r\n            this[i] = array[i];\r\n        } else {\r\n            this[i] = copyCallback(this[i], array[i]);\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nArray.prototype.pp_clone = function (cloneCallback = null) {\r\n    if (cloneCallback == null) {\r\n        return this.slice(0);\r\n    }\r\n\r\n    let clone = null;\r\n    switch (this.constructor.name) {\r\n        case \"Array\":\r\n            clone = new Array(this.length);\r\n            break;\r\n        case \"Uint32Array\":\r\n            clone = new Uint32Array(this.length);\r\n            break;\r\n        case \"Int32Array\":\r\n            clone = new Int32Array(this.length);\r\n            break;\r\n        case \"Float32Array\":\r\n            clone = new Float32Array(this.length);\r\n            break;\r\n        case \"Float64Array\":\r\n            clone = new Float64Array(this.length);\r\n            break;\r\n        default:\r\n            clone = new Array(this.length);\r\n            console.error(\"Cloned array type not supported!\");\r\n            break;\r\n    }\r\n\r\n    for (let i = 0; i < this.length; i++) {\r\n        clone[i] = cloneCallback(this[i]);\r\n    }\r\n\r\n    return clone;\r\n};\r\n\r\nArray.prototype.pp_equals = function (array, elementsEqualCallback = null) {\r\n    let equals = true;\r\n\r\n    if (array != null && this.length == array.length) {\r\n        for (let i = 0; i < this.length; i++) {\r\n            if ((elementsEqualCallback != null && !elementsEqualCallback(this[i], array[i])) ||\r\n                (elementsEqualCallback == null && this[i] != array[i])) {\r\n                equals = false;\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        equals = false;\r\n    }\r\n\r\n    return equals;\r\n};\r\n\r\nArray.prototype.pp_clear = function () {\r\n    this.length = 0;\r\n\r\n    return this;\r\n};\r\n\r\n// GENERIC VECTOR\r\n\r\n//New Functions\r\n\r\nArray.prototype.vec_toString = function (decimalPlaces = null) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    return message;\r\n};\r\n\r\nArray.prototype.vec_log = function (decimalPlaces = 4) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    console.log(message);\r\n};\r\n\r\nArray.prototype.vec_error = function (decimalPlaces = 4) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    console.error(message);\r\n};\r\n\r\nArray.prototype.vec_warn = function (decimalPlaces = 4) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    console.warn(message);\r\n};\r\n\r\nArray.prototype.vec_scale = function (value, out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = out[i] * value;\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_round = function (out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.round(out[i]);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_floor = function (out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.floor(out[i]);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_ceil = function (out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.ceil(out[i]);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_clamp = function (start, end, out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    let fixedStart = (start != null) ? start : -Number.MAX_VALUE;\r\n    let fixedEnd = (end != null) ? end : Number.MAX_VALUE;\r\n    let min = Math.min(fixedStart, fixedEnd);\r\n    let max = Math.max(fixedStart, fixedEnd);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.min(Math.max(out[i], min), max);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_equals = function (vector, epsilon = 0) {\r\n    let equals = this.length == vector.length;\r\n\r\n    for (let i = 0; i < this.length && equals; i++) {\r\n        equals = equals && (Math.abs(this[i] - vector[i]) <= epsilon);\r\n    }\r\n\r\n    return equals;\r\n};\r\n\r\n// VECTOR 2\r\n\r\n// glMatrix Bridge\r\n\r\nArray.prototype.vec2_set = function (x, y = null) {\r\n    if (y == null) {\r\n        glMatrix.vec2.set(this, x, x);\r\n    } else {\r\n        glMatrix.vec2.set(this, x, y);\r\n    }\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec2_length = function () {\r\n    return glMatrix.vec2.length(this);\r\n};\r\n\r\nArray.prototype.vec2_normalize = function (out = glMatrix.vec2.create()) {\r\n    glMatrix.vec2.normalize(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec2_copy = function (vector) {\r\n    glMatrix.vec2.copy(this, vector);\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec2_clone = function (out = glMatrix.vec2.create()) {\r\n    glMatrix.vec2.copy(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec2_zero = function () {\r\n    glMatrix.vec2.zero(this);\r\n    return this;\r\n};\r\n\r\n// New Functions\r\n\r\nArray.prototype.vec2_isZero = function (epsilon = 0) {\r\n    return this.vec2_length() <= epsilon;\r\n};\r\n\r\n// VECTOR 3\r\n\r\n// glMatrix Bridge\r\n\r\nArray.prototype.vec3_normalize = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.normalize(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_copy = function (vector) {\r\n    glMatrix.vec3.copy(this, vector);\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec3_clone = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.copy(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_set = function (x, y = null, z = null) {\r\n    if (y == null) {\r\n        glMatrix.vec3.set(this, x, x, x);\r\n    } else {\r\n        glMatrix.vec3.set(this, x, y, z);\r\n    }\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec3_zero = function () {\r\n    glMatrix.vec3.zero(this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec3_angle = function (vector) {\r\n    return this.vec3_angleDegrees(vector);\r\n};\r\n\r\nArray.prototype.vec3_angleDegrees = function (vector) {\r\n    return this.vec3_angleRadians(vector) * (180 / Math.PI);\r\n};\r\n\r\nArray.prototype.vec3_angleRadians = function (vector) {\r\n    return (this.vec3_isZero() || vector.vec3_isZero()) ? 0 : glMatrix.vec3.angle(this, vector);\r\n};\r\n\r\nArray.prototype.vec3_length = function () {\r\n    return glMatrix.vec3.length(this);\r\n};\r\n\r\nArray.prototype.vec3_distance = function (vector) {\r\n    return glMatrix.vec3.dist(this, vector);\r\n};\r\n\r\nArray.prototype.vec3_add = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.add(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_sub = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.sub(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_mul = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.mul(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_div = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.div(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_scale = function (value, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.scale(out, this, value);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_negate = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.negate(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_cross = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.cross(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_transformQuat = function (quat, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.transformQuat(out, this, quat);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_transformMat4 = function (mat4, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.transformMat4(out, this, mat4);\r\n    return out;\r\n};\r\n\r\n// New Functions\r\n\r\nArray.prototype.vec3_lengthSigned = function (positiveDirection) {\r\n    let signedLength = glMatrix.vec3.length(this);\r\n    if (!this.vec3_isConcordant(positiveDirection)) {\r\n        signedLength *= -1;\r\n    }\r\n\r\n    return signedLength;\r\n};\r\n\r\nArray.prototype.vec3_angleSigned = function (vector, upAxis) {\r\n    return this.vec3_angleSignedDegrees(vector, upAxis);\r\n};\r\n\r\nArray.prototype.vec3_angleSignedDegrees = function (vector, upAxis) {\r\n    return this.vec3_angleSignedRadians(vector, upAxis) * (180 / Math.PI);\r\n};\r\n\r\nArray.prototype.vec3_angleSignedRadians = function () {\r\n    let crossAxis = glMatrix.vec3.create();\r\n    return function vec3_angleSignedRadians(vector, upAxis) {\r\n        this.vec3_cross(vector, crossAxis);\r\n        let angle = this.vec3_angleRadians(vector);\r\n        if (!crossAxis.vec3_isConcordant(upAxis)) {\r\n            angle = -angle;\r\n        }\r\n\r\n        return angle;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_toRadians = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.set(out, glMatrix.glMatrix.toRadian(this[0]), glMatrix.glMatrix.toRadian(this[1]), glMatrix.glMatrix.toRadian(this[2]));\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_toDegrees = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.set(out, this[0] * (180 / Math.PI), this[1] * (180 / Math.PI), this[2] * (180 / Math.PI));\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_toQuat = function (out) {\r\n    return this.vec3_degreesToQuat(out);\r\n};\r\n\r\nArray.prototype.vec3_radiansToQuat = function (out = glMatrix.quat.create()) {\r\n    out.quat_fromRadians(this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_degreesToQuat = function (out = glMatrix.quat.create()) {\r\n    out.quat_fromDegrees(this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_isNormalized = function (epsilon = this._pp_normalizedEpsilon) {\r\n    return Math.abs(glMatrix.vec3.length(this) - 1) < epsilon;\r\n};\r\n\r\nArray.prototype.vec3_isZero = function (epsilon = 0) {\r\n    return this.vec3_length() <= epsilon;\r\n};\r\n\r\nArray.prototype.vec3_componentAlongAxis = function (axis, out = glMatrix.vec3.create()) {\r\n    let angle = glMatrix.vec3.angle(this, axis);\r\n    let length = Math.cos(angle) * glMatrix.vec3.length(this);\r\n\r\n    glMatrix.vec3.copy(out, axis);\r\n    glMatrix.vec3.scale(out, out, length);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_valueAlongAxis = function () {\r\n    let componentAlong = glMatrix.vec3.create();\r\n    return function vec3_valueAlongAxis(axis) {\r\n        this.vec3_componentAlongAxis(axis, componentAlong);\r\n        let value = componentAlong.vec3_length();\r\n        if (!componentAlong.vec3_isConcordant(axis)) {\r\n            value = -value;\r\n        }\r\n        return value;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_removeComponentAlongAxis = function () {\r\n    let componentAlong = glMatrix.vec3.create();\r\n    return function vec3_removeComponentAlongAxis(axis, out = glMatrix.vec3.create()) {\r\n        this.vec3_componentAlongAxis(axis, componentAlong);\r\n        glMatrix.vec3.sub(out, this, componentAlong);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_copyComponentAlongAxis = function () {\r\n    let componentAlong = glMatrix.vec3.create();\r\n    return function vec3_copyComponentAlongAxis(vector, axis, out = glMatrix.vec3.create()) {\r\n        this.vec3_removeComponentAlongAxis(axis, out);\r\n        vector.vec3_componentAlongAxis(axis, componentAlong);\r\n        out.vec3_add(componentAlong, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_isConcordant = function (vector) {\r\n    return glMatrix.vec3.angle(this, vector) <= Math.PI / 2;\r\n};\r\n\r\nArray.prototype.vec3_isFartherAlongAxis = function () {\r\n    let componentAlong = glMatrix.vec3.create();\r\n    return function vec3_isFartherAlongAxis(vector, axis) {\r\n        let thisAxisLength = this.vec3_componentAlongAxis(axis, componentAlong).vec3_length();\r\n        let thisAxisLengthSigned = this.vec3_isConcordant(axis) ? thisAxisLength : -thisAxisLength;\r\n\r\n        let vectorAxisLength = vector.vec3_componentAlongAxis(axis, componentAlong).vec3_length();\r\n        let vectorAxisLengthSigned = vector.vec3_isConcordant(axis) ? vectorAxisLength : -vectorAxisLength;\r\n\r\n        return thisAxisLengthSigned > vectorAxisLengthSigned;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_isToTheRight = function (vector, upAxis) {\r\n    return this.vec3_signTo(vector, upAxis) >= 0;\r\n};\r\n\r\nArray.prototype.vec3_signTo = function () {\r\n    let componentAlongThis = glMatrix.vec3.create();\r\n    let componentAlongVector = glMatrix.vec3.create();\r\n    return function vec3_signTo(vector, upAxis, zeroSign = 1) {\r\n        this.vec3_removeComponentAlongAxis(upAxis, componentAlongThis);\r\n        vector.vec3_removeComponentAlongAxis(upAxis, componentAlongVector);\r\n\r\n        let angleSigned = this.vec3_angleSigned(vector, upAxis);\r\n        return angleSigned > 0 ? 1 : (angleSigned == 0 ? zeroSign : -1);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_projectOnAxis = function (axis, out = glMatrix.vec3.create()) {\r\n    this.vec3_componentAlongAxis(axis, out);\r\n    return out;\r\n};\r\n\r\n// the result can easily be not 100% exact due to precision errors\r\nArray.prototype.vec3_projectOnAxisAlongAxis = function () {\r\n    let up = glMatrix.vec3.create();\r\n\r\n    let thisToAxis = glMatrix.vec3.create();\r\n\r\n    let fixedProjectAlongAxis = glMatrix.vec3.create();\r\n    return function vec3_projectOnAxisAlongAxis(axis, projectAlongAxis, out = glMatrix.vec3.create()) {\r\n\r\n        if (this.vec3_isOnAxis(axis) || projectAlongAxis.vec3_isOnAxis(axis)) {\r\n            out.vec3_copy(this);\r\n        } else {\r\n            projectAlongAxis.vec3_cross(axis, up);\r\n            up.vec3_normalize(up);\r\n\r\n            this.vec3_removeComponentAlongAxis(up, out);\r\n            if (!out.vec3_isOnAxis(axis)) {\r\n                out.vec3_projectOnAxis(axis, thisToAxis);\r\n                thisToAxis.vec3_sub(out, thisToAxis);\r\n\r\n                if (thisToAxis.vec3_isConcordant(projectAlongAxis)) {\r\n                    fixedProjectAlongAxis.vec3_copy(projectAlongAxis);\r\n                } else {\r\n                    projectAlongAxis.vec3_negate(fixedProjectAlongAxis);\r\n                }\r\n\r\n                let angleWithAlongAxis = fixedProjectAlongAxis.vec3_angleRadians(thisToAxis);\r\n                let lengthToRemove = thisToAxis.vec3_length() / Math.cos(angleWithAlongAxis);\r\n\r\n                fixedProjectAlongAxis.vec3_normalize(fixedProjectAlongAxis);\r\n                fixedProjectAlongAxis.vec3_scale(lengthToRemove, fixedProjectAlongAxis);\r\n                out.vec3_add(fixedProjectAlongAxis, out);\r\n\r\n                out.vec3_projectOnAxis(axis, out); // snap on the axis, due to float precision error\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_projectOnPlane = function (planeNormal, out = glMatrix.vec3.create()) {\r\n    this.vec3_removeComponentAlongAxis(planeNormal, out);\r\n    return out;\r\n};\r\n\r\n// the result can easily be not 100% exact due to precision errors\r\nArray.prototype.vec3_projectOnPlaneAlongAxis = function () {\r\n    let thisToPlane = glMatrix.vec3.create();\r\n\r\n    let fixedProjectAlongAxis = glMatrix.vec3.create();\r\n    return function vec3_projectOnPlaneAlongAxis(planeNormal, projectAlongAxis, out = glMatrix.vec3.create()) {\r\n        if (this.vec3_isOnPlane(planeNormal) || projectAlongAxis.vec3_isOnPlane(planeNormal)) {\r\n            out.vec3_copy(this);\r\n        } else {\r\n            out.vec3_copy(this);\r\n\r\n            out.vec3_projectOnPlane(planeNormal, thisToPlane);\r\n            thisToPlane.vec3_sub(out, thisToPlane);\r\n\r\n            if (thisToPlane.vec3_isConcordant(projectAlongAxis)) {\r\n                fixedProjectAlongAxis.vec3_copy(projectAlongAxis);\r\n            } else {\r\n                projectAlongAxis.vec3_negate(fixedProjectAlongAxis);\r\n            }\r\n\r\n            let angleWithAlongAxis = fixedProjectAlongAxis.vec3_angleRadians(thisToPlane);\r\n            let lengthToRemove = thisToPlane.vec3_length() / Math.cos(angleWithAlongAxis);\r\n\r\n            fixedProjectAlongAxis.vec3_normalize(fixedProjectAlongAxis);\r\n            fixedProjectAlongAxis.vec3_scale(lengthToRemove, fixedProjectAlongAxis);\r\n            out.vec3_add(fixedProjectAlongAxis, out);\r\n\r\n            out.vec3_projectOnPlane(planeNormal, out); // snap on the axis, due to float precision error\r\n        }\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_isOnAxis = function (axis) {\r\n    let angle = this.vec3_angle(axis);\r\n    return Math.abs(angle) < this._pp_degreesEpsilon || Math.abs(angle - 180) < this._pp_degreesEpsilon;\r\n};\r\n\r\nArray.prototype.vec3_isOnPlane = function (planeNormal) {\r\n    let angle = this.vec3_angle(planeNormal);\r\n    return Math.abs(angle - 90) < this._pp_degreesEpsilon;\r\n};\r\n\r\nArray.prototype.vec3_rotate = function (rotation, out) {\r\n    return this.vec3_rotateDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateDegrees = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function vec3_rotateDegrees(rotation, out) {\r\n        return this.vec3_rotateAroundDegrees(rotation, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateRadians = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function vec3_rotateRadians(rotation, out) {\r\n        return this.vec3_rotateAroundRadians(rotation, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateQuat = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function vec3_rotateQuat(rotation, out) {\r\n        return this.vec3_rotateAroundQuat(rotation, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAxis = function (angle, axis, out) {\r\n    return this.vec3_rotateAxisDegrees(angle, axis, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateAxisDegrees = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function vec3_rotateAxisDegrees(angle, axis, out) {\r\n        return this.vec3_rotateAroundAxisDegrees(angle, axis, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAxisRadians = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function vec3_rotateAxisRadians(angle, axis, out) {\r\n        return this.vec3_rotateAroundAxisRadians(angle, axis, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAround = function (rotation, origin, out) {\r\n    return this.vec3_rotateAroundDegrees(rotation, origin, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateAroundDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function vec3_rotateAroundDegrees(rotation, origin, out = glMatrix.vec3.create()) {\r\n        rotation.vec3_degreesToQuat(quat);\r\n        return this.vec3_rotateAroundQuat(quat, origin, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAroundRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function vec3_rotateAroundRadians(rotation, origin, out = glMatrix.vec3.create()) {\r\n        rotation.vec3_radiansToQuat(quat);\r\n        return this.vec3_rotateAroundQuat(quat, origin, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAroundQuat = function (rotation, origin, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.sub(out, this, origin);\r\n    glMatrix.vec3.transformQuat(out, out, rotation);\r\n    glMatrix.vec3.add(out, out, origin);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_rotateAroundAxis = function (angle, axis, origin, out) {\r\n    return this.vec3_rotateAroundAxisDegrees(angle, axis, origin, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateAroundAxisDegrees = function (angle, axis, origin, out) {\r\n    return this.vec3_rotateAroundAxisRadians(glMatrix.glMatrix.toRadian(angle), axis, origin, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateAroundAxisRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function vec3_rotateAroundAxisRadians(angle, axis, origin, out = glMatrix.vec3.create()) {\r\n        glMatrix.quat.setAxisAngle(quat, axis, angle);\r\n        return this.vec3_rotateAroundQuat(quat, origin, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertPositionToWorld = function (parentTransform, out) {\r\n    return this.vec3_convertPositionToWorldMatrix(parentTransform, out);\r\n};\r\n\r\nArray.prototype.vec3_convertPositionToLocal = function (parentTransform, out) {\r\n    return this.vec3_convertPositionToLocalMatrix(parentTransform, out);\r\n};\r\n\r\nArray.prototype.vec3_convertPositionToWorldMatrix = function (parentTransform, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.transformMat4(out, this, parentTransform);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_convertPositionToLocalMatrix = function () {\r\n    let inverse = glMatrix.mat4.create();\r\n    return function vec3_convertPositionToLocalMatrix(parentTransform, out = glMatrix.vec3.create()) {\r\n        glMatrix.mat4.invert(inverse, parentTransform);\r\n        glMatrix.vec3.transformMat4(out, this, inverse);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertPositionToWorldQuat = function () {\r\n    let parentTransformMatrix = glMatrix.mat4.create();\r\n    let position = glMatrix.vec3.create();\r\n    let rotation = glMatrix.quat.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function vec3_convertPositionToWorldQuat(parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.quat2_getPosition(position);\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        parentTransformMatrix.mat4_setPositionRotationQuatScale(position, rotation, one);\r\n        return this.vec3_convertPositionToWorldMatrix(parentTransformMatrix, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertPositionToLocalQuat = function () {\r\n    let parentTransformMatrix = glMatrix.mat4.create();\r\n    let position = glMatrix.vec3.create();\r\n    let rotation = glMatrix.quat.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function vec3_convertPositionToLocalQuat(parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.quat2_getPosition(position);\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        parentTransformMatrix.mat4_setPositionRotationQuatScale(position, rotation, one);\r\n        return this.vec3_convertPositionToLocalMatrix(parentTransformMatrix, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertDirectionToWorld = function (parentTransform, out) {\r\n    return this.vec3_convertDirectionToWorldMatrix(parentTransform, out);\r\n};\r\n\r\nArray.prototype.vec3_convertDirectionToLocal = function (parentTransform, out) {\r\n    return this.vec3_convertDirectionToLocalMatrix(parentTransform, out);\r\n};\r\n\r\nArray.prototype.vec3_convertDirectionToWorldMatrix = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function vec3_convertDirectionToWorldMatrix(parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.mat4_getRotationQuat(rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertDirectionToLocalMatrix = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function vec3_convertDirectionToLocalMatrix(parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.mat4_getRotationQuat(rotation);\r\n        glMatrix.quat.conjugate(rotation, rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\n\r\nArray.prototype.vec3_convertDirectionToWorldQuat = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function vec3_convertDirectionToWorldQuat(parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertDirectionToLocalQuat = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function vec3_convertDirectionToLocalQuat(parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        glMatrix.quat.conjugate(rotation, rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_log = function (decimalPlaces = 4) {\r\n    this.vec_log(decimalPlaces);\r\n};\r\n\r\nArray.prototype.vec3_error = function (decimalPlaces = 4) {\r\n    this.vec_error(decimalPlaces);\r\n};\r\n\r\nArray.prototype.vec3_warn = function (decimalPlaces = 4) {\r\n    this.vec_warn(decimalPlaces);\r\n};\r\n\r\nArray.prototype.vec3_addRotation = function (rotation, out) {\r\n    return this.vec3_degreesAddRotation(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_addRotationDegrees = function (rotation, out) {\r\n    return quat.vec3_degreesAddRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_addRotationRadians = function (rotation, out) {\r\n    return quat.vec3_degreesAddRotationRadians(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_addRotationQuat = function (rotation, out) {\r\n    return quat.vec3_degreesAddRotationQuat(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_degreesAddRotation = function (rotation, out) {\r\n    return this.vec3_degreesAddRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_degreesAddRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function vec3_degreesAddRotationDegrees(rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_addRotationDegrees(rotation, quat).quat_toDegrees(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_degreesAddRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function vec3_degreesAddRotationRadians(rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_addRotationRadians(rotation, quat).quat_toDegrees(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_degreesAddRotationQuat = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function vec3_degreesAddRotationQuat(rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_addRotationQuat(rotation, quat).quat_toDegrees(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_radiansAddRotation = function (rotation, out) {\r\n    return this.vec3_radiansAddRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_radiansAddRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function vec3_radiansAddRotationDegrees(rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_addRotationDegrees(rotation, quat).quat_toRadians(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_radiansAddRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function vec3_radiansAddRotationRadians(rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_addRotationRadians(rotation, quat).quat_toRadians(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_radiansAddRotationQuat = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function vec3_radiansAddRotationQuat(rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_addRotationQuat(rotation, quat).quat_toRadians(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_toMatrix = function (out = glMatrix.mat3.create()) {\r\n    return this.vec3_degreesToMatrix(out);\r\n};\r\n\r\nArray.prototype.vec3_degreesToMatrix = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function vec3_degreesToMatrix(out = glMatrix.mat3.create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_toMatrix(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_radiansToMatrix = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function vec3_radiansToMatrix(out = glMatrix.mat3.create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_toMatrix(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotationTo = function (direction, out) {\r\n    return this.vec3_rotationToDegrees(direction, out);\r\n};\r\n\r\nArray.prototype.vec3_rotationToDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function vec3_rotationToDegrees(direction, out = glMatrix.vec3.create()) {\r\n        this.vec3_rotationToQuat(direction, rotationQuat);\r\n        rotationQuat.quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotationToRadians = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function vec3_rotationToRadians(direction, out = glMatrix.vec3.create()) {\r\n        this.vec3_rotationToQuat(direction, rotationQuat);\r\n        rotationQuat.quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotationToQuat = function () {\r\n    let rotationAxis = glMatrix.vec3.create();\r\n    return function vec3_rotationToQuat(direction, out = glMatrix.quat.create()) {\r\n        this.vec3_cross(direction, rotationAxis);\r\n        rotationAxis.vec3_normalize(rotationAxis);\r\n        let signedAngle = this.vec3_angleSigned(direction, rotationAxis);\r\n        out.quat_fromAxis(signedAngle, rotationAxis);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotationToPivoted = function (direction, pivotAxis, out) {\r\n    return this.vec3_rotationToPivotedDegrees(direction, pivotAxis, out);\r\n};\r\n\r\nArray.prototype.vec3_rotationToPivotedDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function vec3_rotationToPivotedDegrees(direction, pivotAxis, out = glMatrix.vec3.create()) {\r\n        this.vec3_rotationToPivotedQuat(direction, pivotAxis, rotationQuat);\r\n        rotationQuat.quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotationToPivotedRadians = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function vec3_rotationToPivotedRadians(direction, pivotAxis, out = glMatrix.vec3.create()) {\r\n        this.vec3_rotationToPivotedQuat(direction, pivotAxis, rotationQuat);\r\n        rotationQuat.quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotationToPivotedQuat = function () {\r\n    let thisFlat = glMatrix.vec3.create();\r\n    let directionFlat = glMatrix.vec3.create();\r\n    let rotationAxis = glMatrix.vec3.create();\r\n    return function vec3_rotationToPivotedQuat(direction, pivotAxis, out = glMatrix.quat.create()) {\r\n        this.vec3_removeComponentAlongAxis(pivotAxis, thisFlat);\r\n        direction.vec3_removeComponentAlongAxis(pivotAxis, directionFlat);\r\n\r\n        thisFlat.vec3_cross(directionFlat, rotationAxis);\r\n        rotationAxis.vec3_normalize(rotationAxis);\r\n        let signedAngle = thisFlat.vec3_angleSigned(directionFlat, rotationAxis);\r\n        out.quat_fromAxis(signedAngle, rotationAxis);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_lerp = function (to, interpolationValue, out = glMatrix.vec3.create()) {\r\n    if (interpolationValue <= 0) {\r\n        out.vec3_copy(this);\r\n        return out;\r\n    } else if (interpolationValue >= 1) {\r\n        out.vec3_copy(to);\r\n        return out;\r\n    }\r\n\r\n    glMatrix.vec3.lerp(out, this, to, interpolationValue);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_interpolate = function (to, interpolationValue, easingFunction = PP.EasingFunction.linear, out = glMatrix.vec3.create()) {\r\n    let lerpValue = easingFunction(interpolationValue);\r\n    return this.vec3_lerp(to, lerpValue, out);\r\n};\r\n\r\n// VECTOR 4\r\n\r\n// glMatrix Bridge\r\n\r\nArray.prototype.vec4_set = function (x, y = null, z = null, w = null) {\r\n    if (y == null) {\r\n        glMatrix.vec4.set(this, x, x, x, x);\r\n    } else {\r\n        glMatrix.vec4.set(this, x, y, z, w);\r\n    }\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec4_copy = function (vector) {\r\n    glMatrix.vec4.copy(this, vector);\r\n    return this;\r\n};\r\n\r\n//QUAT\r\n\r\n// glMatrix Bridge\r\n\r\nArray.prototype.quat_normalize = function (out = glMatrix.quat.create()) {\r\n    glMatrix.quat.normalize(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_copy = function (quat) {\r\n    glMatrix.quat.copy(this, quat);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_clone = function (out = glMatrix.quat.create()) {\r\n    glMatrix.quat.copy(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_set = function (x, y = null, z = null, w = null) {\r\n    if (y == null) {\r\n        glMatrix.quat.set(this, x, x, x, x);\r\n    } else {\r\n        glMatrix.quat.set(this, x, y, z, w);\r\n    }\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_identity = function () {\r\n    glMatrix.quat.identity(this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_length = function () {\r\n    return glMatrix.quat.length(this);\r\n};\r\n\r\nArray.prototype.quat_invert = function (out = glMatrix.quat.create()) {\r\n    glMatrix.quat.invert(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_mul = function (rotation, out = glMatrix.quat.create()) {\r\n    glMatrix.quat.mul(out, this, rotation);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getAxis = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.quat.getAxisAngle(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getAngle = function () {\r\n    return this.quat_getAngleDegrees();\r\n};\r\n\r\n\r\nArray.prototype.quat_getAngleDegrees = function () {\r\n    let angle = this.quat_getAngleRadians();\r\n    return angle * (180 / Math.PI);\r\n};\r\n\r\nArray.prototype.quat_getAngleRadians = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function quat_getAngleRadians() {\r\n        let angle = glMatrix.quat.getAxisAngle(vector, this);\r\n        return angle;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getAxisScaled = function (out = glMatrix.vec3.create()) {\r\n    return this.quat_getAxisScaledDegrees(out);\r\n};\r\n\r\nArray.prototype.quat_getAxisScaledDegrees = function (out = glMatrix.vec3.create()) {\r\n    this.quat_getAxis(out);\r\n    let angle = this.quat_getAngleDegrees();\r\n    out.vec3_scale(angle, out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getAxisScaledRadians = function (out = glMatrix.vec3.create()) {\r\n    this.quat_getAxis(out);\r\n    let angle = this.quat_getAngleRadians();\r\n    out.vec3_scale(angle, out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getAxes = function (out = [glMatrix.vec3.create(), glMatrix.vec3.create(), glMatrix.vec3.create()]) {\r\n    this.quat_getLeft(out[0]);\r\n    this.quat_getUp(out[1]);\r\n    this.quat_getForward(out[2]);\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getForward = function () {\r\n    let rotationMatrix = glMatrix.mat3.create();\r\n    return function quat_getForward(out = glMatrix.vec3.create()) {\r\n        glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n        glMatrix.vec3.set(out, rotationMatrix[6], rotationMatrix[7], rotationMatrix[8]);\r\n        glMatrix.vec3.normalize(out, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getBackward = function (out) {\r\n    out = this.quat_getForward(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getLeft = function () {\r\n    let rotationMatrix = glMatrix.mat3.create();\r\n    return function quat_getLeft(out = glMatrix.vec3.create()) {\r\n        glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n        glMatrix.vec3.set(out, rotationMatrix[0], rotationMatrix[1], rotationMatrix[2]);\r\n        glMatrix.vec3.normalize(out, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getRight = function (out) {\r\n    out = this.quat_getLeft(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getUp = function () {\r\n    let rotationMatrix = glMatrix.mat3.create();\r\n    return function quat_getUp(out = glMatrix.vec3.create()) {\r\n        glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n        glMatrix.vec3.set(out, rotationMatrix[3], rotationMatrix[4], rotationMatrix[5]);\r\n        glMatrix.vec3.normalize(out, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getDown = function (out) {\r\n    out = this.quat_getUp(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_setAxes = function (left, up, forward) {\r\n    if (forward != null) {\r\n        return this.quat_setForward(forward, up, left);\r\n    } else if (up != null) {\r\n        return this.quat_setUp(up, forward, left);\r\n    } else {\r\n        return this.quat_setLeft(left, up, forward);\r\n    }\r\n};\r\n\r\nArray.prototype.quat_setForward = function (forward, up = null, left = null) {\r\n    return this._quat_setAxes([left, up, forward], [2, 1, 0]);\r\n};\r\n\r\nArray.prototype.quat_setBackward = function () {\r\n    let forward = glMatrix.vec3.create();\r\n    return function quat_setBackward(backward, up = null, left = null) {\r\n        backward.vec3_negate(forward);\r\n        return this._quat_setAxes([left, up, forward], [2, 1, 0]);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_setUp = function (up, forward = null, left = null) {\r\n    return this._quat_setAxes([left, up, forward], [1, 2, 0]);\r\n};\r\n\r\nArray.prototype.quat_setDown = function () {\r\n    let up = glMatrix.vec3.create();\r\n    return function quat_setDown(down, forward = null, left = null) {\r\n        down.vec3_negate(up);\r\n        return this._quat_setAxes([left, up, forward], [1, 2, 0]);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_setLeft = function (left, up = null, forward = null) {\r\n    return this._quat_setAxes([left, up, forward], [0, 1, 2]);\r\n};\r\n\r\nArray.prototype.quat_setRight = function () {\r\n    let left = glMatrix.vec3.create();\r\n    return function quat_setRight(right, up = null, forward = null) {\r\n        right.vec3_negate(left);\r\n        return this._quat_setAxes([left, up, forward], [0, 1, 2]);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_toWorld = function (parentQuat, out = glMatrix.quat.create()) {\r\n    glMatrix.quat.mul(out, parentQuat, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_toLocal = function () {\r\n    let invertQuat = glMatrix.quat.create();\r\n    return function quat_toLocal(parentQuat, out = glMatrix.quat.create()) {\r\n        glMatrix.quat.conjugate(invertQuat, parentQuat);\r\n        glMatrix.quat.mul(out, invertQuat, this);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_fromAxis = function (angle, axis) {\r\n    return this.quat_fromAxisDegrees(angle, axis);\r\n};\r\n\r\nArray.prototype.quat_fromAxisDegrees = function (angle, axis) {\r\n    glMatrix.quat.setAxisAngle(this, axis, glMatrix.glMatrix.toRadian(angle));\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_fromAxisRadians = function (angle, axis) {\r\n    glMatrix.quat.setAxisAngle(this, axis, angle);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_fromAxes = function () {\r\n    let mat3 = glMatrix.mat3.create();\r\n    return function quat_fromAxes(leftAxis, upAxis, forwardAxis) {\r\n        mat3.mat3_fromAxes(leftAxis, upAxis, forwardAxis);\r\n        return mat3.mat3_toQuat(this);\r\n    };\r\n}();\r\n\r\n// New Functions\r\n\r\nArray.prototype.quat_fromRadians = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function quat_fromRadians(radiansRotation) {\r\n        radiansRotation.vec3_toDegrees(vector);\r\n        return this.quat_fromDegrees(vector);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_fromDegrees = function (degreesRotation) {\r\n    glMatrix.quat.fromEuler(this, degreesRotation[0], degreesRotation[1], degreesRotation[2]);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_toRadians = function () {\r\n    let mat3 = glMatrix.mat3.create();\r\n    return function quat_toRadians(out = glMatrix.vec3.create()) {\r\n        glMatrix.mat3.fromQuat(mat3, this);\r\n\r\n        //Rotation order is ZYX \r\n        out[1] = Math.asin(-this._pp_clamp(mat3[2], -1, 1));\r\n\r\n        if (Math.abs(mat3[2]) < (1 - this._pp_epsilon)) {\r\n            out[0] = Math.atan2(mat3[5], mat3[8]);\r\n            out[2] = Math.atan2(mat3[1], mat3[0]);\r\n        } else {\r\n            out[0] = 0;\r\n            out[2] = Math.atan2(-mat3[3], mat3[4]);\r\n        }\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_toDegrees = function (out = glMatrix.vec3.create()) {\r\n    this.quat_toRadians(out);\r\n    out.vec3_toDegrees(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_isNormalized = function (epsilon = this._pp_normalizedEpsilon) {\r\n    return Math.abs(glMatrix.quat.length(this) - 1) < epsilon;\r\n};\r\n\r\nArray.prototype.quat_addRotation = function (rotation, out) {\r\n    return this.quat_addRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_addRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function quat_addRotationDegrees(rotation, out) {\r\n        rotation.vec3_degreesToQuat(quat);\r\n        return this.quat_addRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_addRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function quat_addRotationRadians(rotation, out) {\r\n        rotation.vec3_radiansToQuat(quat);\r\n        return this.quat_addRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_addRotationQuat = function (rotation, out = glMatrix.quat.create()) {\r\n    rotation.quat_mul(this, out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_subRotation = function (rotation, out) {\r\n    return this.quat_subRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_subRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function quat_subRotationDegrees(rotation, out) {\r\n        rotation.vec3_degreesToQuat(quat);\r\n        return this.quat_subRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_subRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function quat_subRotationRadians(rotation, out) {\r\n        rotation.vec3_radiansToQuat(quat);\r\n        return this.quat_subRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_subRotationQuat = function () {\r\n    let inverse = glMatrix.quat.create();\r\n    return function quat_subRotationQuat(rotation, out = glMatrix.quat.create()) {\r\n        rotation.quat_invert(inverse);\r\n        this.quat_mul(inverse, out);\r\n        if (this.quat_isNormalized() && rotation.quat_isNormalized()) {\r\n            out.quat_normalize(out); // it seems that for some small error the quat will not be exactly normalized\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_rotationTo = function (rotation, out) {\r\n    return this.quat_rotationToDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_rotationToDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function quat_rotationToDegrees(rotation, out) {\r\n        rotation.vec3_degreesToQuat(rotationQuat);\r\n        return this.quat_rotationToQuat(rotationQuat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_rotationToRadians = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function quat_rotationToRadians(rotation, out) {\r\n        rotation.vec3_radiansToQuat(rotationQuat);\r\n        return this.quat_rotationToQuat(rotationQuat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_rotationToQuat = function (rotation, out) {\r\n    return rotation.quat_subRotationQuat(this, out);\r\n};\r\n\r\nArray.prototype.quat_getTwist = function () {\r\n    let rotationAxis = glMatrix.vec3.create();\r\n    let projection = glMatrix.vec3.create();\r\n    let rotationAlongAxis = glMatrix.quat.create();\r\n    return function quat_getTwist(axis, out = glMatrix.quat.create()) {\r\n        rotationAxis[0] = this[0];\r\n        rotationAxis[1] = this[1];\r\n        rotationAxis[2] = this[2];\r\n\r\n        let dotProd = glMatrix.vec3.dot(axis, rotationAxis);\r\n        axis.vec3_scale(dotProd, projection);\r\n        rotationAlongAxis[0] = projection[0];\r\n        rotationAlongAxis[1] = projection[1];\r\n        rotationAlongAxis[2] = projection[2];\r\n        rotationAlongAxis[3] = this[3];\r\n        rotationAlongAxis.quat_normalize(rotationAlongAxis);\r\n        if (dotProd < 0) {\r\n            rotationAlongAxis[0] = -rotationAlongAxis[0];\r\n            rotationAlongAxis[1] = -rotationAlongAxis[1];\r\n            rotationAlongAxis[2] = -rotationAlongAxis[2];\r\n            rotationAlongAxis[3] = -rotationAlongAxis[3];\r\n        }\r\n\r\n        return out.quat_copy(rotationAlongAxis);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getSwing = function () {\r\n    let twist = glMatrix.quat.create();\r\n    return function quat_getSwing(axis, out = glMatrix.quat.create()) {\r\n        this.quat_getTwist(axis, twist);\r\n        this.quat_getSwingFromTwist(twist, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getSwingFromTwist = function (twist, out = glMatrix.quat.create()) {\r\n    return this.quat_subRotationQuat(twist, out);\r\n};\r\n\r\nArray.prototype.quat_getTwistFromSwing = function () {\r\n    let inverse = glMatrix.quat.create();\r\n    return function quat_getTwistFromSwing(swing, out = glMatrix.quat.create()) {\r\n        swing.quat_invert(inverse);\r\n        this.quat_addRotationQuat(inverse, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_fromTwistSwing = function (twist, swing) {\r\n    return twist.quat_addRotationQuat(swing, this);\r\n};\r\n\r\nArray.prototype.quat_toMatrix = function (out = glMatrix.mat3.create()) {\r\n    glMatrix.mat3.fromQuat(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_rotate = function (rotation, out) {\r\n    return this.quat_rotateDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_rotateDegrees = function (rotation, out) {\r\n    return this.quat_addRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_rotateRadians = function (rotation, out) {\r\n    return this.quat_addRotationRadians(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_rotateQuat = function (rotation, out) {\r\n    return this.quat_addRotationQuat(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_rotateAxis = function (angle, axis, out) {\r\n    return this.quat_rotateAxisDegrees(angle, axis, out);\r\n};\r\n\r\nArray.prototype.quat_rotateAxisDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function quat_rotateAxisDegrees(angle, axis, out) {\r\n        rotationQuat.quat_fromAxisDegrees(angle, axis);\r\n        return this.quat_rotateQuat(rotationQuat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_rotateAxisRadians = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function quat_rotateAxisRadians(angle, axis, out) {\r\n        rotationQuat.quat_fromAxisRadians(angle, axis);\r\n        return this.quat_rotateQuat(rotationQuat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_lerp = function (to, interpolationValue, out = glMatrix.quat.create()) {\r\n    if (interpolationValue <= 0) {\r\n        out.quat_copy(this);\r\n        return out;\r\n    } else if (interpolationValue >= 1) {\r\n        out.quat_copy(to);\r\n        return out;\r\n    }\r\n\r\n    glMatrix.quat.lerp(out, this, to, interpolationValue);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_interpolate = function (to, interpolationValue, easingFunction = PP.EasingFunction.linear, out = glMatrix.quat.create()) {\r\n    let lerpValue = easingFunction(interpolationValue);\r\n    return this.quat_lerp(to, lerpValue, out);\r\n};\r\n\r\nArray.prototype.quat_slerp = function (to, interpolationValue, out = glMatrix.quat.create()) {\r\n    if (interpolationValue <= 0) {\r\n        out.quat_copy(this);\r\n        return out;\r\n    } else if (interpolationValue >= 1) {\r\n        out.quat_copy(to);\r\n        return out;\r\n    }\r\n\r\n    glMatrix.quat.slerp(out, this, to, interpolationValue);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_sinterpolate = function (to, interpolationValue, easingFunction = PP.EasingFunction.linear, out = glMatrix.quat.create()) {\r\n    let lerpValue = easingFunction(interpolationValue);\r\n    return this.quat_slerp(to, lerpValue, out);\r\n};\r\n\r\n//QUAT 2\r\n\r\n// glMatrix Bridge\r\n\r\nArray.prototype.quat2_normalize = function (out = glMatrix.quat2.create()) {\r\n    glMatrix.quat2.normalize(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_copy = function (quat2) {\r\n    glMatrix.quat2.copy(this, quat2);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat2_identity = function () {\r\n    glMatrix.quat2.identity(this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat2_getPosition = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.quat2.getTranslation(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_getRotation = function (out) {\r\n    return this.quat2_getRotationDegrees(out);\r\n};\r\nArray.prototype.quat2_getRotationDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function quat2_getRotationDegrees(out = glMatrix.vec3.create()) {\r\n        this.quat2_getRotationQuat(rotationQuat).quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_getRotationRadians = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function quat2_getRotationRadians(out = glMatrix.vec3.create()) {\r\n        this.quat2_getRotationQuat(rotationQuat).quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_getRotationQuat = function (out = glMatrix.quat.create()) {\r\n    glMatrix.quat.copy(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_setPosition = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function quat2_setPosition(position) {\r\n        this.quat2_getRotationQuat(rotationQuat);\r\n        this.quat2_setPositionRotationQuat(position, rotationQuat);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_setRotation = function (rotation) {\r\n    return this.quat2_setRotationDegrees(rotation);\r\n};\r\n\r\nArray.prototype.quat2_setRotationDegrees = function () {\r\n    let position = glMatrix.vec3.create();\r\n    return function quat2_setRotationDegrees(rotation) {\r\n        this.quat2_getPosition(position);\r\n        this.quat2_setPositionRotationDegrees(position, rotation);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_setRotationRadians = function () {\r\n    let position = glMatrix.vec3.create();\r\n    return function quat2_setRotationRadians(rotation) {\r\n        this.quat2_getPosition(position);\r\n        this.quat2_setPositionRotationRadians(position, rotation);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_setRotationQuat = function () {\r\n    let position = glMatrix.vec3.create();\r\n    return function quat2_setRotationQuat(rotation) {\r\n        this.quat2_getPosition(position);\r\n        this.quat2_setPositionRotationQuat(position, rotation);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_setPositionRotation = function (position, rotation) {\r\n    return this.quat2_setPositionRotationDegrees(position, rotation);\r\n};\r\n\r\nArray.prototype.quat2_setPositionRotationDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function quat2_setPositionRotationDegrees(position, rotation) {\r\n        rotation.vec3_degreesToQuat(rotationQuat);\r\n        glMatrix.quat2.fromRotationTranslation(this, rotationQuat, position);\r\n\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_setPositionRotationRadians = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function quat2_setPositionRotationRadians(position, rotation) {\r\n        rotation.vec3_radiansToQuat(rotationQuat);\r\n        glMatrix.quat2.fromRotationTranslation(this, rotationQuat, position);\r\n\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_setPositionRotationQuat = function (position, rotation) {\r\n    glMatrix.quat2.fromRotationTranslation(this, rotation, position);\r\n    return this;\r\n};\r\n\r\n// New Functions\r\n\r\n\r\nArray.prototype.quat2_isNormalized = function (epsilon = this._pp_normalizedEpsilon) {\r\n    return Math.abs(glMatrix.quat2.length(this) - 1) < epsilon;\r\n};\r\n\r\nArray.prototype.quat2_getAxes = function (out = [glMatrix.vec3.create(), glMatrix.vec3.create(), glMatrix.vec3.create()]) {\r\n    this.quat2_getLeft(out[0]);\r\n    this.quat2_getUp(out[1]);\r\n    this.quat2_getForward(out[2]);\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_getForward = function () {\r\n    let rotationMatrix = glMatrix.mat3.create();\r\n    return function quat2_getForward(out = glMatrix.vec3.create()) {\r\n        glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n        glMatrix.vec3.set(out, rotationMatrix[6], rotationMatrix[7], rotationMatrix[8]);\r\n        glMatrix.vec3.normalize(out, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_getBackward = function (out) {\r\n    out = this.quat2_getForward(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_getLeft = function () {\r\n    let rotationMatrix = glMatrix.mat3.create();\r\n    return function quat2_getLeft(out = glMatrix.vec3.create()) {\r\n        glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n        glMatrix.vec3.set(out, rotationMatrix[0], rotationMatrix[1], rotationMatrix[2]);\r\n        glMatrix.vec3.normalize(out, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_getRight = function (out) {\r\n    out = this.quat2_getLeft(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_getUp = function () {\r\n    let rotationMatrix = glMatrix.mat3.create();\r\n    return function quat2_getUp(out = glMatrix.vec3.create()) {\r\n        glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n        glMatrix.vec3.set(out, rotationMatrix[3], rotationMatrix[4], rotationMatrix[5]);\r\n        glMatrix.vec3.normalize(out, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_getDown = function (out) {\r\n    out = this.quat2_getUp(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_toWorld = function (parentTransformQuat, out = glMatrix.quat2.create()) {\r\n    glMatrix.quat2.mul(out, parentTransformQuat, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_toLocal = function () {\r\n    let invertQuat = glMatrix.quat2.create();\r\n    return function quat2_toLocal(parentTransformQuat, out = glMatrix.quat2.create()) {\r\n        glMatrix.quat2.conjugate(invertQuat, parentTransformQuat);\r\n        glMatrix.quat2.mul(out, invertQuat, this);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_toMatrix = function (out = glMatrix.mat4.create()) {\r\n    glMatrix.mat4.fromQuat2(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_fromMatrix = function (transformMatrix) {\r\n    transformMatrix.mat4_toQuat(this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat2_lerp = function (to, interpolationValue, out = glMatrix.quat2.create()) {\r\n    if (interpolationValue <= 0) {\r\n        out.quat2_copy(this);\r\n        return out;\r\n    } else if (interpolationValue >= 1) {\r\n        out.quat2_copy(to);\r\n        return out;\r\n    }\r\n\r\n    glMatrix.quat2.lerp(out, this, to, interpolationValue);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_interpolate = function (to, interpolationValue, easingFunction = PP.EasingFunction.linear, out = glMatrix.quat2.create()) {\r\n    let lerpValue = easingFunction(interpolationValue);\r\n    return this.quat2_lerp(to, lerpValue, out);\r\n};\r\n\r\n//MATRIX 3\r\n\r\n// glMatrix Bridge\r\n\r\n// New Functions\r\n\r\nArray.prototype.mat3_toDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function mat3_toDegrees(out = glMatrix.vec3.create()) {\r\n        this.mat3_toQuat(quat);\r\n        quat.quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat3_toRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function mat3_toRadians(out = glMatrix.vec3.create()) {\r\n        this.mat3_toQuat(quat);\r\n        quat.quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat3_toQuat = function (out = glMatrix.quat.create()) {\r\n    glMatrix.quat.fromMat3(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat3_fromAxes = function (leftAxis, upAxis, forwardAxis) {\r\n    glMatrix.mat3.set(this,\r\n        leftAxis[0], leftAxis[1], leftAxis[2],\r\n        upAxis[0], upAxis[1], upAxis[2],\r\n        forwardAxis[0], forwardAxis[1], forwardAxis[2]);\r\n    return this;\r\n};\r\n\r\n//MATRIX 4\r\n\r\n// glMatrix Bridge\r\n\r\nArray.prototype.mat4_copy = function (mat4) {\r\n    glMatrix.mat4.copy(this, mat4);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_identity = function () {\r\n    glMatrix.mat4.identity(this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_invert = function (out = glMatrix.mat4.create()) {\r\n    glMatrix.mat4.invert(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_clone = function (out = glMatrix.mat4.create()) {\r\n    glMatrix.mat4.copy(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getPosition = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.mat4.getTranslation(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getRotation = function (out = glMatrix.vec3.create()) {\r\n    return this.mat4_getRotationDegrees(out);\r\n};\r\n\r\nArray.prototype.mat4_getRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function mat4_getRotationDegrees(out = glMatrix.vec3.create()) {\r\n        this.mat4_getRotationQuat(quat);\r\n        quat.quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_getRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function mat4_getRotationRadians(out = glMatrix.vec3.create()) {\r\n        this.mat4_getRotationQuat(quat);\r\n        quat.quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_getRotationQuat = function () {\r\n    let scale = glMatrix.vec3.create();\r\n    let transformMatrixNoScale = glMatrix.mat4.create();\r\n    let inverseScale = glMatrix.vec3.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function mat4_getRotationQuat(out = glMatrix.quat.create()) {\r\n        glMatrix.mat4.getScaling(scale, this);\r\n        glMatrix.vec3.divide(inverseScale, one, scale);\r\n        glMatrix.mat4.scale(transformMatrixNoScale, this, inverseScale);\r\n        glMatrix.mat4.getRotation(out, transformMatrixNoScale);\r\n        glMatrix.quat.normalize(out, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_getScale = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.mat4.getScaling(out, this);\r\n    return out;\r\n};\r\n\r\n// New Functions\r\n\r\nArray.prototype.mat4_setPosition = function (position) {\r\n    this[12] = position[0];\r\n    this[13] = position[1];\r\n    this[14] = position[2];\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setRotation = function (rotation) {\r\n    this.mat4_setRotationDegrees(rotation);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function mat4_setRotationDegrees(rotation) {\r\n        this.mat4_setRotationQuat(rotation.vec3_degreesToQuat(quat));\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setRotationRadians = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function mat4_setRotationRadians(rotation) {\r\n        this.mat4_setRotationDegrees(rotation.vec3_toDegrees(vector));\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setRotationQuat = function () {\r\n    let position = glMatrix.vec3.create();\r\n    let scale = glMatrix.vec3.create();\r\n    return function mat4_setRotationQuat(rotation) {\r\n        this.mat4_getPosition(position);\r\n        this.mat4_getScale(scale);\r\n        this.mat4_setPositionRotationQuatScale(position, rotation, scale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setScale = function () {\r\n    let tempScale = glMatrix.vec3.create();\r\n    return function mat4_setScale(scale) {\r\n        glMatrix.mat4.getScaling(tempScale, this);\r\n        glMatrix.vec3.divide(tempScale, scale, tempScale);\r\n        glMatrix.mat4.scale(this, this, tempScale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationScale = function (position, rotation, scale) {\r\n    this.mat4_setPositionRotationDegreesScale(position, rotation, scale);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setPositionRotationDegreesScale = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function mat4_setPositionRotationDegreesScale(position, rotation, scale) {\r\n        this.mat4_setPositionRotationQuatScale(position, rotation.vec3_degreesToQuat(quat), scale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationRadiansScale = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function mat4_setPositionRotationRadiansScale(position, rotation, scale) {\r\n        this.mat4_setPositionRotationDegreesScale(position, rotation.vec3_toDegrees(vector), scale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationQuatScale = function (position, rotation, scale) {\r\n    glMatrix.mat4.fromRotationTranslationScale(this, rotation, position, scale);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setPositionRotation = function (position, rotation) {\r\n    this.mat4_setPositionRotationDegrees(position, rotation);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setPositionRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function mat4_setPositionRotationDegrees(position, rotation) {\r\n        this.mat4_setPositionRotationQuat(position, rotation.vec3_degreesToQuat(quat));\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationRadians = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function mat4_setPositionRotationRadians(position, rotation) {\r\n        this.mat4_setPositionRotationDegrees(position, rotation.vec3_toDegrees(vector));\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationQuat = function (position, rotation) {\r\n    glMatrix.mat4.fromRotationTranslation(this, rotation, position);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_getAxes = function (out = [glMatrix.vec3.create(), glMatrix.vec3.create(), glMatrix.vec3.create()]) {\r\n    this.mat4_getLeft(out[0]);\r\n    this.mat4_getUp(out[1]);\r\n    this.mat4_getForward(out[2]);\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getForward = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.set(out, this[8], this[9], this[10]);\r\n    glMatrix.vec3.normalize(out, out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getBackward = function (out) {\r\n    out = this.mat4_getForward(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getLeft = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.set(out, this[0], this[1], this[2]);\r\n    glMatrix.vec3.normalize(out, out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getRight = function (out) {\r\n    out = this.mat4_getLeft(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getUp = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.set(out, this[4], this[5], this[6]);\r\n    glMatrix.vec3.normalize(out, out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getDown = function (out) {\r\n    out = this.mat4_getUp(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_toWorld = function () {\r\n    let convertTransform = glMatrix.mat4.create();\r\n    let position = glMatrix.vec3.create();\r\n    let scale = glMatrix.vec3.create();\r\n    let inverseScale = glMatrix.vec3.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function mat4_toWorld(parentTransformMatrix, out = glMatrix.mat4.create()) {\r\n        if (parentTransformMatrix.mat4_hasUniformScale()) {\r\n            glMatrix.mat4.mul(out, parentTransformMatrix, this);\r\n        } else {\r\n            glMatrix.vec3.set(position, this[12], this[13], this[14]);\r\n            position.vec3_convertPositionToWorldMatrix(parentTransformMatrix, position);\r\n\r\n            glMatrix.mat4.getScaling(scale, parentTransformMatrix);\r\n            glMatrix.vec3.divide(inverseScale, one, scale);\r\n            glMatrix.mat4.scale(convertTransform, parentTransformMatrix, inverseScale);\r\n\r\n            glMatrix.mat4.mul(out, convertTransform, this);\r\n            glMatrix.mat4.scale(out, out, scale);\r\n\r\n            out[12] = position[0];\r\n            out[13] = position[1];\r\n            out[14] = position[2];\r\n            out[15] = 1;\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_toLocal = function () {\r\n    let convertTransform = glMatrix.mat4.create();\r\n    let position = glMatrix.vec3.create();\r\n    let scale = glMatrix.vec3.create();\r\n    let inverseScale = glMatrix.vec3.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function mat4_toLocal(parentTransformMatrix, out = glMatrix.mat4.create()) {\r\n        if (parentTransformMatrix.mat4_hasUniformScale()) {\r\n            glMatrix.mat4.invert(convertTransform, parentTransformMatrix);\r\n            glMatrix.mat4.mul(out, convertTransform, this);\r\n        } else {\r\n            glMatrix.vec3.set(position, this[12], this[13], this[14]);\r\n            position.vec3_convertPositionToLocalMatrix(parentTransformMatrix, position);\r\n\r\n            glMatrix.mat4.getScaling(scale, parentTransformMatrix);\r\n            glMatrix.vec3.divide(inverseScale, one, scale);\r\n            glMatrix.mat4.scale(convertTransform, parentTransformMatrix, inverseScale);\r\n\r\n            glMatrix.mat4.invert(convertTransform, convertTransform);\r\n            glMatrix.mat4.mul(out, convertTransform, this);\r\n            glMatrix.mat4.scale(out, out, inverseScale);\r\n\r\n            out[12] = position[0];\r\n            out[13] = position[1];\r\n            out[14] = position[2];\r\n            out[15] = 1;\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_hasUniformScale = function () {\r\n    let scale = glMatrix.vec3.create();\r\n    return function mat4_hasUniformScale() {\r\n        glMatrix.mat4.getScaling(scale, this);\r\n        return Math.abs(scale[0] - scale[1]) < this._pp_epsilon && Math.abs(scale[1] - scale[2]) < this._pp_epsilon && Math.abs(scale[0] - scale[2]) < this._pp_epsilon;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_toQuat = function () {\r\n    let position = glMatrix.vec3.create();\r\n    let rotation = glMatrix.quat.create();\r\n    return function mat4_toQuat(out = glMatrix.quat2.create()) {\r\n        glMatrix.mat4.getTranslation(position, this);\r\n        this.mat4_getRotationQuat(rotation);\r\n        glMatrix.quat2.fromRotationTranslation(out, rotation, position);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_fromQuat = function (transformQuat) {\r\n    transformQuat.quat2_toMatrix(this);\r\n    return this;\r\n};\r\n\r\n//CREATION\r\n\r\nPP.vec2_create = function (x = null, y = null) {\r\n    let out = glMatrix.vec2.create();\r\n    if (x != null) {\r\n        out.vec2_set(x, y);\r\n    }\r\n    return out;\r\n};\r\n\r\nPP.vec3_create = function (x = null, y = null, z = null) {\r\n    let out = glMatrix.vec3.create();\r\n    if (x != null) {\r\n        out.vec3_set(x, y, z);\r\n    }\r\n    return out;\r\n};\r\n\r\nPP.vec4_create = function (x = null, y = null, z = null, w = null) {\r\n    let out = glMatrix.vec4.create();\r\n    if (x != null) {\r\n        out.vec4_set(x, y, z, w);\r\n    }\r\n    return out;\r\n};\r\n\r\nPP.quat_create = function (x = null, y = null, z = null, w = null) {\r\n    let out = glMatrix.quat.create();\r\n    if (x != null) {\r\n        out.quat_set(x, y, z, w);\r\n    }\r\n    return out;\r\n};\r\n\r\nPP.quat2_create = function () {\r\n    let out = glMatrix.quat2.create();\r\n    return out;\r\n};\r\n\r\nPP.quat2_fromPositionRotation = function (position, rotation) {\r\n    return quat2_fromPositionRotationDegrees(position, rotation);\r\n};\r\n\r\nPP.quat2_fromPositionRotationDegrees = function (position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.quat2_setPositionRotationDegrees(position, rotation);\r\n    return out;\r\n};\r\n\r\nPP.quat2_fromPositionRotationRadians = function (position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.quat2_setPositionRotationRadians(position, rotation);\r\n    return out;\r\n};\r\n\r\nPP.quat2_fromPositionRotationQuat = function (position, rotation) {\r\n    let out = glMatrix.quat2.create();\r\n    out.quat2_setPositionRotationQuat(position, rotation);\r\n    return out;\r\n};\r\n\r\nPP.mat4_create = function () {\r\n    let out = glMatrix.mat4.create();\r\n    return out;\r\n};\r\n\r\nPP.mat4_fromPositionRotation = function (position, rotation) {\r\n    return mat4_fromPositionRotationDegrees(position, rotation);\r\n};\r\n\r\nPP.mat4_fromPositionRotationDegrees = function (position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationDegrees(position, rotation);\r\n    return out;\r\n};\r\n\r\nPP.mat4_fromPositionRotationRadians = function (position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationRadians(position, rotation);\r\n    return out;\r\n};\r\n\r\nPP.mat4_fromPositionRotationQuat = function (position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationQuat(position, rotation);\r\n    return out;\r\n};\r\n\r\nPP.mat4_fromPositionRotationScale = function (position, rotation, scale) {\r\n    return mat4_fromPositionRotationDegreesScale(position, rotation, scale);\r\n};\r\n\r\nPP.mat4_fromPositionRotationDegreesScale = function (position, rotation, scale) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationDegreesScale(position, rotation, scale);\r\n    return out;\r\n};\r\n\r\nPP.mat4_fromPositionRotationRadiansScale = function (position, rotation, scale) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationRadiansScale(position, rotation, scale);\r\n    return out;\r\n};\r\n\r\nPP.mat4_fromPositionRotationQuatScale = function (position, rotation, scale) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationQuatScale(position, rotation, scale);\r\n    return out;\r\n};\r\n\r\n//UTILS\r\n\r\nArray.prototype._pp_epsilon = 0.000001;\r\nArray.prototype._pp_degreesEpsilon = 0.00001;\r\nArray.prototype._pp_normalizedEpsilon = 0.0000001;\r\n\r\nArray.prototype._pp_clamp = function (value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n};\r\n\r\nArray.prototype._vec_buildConsoleMessage = function (decimalPlaces) {\r\n    let message = \"[\";\r\n\r\n    for (let i = 0; i < this.length; i++) {\r\n        if (i != 0) {\r\n            message = message.concat(\", \");\r\n        }\r\n\r\n        if (decimalPlaces != null) {\r\n            message = message.concat(this[i].toFixed(decimalPlaces));\r\n        } else {\r\n            message = message.concat(this[i].toString());\r\n        }\r\n    }\r\n\r\n    message = message.concat(\"]\");\r\n    return message;\r\n};\r\n\r\nArray.prototype._vec_prepareOut = function (out) {\r\n    if (out == null) {\r\n        out = this.pp_clone();\r\n    } else if (out != this) {\r\n        out.pp_copy(this);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\n\r\nArray.prototype._quat_setAxes = function () {\r\n    let fixedAxes = [glMatrix.vec3.create(), glMatrix.vec3.create(), glMatrix.vec3.create()];\r\n\r\n    let fixedAxesFixSignMap = [\r\n        [1, -1, 1],\r\n        [1, 1, -1],\r\n        [-1, 1, -1]\r\n    ];\r\n\r\n    let fixedLeft = glMatrix.vec3.create();\r\n    let fixedUp = glMatrix.vec3.create();\r\n    let fixedForward = glMatrix.vec3.create();\r\n\r\n    let currentAxis = glMatrix.vec3.create();\r\n\r\n    let rotationAxis = glMatrix.vec3.create();\r\n    let rotationMat = glMatrix.mat3.create();\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function _quat_setAxes(axes, priority) {\r\n        let firstAxis = axes[priority[0]];\r\n        let secondAxis = axes[priority[1]];\r\n        let thirdAxis = axes[priority[2]];\r\n\r\n        if (firstAxis == null || firstAxis.vec3_length() <= this._pp_epsilon) {\r\n            return;\r\n        }\r\n\r\n        let secondAxisValid = false;\r\n        if (secondAxis != null) {\r\n            let angleBetween = glMatrix.vec3.angle(firstAxis, secondAxis);\r\n            if (angleBetween > this._pp_epsilon) {\r\n                secondAxisValid = true;\r\n            }\r\n        }\r\n\r\n        let thirdAxisValid = false;\r\n        if (thirdAxis != null) {\r\n            let angleBetween = glMatrix.vec3.angle(firstAxis, thirdAxis);\r\n            if (angleBetween > this._pp_epsilon) {\r\n                thirdAxisValid = true;\r\n            }\r\n        }\r\n\r\n        if (secondAxisValid || thirdAxisValid) {\r\n\r\n            let crossAxis = null;\r\n            let secondAxisIndex = null;\r\n            let thirdAxisIndex = null;\r\n            if (secondAxisValid) {\r\n                crossAxis = secondAxis;\r\n                secondAxisIndex = 1;\r\n                thirdAxisIndex = 2;\r\n            } else {\r\n                crossAxis = thirdAxis;\r\n                secondAxisIndex = 2;\r\n                thirdAxisIndex = 1;\r\n            }\r\n\r\n            let fixSignMap = fixedAxesFixSignMap[priority[0]];\r\n\r\n            glMatrix.vec3.cross(fixedAxes[thirdAxisIndex], firstAxis, crossAxis);\r\n            glMatrix.vec3.scale(fixedAxes[thirdAxisIndex], fixedAxes[thirdAxisIndex], fixSignMap[priority[thirdAxisIndex]]);\r\n\r\n            glMatrix.vec3.cross(fixedAxes[secondAxisIndex], firstAxis, fixedAxes[thirdAxisIndex]);\r\n            glMatrix.vec3.scale(fixedAxes[secondAxisIndex], fixedAxes[secondAxisIndex], fixSignMap[priority[secondAxisIndex]]);\r\n\r\n            glMatrix.vec3.cross(fixedAxes[0], fixedAxes[1], fixedAxes[2]);\r\n            glMatrix.vec3.scale(fixedAxes[0], fixedAxes[0], fixSignMap[priority[0]]);\r\n\r\n            glMatrix.vec3.normalize(fixedLeft, fixedAxes[priority.pp_findIndexEqual(0)]);\r\n            glMatrix.vec3.normalize(fixedUp, fixedAxes[priority.pp_findIndexEqual(1)]);\r\n            glMatrix.vec3.normalize(fixedForward, fixedAxes[priority.pp_findIndexEqual(2)]);\r\n\r\n            glMatrix.mat3.set(rotationMat,\r\n                fixedLeft[0], fixedLeft[1], fixedLeft[2],\r\n                fixedUp[0], fixedUp[1], fixedUp[2],\r\n                fixedForward[0], fixedForward[1], fixedForward[2]\r\n            );\r\n\r\n            glMatrix.quat.fromMat3(rotationQuat, rotationMat);\r\n            glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n\r\n            this.quat_copy(rotationQuat);\r\n        } else {\r\n            if (priority[0] == 0) {\r\n                this.quat_getLeft(currentAxis);\r\n            } else if (priority[0] == 1) {\r\n                this.quat_getUp(currentAxis);\r\n            } else {\r\n                this.quat_getForward(currentAxis);\r\n            }\r\n\r\n            let angle = glMatrix.vec3.angle(firstAxis, currentAxis);\r\n            if (angle != 0) {\r\n                glMatrix.vec3.cross(rotationAxis, currentAxis, firstAxis);\r\n                glMatrix.vec3.normalize(rotationAxis, rotationAxis);\r\n                glMatrix.quat.setAxisAngle(rotationQuat, rotationAxis, angle);\r\n\r\n                this.quat_rotateQuat(rotationQuat, this);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n}();\r\n\r\n\r\n\r\n\r\nfor (let key in Array.prototype) {\r\n    let prefixes = [\"pp_\", \"vec_\", \"vec2_\", \"vec3_\", \"vec4_\", \"quat_\", \"quat2_\", \"mat3_\", \"mat4_\", \"_pp_\", \"_vec_\", \"_quat_\",];\r\n\r\n    let found = false;\r\n    for (let prefix of prefixes) {\r\n        if (key.startsWith(prefix)) {\r\n            found = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (found) {\r\n        Object.defineProperty(Array.prototype, key, { enumerable: false });\r\n\r\n        Uint8ClampedArray.prototype[key] = Array.prototype[key];\r\n        Object.defineProperty(Uint8ClampedArray.prototype, key, { enumerable: false });\r\n\r\n        Uint8ClampedArray.prototype[key] = Array.prototype[key];\r\n        Object.defineProperty(Uint8ClampedArray.prototype, key, { enumerable: false });\r\n\r\n        Uint8Array.prototype[key] = Array.prototype[key];\r\n        Object.defineProperty(Uint8Array.prototype, key, { enumerable: false });\r\n\r\n        Uint16Array.prototype[key] = Array.prototype[key];\r\n        Object.defineProperty(Uint16Array.prototype, key, { enumerable: false });\r\n\r\n        Uint32Array.prototype[key] = Array.prototype[key];\r\n        Object.defineProperty(Uint32Array.prototype, key, { enumerable: false });\r\n\r\n        Int8Array.prototype[key] = Array.prototype[key];\r\n        Object.defineProperty(Int8Array.prototype, key, { enumerable: false });\r\n\r\n        Int16Array.prototype[key] = Array.prototype[key];\r\n        Object.defineProperty(Int16Array.prototype, key, { enumerable: false });\r\n\r\n        Int32Array.prototype[key] = Array.prototype[key];\r\n        Object.defineProperty(Int32Array.prototype, key, { enumerable: false });\r\n\r\n        Float32Array.prototype[key] = Array.prototype[key];\r\n        Object.defineProperty(Float32Array.prototype, key, { enumerable: false });\r\n\r\n        Float64Array.prototype[key] = Array.prototype[key];\r\n        Object.defineProperty(Float64Array.prototype, key, { enumerable: false });\r\n    }\r\n}", "/*\r\n    How to use\r\n\r\n    By default the functions work on World space, rotations are in Degrees and transforms are Matrix (and not Quat 2) \r\n    For functions that work with rotations, Matrix means Matrix 3 and Quat means Quat\r\n    For functions that work with transforms, Matrix means Matrix 4 and Quat means Quat 2\r\n\r\n    You can add a suffix like World/Local/Object at the end of some functions to specify the space, example:\r\n        - pp_getPositionLocal to get the position in local space (parent space)\r\n        - pp_translateObject to translate in object space\r\n\r\n    For rotations u can add a suffix like Degrees/Radians/Quat/Matrix to use a specific version, example:\r\n        - pp_getRotationDegrees\r\n        - pp_setRotationLocalMatrix\r\n        - pp_rotateWorldQuat\r\n        \r\n    For transform u can add a suffix like Quat/Matrix to use a specific version, example:\r\n        - pp_getTransformQuat\r\n        - pp_setTransformWorldMatrix\r\n        \r\n    Some functions let you specify if u want them to work on the Hierarchy/Descendants/Children/Self where:\r\n        - Self: the current object only\r\n        - Children: direct children of the object\r\n        - Descendants: all the children of the object, including child of child and so on \r\n        - Hierarchy: Descendants plus the current object\r\n    Examples:\r\n        - pp_getComponent\r\n        - pp_getComponentHierarchy\r\n        - pp_getComponentsAmountMapDescendants\r\n        - pp_setActiveChildren\r\n        - pp_setActiveSelf\r\n    By default the functions work on the Hierarchy\r\n    On some of the functions where u can specify Hierarchy/Descendants u can also specify \r\n    if the algorithm should explore by Breadth/Depth, example:\r\n        - pp_getComponentHierarchyBreadth\r\n        - pp_setActiveDescendantsDepth\r\n    By default the functions explore by Breadth\r\n\r\n    In static functions (accessible directly through WL.Object) the suffix Objects means it will work on a given object list, example:\r\n        - pp_getComponentsObjects\r\n        - pp_getObjectByNameObjects\r\n\r\n    The functions leave u the choice of forwarding an out parameter or just get the return value, example:\r\n        - let position = this.object.pp_getPosition()\r\n        - this.object.pp_getPosition(position)\r\n        - the out parameter is always the last one\r\n\r\n    List of functions:\r\n        Notes:\r\n            - The suffixes (like World or Radians) are omitted \r\n\r\n        - pp_getPosition    / pp_setPosition    / pp_resetPosition\r\n        - pp_getRotation    / pp_setRotation    / pp_resetRotation\r\n        - pp_getScale       / pp_setScale       (u can specify a single number instead of a vector to uniform scale easily) / pp_resetScale \r\n        - pp_getTransform   / pp_setTransform   / pp_resetTransform\r\n\r\n        - pp_getAxes        / pp_setAxes\r\n        - pp_getLeft        / pp_getRight       / pp_setLeft        / pp_setRight\r\n        - pp_getUp          / pp_getDown        / pp_setUp          / pp_setDown\r\n        - pp_getForward     / pp_getBackward    / pp_setForward     / pp_setBackward\r\n\r\n        - pp_translate      / pp_translateAxis\r\n        - pp_rotate         / pp_rotateAxis     / pp_rotateAround    / pp_rotateAroundAxis\r\n        - pp_scaleObject    (for now scale only have this variant) (u can specify a single number instead of a vector to uniform scale easily)\r\n\r\n        - pp_lookAt         / pp_lookTo (u can avoid to specify up and the function will pickup the object up by default)\r\n\r\n        - pp_getParent      / pp_setParent (let u specify if u want to keep the transform or not)\r\n\r\n        - pp_convertPositionObjectToWorld (you can use all the combinations between Object/Local/World)\r\n        - pp_convertDirectionObjectToWorld (you can use all the combinations between Object/Local/World)\r\n        - pp_convertTransformObjectToWorld (you can use all the combinations between Object/Local/World) (u also have Quat and Matrix version)\r\n\r\n        - pp_hasUniformScale\r\n\r\n        - pp_addComponent\r\n        - pp_getComponent   / pp_getComponentHierarchy  / pp_getComponentDescendants  / pp_getComponentChildren / pp_getComponentSelf\r\n        - pp_getComponents  / pp_getComponentsHierarchy / pp_getComponentsDescendants / pp_getComponentsChildren / pp_getComponentsSelf\r\n\r\n        - pp_setActive  / pp_setActiveHierarchy / pp_setActiveDescendants / pp_setActiveChildren / pp_setActiveSelf\r\n\r\n        - pp_clone      / pp_isCloneable\r\n        \r\n        - pp_toString   / pp_toStringCompact / pp_toStringExtended\r\n        \r\n        - pp_getObjectByName  / pp_getObjectByNameHierarchy / pp_getObjectByNameDescendants / pp_getObjectByNameChildren\r\n        - pp_getObjectsByName  / pp_getObjectsByNameHierarchy / pp_getObjectsByNameDescendants / pp_getObjectsByNameChildren\r\n\r\n        - pp_getHierarchy / pp_getHierarchyBreadth / pp_getHierarchyDepth \r\n        - pp_getDescendants / pp_getDescendantsBreadth / pp_getDescendantsDepth \r\n        - pp_getChildren\r\n        - pp_getSelf\r\n\r\n        - pp_addObject\r\n        - pp_getName    / pp_setName\r\n        - pp_getID\r\n        - pp_reserveObjects / pp_reserveObjectsHierarchy / pp_reserveObjectsDescendants / pp_reserveObjectsChildren / pp_reserveObjectsSelf\r\n        - pp_getComponentsAmountMap / pp_getComponentsAmountMapHierarchy / pp_getComponentsAmountMapDescendants / pp_getComponentsAmountMapChildren / pp_getComponentsAmountMapSelf\r\n        - pp_markDirty\r\n        - pp_equals\r\n        - pp_destroy\r\n\r\n        STATIC FUNCTIONS:\r\n        - pp_getComponentObjects\r\n        - pp_getComponentsObjects\r\n        - pp_setActiveObjects\r\n        - pp_getObjectByNameObjects\r\n        - pp_getObjectsByNameObjects\r\n*/\r\n\r\nimport * as glMatrix from 'gl-matrix';\r\n\r\nif (WL && WL.Object) {\r\n\r\n    //GETTER\r\n\r\n    //Position\r\n\r\n    WL.Object.prototype.pp_getPosition = function (position) {\r\n        return this.pp_getPositionWorld(position);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getPositionWorld = function (position = glMatrix.vec3.create()) {\r\n        this.getTranslationWorld(position);\r\n        return position;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getPositionLocal = function (position = glMatrix.vec3.create()) {\r\n        this.getTranslationLocal(position);\r\n        return position;\r\n    };\r\n\r\n    //Rotation\r\n\r\n    WL.Object.prototype.pp_getRotation = function (rotation) {\r\n        return this.pp_getRotationWorld(rotation);\r\n    };\r\n    WL.Object.prototype.pp_getRotationDegrees = function (rotation) {\r\n        return this.pp_getRotationWorldDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRotationRadians = function (rotation) {\r\n        return this.pp_getRotationWorldRadians(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRotationMatrix = function (rotation) {\r\n        return this.pp_getRotationWorldMatrix(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRotationQuat = function (rotation) {\r\n        return this.pp_getRotationWorldQuat(rotation);\r\n    };\r\n\r\n    //Rotation World\r\n\r\n    WL.Object.prototype.pp_getRotationWorld = function (rotation) {\r\n        return this.pp_getRotationWorldDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRotationWorldDegrees = function (rotation) {\r\n        rotation = this.pp_getRotationWorldRadians(rotation);\r\n        rotation.forEach(function (value, index, array) {\r\n            array[index] = this._pp_toDegrees(value);\r\n        }.bind(this));\r\n        return rotation;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRotationWorldRadians = function () {\r\n        let quat = glMatrix.quat.create();\r\n        return function pp_getRotationWorldRadians(rotation = glMatrix.vec3.create()) {\r\n            this.pp_getRotationWorldQuat(quat);\r\n            this._pp_quaternionToRadians(quat, rotation);\r\n            return rotation;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getRotationWorldMatrix = function () {\r\n        let quat = glMatrix.quat.create();\r\n        return function pp_getRotationWorldMatrix(rotation = glMatrix.mat3.create()) {\r\n            this.pp_getRotationWorldQuat(quat);\r\n            glMatrix.mat3.fromQuat(rotation, quat);\r\n            return rotation;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getRotationWorldQuat = function (rotation = glMatrix.quat.create()) {\r\n        glMatrix.quat.copy(rotation, this.rotationWorld);\r\n        return rotation;\r\n    };\r\n\r\n    //Rotation Local\r\n\r\n    WL.Object.prototype.pp_getRotationLocal = function (rotation) {\r\n        return this.pp_getRotationLocalDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRotationLocalDegrees = function (rotation) {\r\n        rotation = this.pp_getRotationLocalRadians(rotation);\r\n        rotation.forEach(function (value, index, array) {\r\n            array[index] = this._pp_toDegrees(value);\r\n        }.bind(this));\r\n        return rotation;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRotationLocalRadians = function () {\r\n        let quat = glMatrix.quat.create();\r\n        return function pp_getRotationLocalRadians(rotation = glMatrix.vec3.create()) {\r\n            this.pp_getRotationLocalQuat(quat);\r\n            this._pp_quaternionToRadians(quat, rotation);\r\n            return rotation;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getRotationLocalMatrix = function () {\r\n        let quat = glMatrix.quat.create();\r\n        return function pp_getRotationLocalMatrix(rotation = glMatrix.mat3.create()) {\r\n            this.pp_getRotationLocalQuat(quat);\r\n            glMatrix.mat3.fromQuat(rotation, quat);\r\n            return rotation;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getRotationLocalQuat = function (rotation = glMatrix.quat.create()) {\r\n        glMatrix.quat.copy(rotation, this.rotationLocal);\r\n        return rotation;\r\n    };\r\n\r\n    //Scale\r\n\r\n    WL.Object.prototype.pp_getScale = function (scale) {\r\n        return this.pp_getScaleWorld(scale);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getScaleWorld = function (scale = glMatrix.vec3.create()) {\r\n        glMatrix.vec3.copy(scale, this.scalingWorld);\r\n        return scale;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getScaleLocal = function (scale = glMatrix.vec3.create()) {\r\n        glMatrix.vec3.copy(scale, this.scalingLocal);\r\n        return scale;\r\n    };\r\n\r\n    //Transform\r\n\r\n    WL.Object.prototype.pp_getTransform = function (transform) {\r\n        return this.pp_getTransformWorld(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getTransformMatrix = function (transform) {\r\n        return this.pp_getTransformWorldMatrix(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getTransformQuat = function (transform) {\r\n        return this.pp_getTransformWorldQuat(transform);\r\n    };\r\n\r\n    //Transform World\r\n\r\n    WL.Object.prototype.pp_getTransformWorld = function (transform) {\r\n        return this.pp_getTransformWorldMatrix(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getTransformWorldMatrix = function () {\r\n        let transformQuat = glMatrix.quat2.create();\r\n        let scale = glMatrix.vec3.create();\r\n        return function pp_getTransformWorldMatrix(transform = glMatrix.mat4.create()) {\r\n            this.pp_getTransformWorldQuat(transformQuat);\r\n            this.pp_getScaleWorld(scale);\r\n            glMatrix.mat4.fromQuat2(transform, transformQuat);\r\n            glMatrix.mat4.scale(transform, transform, scale);\r\n            return transform;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getTransformWorldQuat = function (transform = glMatrix.quat2.create()) {\r\n        glMatrix.quat2.copy(transform, this.transformWorld);\r\n        return transform;\r\n    };\r\n\r\n    //Transform Local\r\n\r\n    WL.Object.prototype.pp_getTransformLocal = function (transform) {\r\n        return this.pp_getTransformLocalMatrix(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getTransformLocalMatrix = function () {\r\n        let transformQuat = glMatrix.quat2.create();\r\n        let scale = glMatrix.vec3.create();\r\n        return function pp_getTransformLocal(transform = glMatrix.mat4.create()) {\r\n            this.pp_getTransformLocalQuat(transformQuat);\r\n            this.pp_getScaleLocal(scale);\r\n            glMatrix.mat4.fromQuat2(transform, transformQuat);\r\n            glMatrix.mat4.scale(transform, transform, scale);\r\n            return transform;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getTransformLocalQuat = function (transform = glMatrix.quat2.create()) {\r\n        glMatrix.quat2.copy(transform, this.transformLocal);\r\n        return transform;\r\n    };\r\n\r\n    //Axes\r\n\r\n    WL.Object.prototype.pp_getAxes = function (axes) {\r\n        return this.pp_getAxesWorld(axes);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getAxesWorld = function (axes = [glMatrix.vec3.create(), glMatrix.vec3.create(), glMatrix.vec3.create()]) {\r\n        this.pp_getLeftWorld(axes[0]);\r\n        this.pp_getUpWorld(axes[1]);\r\n        this.pp_getForwardWorld(axes[2]);\r\n        return axes;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getAxesLocal = function (axes = [glMatrix.vec3.create(), glMatrix.vec3.create(), glMatrix.vec3.create()]) {\r\n        this.pp_getLeftLocal(axes[0]);\r\n        this.pp_getUpLocal(axes[1]);\r\n        this.pp_getForwardLocal(axes[2]);\r\n        return axes;\r\n    };\r\n\r\n    //Forward\r\n\r\n    WL.Object.prototype.pp_getForward = function (forward) {\r\n        return this.pp_getForwardWorld(forward);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getForwardWorld = function () {\r\n        let rotation = glMatrix.mat3.create();\r\n        return function pp_getForwardWorld(forward = glMatrix.vec3.create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            forward[0] = rotation[6];\r\n            forward[1] = rotation[7];\r\n            forward[2] = rotation[8];\r\n            return forward;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getForwardLocal = function () {\r\n        let rotation = glMatrix.mat3.create();\r\n        return function pp_getForwardLocal(forward = glMatrix.vec3.create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            forward[0] = rotation[6];\r\n            forward[1] = rotation[7];\r\n            forward[2] = rotation[8];\r\n            return forward;\r\n        };\r\n    }();\r\n\r\n    //Backward\r\n\r\n    WL.Object.prototype.pp_getBackward = function (backward) {\r\n        return this.pp_getBackwardWorld(backward);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getBackwardWorld = function () {\r\n        let rotation = glMatrix.mat3.create();\r\n        return function pp_getBackwardWorld(backward = glMatrix.vec3.create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            backward[0] = -rotation[6];\r\n            backward[1] = -rotation[7];\r\n            backward[2] = -rotation[8];\r\n            return backward;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getBackwardLocal = function () {\r\n        let rotation = glMatrix.mat3.create();\r\n        return function pp_getBackwardLocal(backward = glMatrix.vec3.create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            backward[0] = -rotation[6];\r\n            backward[1] = -rotation[7];\r\n            backward[2] = -rotation[8];\r\n            return backward;\r\n        };\r\n    }();\r\n\r\n    //Up\r\n\r\n    WL.Object.prototype.pp_getUp = function (up) {\r\n        return this.pp_getUpWorld(up);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getUpWorld = function () {\r\n        let rotation = glMatrix.mat3.create();\r\n        return function pp_getUpWorld(up = glMatrix.vec3.create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            up[0] = rotation[3];\r\n            up[1] = rotation[4];\r\n            up[2] = rotation[5];\r\n            return up;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getUpLocal = function () {\r\n        let rotation = glMatrix.mat3.create();\r\n        return function pp_getUpLocal(up = glMatrix.vec3.create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            up[0] = rotation[3];\r\n            up[1] = rotation[4];\r\n            up[2] = rotation[5];\r\n            return up;\r\n        };\r\n    }();\r\n\r\n    //Down\r\n\r\n    WL.Object.prototype.pp_getDown = function (down) {\r\n        return this.pp_getDownWorld(down);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getDownWorld = function () {\r\n        let rotation = glMatrix.mat3.create();\r\n        return function pp_getDownWorld(down = glMatrix.vec3.create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            down[0] = -rotation[3];\r\n            down[1] = -rotation[4];\r\n            down[2] = -rotation[5];\r\n            return down;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getDownLocal = function () {\r\n        let rotation = glMatrix.mat3.create();\r\n        return function pp_getDownLocal(down = glMatrix.vec3.create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            down[0] = -rotation[3];\r\n            down[1] = -rotation[4];\r\n            down[2] = -rotation[5];\r\n            return down;\r\n        };\r\n    }();\r\n\r\n    //Left\r\n\r\n    WL.Object.prototype.pp_getLeft = function (left) {\r\n        return this.pp_getLeftWorld(left);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getLeftWorld = function () {\r\n        let rotation = glMatrix.mat3.create();\r\n        return function pp_getLeftWorld(left = glMatrix.vec3.create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            left[0] = rotation[0];\r\n            left[1] = rotation[1];\r\n            left[2] = rotation[2];\r\n            return left;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getLeftLocal = function () {\r\n        let rotation = glMatrix.mat3.create();\r\n        return function pp_getLeftLocal(left = glMatrix.vec3.create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            left[0] = rotation[0];\r\n            left[1] = rotation[1];\r\n            left[2] = rotation[2];\r\n            return left;\r\n        };\r\n    }();\r\n\r\n    //Right\r\n\r\n    WL.Object.prototype.pp_getRight = function (right) {\r\n        return this.pp_getRightWorld(right);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRightWorld = function () {\r\n        let rotation = glMatrix.mat3.create();\r\n        return function pp_getRightWorld(right = glMatrix.vec3.create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            right[0] = -rotation[0];\r\n            right[1] = -rotation[1];\r\n            right[2] = -rotation[2];\r\n            return right;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getRightLocal = function () {\r\n        let rotation = glMatrix.mat3.create();\r\n        return function pp_getRightLocal(right = glMatrix.vec3.create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            right[0] = -rotation[0];\r\n            right[1] = -rotation[1];\r\n            right[2] = -rotation[2];\r\n            return right;\r\n        };\r\n    }();\r\n\r\n    //SETTER\r\n\r\n    //Position\r\n\r\n    WL.Object.prototype.pp_setPosition = function (position) {\r\n        this.pp_setPositionWorld(position);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setPositionWorld = function (position) {\r\n        this.setTranslationWorld(position);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setPositionLocal = function (position) {\r\n        this.setTranslationLocal(position);\r\n    };\r\n\r\n    //Rotation\r\n\r\n    WL.Object.prototype.pp_setRotation = function (rotation) {\r\n        this.pp_setRotationWorld(rotation);\r\n    };\r\n    WL.Object.prototype.pp_setRotationDegrees = function (rotation) {\r\n        this.pp_setRotationWorldDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setRotationRadians = function (rotation) {\r\n        this.pp_setRotationWorldRadians(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setRotationMatrix = function (rotation) {\r\n        this.pp_setRotationWorldMatrix(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setRotationQuat = function (rotation) {\r\n        this.pp_setRotationWorldQuat(rotation);\r\n    };\r\n\r\n    //Rotation World\r\n\r\n    WL.Object.prototype.pp_setRotationWorld = function (rotation) {\r\n        this.pp_setRotationWorldDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setRotationWorldDegrees = function () {\r\n        let quat = glMatrix.quat.create();\r\n        return function pp_setRotationWorldDegrees(rotation) {\r\n            this._pp_degreesToQuaternion(rotation, quat);\r\n            this.pp_setRotationWorldQuat(quat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setRotationWorldRadians = function () {\r\n        let degreesRotation = glMatrix.vec3.create();\r\n        return function pp_setRotationWorldRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_setRotationWorldDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setRotationWorldMatrix = function () {\r\n        let quat = glMatrix.quat.create();\r\n        return function pp_setRotationWorldMatrix(rotation) {\r\n            glMatrix.quat.fromMat3(quat, rotation);\r\n            this.pp_setRotationWorldQuat(quat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setRotationWorldQuat = function (rotation) {\r\n        this.rotationWorld = rotation;\r\n    };\r\n\r\n    //Rotation Local\r\n\r\n    WL.Object.prototype.pp_setRotationLocal = function (rotation) {\r\n        this.pp_setRotationLocalDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setRotationLocalDegrees = function () {\r\n        let quat = glMatrix.quat.create();\r\n        return function pp_setRotationLocalDegrees(rotation) {\r\n            this._pp_degreesToQuaternion(rotation, quat);\r\n            this.pp_setRotationLocalQuat(quat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setRotationLocalRadians = function () {\r\n        let degreesRotation = glMatrix.vec3.create();\r\n        return function pp_setRotationLocalRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_setRotationLocalDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setRotationLocalMatrix = function () {\r\n        let quat = glMatrix.quat.create();\r\n        return function pp_setRotationLocalMatrix(rotation) {\r\n            glMatrix.quat.fromMat3(quat, rotation);\r\n            this.pp_setRotationLocalQuat(quat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setRotationLocalQuat = function (rotation) {\r\n        this.rotationLocal = rotation;\r\n    };\r\n\r\n    //Scale\r\n\r\n    WL.Object.prototype.pp_setScale = function (scale) {\r\n        this.pp_setScaleWorld(scale);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setScaleWorld = function () {\r\n        let vector = glMatrix.vec3.create();\r\n        return function pp_setScaleWorld(scale) {\r\n            if (isNaN(scale)) {\r\n                this.scalingWorld = scale;\r\n            } else {\r\n                glMatrix.vec3.set(vector, scale, scale, scale);\r\n                this.scalingWorld = vector;\r\n            }\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setScaleLocal = function () {\r\n        let vector = glMatrix.vec3.create();\r\n        return function pp_setScaleLocal(scale) {\r\n            if (isNaN(scale)) {\r\n                this.scalingLocal = scale;\r\n            } else {\r\n                glMatrix.vec3.set(vector, scale, scale, scale);\r\n                this.scalingLocal = vector;\r\n            }\r\n        };\r\n    }();\r\n\r\n    //Axes    \r\n\r\n    WL.Object.prototype.pp_setAxes = function (left, up, forward) {\r\n        this.pp_setAxesWorld(left, up, forward);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setAxesWorld = function (left, up, forward) {\r\n        if (forward != null) {\r\n            this.pp_setForwardWorld(forward, up, left);\r\n        } else if (up != null) {\r\n            this.pp_setUpWorld(up, forward, left);\r\n        } else {\r\n            this.pp_setLeftWorld(left, up, forward);\r\n        }\r\n    };\r\n\r\n    WL.Object.prototype.pp_setAxesLocal = function (left, up, forward) {\r\n        if (forward != null) {\r\n            this.pp_setForwardLocal(forward, up, left);\r\n        } else if (up != null) {\r\n            this.pp_setUpLocal(up, forward, left);\r\n        } else {\r\n            this.pp_setLeftLocal(left, up, forward);\r\n        }\r\n    };\r\n\r\n    //Forward\r\n\r\n    WL.Object.prototype.pp_setForward = function (forward, up, left) {\r\n        this.pp_setForwardWorld(forward, up, left);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setForwardWorld = function (forward, up = null, left = null) {\r\n        this._pp_setAxes([left, up, forward], [2, 1, 0], false);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setForwardLocal = function (forward, up = null, left = null) {\r\n        this._pp_setAxes([left, up, forward], [2, 1, 0], true);\r\n    };\r\n\r\n    //Backward\r\n\r\n    WL.Object.prototype.pp_setBackward = function (backward, up, left) {\r\n        this.pp_setBackwardWorld(backward, up, left);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setBackwardWorld = function () {\r\n        let forward = glMatrix.vec3.create();\r\n        return function pp_setBackwardWorld(backward, up = null, left = null) {\r\n            glMatrix.vec3.negate(forward, backward);\r\n            this._pp_setAxes([left, up, forward], [2, 1, 0], false);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setBackwardLocal = function () {\r\n        let forward = glMatrix.vec3.create();\r\n        return function pp_setBackwardLocal(backward, up = null, left = null) {\r\n            glMatrix.vec3.negate(forward, backward);\r\n            this._pp_setAxes([left, up, forward], [2, 1, 0], true);\r\n        };\r\n    }();\r\n\r\n    //Up\r\n\r\n    WL.Object.prototype.pp_setUp = function (up, forward, left) {\r\n        this.pp_setUpWorld(up, forward, left);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setUpWorld = function (up, forward = null, left = null) {\r\n        this._pp_setAxes([left, up, forward], [1, 2, 0], false);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setUpLocal = function (up, forward = null, left = null) {\r\n        this._pp_setAxes([left, up, forward], [1, 2, 0], true);\r\n    };\r\n\r\n    //Down\r\n\r\n    WL.Object.prototype.pp_setDown = function (down, forward, left) {\r\n        this.pp_setDownWorld(down, forward, left);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setDownWorld = function () {\r\n        let up = glMatrix.vec3.create();\r\n        return function pp_setDownWorld(down, forward = null, left = null) {\r\n            glMatrix.vec3.negate(up, down);\r\n            this._pp_setAxes([left, up, forward], [1, 2, 0], false);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setDownLocal = function () {\r\n        let up = glMatrix.vec3.create();\r\n        return function pp_setDownLocal(down, forward = null, left = null) {\r\n            glMatrix.vec3.negate(up, down);\r\n            this._pp_setAxes([left, up, forward], [1, 2, 0], true);\r\n        };\r\n    }();\r\n\r\n    //Left\r\n\r\n    WL.Object.prototype.pp_setLeft = function (left, up, forward) {\r\n        this.pp_setLeftWorld(left, up, forward);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setLeftWorld = function (left, up = null, forward = null) {\r\n        this._pp_setAxes([left, up, forward], [0, 1, 2], false);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setLeftLocal = function (left, up = null, forward = null) {\r\n        this._pp_setAxes([left, up, forward], [0, 1, 2], true);\r\n    };\r\n\r\n    //Right\r\n\r\n    WL.Object.prototype.pp_setRight = function (right, up, forward) {\r\n        this.pp_setRightWorld(right, up, forward);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setRightWorld = function () {\r\n        let left = glMatrix.vec3.create();\r\n        return function pp_setRightWorld(right, up = null, forward = null) {\r\n            glMatrix.vec3.negate(left, right);\r\n            this._pp_setAxes([left, up, forward], [0, 1, 2], false);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setRightLocal = function () {\r\n        let left = glMatrix.vec3.create();\r\n        return function pp_setRightLocal(right, up = null, forward = null) {\r\n            glMatrix.vec3.negate(left, right);\r\n            this._pp_setAxes([left, up, forward], [0, 1, 2], true);\r\n        };\r\n    }();\r\n\r\n    //Transform\r\n\r\n    WL.Object.prototype.pp_setTransform = function (transform) {\r\n        this.pp_setTransformWorld(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setTransformMatrix = function (transform) {\r\n        this.pp_setTransformWorldMatrix(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setTransformQuat = function (transform) {\r\n        this.pp_setTransformWorldQuat(transform);\r\n    };\r\n\r\n    //Transform World\r\n\r\n    WL.Object.prototype.pp_setTransformWorld = function (transform) {\r\n        return this.pp_setTransformWorldMatrix(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setTransformWorldMatrix = function () {\r\n        let position = glMatrix.vec3.create();\r\n        let rotation = glMatrix.quat.create();\r\n        let scale = glMatrix.vec3.create();\r\n        let transformMatrixNoScale = glMatrix.mat4.create();\r\n        let inverseScale = glMatrix.vec3.create();\r\n        let one = glMatrix.vec3.create();\r\n        glMatrix.vec3.set(one, 1, 1, 1);\r\n        return function pp_setTransformWorldMatrix(transform) {\r\n            glMatrix.mat4.getTranslation(position, transform);\r\n            glMatrix.mat4.getScaling(scale, transform);\r\n            glMatrix.vec3.divide(inverseScale, one, scale);\r\n            glMatrix.mat4.scale(transformMatrixNoScale, transform, inverseScale);\r\n            glMatrix.mat4.getRotation(rotation, transformMatrixNoScale);\r\n            glMatrix.quat.normalize(rotation, rotation);\r\n            this.pp_setScaleWorld(scale);\r\n            this.pp_setRotationWorldQuat(rotation);\r\n            this.pp_setPositionWorld(position);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setTransformWorldQuat = function (transform) {\r\n        this.transformWorld = transform;\r\n    };\r\n\r\n    //Transform Local\r\n\r\n    WL.Object.prototype.pp_setTransformLocal = function (transform) {\r\n        return this.pp_setTransformLocalMatrix(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setTransformLocalMatrix = function () {\r\n        let position = glMatrix.vec3.create();\r\n        let rotation = glMatrix.quat.create();\r\n        let scale = glMatrix.vec3.create();\r\n        let transformMatrixNoScale = glMatrix.mat4.create();\r\n        let inverseScale = glMatrix.vec3.create();\r\n        let one = glMatrix.vec3.create();\r\n        glMatrix.vec3.set(one, 1, 1, 1);\r\n        return function pp_setTransformLocalMatrix(transform) {\r\n            glMatrix.mat4.getTranslation(position, transform);\r\n            glMatrix.mat4.getScaling(scale, transform);\r\n            glMatrix.vec3.divide(inverseScale, one, scale);\r\n            glMatrix.mat4.scale(transformMatrixNoScale, transform, inverseScale);\r\n            glMatrix.mat4.getRotation(rotation, transformMatrixNoScale);\r\n            glMatrix.quat.normalize(rotation, rotation);\r\n            this.pp_setScaleLocal(scale);\r\n            this.pp_setRotationLocalQuat(rotation);\r\n            this.pp_setPositionLocal(position);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setTransformLocalQuat = function (transform) {\r\n        this.transformLocal = transform;\r\n    };\r\n\r\n    //RESET\r\n\r\n    //Position\r\n\r\n    WL.Object.prototype.pp_resetPosition = function () {\r\n        this.pp_resetPositionWorld();\r\n    };\r\n\r\n    WL.Object.prototype.pp_resetPositionWorld = function () {\r\n        let zero = glMatrix.vec3.create();\r\n        return function pp_resetPositionWorld() {\r\n            this.pp_setPositionWorld(zero);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_resetPositionLocal = function () {\r\n        let zero = glMatrix.vec3.create();\r\n        return function pp_resetPositionLocal() {\r\n            this.pp_setPositionLocal(zero);\r\n        };\r\n    }();\r\n\r\n    //Rotation\r\n\r\n    WL.Object.prototype.pp_resetRotation = function () {\r\n        this.pp_resetRotationWorld();\r\n    };\r\n\r\n    WL.Object.prototype.pp_resetRotationWorld = function () {\r\n        let identity = glMatrix.quat.create();\r\n        return function pp_resetRotationWorld() {\r\n            this.pp_setRotationWorldQuat(identity);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_resetRotationLocal = function () {\r\n        let identity = glMatrix.quat.create();\r\n        return function pp_resetRotationLocal() {\r\n            this.pp_setRotationLocalQuat(identity);\r\n        };\r\n    }();\r\n\r\n    //Scale\r\n\r\n    WL.Object.prototype.pp_resetScale = function () {\r\n        this.pp_resetScaleWorld();\r\n    };\r\n\r\n    WL.Object.prototype.pp_resetScaleWorld = function () {\r\n        let one = glMatrix.vec3.create();\r\n        glMatrix.vec3.set(one, 1, 1, 1);\r\n        return function pp_resetScaleWorld() {\r\n            this.pp_setScaleWorld(one);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_resetScaleLocal = function () {\r\n        let one = glMatrix.vec3.create();\r\n        glMatrix.vec3.set(one, 1, 1, 1);\r\n        return function pp_resetScaleLocal() {\r\n            this.pp_setScaleLocal(one);\r\n        };\r\n    }();\r\n\r\n    //Transform\r\n\r\n    WL.Object.prototype.pp_resetTransform = function () {\r\n        this.pp_resetTransformWorld();\r\n    };\r\n\r\n    WL.Object.prototype.pp_resetTransformWorld = function () {\r\n        this.pp_resetScaleWorld();\r\n        this.pp_resetRotationWorld();\r\n        this.pp_resetPositionWorld();\r\n    };\r\n\r\n    WL.Object.prototype.pp_resetTransformLocal = function () {\r\n        this.pp_resetScaleLocal();\r\n        this.pp_resetRotationLocal();\r\n        this.pp_resetPositionLocal();\r\n    };\r\n\r\n    //TRANSFORMATIONS\r\n\r\n    //Translate\r\n\r\n    WL.Object.prototype.pp_translate = function (translation) {\r\n        this.pp_translateWorld(translation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_translateWorld = function (translation) {\r\n        this.translateWorld(translation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_translateLocal = function (translation) {\r\n        this.translate(translation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_translateObject = function (translation) {\r\n        this.translateObject(translation);\r\n    };\r\n\r\n    //Translate Axis\r\n\r\n    WL.Object.prototype.pp_translateAxis = function (amount, direction) {\r\n        this.pp_translateAxisWorld(amount, direction);\r\n    };\r\n\r\n    WL.Object.prototype.pp_translateAxisWorld = function () {\r\n        let translation = glMatrix.vec3.create();\r\n        return function pp_translateAxisWorld(amount, direction) {\r\n            glMatrix.vec3.scale(translation, direction, amount);\r\n            this.pp_translateWorld(translation);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_translateAxisLocal = function () {\r\n        let translation = glMatrix.vec3.create();\r\n        return function pp_translateAxisLocal(amount, direction) {\r\n            glMatrix.vec3.scale(translation, direction, amount);\r\n            this.pp_translateLocal(translation);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_translateAxisObject = function () {\r\n        let translation = glMatrix.vec3.create();\r\n        return function pp_translateAxisObject(amount, direction) {\r\n            glMatrix.vec3.scale(translation, direction, amount);\r\n            this.pp_translateObject(translation);\r\n        };\r\n    }();\r\n\r\n    //Rotate\r\n\r\n    WL.Object.prototype.pp_rotate = function (rotation) {\r\n        this.pp_rotateWorld(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateDegrees = function (rotation) {\r\n        this.pp_rotateWorldDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateRadians = function (rotation) {\r\n        this.pp_rotateWorldRadians(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateMatrix = function (rotation) {\r\n        this.pp_rotateWorldMatrix(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateQuat = function (rotation) {\r\n        this.pp_rotateWorldQuat(rotation);\r\n    };\r\n\r\n    //Rotate World\r\n\r\n    WL.Object.prototype.pp_rotateWorld = function (rotation) {\r\n        this.pp_rotateWorldDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateWorldDegrees = function () {\r\n        let rotationQuat = glMatrix.quat.create();\r\n        return function pp_rotateWorldDegrees(rotation) {\r\n            this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n            this.pp_rotateWorldQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateWorldRadians = function () {\r\n        let degreesRotation = glMatrix.vec3.create();\r\n        return function pp_rotateWorldRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateWorldDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateWorldMatrix = function () {\r\n        let rotationQuat = glMatrix.quat.create();\r\n        return function pp_rotateWorldMatrix(rotation) {\r\n            glMatrix.quat.fromMat3(rotationQuat, rotation);\r\n            glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n            this.pp_rotateWorldQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateWorldQuat = function () {\r\n        let currentRotationQuat = glMatrix.quat.create();\r\n        return function pp_rotateWorldQuat(rotation) {\r\n            this.pp_getRotationWorldQuat(currentRotationQuat);\r\n            glMatrix.quat.mul(currentRotationQuat, rotation, currentRotationQuat);\r\n            glMatrix.quat.normalize(currentRotationQuat, currentRotationQuat);\r\n            this.pp_setRotationWorldQuat(currentRotationQuat);\r\n        };\r\n    }();\r\n\r\n    //Rotate Local\r\n\r\n    WL.Object.prototype.pp_rotateLocal = function (rotation) {\r\n        this.pp_rotateLocalDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateLocalDegrees = function () {\r\n        let rotationQuat = glMatrix.quat.create();\r\n        return function pp_rotateLocalDegrees(rotation) {\r\n            this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n            this.pp_rotateLocalQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateLocalRadians = function () {\r\n        let degreesRotation = glMatrix.vec3.create();\r\n        return function pp_rotateLocalRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateLocalDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateLocalMatrix = function () {\r\n        let rotationQuat = glMatrix.quat.create();\r\n        return function pp_rotateLocalMatrix(rotation) {\r\n            glMatrix.quat.fromMat3(rotationQuat, rotation);\r\n            glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n            this.pp_rotateLocalQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateLocalQuat = function () {\r\n        let currentRotationQuat = glMatrix.quat.create();\r\n        return function pp_rotateLocalQuat(rotation) {\r\n            this.pp_getRotationLocalQuat(currentRotationQuat);\r\n            glMatrix.quat.mul(currentRotationQuat, rotation, currentRotationQuat);\r\n            glMatrix.quat.normalize(currentRotationQuat, currentRotationQuat);\r\n            this.pp_setRotationLocalQuat(currentRotationQuat);\r\n        };\r\n    }();\r\n\r\n    //Rotate Object\r\n\r\n    WL.Object.prototype.pp_rotateObject = function (rotation) {\r\n        this.pp_rotateObjectDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateObjectDegrees = function () {\r\n        let rotationQuat = glMatrix.quat.create();\r\n        return function pp_rotateObjectDegrees(rotation) {\r\n            this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n            this.pp_rotateObjectQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateObjectRadians = function () {\r\n        let degreesRotation = glMatrix.vec3.create();\r\n        return function pp_rotateObjectRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateObjectDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateObjectMatrix = function () {\r\n        let rotationQuat = glMatrix.quat.create();\r\n        return function pp_rotateObjectMatrix(rotation) {\r\n            glMatrix.quat.fromMat3(rotationQuat, rotation);\r\n            glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n            this.pp_rotateObjectQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateObjectQuat = function (rotation) {\r\n        this.rotateObject(rotation);\r\n    };\r\n\r\n    //Rotate Axis\r\n\r\n    WL.Object.prototype.pp_rotateAxis = function (angle, axis) {\r\n        this.pp_rotateAxisWorld(angle, axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisDegrees = function (angle, axis) {\r\n        this.pp_rotateAxisWorldDegrees(angle, axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisRadians = function (angle, axis) {\r\n        this.pp_rotateAxisWorldRadians(angle, axis);\r\n    };\r\n\r\n    //Rotate Axis World\r\n\r\n    WL.Object.prototype.pp_rotateAxisWorld = function (angle, axis) {\r\n        this.pp_rotateAxisWorldDegrees(angle, axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisWorldDegrees = function (angle, axis) {\r\n        this.pp_rotateAxisWorldRadians(glMatrix.glMatrix.toRadian(angle), axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisWorldRadians = function () {\r\n        let rotation = glMatrix.quat.create();\r\n        return function pp_rotateAxisWorldRadians(angle, axis) {\r\n            glMatrix.quat.setAxisAngle(rotation, axis, angle);\r\n            this.pp_rotateWorldQuat(rotation);\r\n        };\r\n    }();\r\n\r\n    //Rotate Axis Local\r\n\r\n    WL.Object.prototype.pp_rotateAxisLocal = function (angle, axis) {\r\n        this.pp_rotateAxisLocalDegrees(angle, axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisLocalDegrees = function (angle, axis) {\r\n        this.pp_rotateAxisLocalRadians(glMatrix.glMatrix.toRadian(angle), axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisLocalRadians = function () {\r\n        let rotation = glMatrix.quat.create();\r\n        return function pp_rotateAxisLocalRadians(angle, axis) {\r\n            glMatrix.quat.setAxisAngle(rotation, axis, angle);\r\n            this.pp_rotateLocalQuat(rotation);\r\n        };\r\n    }();\r\n\r\n    //Rotate Axis Object\r\n\r\n    WL.Object.prototype.pp_rotateAxisObject = function (angle, axis) {\r\n        this.pp_rotateAxisObjectDegrees(angle, axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisObjectDegrees = function (angle, axis) {\r\n        this.pp_rotateAxisObjectRadians(glMatrix.glMatrix.toRadian(angle), axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisObjectRadians = function () {\r\n        let rotation = glMatrix.quat.create();\r\n        return function pp_rotateAxisObjectRadians(angle, axis) {\r\n            glMatrix.quat.setAxisAngle(rotation, axis, angle);\r\n            this.pp_rotateObjectQuat(rotation);\r\n        };\r\n    }();\r\n\r\n    //Rotate Around\r\n\r\n    WL.Object.prototype.pp_rotateAround = function (rotation, origin) {\r\n        this.pp_rotateAroundWorld(rotation, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundDegrees = function (rotation, origin) {\r\n        this.pp_rotateAroundWorldDegrees(rotation, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundRadians = function (rotation, origin) {\r\n        this.pp_rotateAroundWorldRadians(rotation, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundMatrix = function (rotation, origin) {\r\n        this.pp_rotateAroundWorldMatrix(rotation, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundQuat = function (rotation, origin) {\r\n        this.pp_rotateAroundWorldQuat(rotation, origin);\r\n    };\r\n\r\n    //Rotate Around World\r\n\r\n    WL.Object.prototype.pp_rotateAroundWorld = function (rotation, origin) {\r\n        this.pp_rotateAroundWorldDegrees(rotation, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundWorldDegrees = function () {\r\n        let rotationQuat = glMatrix.quat.create();\r\n        return function pp_rotateAroundWorldDegrees(rotation, origin) {\r\n            this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n            this.pp_rotateAroundWorldQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundWorldRadians = function () {\r\n        let degreesRotation = glMatrix.vec3.create();\r\n        return function pp_rotateAroundWorldRadians(rotation, origin) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateAroundWorldDegrees(degreesRotation, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundWorldMatrix = function () {\r\n        let rotationQuat = glMatrix.quat.create();\r\n        return function pp_rotateAroundWorldMatrix(rotation, origin) {\r\n            glMatrix.quat.fromMat3(rotationQuat, rotation);\r\n            glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n            this.pp_rotateAroundWorldQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundWorldQuat = function () {\r\n        let axis = glMatrix.vec3.create();\r\n        return function pp_rotateAroundWorldQuat(rotation, origin) {\r\n            let angle = glMatrix.quat.getAxisAngle(axis, rotation);\r\n            this.pp_rotateAroundAxisWorldRadians(angle, axis, origin);\r\n        };\r\n    }();\r\n\r\n    //Rotate Around Local\r\n\r\n    WL.Object.prototype.pp_rotateAroundLocal = function (rotation, origin) {\r\n        this.pp_rotateAroundLocalDegrees(rotation, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundLocalDegrees = function () {\r\n        let rotationQuat = glMatrix.quat.create();\r\n        return function pp_rotateAroundLocalDegrees(rotation, origin) {\r\n            this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n            this.pp_rotateAroundLocalQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundLocalRadians = function () {\r\n        let degreesRotation = glMatrix.vec3.create();\r\n        return function pp_rotateAroundLocalRadians(rotation, origin) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateAroundLocalDegrees(degreesRotation, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundLocalMatrix = function () {\r\n        let rotationQuat = glMatrix.quat.create();\r\n        return function pp_rotateAroundLocalMatrix(rotation, origin) {\r\n            glMatrix.quat.fromMat3(rotationQuat, rotation);\r\n            glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n            this.pp_rotateAroundLocalQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundLocalQuat = function () {\r\n        let axis = glMatrix.vec3.create();\r\n        return function pp_rotateAroundLocalQuat(rotation, origin) {\r\n            let angle = glMatrix.quat.getAxisAngle(axis, rotation);\r\n            this.pp_rotateAroundAxisLocalRadians(angle, axis, origin);\r\n        };\r\n    }();\r\n\r\n    //Rotate Around Object\r\n\r\n    WL.Object.prototype.pp_rotateAroundObject = function (rotation, origin) {\r\n        this.pp_rotateAroundObjectDegrees(rotation, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundObjectDegrees = function () {\r\n        let rotationQuat = glMatrix.quat.create();\r\n        return function pp_rotateAroundObjectDegrees(rotation, origin) {\r\n            this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n            this.pp_rotateAroundObjectQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundObjectRadians = function () {\r\n        let degreesRotation = glMatrix.vec3.create();\r\n        return function pp_rotateAroundObjectRadians(rotation, origin) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateAroundObjectDegrees(degreesRotation, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundObjectMatrix = function () {\r\n        let rotationQuat = glMatrix.quat.create();\r\n        return function pp_rotateAroundObjectMatrix(rotation, origin) {\r\n            glMatrix.quat.fromMat3(rotationQuat, rotation);\r\n            glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n            this.pp_rotateAroundObjectQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundObjectQuat = function () {\r\n        let axis = glMatrix.vec3.create();\r\n        return function pp_rotateAroundObjectQuat(rotation, origin) {\r\n            let angle = glMatrix.quat.getAxisAngle(axis, rotation);\r\n            this.pp_rotateAroundAxisObjectRadians(angle, axis, origin);\r\n        };\r\n    }();\r\n\r\n    //Rotate Around Axis\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxis = function (angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorld(angle, axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisDegrees = function (angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorldDegrees(angle, axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisRadians = function (angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorldRadians(angle, axis, origin);\r\n    };\r\n\r\n    //Rotate Around Axis World\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisWorld = function (angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorldDegrees(angle, axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisWorldDegrees = function (angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorldRadians(glMatrix.glMatrix.toRadian(angle), axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisWorldRadians = function () {\r\n        let transformToRotate = glMatrix.quat2.create();\r\n        let transformToRotateConjugate = glMatrix.quat2.create();\r\n        let transformQuat = glMatrix.quat2.create();\r\n        let defaultQuat = glMatrix.quat.create();\r\n        return function pp_rotateAroundAxisWorldRadians(angle, axis, origin) {\r\n            glMatrix.quat2.fromRotationTranslation(transformToRotate, defaultQuat, origin);\r\n            this.pp_getTransformWorldQuat(transformQuat);\r\n            glMatrix.quat2.conjugate(transformToRotateConjugate, transformToRotate);\r\n            glMatrix.quat2.mul(transformQuat, transformToRotateConjugate, transformQuat);\r\n            glMatrix.quat2.rotateAroundAxis(transformToRotate, transformToRotate, axis, angle);\r\n            glMatrix.quat2.mul(transformQuat, transformToRotate, transformQuat);\r\n            this.pp_setTransformWorldQuat(transformQuat);\r\n        };\r\n    }();\r\n\r\n    //Rotate Around Axis Local\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisLocal = function (angle, axis, origin) {\r\n        this.pp_rotateAroundAxisLocalDegrees(angle, axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisLocalDegrees = function (angle, axis, origin) {\r\n        this.pp_rotateAroundAxisLocalRadians(glMatrix.glMatrix.toRadian(angle), axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisLocalRadians = function () {\r\n        let convertedPosition = glMatrix.vec3.create();\r\n        let convertedAxis = glMatrix.vec3.create();\r\n        return function pp_rotateAroundAxisLocalRadians(angle, axis, origin) {\r\n            this.pp_convertPositionLocalToWorld(origin, convertedPosition);\r\n            this.pp_convertDirectionLocalToWorld(axis, convertedAxis);\r\n            this.pp_rotateAroundAxisWorldRadians(angle, convertedAxis, convertedPosition);\r\n        };\r\n    }();\r\n\r\n    //Rotate Around Axis Object\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisObject = function (angle, axis, origin) {\r\n        this.pp_rotateAroundAxisObjectDegrees(angle, axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisObjectDegrees = function (angle, axis, origin) {\r\n        this.pp_rotateAroundAxisObjectRadians(glMatrix.glMatrix.toRadian(angle), axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisObjectRadians = function () {\r\n        let convertedPosition = glMatrix.vec3.create();\r\n        let convertedAxis = glMatrix.vec3.create();\r\n        return function pp_rotateAroundAxisObjectRadians(angle, axis, origin) {\r\n            this.pp_convertPositionObjectToWorld(origin, convertedPosition);\r\n            this.pp_convertDirectionObjectToWorld(axis, convertedAxis);\r\n            this.pp_rotateAroundAxisWorldRadians(angle, convertedAxis, convertedPosition);\r\n        };\r\n    }();\r\n\r\n    //Scale\r\n\r\n    //For now it does not really make sense in wle to scale in world space or parent space\r\n    //so there is no pp_scale default function\r\n\r\n    WL.Object.prototype.pp_scaleObject = function () {\r\n        let vector = glMatrix.vec3.create();\r\n        return function pp_scaleObject(scale) {\r\n            if (isNaN(scale)) {\r\n                this.scale(scale);\r\n            } else {\r\n                glMatrix.vec3.set(vector, scale, scale, scale);\r\n                this.scale(vector);\r\n            }\r\n        };\r\n    }();\r\n\r\n    //Look At\r\n\r\n    WL.Object.prototype.pp_lookAt = function (position, up) {\r\n        this.pp_lookAtWorld(position, up);\r\n    };\r\n\r\n    WL.Object.prototype.pp_lookAtWorld = function () {\r\n        let direction = glMatrix.vec3.create();\r\n        return function pp_lookAtWorld(position, up) {\r\n            this.pp_getPositionWorld(direction);\r\n            glMatrix.vec3.sub(direction, position, direction);\r\n            this.pp_lookToWorld(direction, up);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_lookAtLocal = function () {\r\n        let direction = glMatrix.vec3.create();\r\n        return function pp_lookAtLocal(position, up) {\r\n            this.pp_getPositionLocal(direction);\r\n            glMatrix.vec3.sub(direction, position, direction);\r\n            this.pp_lookToLocal(direction, up);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_lookTo = function (direction, up) {\r\n        this.pp_lookToWorld(direction, up);\r\n    };\r\n\r\n    WL.Object.prototype.pp_lookToWorld = function () {\r\n        let internalUp = glMatrix.vec3.create();\r\n        return function pp_lookToWorld(direction, up = this.pp_getUpWorld(internalUp)) {\r\n            this.pp_setForwardWorld(direction, up);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_lookToLocal = function () {\r\n        let internalUp = glMatrix.vec3.create();\r\n        return function pp_lookToLocal(direction, up = this.pp_getUpLocal(internalUp)) {\r\n            this.pp_setForwardLocal(direction, up);\r\n        };\r\n    }();\r\n\r\n    //EXTRA\r\n\r\n    //Parent\r\n\r\n    WL.Object.prototype.pp_setParent = function () {\r\n        let position = glMatrix.vec3.create();\r\n        let rotation = glMatrix.quat.create();\r\n        let scale = glMatrix.vec3.create();\r\n        return function pp_setParent(newParent, keepTransform = true) {\r\n            if (!keepTransform) {\r\n                this.parent = newParent;\r\n            } else {\r\n                this.pp_getPositionWorld(position);\r\n                this.pp_getRotationWorldQuat(rotation);\r\n                this.pp_getScaleWorld(scale);\r\n                this.parent = newParent;\r\n                this.pp_setScaleWorld(scale);\r\n                this.pp_setRotationWorldQuat(rotation);\r\n                this.pp_setPositionWorld(position);\r\n            }\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getParent = function () {\r\n        return this.parent;\r\n    };\r\n\r\n    //Convert Vector Object World\r\n\r\n    WL.Object.prototype.pp_convertPositionObjectToWorld = function () {\r\n        let matrix = glMatrix.mat4.create();\r\n        return function pp_convertPositionObjectToWorld(position, resultPosition = glMatrix.vec3.create()) {\r\n            this.pp_getTransformWorldMatrix(matrix);\r\n            glMatrix.vec3.transformMat4(resultPosition, position, matrix);\r\n            return resultPosition;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_convertDirectionObjectToWorld = function () {\r\n        let rotation = glMatrix.quat.create();\r\n        return function pp_convertDirectionObjectToWorld(direction, resultDirection = glMatrix.vec3.create()) {\r\n            this.pp_getRotationWorldQuat(rotation);\r\n            glMatrix.vec3.transformQuat(resultDirection, direction, rotation);\r\n            return resultDirection;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_convertPositionWorldToObject = function () {\r\n        let matrix = glMatrix.mat4.create();\r\n        return function pp_convertPositionWorldToObject(position, resultPosition = glMatrix.vec3.create()) {\r\n            this.pp_getTransformWorldMatrix(matrix);\r\n            glMatrix.mat4.invert(matrix, matrix);\r\n            glMatrix.vec3.transformMat4(resultPosition, position, matrix);\r\n            return resultPosition;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_convertDirectionWorldToObject = function () {\r\n        let rotation = glMatrix.quat.create();\r\n        return function pp_convertDirectionWorldToObject(direction, resultDirection = glMatrix.vec3.create()) {\r\n            this.pp_getRotationWorldQuat(rotation);\r\n            glMatrix.quat.conjugate(rotation, rotation);\r\n            glMatrix.vec3.transformQuat(resultDirection, direction, rotation);\r\n            return resultDirection;\r\n        };\r\n    }();\r\n\r\n    //Convert Vector Local World\r\n\r\n    WL.Object.prototype.pp_convertPositionLocalToWorld = function (position, resultPosition = glMatrix.vec3.create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertPositionObjectToWorld(position, resultPosition);\r\n        } else {\r\n            glMatrix.vec3.copy(resultPosition, position);\r\n        }\r\n        return resultPosition;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertDirectionLocalToWorld = function (direction, resultDirection = glMatrix.vec3.create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertDirectionObjectToWorld(direction, resultDirection);\r\n        } else {\r\n            glMatrix.vec3.copy(resultDirection, direction);\r\n        }\r\n        return resultDirection;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertPositionWorldToLocal = function (position, resultPosition = glMatrix.vec3.create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertPositionWorldToObject(position, resultPosition);\r\n        } else {\r\n            glMatrix.vec3.copy(resultPosition, position);\r\n        }\r\n        return resultPosition;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertDirectionWorldToLocal = function (direction, resultDirection = glMatrix.vec3.create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertDirectionWorldToObject(direction, resultDirection);\r\n        } else {\r\n            glMatrix.vec3.copy(resultDirection, direction);\r\n        }\r\n        return resultDirection;\r\n    };\r\n\r\n    //Convert Vector Local Object\r\n\r\n    //I need to use the converson to world and then local also use the parent scale that changes the position in local space\r\n\r\n    WL.Object.prototype.pp_convertPositionObjectToLocal = function (position, resultPosition = glMatrix.vec3.create()) {\r\n        this.pp_convertPositionObjectToWorld(position, resultPosition);\r\n        this.pp_convertPositionWorldToLocal(resultPosition, resultPosition);\r\n        return resultPosition;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertDirectionObjectToLocal = function (direction, resultDirection = glMatrix.vec3.create()) {\r\n        this.pp_convertDirectionObjectToWorld(direction, resultDirection);\r\n        this.pp_convertDirectionWorldToLocal(resultDirection, resultDirection);\r\n        return resultDirection;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertPositionLocalToObject = function (position, resultPosition = glMatrix.vec3.create()) {\r\n        this.pp_convertPositionLocalToWorld(position, resultPosition);\r\n        this.pp_convertPositionWorldToObject(resultPosition, resultPosition);\r\n        return resultPosition;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertDirectionLocalToObject = function (direction, resultDirection = glMatrix.vec3.create()) {\r\n        this.pp_convertDirectionLocalToWorld(direction, resultDirection);\r\n        this.pp_convertDirectionWorldToObject(resultDirection, resultDirection);\r\n        return resultDirection;\r\n    };\r\n\r\n    //Convert Transform Object World\r\n\r\n    WL.Object.prototype.pp_convertTransformObjectToWorld = function (transform, resultTransform) {\r\n        return this.pp_convertTransformObjectToWorldMatrix(transform, resultTransform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformObjectToWorldMatrix = function () {\r\n        let convertTransform = glMatrix.mat4.create();\r\n        let position = glMatrix.vec3.create();\r\n        let scale = glMatrix.vec3.create();\r\n        let inverseScale = glMatrix.vec3.create();\r\n        let one = glMatrix.vec3.create();\r\n        glMatrix.vec3.set(one, 1, 1, 1);\r\n        return function pp_convertTransformObjectToWorldMatrix(transform, resultTransform = glMatrix.mat4.create()) {\r\n            this.pp_getTransformWorldMatrix(convertTransform);\r\n            if (this.pp_hasUniformScaleWorld()) {\r\n                glMatrix.mat4.mul(resultTransform, convertTransform, transform);\r\n            } else {\r\n                glMatrix.vec3.set(position, transform[12], transform[13], transform[14]);\r\n                this.pp_convertPositionObjectToWorld(position, position);\r\n\r\n                glMatrix.mat4.getScaling(scale, convertTransform);\r\n                glMatrix.vec3.divide(inverseScale, one, scale);\r\n                glMatrix.mat4.scale(convertTransform, convertTransform, inverseScale);\r\n\r\n                glMatrix.mat4.mul(resultTransform, convertTransform, transform);\r\n                glMatrix.mat4.scale(resultTransform, resultTransform, scale);\r\n\r\n                resultTransform[12] = position[0];\r\n                resultTransform[13] = position[1];\r\n                resultTransform[14] = position[2];\r\n                resultTransform[15] = 1;\r\n            }\r\n            return resultTransform;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_convertTransformObjectToWorldQuat = function () {\r\n        let position = glMatrix.vec3.create();\r\n        let rotation = glMatrix.quat.create();\r\n        return function pp_convertTransformObjectToWorldQuat(transform, resultTransform = glMatrix.quat2.create()) {\r\n            this.pp_getRotationWorldQuat(rotation);\r\n            glMatrix.quat.mul(rotation, rotation, transform);\r\n            glMatrix.quat2.getTranslation(position, transform);\r\n            this.pp_convertPositionObjectToWorld(position, position);\r\n            glMatrix.quat2.fromRotationTranslation(resultTransform, rotation, position);\r\n            return resultTransform;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_convertTransformWorldToObject = function (transform, resultTransform) {\r\n        return this.pp_convertTransformWorldToObjectMatrix(transform, resultTransform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformWorldToObjectMatrix = function () {\r\n        let convertTransform = glMatrix.mat4.create();\r\n        let position = glMatrix.vec3.create();\r\n        let scale = glMatrix.vec3.create();\r\n        let inverseScale = glMatrix.vec3.create();\r\n        let one = glMatrix.vec3.create();\r\n        glMatrix.vec3.set(one, 1, 1, 1);\r\n        return function pp_convertTransformWorldToObjectMatrix(transform, resultTransform = glMatrix.mat4.create()) {\r\n            this.pp_getTransformWorldMatrix(convertTransform);\r\n            if (this.pp_hasUniformScaleWorld()) {\r\n                glMatrix.mat4.invert(convertTransform, convertTransform);\r\n                glMatrix.mat4.mul(resultTransform, convertTransform, transform);\r\n            } else {\r\n                glMatrix.vec3.set(position, transform[12], transform[13], transform[14]);\r\n                this.pp_convertPositionWorldToObject(position, position);\r\n\r\n                glMatrix.mat4.getScaling(scale, convertTransform);\r\n                glMatrix.vec3.divide(inverseScale, one, scale);\r\n                glMatrix.mat4.scale(convertTransform, convertTransform, inverseScale);\r\n\r\n                glMatrix.mat4.invert(convertTransform, convertTransform);\r\n                glMatrix.mat4.mul(resultTransform, convertTransform, transform);\r\n                glMatrix.mat4.scale(resultTransform, resultTransform, inverseScale);\r\n\r\n                resultTransform[12] = position[0];\r\n                resultTransform[13] = position[1];\r\n                resultTransform[14] = position[2];\r\n                resultTransform[15] = 1;\r\n            }\r\n            return resultTransform;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_convertTransformWorldToObjectQuat = function () {\r\n        let position = glMatrix.vec3.create();\r\n        let rotation = glMatrix.quat.create();\r\n        return function pp_convertTransformWorldToObjectQuat(transform, resultTransform = glMatrix.quat2.create()) {\r\n            this.pp_getRotationWorldQuat(rotation);\r\n            glMatrix.quat.conjugate(rotation, rotation);\r\n            glMatrix.quat.mul(rotation, rotation, transform);\r\n            glMatrix.quat2.getTranslation(position, transform);\r\n            this.pp_convertPositionWorldToObject(position, position);\r\n            glMatrix.quat2.fromRotationTranslation(resultTransform, rotation, position);\r\n            return resultTransform;\r\n        };\r\n    }();\r\n\r\n    //Convert Transform Local World\r\n\r\n    WL.Object.prototype.pp_convertTransformLocalToWorld = function (transform, resultTransform) {\r\n        return this.pp_convertTransformLocalToWorldMatrix(transform, resultTransform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformLocalToWorldMatrix = function (transform, resultTransform = glMatrix.mat4.create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertTransformObjectToWorldMatrix(transform, resultTransform);\r\n        } else {\r\n            glMatrix.mat4.copy(resultTransform, transform);\r\n        }\r\n        return resultTransform;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformLocalToWorldQuat = function (transform, resultTransform = glMatrix.quat2.create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertTransformObjectToWorldQuat(transform, resultTransform);\r\n        } else {\r\n            glMatrix.quat2.copy(resultTransform, transform);\r\n        }\r\n        return resultTransform;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformWorldToLocal = function (transform, resultTransform) {\r\n        return this.pp_convertTransformWorldToLocalMatrix(transform, resultTransform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformWorldToLocalMatrix = function (transform, resultTransform = glMatrix.mat4.create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertTransformWorldToObjectMatrix(transform, resultTransform);\r\n        } else {\r\n            glMatrix.mat4.copy(resultTransform, transform);\r\n        }\r\n        return resultTransform;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformWorldToLocalQuat = function (transform, resultTransform = glMatrix.quat2.create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertTransformWorldToObjectQuat(transform, resultTransform);\r\n        } else {\r\n            glMatrix.quat2.copy(resultTransform, transform);\r\n        }\r\n        return resultTransform;\r\n    };\r\n\r\n    //Convert Transform Object Local\r\n\r\n    //I need to use the converson to world and then local also use the parent scale that changes the position in local space\r\n\r\n    WL.Object.prototype.pp_convertTransformObjectToLocal = function (transform, resultTransform) {\r\n        return this.pp_convertTransformObjectToLocalMatrix(transform, resultTransform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformObjectToLocalMatrix = function (transform, resultTransform = glMatrix.mat4.create()) {\r\n        this.pp_convertTransformObjectToWorldMatrix(transform, resultTransform);\r\n        this.pp_convertTransformWorldToLocalMatrix(resultTransform, resultTransform);\r\n        return resultTransform;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformObjectToLocalQuat = function (transform, resultTransform = glMatrix.quat2.create()) {\r\n        this.pp_convertTransformObjectToWorldQuat(transform, resultTransform);\r\n        this.pp_convertTransformWorldToLocalQuat(resultTransform, resultTransform);\r\n        return resultTransform;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformLocalToObject = function (transform, resultTransform) {\r\n        return this.pp_convertTransformLocalToObjectMatrix(transform, resultTransform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformLocalToObjectMatrix = function (transform, resultTransform = glMatrix.mat4.create()) {\r\n        this.pp_convertTransformLocalToWorldMatrix(transform, resultTransform);\r\n        this.pp_convertTransformWorldToObjectMatrix(resultTransform, resultTransform);\r\n        return resultTransform;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformLocalToObjectQuat = function (transform, resultTransform = glMatrix.quat2.create()) {\r\n        this.pp_convertTransformLocalToWorldQuat(transform, resultTransform);\r\n        this.pp_convertTransformWorldToObjectQuat(resultTransform, resultTransform);\r\n        return resultTransform;\r\n    };\r\n\r\n    //Component\r\n\r\n    WL.Object.prototype.pp_addComponent = function (type, paramsOrActive, active = null) {\r\n        let params = null;\r\n\r\n        if (typeof paramsOrActive == \"boolean\") {\r\n            params = {};\r\n            params[\"active\"] = paramsOrActive;\r\n        } else {\r\n            params = paramsOrActive;\r\n\r\n            if (active != null) {\r\n                if (params == null) {\r\n                    params = {};\r\n                }\r\n                params[\"active\"] = active;\r\n            }\r\n        }\r\n\r\n        return this.addComponent(type, params);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponent = function (type, index = 0) {\r\n        return this.pp_getComponentHierarchy(type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentSelf = function (type, index = 0) {\r\n        return this.getComponent(type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentHierarchy = function (type, index = 0) {\r\n        return this.pp_getComponentHierarchyBreadth(type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentHierarchyBreadth = function (type, index = 0) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return WL.Object.pp_getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentHierarchyDepth = function (type, index = 0) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return WL.Object.pp_getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentDescendants = function (type, index = 0) {\r\n        return this.pp_getComponentDescendantsBreadth(type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentDescendantsBreadth = function (type, index = 0) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return WL.Object.pp_getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentDescendantsDepth = function (type, index = 0) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return WL.Object.pp_getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentChildren = function (type, index = 0) {\r\n        let objects = this.pp_getChildren();\r\n        return WL.Object.pp_getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponents = function (type) {\r\n        return this.pp_getComponentsHierarchy(type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsSelf = function (type) {\r\n        return this.getComponents(type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsHierarchy = function (type) {\r\n        return this.pp_getComponentsHierarchyBreadth(type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsHierarchyBreadth = function (type) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return WL.Object.pp_getComponentsObjects(objects, type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsHierarchyDepth = function (type) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return WL.Object.pp_getComponentsObjects(objects, type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsDescendants = function (type) {\r\n        return this.pp_getComponentsDescendantsBreadth(type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsDescendantsBreadth = function (type) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return WL.Object.pp_getComponentsObjects(objects, type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsDescendantsDepth = function (type) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return WL.Object.pp_getComponentsObjects(objects, type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsChildren = function (type) {\r\n        let objects = this.pp_getChildren();\r\n        return WL.Object.pp_getComponentsObjects(objects, type);\r\n    };\r\n\r\n    //Active\r\n\r\n    WL.Object.prototype.pp_setActive = function (active, applyToHierarchy = true) {\r\n        if (applyToHierarchy) {\r\n            this.pp_setActiveHierarchy(active);\r\n        } else {\r\n            this.active = active;\r\n        }\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveSelf = function (active) {\r\n        this.pp_setActive(active, false);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveHierarchy = function (active) {\r\n        this.pp_setActiveHierarchyBreadth(active);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveHierarchyBreadth = function (active) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return WL.Object.pp_setActiveObjects(objects, active);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveHierarchyDepth = function (active) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return WL.Object.pp_setActiveObjects(objects, active);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveDescendants = function (active) {\r\n        this.pp_setActiveDescendantsBreadth(active);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveDescendantsBreadth = function (active) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return WL.Object.pp_setActiveObjects(objects, active);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveDescendantsDepth = function (active) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return WL.Object.pp_setActiveObjects(objects, active);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveChildren = function (active) {\r\n        let objects = this.pp_getChildren();\r\n        return WL.Object.pp_setActiveObjects(objects, active);\r\n    };\r\n\r\n    //Uniform Scale\r\n\r\n    WL.Object.prototype.pp_hasUniformScale = function () {\r\n        return this.pp_hasUniformScaleWorld();\r\n    };\r\n\r\n    WL.Object.prototype.pp_hasUniformScaleWorld = function () {\r\n        let scale = glMatrix.vec3.create();\r\n        return function pp_hasUniformScaleWorld() {\r\n            this.pp_getScaleWorld(scale);\r\n            return Math.abs(scale[0] - scale[1]) < this._pp_epsilon && Math.abs(scale[1] - scale[2]) < this._pp_epsilon && Math.abs(scale[0] - scale[2]) < this._pp_epsilon;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_hasUniformScaleLocal = function () {\r\n        let scale = glMatrix.vec3.create();\r\n        return function pp_hasUniformScaleLocal() {\r\n            this.pp_getScaleLocal(scale);\r\n            return Math.abs(scale[0] - scale[1]) < this._pp_epsilon && Math.abs(scale[1] - scale[2]) < this._pp_epsilon && Math.abs(scale[0] - scale[2]) < this._pp_epsilon;\r\n        };\r\n    }();\r\n\r\n    //Clone\r\n\r\n    PP.CloneParams = class CloneParams {\r\n        constructor() {\r\n            this.myIgnoreNonCloneable = false; // Ignores components that are not clonable\r\n            this.myIgnoreComponents = false; // All components are ignored, cloning only the object hierarchy\r\n            this.myIgnoreChildren = false; // Clones only the given object without the children\r\n\r\n            this.myComponentsToIgnore = []; // Ignores all component types in this list (example: \"mesh\"), has lower priority over myComponentsToInclude\r\n            this.myComponentsToInclude = []; // Clones only the component types in this list (example: \"mesh\"), has higher priority over myComponentsToIgnore, if empty it's ignored\r\n            this.myIgnoreComponentCallback = null; // Signature: callback(component) returns true if the component must be ignored, it is called after the previous filters\r\n\r\n            this.myChildrenToIgnore = []; // Ignores all the objects in this list (example: \"mesh\"), has lower priority over myChildrenToInclude\r\n            this.myChildrenToInclude = []; // Clones only the objects in this list (example: \"mesh\"), has higher priority over myChildrenToIgnore, if empty it's ignored\r\n            this.myIgnoreChildCallback = null; // Signature: callback(object) returns true if the object must be ignored, it is called after the previous filters\r\n\r\n            this.myDeepCloneParams = new PP.DeepCloneParams(); // Used to specify if the object must be deep cloned or not, you can also override the behavior for specific components and variables\r\n\r\n            this.myCustomParamsMap = new Map(); // This map can be filled with whatever custom paramater the component clone function could need\r\n        }\r\n    };\r\n\r\n    PP.DeepCloneParams = class DeepCloneParams {\r\n        constructor() {\r\n            this._myDeepCloneObject = false;\r\n            this._myOverrideDeepCloneComponentsMap = new Map();\r\n            this._myOverrideDeepCloneComponentsVariablesMap = new Map();\r\n        }\r\n\r\n        // The implementation is component dependant, not every component implements the deep clone\r\n        setDeepCloneObject(deepClone) {\r\n            this._myDeepCloneObject = deepClone;\r\n        }\r\n\r\n        // This value override the deep clone object value\r\n        // The implementation is component dependant, not every component implements the deep clone\r\n        setDeepCloneComponent(componentName, deepClone) {\r\n            this._myOverrideDeepCloneComponentsMap.set(componentName, deepClone);\r\n        }\r\n\r\n        // This value override both the deep clone object value and the deep clone component one\r\n        // The implementation is component dependant, not every component variable override is taken into consideration\r\n        setDeepCloneComponentVariable(componentName, variableName, deepClone) {\r\n            let componentsVariablesMap = null;\r\n\r\n            if (!this._myOverrideDeepCloneComponentsVariablesMap.has(componentName)) {\r\n                this._myOverrideDeepCloneComponentsVariablesMap.set(componentName, new Map());\r\n            }\r\n\r\n            componentsVariablesMap = this._myOverrideDeepCloneComponentsVariablesMap.get(componentName);\r\n\r\n            componentsVariablesMap.set(variableName, deepClone);\r\n        }\r\n\r\n        isDeepCloneComponent(componentName) {\r\n            let overrideValue = this._myOverrideDeepCloneComponentsMap.get(componentName);\r\n\r\n            if (overrideValue != null) {\r\n                return overrideValue;\r\n            }\r\n\r\n            return this._myDeepCloneObject;\r\n        }\r\n\r\n        isDeepCloneComponentVariable(componentName, variableName) {\r\n            let componentsVariablesMap = this._myOverrideDeepCloneComponentsVariablesMap.get(componentName);\r\n            if (componentsVariablesMap != null) {\r\n                let overrideValue = componentsVariablesMap.get(variableName);\r\n                if (overrideValue != null) {\r\n                    return overrideValue;\r\n                }\r\n            }\r\n\r\n            return this.isDeepCloneComponent(componentName);\r\n        }\r\n    };\r\n\r\n    WL.Object.prototype.pp_clone = function () {\r\n        let scale = glMatrix.vec3.create();\r\n        let transformQuat = glMatrix.quat2.create();\r\n        return function pp_clone(params = new PP.CloneParams()) {\r\n            let clonedObject = null;\r\n\r\n            if (this.pp_isCloneable(params)) {\r\n                let objectsToCloneData = [];\r\n                objectsToCloneData.push([this.parent, this]);\r\n\r\n                // Create the object hierarchy\r\n                let objectsToCloneComponentsData = [];\r\n                while (objectsToCloneData.length > 0) {\r\n                    let cloneData = objectsToCloneData.shift();\r\n                    let parent = cloneData[0];\r\n                    let objectToClone = cloneData[1];\r\n\r\n                    let currentClonedObject = WL.scene.addObject(parent);\r\n                    currentClonedObject.name = objectToClone.name;\r\n\r\n                    currentClonedObject.pp_setScaleLocal(objectToClone.pp_getScaleLocal(scale));\r\n                    currentClonedObject.pp_setTransformLocalQuat(objectToClone.pp_getTransformLocalQuat(transformQuat));\r\n\r\n                    if (!params.myIgnoreComponents) {\r\n                        objectsToCloneComponentsData.push([objectToClone, currentClonedObject]);\r\n                    }\r\n\r\n                    if (!params.myIgnoreChildren) {\r\n                        for (let child of objectToClone.children) {\r\n                            let cloneChild = false;\r\n                            if (params.myChildrenToInclude.length > 0) {\r\n                                cloneChild = params.myChildrenToInclude.find(childToInclude => childToInclude.pp_equals(child)) != null;\r\n                            } else {\r\n                                cloneChild = params.myChildrenToIgnore.find(childToIgnore => childToIgnore.pp_equals(child)) == null;\r\n                            }\r\n\r\n                            if (cloneChild && params.myIgnoreChildCallback != null) {\r\n                                cloneChild = !params.myIgnoreChildCallback(child);\r\n                            }\r\n\r\n                            if (cloneChild) {\r\n                                objectsToCloneData.push([currentClonedObject, child]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (clonedObject == null) {\r\n                        clonedObject = currentClonedObject;\r\n                    }\r\n                }\r\n\r\n                // Get the components to clone\r\n                let componentsToCloneData = [];\r\n                while (objectsToCloneComponentsData.length > 0) {\r\n                    let cloneData = objectsToCloneComponentsData.shift();\r\n                    let objectToClone = cloneData[0];\r\n                    let currentClonedObject = cloneData[1];\r\n\r\n                    let components = objectToClone.pp_getComponentsSelf();\r\n                    for (let component of components) {\r\n                        if (component.pp_clone != null) {\r\n                            let cloneComponent = false;\r\n                            if (params.myComponentsToInclude.length > 0) {\r\n                                cloneComponent = params.myComponentsToInclude.indexOf(component.type) != -1;\r\n                            } else {\r\n                                cloneComponent = params.myComponentsToIgnore.indexOf(component.type) == -1;\r\n                            }\r\n\r\n                            if (cloneComponent && params.myIgnoreComponentCallback != null) {\r\n                                cloneComponent = !params.myIgnoreComponentCallback(component);\r\n                            }\r\n\r\n                            if (cloneComponent) {\r\n                                componentsToCloneData.push([component, currentClonedObject]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Clone the components\r\n                let componentsToPostProcessData = [];\r\n                while (componentsToCloneData.length > 0) {\r\n                    let cloneData = componentsToCloneData.shift();\r\n                    let componentToClone = cloneData[0];\r\n                    let currentClonedObject = cloneData[1];\r\n\r\n                    let clonedComponent = componentToClone.pp_clone(currentClonedObject, params.myDeepCloneParams, params.myCustomParamsMap);\r\n                    if (componentToClone.pp_clonePostProcess != null) {\r\n                        componentsToPostProcessData.push([componentToClone, clonedComponent]);\r\n                    }\r\n                }\r\n\r\n                // Clone post process\r\n                // Can be useful if you have to get some data from other components in the hierarchy which have now been created\r\n                while (componentsToPostProcessData.length > 0) {\r\n                    let cloneData = componentsToPostProcessData.shift();\r\n                    let componentToClone = cloneData[0];\r\n                    let currentClonedComponent = cloneData[1];\r\n\r\n                    componentToClone.pp_clonePostProcess(currentClonedComponent, params.myDeepCloneParams, params.myCustomParamsMap);\r\n                }\r\n            }\r\n\r\n            return clonedObject;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_isCloneable = function (params = new PP.CloneParams()) {\r\n        if (params.myIgnoreNonCloneable || params.myIgnoreComponents) {\r\n            return true;\r\n        }\r\n\r\n        let isCloneable = true;\r\n\r\n        let objects = [];\r\n        objects.push(this);\r\n\r\n        while (isCloneable && objects.length > 0) {\r\n            let object = objects.shift();\r\n\r\n            let components = this.pp_getComponentsSelf();\r\n            for (let component of components) {\r\n                let cloneComponent = false;\r\n                if (params.myComponentsToInclude.length > 0) {\r\n                    cloneComponent = params.myComponentsToInclude.indexOf(component.type) != -1;\r\n                } else {\r\n                    cloneComponent = params.myComponentsToIgnore.indexOf(component.type) == -1;\r\n                }\r\n\r\n                if (cloneComponent && params.myIgnoreComponentCallback != null) {\r\n                    cloneComponent = !params.myIgnoreComponentCallback(component);\r\n                }\r\n\r\n                if (cloneComponent && component.pp_clone == null) {\r\n                    isCloneable = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (isCloneable && !params.myIgnoreChildren) {\r\n                for (let child of object.children) {\r\n                    let cloneChild = false;\r\n                    if (params.myChildrenToInclude.length > 0) {\r\n                        cloneChild = params.myChildrenToInclude.find(childToInclude => childToInclude.pp_equals(child)) != null;\r\n                    } else {\r\n                        cloneChild = params.myChildrenToIgnore.find(childToInclude => childToInclude.pp_equals(child)) == null;\r\n                    }\r\n\r\n                    if (cloneChild && params.myIgnoreChildCallback != null) {\r\n                        cloneChild = !params.myIgnoreChildCallback(child);\r\n                    }\r\n\r\n                    if (cloneChild) {\r\n                        objects.push(child);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return isCloneable;\r\n    };\r\n\r\n    //To String\r\n\r\n    WL.Object.prototype.pp_toString = function () {\r\n        return this.pp_toStringCompact();\r\n    }\r\n\r\n    WL.Object.prototype.pp_toStringExtended = function () {\r\n        let tab = \"    \";\r\n        let newLine = \"\\n\";\r\n        let startObject = \"{\";\r\n        let endObject = \"}\";\r\n        let nameLabel = \"name: \";\r\n        let idLabel = \"id: \";\r\n        let componentsLabel = \"components: \";\r\n        let typeLabel = \"type: \";\r\n        let childrenLabel = \"children: \";\r\n        let startComponents = \"[\";\r\n        let endComponents = \"]\";\r\n        let startChildren = startComponents;\r\n        let endChildren = endComponents;\r\n        let separator = \",\";\r\n        let newLineTab = newLine.concat(tab, tab);\r\n        return function pp_toStringExtended() {\r\n            let objectString = \"\";\r\n            objectString = objectString.concat(startObject, newLine);\r\n\r\n            let components = this.pp_getComponentsSelf();\r\n            let children = this.pp_getChildren();\r\n            let name = this.pp_getName();\r\n\r\n            if (components.length > 0 || children.length > 0 || name.length > 0) {\r\n                objectString = objectString.concat(tab, idLabel, this.pp_getID(), separator, newLine);\r\n            } else {\r\n                objectString = objectString.concat(tab, idLabel, this.pp_getID(), newLine);\r\n            }\r\n\r\n            if (name.length > 0) {\r\n                if (components.length > 0 || children.length > 0) {\r\n                    objectString = objectString.concat(tab, nameLabel, this.pp_getName(), separator, newLine);\r\n                } else {\r\n                    objectString = objectString.concat(tab, nameLabel, this.pp_getName(), newLine);\r\n                }\r\n            }\r\n\r\n            if (components.length > 0) {\r\n                objectString = objectString.concat(tab, componentsLabel, newLine, tab, startComponents, newLine);\r\n                for (let i = 0; i < components.length; i++) {\r\n                    let component = components[i];\r\n\r\n                    objectString = objectString.concat(tab, tab, startObject, newLine);\r\n                    objectString = objectString.concat(tab, tab, tab, typeLabel, component.type, separator, newLine);\r\n                    objectString = objectString.concat(tab, tab, tab, idLabel, component._id, separator, newLine);\r\n                    objectString = objectString.concat(tab, tab, endObject);\r\n\r\n                    if (i != components.length - 1) {\r\n                        objectString = objectString.concat(separator, newLine);\r\n                    } else {\r\n                        objectString = objectString.concat(newLine);\r\n                    }\r\n                }\r\n\r\n                if (children.length > 0) {\r\n                    objectString = objectString.concat(tab, endComponents, separator, newLine);\r\n                } else {\r\n                    objectString = objectString.concat(tab, endComponents, newLine);\r\n                }\r\n            }\r\n\r\n            if (children.length > 0) {\r\n                objectString = objectString.concat(tab, childrenLabel, newLine, tab, startChildren, newLine);\r\n                for (let i = 0; i < children.length; i++) {\r\n                    let child = children[i];\r\n\r\n                    let childString = child.pp_toStringExtended();\r\n                    childString = childString.replaceAll(newLine, newLineTab);\r\n                    childString = tab.concat(tab, childString);\r\n                    objectString = objectString.concat(childString);\r\n\r\n                    if (i != children.length - 1) {\r\n                        objectString = objectString.concat(separator, newLine);\r\n                    } else {\r\n                        objectString = objectString.concat(newLine);\r\n                    }\r\n                }\r\n                objectString = objectString.concat(tab, endChildren, newLine);\r\n            }\r\n\r\n            objectString = objectString.concat(endObject);\r\n\r\n            return objectString;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_toStringCompact = function () {\r\n        let tab = \"    \";\r\n        let newLine = \"\\n\";\r\n        let emptyName = \"<none>\";\r\n        let nameLabel = \"name: \";\r\n        let componentsLabel = \"components: \";\r\n        let separator = \", \";\r\n        let newLineTab = newLine.concat(tab);\r\n        return function pp_toStringCompact() {\r\n            let objectString = \"\";\r\n\r\n            let name = this.pp_getName();\r\n            if (name.length > 0) {\r\n                objectString = objectString.concat(nameLabel, name);\r\n            } else {\r\n                objectString = objectString.concat(nameLabel, emptyName);\r\n            }\r\n\r\n            let components = this.pp_getComponentsSelf();\r\n            if (components.length > 0) {\r\n                objectString = objectString.concat(separator, componentsLabel);\r\n                for (let i = 0; i < components.length; i++) {\r\n                    let component = components[i];\r\n\r\n                    objectString = objectString.concat(component.type);\r\n\r\n                    if (i != components.length - 1) {\r\n                        objectString = objectString.concat(separator);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let children = this.pp_getChildren();\r\n            if (children.length > 0) {\r\n                objectString = objectString.concat(newLine);\r\n                for (let i = 0; i < children.length; i++) {\r\n                    let child = children[i];\r\n\r\n                    let childString = child.pp_toStringCompact();\r\n                    childString = childString.replaceAll(newLine, newLineTab);\r\n                    childString = tab.concat(childString);\r\n                    objectString = objectString.concat(childString);\r\n\r\n                    if (i != children.length - 1) {\r\n                        objectString = objectString.concat(newLine);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return objectString;\r\n        };\r\n    }();\r\n\r\n    //Get By Name\r\n\r\n    WL.Object.prototype.pp_getObjectByName = function (name) {\r\n        return this.pp_getObjectByNameHierarchy(name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectByNameHierarchy = function (name) {\r\n        return this.pp_getObjectByNameHierarchyBreadth(name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectByNameHierarchyBreadth = function (name) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return WL.Object.pp_getObjectByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectByNameHierarchyDepth = function (name) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return WL.Object.pp_getObjectByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectByNameDescendants = function (name) {\r\n        return this.pp_getObjectByNameDescendantsBreadth(name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectByNameDescendantsBreadth = function (name) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return WL.Object.pp_getObjectByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectByNameDescendantsDepth = function (name) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return WL.Object.pp_getObjectByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectByNameChildren = function (name) {\r\n        let objects = this.pp_getChildren();\r\n        return WL.Object.pp_getObjectByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByName = function (name) {\r\n        return this.pp_getObjectsByNameHierarchy(name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByNameHierarchy = function (name) {\r\n        return this.pp_getObjectsByNameHierarchyBreadth(name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByNameHierarchyBreadth = function (name) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return WL.Object.pp_getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByNameHierarchyDepth = function (name) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return WL.Object.pp_getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByNameDescendants = function (name) {\r\n        return this.pp_getObjectsByNameDescendantsBreadth(name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByNameDescendantsBreadth = function (name) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return WL.Object.pp_getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByNameDescendantsDepth = function (name) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return WL.Object.pp_getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByNameChildren = function (name) {\r\n        let objects = this.pp_getChildren();\r\n        return WL.Object.pp_getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    //Get Hierarchy\r\n\r\n    WL.Object.prototype.pp_getHierarchy = function () {\r\n        return this.pp_getHierarchyBreadth();\r\n    };\r\n\r\n    WL.Object.prototype.pp_getHierarchyBreadth = function () {\r\n        let hierarchy = this.pp_getDescendantsBreadth();\r\n\r\n        hierarchy.unshift(this);\r\n\r\n        return hierarchy;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getHierarchyDepth = function () {\r\n        let hierarchy = this.pp_getDescendantsDepth();\r\n\r\n        hierarchy.unshift(this);\r\n\r\n        return hierarchy;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getDescendants = function () {\r\n        return this.pp_getDescendantsBreadth();\r\n    };\r\n\r\n    WL.Object.prototype.pp_getDescendantsBreadth = function () {\r\n        let descendants = [];\r\n\r\n        let descendantsQueue = this.children;\r\n\r\n        while (descendantsQueue.length > 0) {\r\n            let descendant = descendantsQueue.shift();\r\n            descendants.push(descendant);\r\n            for (let object of descendant.children) {\r\n                descendantsQueue.push(object);\r\n            }\r\n        }\r\n\r\n        return descendants;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getDescendantsDepth = function () {\r\n        let descendants = [];\r\n\r\n        let children = this.pp_getChildren();\r\n\r\n        for (let child of children) {\r\n            descendants.push(child);\r\n\r\n            let childDescendants = child.pp_getDescendantsDepth();\r\n            if (childDescendants.length > 0) {\r\n                descendants.push(...childDescendants);\r\n            }\r\n        }\r\n\r\n        return descendants;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getChildren = function () {\r\n        return this.children;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getSelf = function () {\r\n        return this;\r\n    };\r\n\r\n    //Cauldron\r\n\r\n    WL.Object.prototype.pp_addObject = function () {\r\n        return WL.scene.addObject(this);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getName = function () {\r\n        return this.name;\r\n    };\r\n\r\n    WL.Object.prototype.pp_setName = function (name) {\r\n        this.name = name;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getID = function () {\r\n        return this.objectId;\r\n    };\r\n\r\n    WL.Object.prototype.pp_markDirty = function () {\r\n        return this.setDirty();\r\n    };\r\n\r\n    WL.Object.prototype.pp_equals = function (otherObject) {\r\n        return this.equals(otherObject);\r\n    };\r\n\r\n    WL.Object.prototype.pp_destroy = function () {\r\n        return this.destroy();\r\n    };\r\n\r\n    WL.Object.prototype.pp_reserveObjects = function (count) {\r\n        this.pp_reserveObjectsHierarchy(count);\r\n    };\r\n\r\n    WL.Object.prototype.pp_reserveObjectsSelf = function (count) {\r\n        let componentsAmountMap = this.pp_getComponentsAmountMapSelf();\r\n        this._pp_reserveObjects(count, componentsAmountMap);\r\n    };\r\n\r\n    WL.Object.prototype.pp_reserveObjectsHierarchy = function (count) {\r\n        let componentsAmountMap = this.pp_getComponentsAmountMapHierarchy();\r\n        this._pp_reserveObjects(count, componentsAmountMap);\r\n    };\r\n\r\n    WL.Object.prototype.pp_reserveObjectsDescendants = function (count) {\r\n        let componentsAmountMap = this.pp_getComponentsAmountMapDescendants();\r\n        this._pp_reserveObjects(count, componentsAmountMap);\r\n    };\r\n\r\n    WL.Object.prototype.pp_reserveObjectsChildren = function (count) {\r\n        let componentsAmountMap = this.pp_getComponentsAmountMapChildren();\r\n        this._pp_reserveObjects(count, componentsAmountMap);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsAmountMap = function (amountMap = new Map()) {\r\n        return this.pp_getComponentsAmountMapHierarchy(amountMap);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsAmountMapSelf = function (amountMap = new Map()) {\r\n        let objectsAmount = amountMap.get(\"object\");\r\n        if (objectsAmount == null) {\r\n            objectsAmount = 0;\r\n        }\r\n        objectsAmount += 1;\r\n        amountMap.set(\"object\", objectsAmount);\r\n\r\n        let components = this.pp_getComponentsSelf();\r\n        for (let component of components) {\r\n            let type = component.type;\r\n            let typeAmount = amountMap.get(type);\r\n            if (typeAmount == null) {\r\n                typeAmount = 0;\r\n            }\r\n            typeAmount += 1;\r\n            amountMap.set(type, typeAmount);\r\n        }\r\n\r\n        return amountMap;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsAmountMapHierarchy = function (amountMap = new Map()) {\r\n        let hierarchy = this.pp_getHierarchy();\r\n\r\n        for (let object of hierarchy) {\r\n            object.pp_getComponentsAmountMapSelf(amountMap);\r\n        }\r\n\r\n        return amountMap;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsAmountMapDescendants = function (amountMap = new Map()) {\r\n        let descendants = this.pp_getDescendants();\r\n\r\n        for (let object of descendants) {\r\n            object.pp_getComponentsAmountMapSelf(amountMap);\r\n        }\r\n\r\n        return amountMap;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsAmountMapChildren = function (amountMap = new Map()) {\r\n        let children = this.pp_getChildren();\r\n\r\n        for (let object of children) {\r\n            object.pp_getComponentsAmountMapSelf(amountMap);\r\n        }\r\n\r\n        return amountMap;\r\n    };\r\n\r\n    //Static\r\n\r\n    WL.Object.pp_getComponentObjects = function (objects, type, index = 0) {\r\n        let component = null;\r\n\r\n        for (let object of objects) {\r\n            component = object.getComponent(type, index);\r\n            if (component != null) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return component;\r\n    };\r\n\r\n    WL.Object.pp_getComponentsObjects = function (objects, type) {\r\n        let components = [];\r\n\r\n        for (let object of objects) {\r\n            components.push(...object.getComponents(type));\r\n        }\r\n\r\n        return components;\r\n    };\r\n\r\n    WL.Object.pp_setActiveObjects = function (objects, active) {\r\n        for (let object of objects) {\r\n            object.active = active;\r\n        }\r\n    };\r\n\r\n    WL.Object.pp_getObjectByNameObjects = function (objects, name) {\r\n        let objectFound = null;\r\n\r\n        for (let object of objects) {\r\n            if (object.pp_getName() == name) {\r\n                objectFound = object;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return objectFound;\r\n    }\r\n\r\n    WL.Object.pp_getObjectsByNameObjects = function (objects, name) {\r\n        let objectsFound = [];\r\n\r\n        for (let object of objects) {\r\n            if (object.pp_getName() == name) {\r\n                objectsFound.push(object);\r\n            }\r\n        }\r\n\r\n        return objectsFound;\r\n    }\r\n\r\n    //Private Utils\r\n\r\n    WL.Object.prototype._pp_epsilon = 0.000001;\r\n\r\n    WL.Object.prototype._pp_quaternionToRadians = function () {\r\n        let mat3 = glMatrix.mat3.create();\r\n        return function _pp_quaternionToRadians(quatRotation, radiansRotation = glMatrix.vec3.create()) {\r\n            glMatrix.mat3.fromQuat(mat3, quatRotation);\r\n\r\n            //Rotation order is ZYX\r\n            radiansRotation[1] = Math.asin(-this._pp_clamp(mat3[2], -1, 1));\r\n\r\n            if (Math.abs(mat3[2]) < 0.9999999) {\r\n\r\n                radiansRotation[0] = Math.atan2(mat3[5], mat3[8]);\r\n                radiansRotation[2] = Math.atan2(mat3[1], mat3[0]);\r\n\r\n            } else {\r\n\r\n                radiansRotation[0] = 0;\r\n                radiansRotation[2] = Math.atan2(-mat3[3], mat3[4]);\r\n            }\r\n\r\n            return radiansRotation;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype._pp_degreesToQuaternion = function (degreesRotation, quatRotation = glMatrix.quat.create()) {\r\n        glMatrix.quat.fromEuler(quatRotation, degreesRotation[0], degreesRotation[1], degreesRotation[2]);\r\n        return quatRotation;\r\n    };\r\n\r\n    WL.Object.prototype._pp_toDegrees = function (angle) {\r\n        return angle * (180 / Math.PI);\r\n    };\r\n\r\n    WL.Object.prototype._pp_clamp = function (value, min, max) {\r\n        return Math.min(Math.max(value, min), max);\r\n    };\r\n\r\n    WL.Object.prototype._pp_reserveObjects = function (count, componentsAmountMap) {\r\n        let objectsToReserve = componentsAmountMap.get(\"object\") * count;\r\n        componentsAmountMap.delete(\"object\");\r\n\r\n        let componentsToReserve = {};\r\n        for (let [componentName, componentCount] of componentsAmountMap.entries()) {\r\n            componentsToReserve[componentName] = componentCount * count;\r\n        }\r\n\r\n        WL.scene.reserveObjects(objectsToReserve, componentsToReserve);\r\n    };\r\n\r\n    WL.Object.prototype._pp_setAxes = function () {\r\n        let fixedAxes = [glMatrix.vec3.create(), glMatrix.vec3.create(), glMatrix.vec3.create()];\r\n\r\n        let fixedAxesFixSignMap = [\r\n            [1, -1, 1],\r\n            [1, 1, -1],\r\n            [-1, 1, -1]\r\n        ];\r\n\r\n        let fixedLeft = glMatrix.vec3.create();\r\n        let fixedUp = glMatrix.vec3.create();\r\n        let fixedForward = glMatrix.vec3.create();\r\n\r\n        let currentAxis = glMatrix.vec3.create();\r\n\r\n        let rotationAxis = glMatrix.vec3.create();\r\n        let rotationMat = glMatrix.mat3.create();\r\n        let rotationQuat = glMatrix.quat.create();\r\n        return function _pp_setAxes(axes, priority, isLocal) {\r\n            let firstAxis = axes[priority[0]];\r\n            let secondAxis = axes[priority[1]];\r\n            let thirdAxis = axes[priority[2]];\r\n\r\n            if (firstAxis == null || firstAxis.vec3_length() <= this._pp_epsilon) {\r\n                return;\r\n            }\r\n\r\n            let secondAxisValid = false;\r\n            if (secondAxis != null) {\r\n                let angleBetween = glMatrix.vec3.angle(firstAxis, secondAxis);\r\n                if (angleBetween > this._pp_epsilon) {\r\n                    secondAxisValid = true;\r\n                }\r\n            }\r\n\r\n            let thirdAxisValid = false;\r\n            if (thirdAxis != null) {\r\n                let angleBetween = glMatrix.vec3.angle(firstAxis, thirdAxis);\r\n                if (angleBetween > this._pp_epsilon) {\r\n                    thirdAxisValid = true;\r\n                }\r\n            }\r\n\r\n            if (secondAxisValid || thirdAxisValid) {\r\n\r\n                let crossAxis = null;\r\n                let secondAxisIndex = null;\r\n                let thirdAxisIndex = null;\r\n                if (secondAxisValid) {\r\n                    crossAxis = secondAxis;\r\n                    secondAxisIndex = 1;\r\n                    thirdAxisIndex = 2;\r\n                } else {\r\n                    crossAxis = thirdAxis;\r\n                    secondAxisIndex = 2;\r\n                    thirdAxisIndex = 1;\r\n                }\r\n\r\n                let fixSignMap = fixedAxesFixSignMap[priority[0]];\r\n\r\n                glMatrix.vec3.cross(fixedAxes[thirdAxisIndex], firstAxis, crossAxis);\r\n                glMatrix.vec3.scale(fixedAxes[thirdAxisIndex], fixedAxes[thirdAxisIndex], fixSignMap[priority[thirdAxisIndex]]);\r\n\r\n                glMatrix.vec3.cross(fixedAxes[secondAxisIndex], firstAxis, fixedAxes[thirdAxisIndex]);\r\n                glMatrix.vec3.scale(fixedAxes[secondAxisIndex], fixedAxes[secondAxisIndex], fixSignMap[priority[secondAxisIndex]]);\r\n\r\n                glMatrix.vec3.cross(fixedAxes[0], fixedAxes[1], fixedAxes[2]);\r\n                glMatrix.vec3.scale(fixedAxes[0], fixedAxes[0], fixSignMap[priority[0]]);\r\n\r\n                glMatrix.vec3.normalize(fixedLeft, fixedAxes[priority.pp_findIndexEqual(0)]);\r\n                glMatrix.vec3.normalize(fixedUp, fixedAxes[priority.pp_findIndexEqual(1)]);\r\n                glMatrix.vec3.normalize(fixedForward, fixedAxes[priority.pp_findIndexEqual(2)]);\r\n\r\n                glMatrix.mat3.set(rotationMat,\r\n                    fixedLeft[0], fixedLeft[1], fixedLeft[2],\r\n                    fixedUp[0], fixedUp[1], fixedUp[2],\r\n                    fixedForward[0], fixedForward[1], fixedForward[2]\r\n                );\r\n\r\n                glMatrix.quat.fromMat3(rotationQuat, rotationMat);\r\n                glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n\r\n                if (isLocal) {\r\n                    this.pp_setRotationLocalQuat(rotationQuat);\r\n                } else {\r\n                    this.pp_setRotationWorldQuat(rotationQuat);\r\n                }\r\n            } else {\r\n                if (priority[0] == 0) {\r\n                    if (isLocal) {\r\n                        this.pp_getLeftLocal(currentAxis);\r\n                    } else {\r\n                        this.pp_getLeftWorld(currentAxis);\r\n                    }\r\n                } else if (priority[0] == 1) {\r\n                    if (isLocal) {\r\n                        this.pp_getUpLocal(currentAxis);\r\n                    } else {\r\n                        this.pp_getUpWorld(currentAxis);\r\n                    }\r\n                } else {\r\n                    if (isLocal) {\r\n                        this.pp_getForwardLocal(currentAxis);\r\n                    } else {\r\n                        this.pp_getForwardWorld(currentAxis);\r\n                    }\r\n                }\r\n\r\n                let angle = glMatrix.vec3.angle(firstAxis, currentAxis);\r\n                if (angle != 0) {\r\n                    glMatrix.vec3.cross(rotationAxis, currentAxis, firstAxis);\r\n                    glMatrix.vec3.normalize(rotationAxis, rotationAxis);\r\n                    glMatrix.quat.setAxisAngle(rotationQuat, rotationAxis, angle);\r\n\r\n                    if (isLocal) {\r\n                        this.pp_rotateLocalQuat(rotationQuat);\r\n                    } else {\r\n                        this.pp_rotateWorldQuat(rotationQuat);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }();\r\n\r\n\r\n\r\n    for (let key in WL.Object.prototype) {\r\n        let prefixes = [\"pp_\", \"_pp_\"];\r\n\r\n        let found = false;\r\n        for (let prefix of prefixes) {\r\n            if (key.startsWith(prefix)) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (found) {\r\n            Object.defineProperty(WL.Object.prototype, key, { enumerable: false });\r\n        }\r\n    }\r\n\r\n}", "/*\r\n    How to use\r\n\r\n    By default the rotations are in Degrees\r\n\r\n    For rotations u can add a suffix like Degrees/Radians to use a specific version, example:\r\n        - pp_angleDistanceSignedDegrees\r\n        - pp_isInsideAngleRangeRadians\r\n        \r\n    List of constants:\r\n        - PP_EPSILON_NUMBER / PP_EPSILON_DEGREES\r\n\r\n    List of functions:\r\n        Notes:\r\n            - The suffixes (like Degrees or Radians) are omitted \r\n\r\n        - pp_clamp\r\n        - pp_sign\r\n        - pp_toDegrees      / pp_toRadians\r\n        - pp_roundDecimal\r\n        - pp_mapToRange\r\n        - pp_random         / pp_randomInt    / pp_randomInt        / pp_randomSign / pp_randomPick\r\n        - pp_lerp           / pp_interpolate  / PP.EasingFunction\r\n        - pp_angleDistance  / pp_angleDistanceSigned\r\n        - pp_angleClamp\r\n        - pp_isInsideAngleRange\r\n*/\r\n\r\nMath.PP_EPSILON_NUMBER = 0.00001;\r\nMath.PP_EPSILON_DEGREES = 0.0001;\r\n\r\nMath.pp_clamp = function (value, start, end) {\r\n    let fixedStart = (start != null) ? start : -Number.MAX_VALUE;\r\n    let fixedEnd = (end != null) ? end : Number.MAX_VALUE;\r\n\r\n    let min = Math.min(fixedStart, fixedEnd);\r\n    let max = Math.max(fixedStart, fixedEnd);\r\n    return Math.min(Math.max(value, min), max);\r\n};\r\n\r\nMath.pp_sign = function (value, zeroSign = 1) {\r\n    let sign = Math.sign(value);\r\n    if (sign == 0) {\r\n        sign = Math.sign(zeroSign);\r\n    }\r\n    return sign;\r\n};\r\n\r\nMath.pp_toDegrees = function (angle) {\r\n    return angle * (180 / Math.PI);\r\n};\r\n\r\nMath.pp_toRadians = function (angle) {\r\n    return angle * (Math.PI / 180);\r\n};\r\n\r\nMath.pp_roundDecimal = function (number, decimalPlaces) {\r\n    let factor = Math.pow(10, decimalPlaces);\r\n    number = Math.round(number * factor) / factor;\r\n\r\n    return number;\r\n};\r\n\r\n// Start range value doesn't need to be lower than the end one, so you can map from [0,1] to [3,2], where 3 is greater than 2\r\nMath.pp_mapToRange = function (value, originRangeStart, originRangeEnd, newRangeStart, newRangeEnd) {\r\n    if (originRangeStart == originRangeEnd) {\r\n        return newRangeStart;\r\n    }\r\n\r\n    let clampedValue = Math.pp_clamp(value, originRangeStart, originRangeEnd);\r\n\r\n    if (clampedValue == originRangeStart) {\r\n        return newRangeStart;\r\n    } else if (clampedValue == originRangeEnd) {\r\n        return newRangeEnd;\r\n    }\r\n\r\n    let newValue = newRangeStart + ((newRangeEnd - newRangeStart) / (originRangeEnd - originRangeStart)) * (clampedValue - originRangeStart);\r\n    let clampedNewValue = Math.pp_clamp(newValue, newRangeStart, newRangeEnd);\r\n    return clampedNewValue;\r\n};\r\n\r\n//Range is [start, end)\r\nMath.pp_random = function (start = 0, end = 1) {\r\n    return Math.random() * (end - start) + start;\r\n};\r\n\r\n//Range is [start, end]\r\nMath.pp_randomInt = function (start, end) {\r\n    let min = Math.min(start, end);\r\n    let max = Math.max(start, end);\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nMath.pp_randomBool = function () {\r\n    return Math.pp_randomInt(0, 1) == 0;\r\n};\r\n\r\n//Return 1 or -1\r\nMath.pp_randomSign = function () {\r\n    return (Math.random() < 0.5) ? 1 : -1;\r\n};\r\n\r\n//You give it a list of parameters and returns one\r\nMath.pp_randomPick = function (...args) {\r\n    let random = null;\r\n\r\n    if (args.length > 0) {\r\n        if (args.length == 1 && args[0].length != null) {\r\n            if (args[0].length > 0) {\r\n                let randomIndex = Math.pp_randomInt(0, args[0].length - 1);\r\n                random = args[0][randomIndex];\r\n            }\r\n        } else {\r\n            let randomIndex = Math.pp_randomInt(0, args.length - 1);\r\n            random = args[randomIndex];\r\n        }\r\n    }\r\n\r\n    return random;\r\n};\r\n\r\nMath.pp_lerp = function (from, to, interpolationValue) {\r\n    if (interpolationValue <= 0) {\r\n        return from;\r\n    } else if (interpolationValue >= 1) {\r\n        return to;\r\n    }\r\n\r\n    return interpolationValue * (to - from) + from;\r\n};\r\n\r\nPP.EasingFunction = {\r\n    linear: t => t,\r\n    easeIn: t => t * t * t,\r\n    easeOut: t => (t - 1) * (t - 1) * (t - 1) + 1,\r\n    easeInOut: t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\r\n};\r\n\r\nMath.pp_interpolate = function (from, to, interpolationValue, easingFunction = PP.EasingFunction.linear) {\r\n    let lerpValue = easingFunction(interpolationValue);\r\n    return Math.pp_lerp(from, to, lerpValue);\r\n};\r\n\r\nMath.pp_angleDistance = function (from, to) {\r\n    return Math.pp_angleDistanceDegrees(from, to);\r\n};\r\n\r\nMath.pp_angleDistanceDegrees = function (from, to) {\r\n    return Math.abs(Math.pp_angleDistanceSignedDegrees(from, to));\r\n};\r\n\r\nMath.pp_angleDistanceRadians = function (from, to) {\r\n    return Math.abs(Math.pp_angleDistanceSignedRadians(from, to));\r\n};\r\n\r\nMath.pp_angleDistanceSigned = function (from, to) {\r\n    return Math.pp_angleDistanceSignedDegrees(from, to);\r\n};\r\n\r\nMath.pp_angleDistanceSignedDegrees = function (from, to) {\r\n    let clampedFrom = Math.pp_angleClampDegrees(from, true);\r\n    let clampedTo = Math.pp_angleClampDegrees(to, true);\r\n\r\n    let distance = clampedTo - clampedFrom;\r\n    if (clampedTo - clampedFrom > 180) {\r\n        distance = (clampedTo - clampedFrom) - 360;\r\n    } else if (clampedTo - clampedFrom < -180) {\r\n        distance = (clampedTo - clampedFrom) + 360;\r\n    }\r\n\r\n    return distance;\r\n};\r\n\r\nMath.pp_angleDistanceSignedRadians = function (from, to) {\r\n    return Math.pp_toRadians(Math.pp_angleDistanceSignedDegrees(Math.pp_toDegrees(from), Math.pp_toDegrees(to)));\r\n};\r\n\r\n//Clamp the angle to -180/+180, so that, for example, 270 will be -90\r\n//if usePositiveRange is true, the angle will be clamped to 0/360\r\nMath.pp_angleClamp = function (angle, usePositiveRange = false) {\r\n    return Math.pp_angleClampDegrees(angle, usePositiveRange);\r\n};\r\n\r\n//Clamp the angle to -180/+180, so that, for example, 270 will be -90\r\n//if usePositiveRange is true, the angle will be clamped to 0/360\r\nMath.pp_angleClampDegrees = function (angle, usePositiveRange = false) {\r\n    let clampedAngle = angle % 360;\r\n\r\n    if (clampedAngle < 0) {\r\n        clampedAngle += 360;\r\n    }\r\n\r\n    if (!usePositiveRange) {\r\n        if (clampedAngle > 180) {\r\n            clampedAngle -= 360;\r\n        }\r\n    }\r\n\r\n    return clampedAngle;\r\n};\r\n\r\n//Clamp the angle to -Pi/+Pi, so that, for example, 270 will be -90\r\n//if usePositiveRange is true, the angle will be clamped to 0/2Pi\r\nMath.pp_angleClampRadians = function (angle, usePositiveRange = false) {\r\n    return Math.pp_toRadians(Math.pp_angleClampDegrees(Math.pp_toDegrees(angle), usePositiveRange));\r\n};\r\n\r\n//The range goes from start to end by going toward the positive direction (if useShortestAngle is false)\r\n//[20,300] is a 280 degrees range, [300, 20] is an 80 degrees range, [-150,-170] = [210, 190] is a 240 degrees range, [0, -10] = [0, 350] is a 350 degrees range\r\nMath.pp_isInsideAngleRange = function (angle, start, end, useShortestAngle = false) {\r\n    return Math.pp_isInsideAngleRangeDegrees(angle, start, end, useShortestAngle);\r\n};\r\n\r\nMath.pp_isInsideAngleRangeDegrees = function (angle, start, end, useShortestAngle = false) {\r\n    let isInside = false;\r\n\r\n    let anglePositive = Math.pp_angleClampDegrees(angle, true);\r\n    let startPositive = Math.pp_angleClampDegrees(start, true);\r\n    let endPositive = Math.pp_angleClampDegrees(end, true);\r\n\r\n    if (useShortestAngle) {\r\n        if (Math.pp_angleDistanceSignedDegrees(startPositive, endPositive) < 0) {\r\n            let temp = startPositive;\r\n            startPositive = endPositive;\r\n            endPositive = temp;\r\n        }\r\n    }\r\n\r\n    if (startPositive < endPositive) {\r\n        isInside = anglePositive >= startPositive && anglePositive <= endPositive;\r\n    } else {\r\n        isInside = anglePositive >= startPositive || anglePositive <= endPositive;\r\n    }\r\n\r\n    return isInside;\r\n};\r\n\r\nMath.pp_isInsideAngleRangeRadians = function (angle, start, end, useShortestAngle = false) {\r\n    return Math.pp_isInsideAngleRangeDegrees(Math.pp_toDegrees(angle), Math.pp_toDegrees(start), Math.pp_toDegrees(end), useShortestAngle);\r\n};\r\n\r\n\r\n\r\n\r\nfor (let key in Math) {\r\n    let prefixes = [\"pp_\", \"_pp_\"];\r\n\r\n    let found = false;\r\n    for (let prefix of prefixes) {\r\n        if (key.startsWith(prefix)) {\r\n            found = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (found) {\r\n        Object.defineProperty(Math, key, { enumerable: false });\r\n    }\r\n}", "/*\r\n    How to use\r\n\r\n    On some of the functions u can specify if the algorithm should explore by Breadth/Depth, example:\r\n        - pp_getObjectByNameBreadth\r\n        - pp_getComponentsDepth\r\n    By default the functions explore by Breadth\r\n\r\n    List of functions:\r\n        - pp_getRoot\r\n        - pp_getObjects\r\n        \r\n        - pp_getComponent\r\n        - pp_getComponents\r\n        \r\n        - pp_getObjectByName\r\n        - pp_getObjectsByName\r\n        \r\n        - pp_toString / pp_toStringCompact / pp_toStringExtended\r\n\r\n        - pp_getComponentsAmountMap\r\n*/\r\n\r\nif (WL && WL.Scene) {\r\n\r\n    WL.Scene.prototype.pp_getRoot = function () {\r\n        return new WL.Object(0);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjects = function () {\r\n        return this.pp_getObjectsBreadth();\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjectsBreadth = function () {\r\n        return this.pp_getRoot().pp_getHierarchyBreadth();\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjectsDepth = function () {\r\n        return this.pp_getRoot().pp_getHierarchyDepth();\r\n    }\r\n\r\n    //Get Component    \r\n\r\n    WL.Scene.prototype.pp_getComponent = function (type, index = 0) {\r\n        return this.pp_getComponentBreadth(type, index);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getComponentBreadth = function (type, index = 0) {\r\n        return this.pp_getRoot().pp_getComponentHierarchyBreadth(type, index);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getComponentDepth = function (type, index = 0) {\r\n        return this.pp_getRoot().pp_getComponentHierarchyDepth(type, index);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getComponents = function (type) {\r\n        return this.pp_getComponentsBreadth(type);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getComponentsBreadth = function (type) {\r\n        return this.pp_getRoot().pp_getComponentsHierarchyBreadth(type);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getComponentsDepth = function (type) {\r\n        return this.pp_getRoot().pp_getComponentsHierarchyDepth(type);\r\n    }\r\n\r\n    //Get By Name\r\n\r\n    WL.Scene.prototype.pp_getObjectByName = function (name) {\r\n        return this.pp_getObjectByNameBreadth(name);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjectByNameBreadth = function (name) {\r\n        return this.pp_getRoot().pp_getObjectByNameHierarchyBreadth(name);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjectByNameDepth = function (name) {\r\n        return this.pp_getRoot().pp_getObjectByNameHierarchyDepth(name);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjectsByName = function (name) {\r\n        return this.pp_getObjectsByNameBreadth(name);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjectsByNameBreadth = function (name) {\r\n        return this.pp_getRoot().pp_getObjectsByNameHierarchyBreadth(name);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjectsByNameDepth = function (name) {\r\n        return this.pp_getRoot().pp_getObjectsByNameHierarchyDepth(name);\r\n    }\r\n\r\n    //To String\r\n\r\n    WL.Scene.prototype.pp_toString = function () {\r\n        return this.pp_toStringCompact();\r\n    }\r\n\r\n    WL.Scene.prototype.pp_toStringCompact = function () {\r\n        return this.pp_getRoot().pp_toStringCompact();\r\n    }\r\n\r\n    WL.Scene.prototype.pp_toStringExtended = function () {\r\n        return this.pp_getRoot().pp_toStringExtended();\r\n    }\r\n\r\n    //Cauldron\r\n\r\n    WL.Scene.prototype.pp_getComponentsAmountMap = function (amountMap = new Map()) {\r\n        return this.pp_getRoot().pp_getComponentsAmountMapHierarchy(amountMap);\r\n    }\r\n\r\n\r\n\r\n    for (let key in WL.Scene.prototype) {\r\n        let prefixes = [\"pp_\", \"_pp_\"];\r\n\r\n        let found = false;\r\n        for (let prefix of prefixes) {\r\n            if (key.startsWith(prefix)) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (found) {\r\n            Object.defineProperty(WL.Scene.prototype, key, { enumerable: false });\r\n        }\r\n    }\r\n\r\n}", "if (WL && WL.Object) {\r\n\r\n    WL.MeshComponent.prototype.pp_clone = function (targetObject, deepCloneParams = new PP.DeepCloneParams(), customParamsMap = null) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        if (deepCloneParams.isDeepCloneComponentVariable(\"mesh\", \"material\")) {\r\n            clonedComponent.material = this.material.clone();\r\n        } else {\r\n            clonedComponent.material = this.material;\r\n        }\r\n\r\n        if (deepCloneParams.isDeepCloneComponentVariable(\"mesh\", \"mesh\")) {\r\n            clonedComponent.mesh = PP.MeshUtils.cloneMesh(this.mesh);\r\n        } else {\r\n            clonedComponent.mesh = this.mesh;\r\n        }\r\n\r\n        clonedComponent.skin = this.skin;\r\n\r\n        return clonedComponent;\r\n    };\r\n\r\n    WL.CollisionComponent.prototype.pp_clone = function (targetObject, deepCloneParams = new PP.DeepCloneParams(), customParamsMap = null) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        clonedComponent.collider = this.collider;\r\n        clonedComponent.extents = this.extents.slice(0);\r\n        clonedComponent.group = this.group;\r\n\r\n        return clonedComponent;\r\n    };\r\n\r\n    WL.TextComponent.prototype.pp_clone = function (targetObject, deepCloneParams = new PP.DeepCloneParams(), customParamsMap = null) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        if (deepCloneParams.isDeepCloneComponent(\"text\")) {\r\n            clonedComponent.text = this.text.slice(0);\r\n        } else {\r\n            clonedComponent.text = this.text;\r\n        }\r\n\r\n        if (deepCloneParams.isDeepCloneComponentVariable(\"text\", \"material\")) {\r\n            clonedComponent.material = this.material.clone();\r\n        } else {\r\n            clonedComponent.material = this.material;\r\n        }\r\n\r\n        clonedComponent.alignment = this.alignment;\r\n        clonedComponent.justification = this.justification;\r\n\r\n        return clonedComponent;\r\n    };\r\n\r\n    // #TODO not completed, missing flags like gravity or groups\r\n    WL.PhysXComponent.prototype.pp_clone = function (targetObject, deepCloneParams = new PP.DeepCloneParams(), customParamsMap = null) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type, {\r\n            \"angularDamping\": this.angularDamping,\r\n            //\"angularVelocity\": this.angularVelocity,\r\n            \"dynamicFriction\": this.dynamicFriction,\r\n            \"extents\": this.extents,\r\n            \"kinematic\": this.kinematic,\r\n            \"linearDamping\": this.linearDamping,\r\n            //\"linearVelocity\": this.linearVelocity,\r\n            \"mass\": this.mass,\r\n            \"restituition\": this.restituition,\r\n            \"shape\": this.shape,\r\n            \"shapeData\": this.shapeData,\r\n            \"static\": this.static,\r\n            \"staticFriction\": this.staticFriction,\r\n        });\r\n\r\n        clonedComponent.backupExtents = this.extents.vec3_clone();\r\n\r\n        clonedComponent.active = this.active;\r\n\r\n        return clonedComponent;\r\n    };\r\n\r\n\r\n\r\n    Object.defineProperty(WL.MeshComponent.prototype, \"pp_clone\", { enumerable: false });\r\n    Object.defineProperty(WL.CollisionComponent.prototype, \"pp_clone\", { enumerable: false });\r\n    Object.defineProperty(WL.TextComponent.prototype, \"pp_clone\", { enumerable: false });\r\n    Object.defineProperty(WL.PhysXComponent.prototype, \"pp_clone\", { enumerable: false });\r\n\r\n}", "import { vec3, mat4 } from 'gl-matrix';\r\n\r\nif (_WL && _WL._componentTypes && _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]]) {\r\n\r\n    // Modified Functions\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.init = function () {\r\n        /* VR session cache, in case in VR */\r\n        this.session = null;\r\n        this.collisionMask = (1 << this.collisionGroup);\r\n        this.maxDistance = 100;\r\n\r\n        this.doubleClickTimer = 0;\r\n        this.tripleClickTimer = 0;\r\n        this.multipleClickObject = null;\r\n        this.multipleClickDelay = 0.3;\r\n\r\n        this.visible = false;\r\n\r\n        const sceneLoaded = this.onDestroy.bind(this);\r\n        WL.onSceneLoaded.push(sceneLoaded);\r\n        this.onDestroyCallbacks = [() => {\r\n            const index = WL.onSceneLoaded.indexOf(sceneLoaded);\r\n            if (index >= 0) WL.onSceneLoaded.splice(index, 1);\r\n        }];\r\n\r\n        this.prevHitLocationLocalToTarget = PP.vec3_create();\r\n\r\n        this.pointerId = null;\r\n\r\n        this.lastClientX = null;\r\n        this.lastClientY = null;\r\n        this.lastWidth = null;\r\n        this.lastHeight = null;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.start = function () {\r\n        if (this.handedness == 0) {\r\n            const inputComp = this.object.getComponent('input');\r\n            if (!inputComp) {\r\n                console.warn('cursor component on object', this.object.name,\r\n                    'was configured with handedness \"input component\", ' +\r\n                    'but object has no input component.');\r\n            } else {\r\n                this.handedness = inputComp.handedness;\r\n                this.input = inputComp;\r\n            }\r\n        } else {\r\n            this.handedness = ['left', 'right'][this.handedness - 1];\r\n        }\r\n\r\n        this.globalTarget = this.object.addComponent('cursor-target');\r\n\r\n        this.transformQuat = PP.quat2_create();\r\n        this.rotationQuat = PP.quat_create();\r\n        this.transformMatrix = PP.mat4_create();\r\n        this.origin = new Float32Array(3);\r\n        this.cursorObjScale = new Float32Array(3);\r\n        this.direction = PP.vec3_create();\r\n        this.tempQuat = new Float32Array(4);\r\n        this.setViewComponent(this.object.getComponent(\"view\"));\r\n        this.isHovering = false;\r\n        this.visible = true;\r\n        this.isDown = false;\r\n        this.lastIsDown = false;\r\n        this.isUpWithNoDown = false;\r\n        this.isRealDown = false;\r\n\r\n        this.cursorPos = new Float32Array(3);\r\n        this.hoveringObject = null;\r\n\r\n        const onXRSessionStart = this.setupVREvents.bind(this);\r\n        WL.onXRSessionStart.push(onXRSessionStart);\r\n\r\n        this.onDestroyCallbacks.push(() => {\r\n            const index = WL.onXRSessionStart.indexOf(onXRSessionStart);\r\n            if (index >= 0) WL.onXRSessionStart.splice(index, 1);\r\n        });\r\n\r\n        this.showRay = true;\r\n        if (this.cursorRayObject) {\r\n            this.cursorRayObject.pp_setActive(true);\r\n            this.showRay = false;\r\n            this.cursorRayOrigin = new Float32Array(3);\r\n            this.cursorRayScale = new Float32Array(3);\r\n            this.cursorRayScale.set(this.cursorRayObject.scalingLocal);\r\n\r\n            /* Set ray to a good default distance of the cursor of 1m */\r\n            this._setCursorRayTransform(null);\r\n        }\r\n\r\n        this._setCursorVisibility(false);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.setViewComponent = function (viewComponent) {\r\n        this.viewComponent = viewComponent;\r\n        /* If this object also has a view component, we will enable inverse-projected mouse clicks,\r\n         * otherwise just use the objects transformation */\r\n        if (this.viewComponent != null) {\r\n            const onClick = this.onClick.bind(this);\r\n            WL.canvas.addEventListener(\"click\", onClick);\r\n            const onPointerDown = this.onPointerDown.bind(this);\r\n            WL.canvas.addEventListener(\"pointerdown\", onPointerDown);\r\n            const onPointerMove = this.onPointerMove.bind(this);\r\n            WL.canvas.addEventListener(\"pointermove\", onPointerMove);\r\n            const onPointerUp = this.onPointerUp.bind(this);\r\n            WL.canvas.addEventListener(\"pointerup\", onPointerUp);\r\n            const onPointerLeave = this.onPointerLeave.bind(this);\r\n            WL.canvas.addEventListener(\"pointerleave\", onPointerLeave);\r\n\r\n            this.projectionMatrix = new Float32Array(16);\r\n            mat4.invert(this.projectionMatrix, this.viewComponent.projectionMatrix);\r\n            const onViewportResize = this.onViewportResize.bind(this);\r\n            window.addEventListener(\"resize\", onViewportResize);\r\n\r\n            this.onDestroyCallbacks.push(() => {\r\n                WL.canvas.removeEventListener(\"click\", onClick);\r\n                WL.canvas.removeEventListener(\"pointerdown\", onPointerDown);\r\n                WL.canvas.removeEventListener(\"pointermove\", onPointerMove);\r\n                WL.canvas.removeEventListener(\"pointerup\", onPointerUp);\r\n                WL.canvas.removeEventListener(\"pointerleave\", onPointerLeave);\r\n                window.removeEventListener(\"resize\", onViewportResize);\r\n            });\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onViewportResize = function () {\r\n        if (!this.viewComponent) return;\r\n        /* Projection matrix will change if the viewport is resized, which will affect the\r\n         * projection matrix because of the aspect ratio. */\r\n        mat4.invert(this.projectionMatrix, this.viewComponent.projectionMatrix);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype._setCursorRayTransform = function (hitPosition) {\r\n        if (!this.cursorRayObject) return;\r\n        if (this.cursorRayScalingAxis != 4) {\r\n            this.cursorRayObject.resetScaling();\r\n\r\n            if (hitPosition != null) {\r\n                this.cursorRayObject.getTranslationWorld(this.cursorRayOrigin);\r\n                let dist = vec3.dist(this.cursorRayOrigin, hitPosition);\r\n                this.cursorRayScale[this.cursorRayScalingAxis] = dist;\r\n                this.cursorRayObject.scale(this.cursorRayScale);\r\n            }\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype._setCursorVisibility = function (visible) {\r\n        this.visible = visible;\r\n        if (!this.cursorObject) return;\r\n\r\n        this.cursorObject.pp_setActive(visible);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.update = function (dt) {\r\n        if (this.doubleClickTimer > 0) {\r\n            this.doubleClickTimer -= dt;\r\n        }\r\n\r\n        if (this.tripleClickTimer > 0) {\r\n            this.tripleClickTimer -= dt;\r\n        }\r\n\r\n        this.doUpdate(false);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.doUpdate = function (doClick) {\r\n        /* If in VR, set the cursor ray based on object transform */\r\n        if (this.session) {\r\n            /* Since Google Cardboard tap is registered as arTouchDown without a gamepad, we need to check for gamepad presence */\r\n            if (this.arTouchDown && this.input && WL.xrSession.inputSources[0].handedness === 'none' && WL.xrSession.inputSources[0].gamepad) {\r\n                const p = WL.xrSession.inputSources[0].gamepad.axes;\r\n                /* Screenspace Y is inverted */\r\n                this.direction.vec3_set(p[0], -p[1], -1.0);\r\n                this.updateDirection();\r\n            } else {\r\n                this.object.getTranslationWorld(this.origin);\r\n                this.object.getForward(this.direction);\r\n            }\r\n            const rayHit = this.rayHit = (this.rayCastMode == 0) ?\r\n                WL.scene.rayCast(this.origin, this.direction, this.collisionMask) :\r\n                WL.physics.rayCast(this.origin, this.direction, this.collisionMask, this.maxDistance);\r\n\r\n            if (rayHit.hitCount > 0) {\r\n                this.cursorPos.set(rayHit.locations[0]);\r\n            } else {\r\n                this.cursorPos.fill(0);\r\n            }\r\n\r\n            this.hoverBehaviour(rayHit, doClick);\r\n        } else {\r\n            if (this.viewComponent != null && this.lastClientX != null) {\r\n                const rayHit = this.updateMousePos(this.lastClientX, this.lastClientY, this.lastWidth, this.lastHeight);\r\n                this.hoverBehaviour(rayHit, false);\r\n            }\r\n        }\r\n\r\n        if (this.cursorObject) {\r\n            if (this.hoveringObject && (this.cursorPos[0] != 0 || this.cursorPos[1] != 0 || this.cursorPos[2] != 0)) {\r\n                this._setCursorVisibility(true);\r\n                this.cursorObject.setTranslationWorld(this.cursorPos);\r\n                this.cursorObject.transformLocal = this.cursorObject.transformLocal.quat2_normalize(this.transformQuat);\r\n                this._setCursorRayTransform(this.cursorPos);\r\n            } else {\r\n                if (this.visible && this.cursorRayObject) {\r\n                    this._setCursorRayTransform(null);\r\n                }\r\n\r\n                this._setCursorVisibility(false);\r\n            }\r\n        }\r\n\r\n        if (this.cursorRayObject) {\r\n            this.cursorRayObject.pp_setActive(true);\r\n        }\r\n\r\n        if (this.hoveringObject == null) {\r\n            this.pointerId = null;\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.hoverBehaviour = function (rayHit, doClick, forceUnhover = false) {\r\n        if (!forceUnhover && rayHit.hitCount > 0) {\r\n            let hoveringObjectChanged = false;\r\n            if (!this.hoveringObject || !this.hoveringObject.equals(rayHit.objects[0])) {\r\n                /* Unhover previous, if exists */\r\n                if (this.hoveringObject) {\r\n                    let cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n                    if (cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n                    this.globalTarget.onUnhover(this.hoveringObject, this);\r\n                }\r\n\r\n                hoveringObjectChanged = true;\r\n\r\n                /* Hover new object */\r\n                this.hoveringObject = rayHit.objects[0];\r\n                if (this.styleCursor) document.body.style.cursor = \"pointer\";\r\n\r\n                let cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n                if (cursorTarget) {\r\n                    cursorTarget.onHover(this.hoveringObject, this);\r\n                }\r\n                this.globalTarget.onHover(this.hoveringObject, this);\r\n\r\n                if (!this._isDown() && this.isRealDown) {\r\n                    this.isDown = false;\r\n                    this.lastIsDown = false;\r\n                    this.isUpWithNoDown = false;\r\n\r\n                    if (cursorTarget) cursorTarget.onDownOnHover(this.hoveringObject, this);\r\n                    this.globalTarget.onDownOnHover(this.hoveringObject, this);\r\n                }\r\n            }\r\n\r\n            let cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n\r\n            if (!hoveringObjectChanged && this._isMoving(rayHit.locations[0])) {\r\n                if (cursorTarget) cursorTarget.onMove(this.hoveringObject, this);\r\n                this.globalTarget.onMove(this.hoveringObject, this);\r\n            }\r\n\r\n            if (this._isDown()) {\r\n                /* Cursor down */\r\n                if (cursorTarget) cursorTarget.onDown(this.hoveringObject, this);\r\n                this.globalTarget.onDown(this.hoveringObject, this);\r\n\r\n                /* Click */\r\n                if (this.tripleClickTimer > 0 && this.multipleClickObject && this.multipleClickObject.equals(this.hoveringObject)) {\r\n                    if (cursorTarget) cursorTarget.onTripleClick(this.hoveringObject, this);\r\n                    this.globalTarget.onTripleClick(this.hoveringObject, this);\r\n\r\n                    this.tripleClickTimer = 0;\r\n                } else if (this.doubleClickTimer > 0 && this.multipleClickObject && this.multipleClickObject.equals(this.hoveringObject)) {\r\n                    if (cursorTarget) cursorTarget.onDoubleClick(this.hoveringObject, this);\r\n                    this.globalTarget.onDoubleClick(this.hoveringObject, this);\r\n\r\n                    this.tripleClickTimer = this.multipleClickDelay;\r\n                    this.doubleClickTimer = 0;\r\n                } else {\r\n                    if (cursorTarget) cursorTarget.onClick(this.hoveringObject, this);\r\n                    this.globalTarget.onClick(this.hoveringObject, this);\r\n\r\n                    this.tripleClickTimer = 0;\r\n                    this.doubleClickTimer = this.multipleClickDelay;\r\n                    this.multipleClickObject = this.hoveringObject;\r\n                }\r\n            } else {\r\n                /* Cursor up */\r\n                if (!this.isUpWithNoDown && !hoveringObjectChanged && this._isUp()) {\r\n                    if (cursorTarget) cursorTarget.onUp(this.hoveringObject, this);\r\n                    this.globalTarget.onUp(this.hoveringObject, this);\r\n                } else if (this.isUpWithNoDown || (hoveringObjectChanged && this._isUp())) {\r\n                    if (cursorTarget) cursorTarget.onUpWithNoDown(this.hoveringObject, this);\r\n                    this.globalTarget.onUpWithNoDown(this.hoveringObject, this);\r\n                }\r\n            }\r\n\r\n            this.prevHitLocationLocalToTarget = this.hoveringObject.pp_convertPositionWorldToLocal(rayHit.locations[0], this.prevHitLocationLocalToTarget);\r\n        } else if (this.hoveringObject && (forceUnhover || rayHit.hitCount == 0)) {\r\n            let cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n            if (cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n            this.globalTarget.onUnhover(this.hoveringObject, this);\r\n\r\n            this.hoveringObject = null;\r\n            if (this.styleCursor) document.body.style.cursor = \"default\";\r\n        }\r\n\r\n        if (this.hoveringObject) {\r\n            this.lastIsDown = this.isDown;\r\n        } else {\r\n            this.isDown = false;\r\n            this.lastIsDown = false;\r\n        }\r\n\r\n        this.isUpWithNoDown = false;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.setupVREvents = function (s) {\r\n        /* If in VR, one-time bind the listener */\r\n        this.session = s;\r\n        const onSessionEnd = function (e) {\r\n            /* Reset cache once the session ends to rebind select etc, in case\r\n             * it starts again */\r\n            this.session = null;\r\n        }.bind(this);\r\n        s.addEventListener('end', onSessionEnd);\r\n\r\n        const onSelect = this.onSelect.bind(this);\r\n        s.addEventListener('select', onSelect);\r\n        const onSelectStart = this.onSelectStart.bind(this);\r\n        s.addEventListener('selectstart', onSelectStart);\r\n        const onSelectEnd = this.onSelectEnd.bind(this);\r\n        s.addEventListener('selectend', onSelectEnd);\r\n\r\n        this.onDestroyCallbacks.push(() => {\r\n            if (!this.session) return;\r\n            s.removeEventListener('end', onSessionEnd);\r\n            s.removeEventListener('select', onSelect);\r\n            s.removeEventListener('selectstart', onSelectStart);\r\n            s.removeEventListener('selectend', onSelectEnd);\r\n        });\r\n\r\n        /* After AR session was entered, the projection matrix changed */\r\n        this.onViewportResize();\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onSelect = function (e) {\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onSelectStart = function (e) {\r\n        if (this.active) {\r\n            this.arTouchDown = true;\r\n            if (e.inputSource.handedness == this.handedness) {\r\n                this.isDown = true;\r\n            }\r\n        }\r\n\r\n        if (e.inputSource.handedness == this.handedness) {\r\n            this.isRealDown = true;\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onSelectEnd = function (e) {\r\n        if (this.active) {\r\n            this.arTouchDown = false;\r\n            if (e.inputSource.handedness == this.handedness) {\r\n                if (!this.isDown) {\r\n                    this.isUpWithNoDown = true;\r\n                }\r\n                this.isDown = false;\r\n            }\r\n        }\r\n\r\n        if (e.inputSource.handedness == this.handedness) {\r\n            this.isRealDown = false;\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onPointerMove = function (e) {\r\n        if (this.active) {\r\n            /* Don't care about secondary pointers */\r\n            if (this.pointerId != null && this.pointerId != e.pointerId) return;\r\n\r\n            const bounds = document.body.getBoundingClientRect();\r\n            const rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n\r\n            this.hoverBehaviour(rayHit, false);\r\n\r\n            if (this.hoveringObject != null) {\r\n                this.pointerId = e.pointerId;\r\n            } else {\r\n                this.pointerId = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onClick = function (e) {\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onPointerDown = function (e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if ((this.pointerId != null && this.pointerId != e.pointerId) || e.button !== 0) return;\r\n\r\n        if (this.active) {\r\n            const bounds = document.body.getBoundingClientRect();\r\n            let rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n\r\n            this.isDown = true;\r\n            this.isRealDown = true;\r\n\r\n            this.hoverBehaviour(rayHit, false);\r\n\r\n            if (this.hoveringObject != null) {\r\n                this.pointerId = e.pointerId;\r\n            } else {\r\n                this.pointerId = null;\r\n            }\r\n        } else {\r\n            this.isRealDown = true;\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onPointerUp = function (e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if ((this.pointerId != null && this.pointerId != e.pointerId) || e.button !== 0) return;\r\n\r\n        if (this.active) {\r\n            const bounds = document.body.getBoundingClientRect();\r\n            let rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n\r\n            if (!this.isDown) {\r\n                this.isUpWithNoDown = true;\r\n            }\r\n\r\n            this.isDown = false;\r\n            this.isRealDown = false;\r\n\r\n            this.hoverBehaviour(rayHit, false);\r\n\r\n            if (this.hoveringObject != null) {\r\n                this.pointerId = e.pointerId;\r\n            } else {\r\n                this.pointerId = null;\r\n            }\r\n        } else {\r\n            this.isRealDown = false;\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onPointerLeave = function (e) {\r\n        if (this.pointerId == null || this.pointerId == e.pointerId) {\r\n            if (this.active) {\r\n                this.hoverBehaviour(null, false, true); // trigger unhover\r\n            }\r\n\r\n            this.pointerId = null;\r\n\r\n            this.lastClientX = null;\r\n            this.lastClientY = null;\r\n            this.lastWidth = null;\r\n            this.lastHeight = null;\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.updateMousePos = function (clientX, clientY, w, h) {\r\n        this.lastClientX = clientX;\r\n        this.lastClientY = clientY;\r\n        this.lastWidth = w;\r\n        this.lastHeight = h;\r\n\r\n        /* Get direction in normalized device coordinate space from mouse position */\r\n        const left = clientX / w;\r\n        const top = clientY / h;\r\n        this.direction.vec3_set(left * 2 - 1, -top * 2 + 1, -1.0);\r\n        return this.updateDirection();\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.updateDirection = function () {\r\n        this.object.getTranslationWorld(this.origin);\r\n\r\n        /* Reverse-project the direction into view space */\r\n        vec3.transformMat4(this.direction, this.direction, this.projectionMatrix);\r\n        vec3.normalize(this.direction, this.direction);\r\n        vec3.transformQuat(this.direction, this.direction, this.object.transformWorld);\r\n        const rayHit = this.rayHit = (this.rayCastMode == 0) ?\r\n            WL.scene.rayCast(this.origin, this.direction, this.collisionMask) :\r\n            WL.physics.rayCast(this.origin, this.direction, this.collisionMask, this.maxDistance);\r\n\r\n        if (rayHit.hitCount > 0) {\r\n            this.cursorPos.set(rayHit.locations[0]);\r\n        } else {\r\n            this.cursorPos.fill(0);\r\n        }\r\n\r\n        return rayHit;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onDeactivate = function () {\r\n        if (this.hoveringObject) {\r\n            const cursorTarget = this.hoveringObject.getComponent('cursor-target');\r\n            if (cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n            this.globalTarget.onUnhover(this.hoveringObject, this);\r\n        }\r\n\r\n        this.hoveringObject = null;\r\n        if (this.styleCursor) document.body.style.cursor = \"default\";\r\n\r\n        this.isDown = false;\r\n        this.lastIsDown = false;\r\n        this.isUpWithNoDown = false;\r\n\r\n        this._setCursorVisibility(false);\r\n        if (this.cursorRayObject) {\r\n            this.cursorRayObject.pp_setActive(false);\r\n        }\r\n\r\n        this.pointerId = null;\r\n\r\n        this.lastClientX = null;\r\n        this.lastClientY = null;\r\n        this.lastWidth = null;\r\n        this.lastHeight = null;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onActivate = function () {\r\n        this.showRay = true;\r\n\r\n        this.isDown = false;\r\n        this.lastIsDown = false;\r\n        this.isUpWithNoDown = false;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onDestroy = function () {\r\n        for (const f of this.onDestroyCallbacks) f();\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype._isDown = function () {\r\n        return this.isDown !== this.lastIsDown && this.isDown;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype._isUp = function () {\r\n        return this.isDown !== this.lastIsDown && !this.isDown;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype._isMoving = function () {\r\n        let hitLocationLocalToTarget = PP.vec3_create();\r\n        return function _isMoving(hitLocation) {\r\n            let isMoving = false;\r\n\r\n            hitLocationLocalToTarget = this.hoveringObject.pp_convertPositionWorldToLocal(hitLocation, hitLocationLocalToTarget);\r\n\r\n            if (!hitLocationLocalToTarget.vec_equals(this.prevHitLocationLocalToTarget, 0.0001)) {\r\n                isMoving = true;\r\n            }\r\n\r\n            return isMoving;\r\n        };\r\n    }();\r\n\r\n} else {\r\n    console.error(\"Wonderland Engine \\\"cursor\\\" component not found.\\n Add the component to your project to avoid any issue with the PP bundle.\");\r\n}", "if (_WL && _WL._componentTypes && _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]]) {\r\n\r\n    // Modified Functions \r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.init = function () {\r\n        this.hoverFunctions = [];\r\n        this.unHoverFunctions = [];\r\n        this.clickFunctions = [];\r\n        this.doubleClickFunctions = [];\r\n        this.tripleClickFunctions = [];\r\n        this.moveFunctions = [];\r\n        this.downFunctions = [];\r\n        this.upFunctions = [];\r\n        this.downOnHoverFunctions = [];\r\n        this.upWithNoDownFunctions = [];\r\n\r\n        this.isSurface = false; // just a way to specify if this target is just used as a surface between buttons \r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onHover = function (object, cursor) {\r\n        for (let f of this.hoverFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onUnhover = function (object, cursor) {\r\n        for (let f of this.unHoverFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onClick = function (object, cursor) {\r\n        for (let f of this.clickFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onMove = function (object, cursor) {\r\n        for (let f of this.moveFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onDown = function (object, cursor) {\r\n        for (let f of this.downFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onUp = function (object, cursor) {\r\n        for (let f of this.upFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addHoverFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this.hoverFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeHoverFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.hoverFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addUnHoverFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this.unHoverFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeUnHoverFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.unHoverFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addClickFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this.clickFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeClickFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.clickFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addMoveFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this.moveFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeMoveFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.moveFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addDownFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this.downFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeDownFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.downFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addUpFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this.upFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeUpFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.upFunctions, f);\r\n    };\r\n\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype._removeItemOnce = function (arr, value) {\r\n        var index = arr.indexOf(value);\r\n        if (index > -1) arr.splice(index, 1);\r\n        return arr;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype._validateCallback = function (f) {\r\n        if (typeof f !== \"function\") {\r\n            throw new TypeError(this.object.name + \".cursor-target: Argument needs to be a function\");\r\n        }\r\n    };\r\n\r\n    // New Functions \r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onDoubleClick = function (object, cursor) {\r\n        for (let f of this.doubleClickFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addDoubleClickFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this.doubleClickFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeDoubleClickFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.doubleClickFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onTripleClick = function (object, cursor) {\r\n        for (let f of this.tripleClickFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addTripleClickFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this.tripleClickFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeTripleClickFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.tripleClickFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onDownOnHover = function (object, cursor) {\r\n        for (let f of this.downOnHoverFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addDownOnHoverFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this.downOnHoverFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeDownOnHoverFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.downOnHoverFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onUpWithNoDown = function (object, cursor) {\r\n        for (let f of this.upWithNoDownFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addUpWithNoDownFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this.upWithNoDownFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeUpWithNoDownFunction = function (f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.upWithNoDownFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.start = function () { };\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.update = function (dt) { };\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onActivate = function () { };\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onDeactivate = function () { };\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onDestroy = function () { };\r\n\r\n} else {\r\n    console.error(\"Wonderland Engine \\\"cursor-target\\\" component not found.\\n Add the component to your project to avoid any issue with the PP bundle.\");\r\n}", "if (_WL && _WL._componentTypes && _WL._componentTypes[_WL._componentTypeIndices[\"mouse-look\"]]) {\r\n\r\n    // Modified Functions\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"mouse-look\"]].prototype.init = function () {\r\n        this.pointerId = null;\r\n        this.prevMoveEvent = null;\r\n\r\n        this.resetMovingDelay = 0.15;\r\n        this.resetMovingTimer = new PP.Timer(this.resetMovingDelay, false);\r\n        this.isMoving = false;\r\n\r\n        document.body.addEventListener('pointermove', this._onMove.bind(this));\r\n\r\n        if (this.requireMouseDown) {\r\n            if (this.mouseButtonIndex == 2) {\r\n                WL.canvas.addEventListener(\"contextmenu\", function (event) {\r\n                    event.preventDefault();\r\n                }, false);\r\n            }\r\n\r\n            WL.canvas.addEventListener('pointerdown', function (event) {\r\n                if (this.pointerId != null) return;\r\n\r\n                if (!this.mouseDown) {\r\n                    if (event.button == this.mouseButtonIndex) {\r\n                        this.pointerId = event.pointerId;\r\n                        this.mouseDown = true;\r\n                        document.body.style.cursor = \"grabbing\";\r\n                        if (event.button == 1) {\r\n                            event.preventDefault(); // Prevent scrolling\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }.bind(this));\r\n\r\n            document.body.addEventListener('pointerup', function (event) {\r\n                if (event.pointerId != this.pointerId) return;\r\n\r\n                if (this.mouseDown) {\r\n                    if (event.button == this.mouseButtonIndex) {\r\n                        this.mouseDown = false;\r\n                        document.body.style.cursor = \"initial\";\r\n                    }\r\n                }\r\n            }.bind(this));\r\n        }\r\n\r\n        document.body.addEventListener('pointerleave', function (event) {\r\n            if (event.pointerId != this.pointerId) return;\r\n\r\n            this.pointerId = null;\r\n            this.prevMoveEvent = null;\r\n\r\n            if (this.mouseDown) {\r\n                this.mouseDown = false;\r\n                document.body.style.cursor = \"initial\";\r\n            }\r\n        }.bind(this));\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"mouse-look\"]].prototype.update = function (dt) {\r\n        if (this.resetMovingTimer.isRunning()) {\r\n            this.resetMovingTimer.update(dt);\r\n            if (this.resetMovingTimer.isDone()) {\r\n                this.resetMovingTimer.reset();\r\n                this.isMoving = false;\r\n            }\r\n        }\r\n\r\n        if (!this.isMoving) {\r\n            if (!this.requireMouseDown || !this.mouseDown) {\r\n                this.pointerId = null;\r\n            }\r\n\r\n            this.prevMoveEvent = null;\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"mouse-look\"]].prototype._onMove = function () {\r\n        let viewForward = PP.vec3_create();\r\n        let viewUp = PP.vec3_create();\r\n\r\n        let referenceUp = PP.vec3_create();\r\n        let referenceUpNegate = PP.vec3_create();\r\n        let referenceRight = PP.vec3_create();\r\n\r\n        let newUp = PP.vec3_create();\r\n        return function (event) {\r\n            if (this.pointerId != null && event.pointerId != this.pointerId) return;\r\n\r\n            if (this.active && (this.mouseDown || !this.requireMouseDown)) {\r\n\r\n                viewForward = this.object.pp_getBackward(viewForward); // the view \"real\" forward is actually the backward\r\n                viewUp = this.object.pp_getUp(viewUp);\r\n\r\n                referenceUp.vec3_set(0, 1, 0);\r\n                if (this.object.pp_getParent() != null) {\r\n                    referenceUp = this.object.pp_getParent().pp_getUp(referenceUp);\r\n                }\r\n\r\n                referenceRight = viewForward.vec3_cross(referenceUp, referenceRight);\r\n\r\n                let minAngle = 1;\r\n                if (viewForward.vec3_angle(referenceUp) < minAngle) {\r\n                    referenceRight = viewUp.vec3_negate(referenceRight).vec3_cross(referenceUp, referenceRight);\r\n                } else if (viewForward.vec3_angle(referenceUp.vec3_negate(referenceUpNegate)) < minAngle) {\r\n                    referenceRight = viewUp.vec3_cross(referenceUp, referenceRight);\r\n                } else if (!viewUp.vec3_isConcordant(referenceUp)) {\r\n                    referenceRight.vec3_negate(referenceRight);\r\n                }\r\n                referenceRight.vec3_normalize(referenceRight);\r\n\r\n                let movementX = event.movementX;\r\n                let movementY = event.movementY;\r\n\r\n                if (movementX == null || movementY == null) {\r\n                    if (this.prevMoveEvent != null) {\r\n                        movementX = event.pageX - this.prevMoveEvent.pageX;\r\n                        movementY = event.pageY - this.prevMoveEvent.pageY;\r\n                    } else {\r\n                        movementX = 0;\r\n                        movementY = 0;\r\n                    }\r\n                }\r\n\r\n                this.rotationX = -this.sensitity * movementX;\r\n                this.rotationY = -this.sensitity * movementY;\r\n\r\n                this.object.pp_rotateAxis(this.rotationY, referenceRight);\r\n\r\n                let maxVerticalAngle = 90 - 0.001;\r\n                newUp = this.object.pp_getUp(newUp);\r\n                let angleWithUp = Math.pp_angleClamp(newUp.vec3_angleSigned(referenceUp, referenceRight));\r\n                if (Math.abs(angleWithUp) > maxVerticalAngle) {\r\n                    let fixAngle = (Math.abs(angleWithUp) - maxVerticalAngle) * Math.pp_sign(angleWithUp);\r\n                    this.object.pp_rotateAxis(fixAngle, referenceRight);\r\n                }\r\n\r\n                this.object.pp_rotateAxis(this.rotationX, referenceUp);\r\n\r\n                this.prevMoveEvent = event;\r\n                this.pointerId = event.pointerId;\r\n\r\n                this.resetMovingTimer.start(this.resetMovingDelay);\r\n                this.isMoving = true;\r\n            }\r\n        };\r\n    }();\r\n} else {\r\n    console.error(\"Wonderland Engine \\\"mouse-look\\\" component not found.\\n Add the component to your project to avoid any issue with the PP bundle.\");\r\n}", "import { Howler } from 'howler';\r\n\r\nWL.registerComponent(\"pp-spatial-audio-listener\", {\r\n    _myEnabled: { type: WL.Type.Enum, values: ['always', 'vr', 'non vr'], default: 'always' },\r\n}, {\r\n    init: function () {\r\n        this._myOrigin = new Float32Array(3);\r\n        this._myForward = new Float32Array(3);\r\n        this._myUp = new Float32Array(3);\r\n    },\r\n    update: function () {\r\n        if (this._myEnabled == 0 || (this._myEnabled == 1 && WL.xrSession) || (this._myEnabled == 2 && !WL.xrSession)) {\r\n            this.object.pp_getPosition(this._myOrigin);\r\n            this.object.pp_getForward(this._myForward);\r\n            this.object.pp_getUp(this._myUp);\r\n\r\n            Howler.pos(this._myOrigin[0], this._myOrigin[1], this._myOrigin[2]);\r\n            Howler.orientation(this._myForward[0], this._myForward[1], this._myForward[2],\r\n                this._myUp[0], this._myUp[1], this._myUp[2]);\r\n        }\r\n    },\r\n});", "export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),extendedConst=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,0,1,11,9,1,0,65,1,65,2,106,11,0])),gc=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,10,2,95,1,125,0,96,0,1,107,0,3,2,1,1,10,12,1,10,0,67,0,0,0,0,251,7,0,11])),memory64=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,4,1])),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),relaxedSimd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,15,1,13,0,65,1,253,15,65,2,253,15,253,128,2,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),streamingCompilation=()=>(async()=>\"compileStreaming\"in WebAssembly)(),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));\n", "/**\n * Types\n */\nconst MISALIGNED_MSG = 'Misaligned pointer: please report a bug';\n/* Component class instances per type to avoid GC */\nlet ComponentCache = {};\n/* Object class instances per type to avoid GC */\nlet ObjectCache = [];\n/* Component properties to exclude when cloning, see addComponent() */\nconst EXCLUDED_COMPONENT_PROPERTIES = ['_id', '_manager', 'type', '_type', 'active'];\n/**\n * Wonderland Engine API\n * @namespace WL\n */\n/**\n * Component parameter type enum\n */\nexport var Type;\n(function (Type) {\n    /**\n     * **Bool**:\n     *\n     * Appears in the editor as checkbox.\n     */\n    Type[Type[\"Bool\"] = 2] = \"Bool\";\n    /**\n     * **Int**:\n     *\n     * Appears in the editor as int input field.\n     */\n    Type[Type[\"Int\"] = 4] = \"Int\";\n    /**\n     * **Float**:\n     *\n     * Appears in the editor as float input field.\n     */\n    Type[Type[\"Float\"] = 8] = \"Float\";\n    /**\n     * **String / Text**:\n     *\n     * Appears in the editor as text input field.\n     */\n    Type[Type[\"String\"] = 16] = \"String\";\n    /**\n     * **Enumeration**:\n     *\n     * Appears in the editor as dropdown with given values.\n     * If parameters is enum, a `values` parameter needs to be\n     * specified for the parameter as well.\n     *\n     * @example\n     *     camera: {type: Type.Enum, values: ['auto', 'back', 'front'], default: 'auto'},\n     */\n    Type[Type[\"Enum\"] = 32] = \"Enum\";\n    /**\n     * **Object reference**:\n     *\n     * Appears in the editor as object resource selection dropdown\n     * with object picker.\n     */\n    Type[Type[\"Object\"] = 64] = \"Object\";\n    /**\n     * **Mesh reference**:\n     *\n     * Appears in the editor as mesh resource selection dropdown.\n     */\n    Type[Type[\"Mesh\"] = 128] = \"Mesh\";\n    /**\n     * **Texture reference**:\n     *\n     * Appears in the editor as texture resource selection dropdown.\n     */\n    Type[Type[\"Texture\"] = 256] = \"Texture\";\n    /**\n     * **Material reference**:\n     *\n     * Appears in the editor as material resource selection dropdown.\n     */\n    Type[Type[\"Material\"] = 512] = \"Material\";\n    /**\n     * **Animation reference**:\n     *\n     * Appears in the editor as animation resource selection dropdown.\n     */\n    Type[Type[\"Animation\"] = 1024] = \"Animation\";\n    /**\n     * **Skin reference**:\n     *\n     * Appears in the editor as skin resource selection dropdown.\n     */\n    Type[Type[\"Skin\"] = 2048] = \"Skin\";\n})(Type || (Type = {}));\n/**\n * Default component parameter value per type.\n */\nconst _componentDefaults = new Array(6);\n_componentDefaults[Type.Bool] = false;\n_componentDefaults[Type.Int] = 0;\n_componentDefaults[Type.Float] = 0.0;\n_componentDefaults[Type.String] = '';\n_componentDefaults[Type.Enum] = 0;\n_componentDefaults[Type.Object] = null;\n_componentDefaults[Type.Mesh] = null;\n_componentDefaults[Type.Texture] = null;\n_componentDefaults[Type.Material] = null;\n_componentDefaults[Type.Animation] = null;\n_componentDefaults[Type.Skin] = null;\n/**\n * Register a custom JavaScript component type.\n *\n * You can register a component directly using a class inheriting from {@link Component}:\n *\n * ```js\n * import { Component, Type } from '@wonderlandengine/api';\n * registerComponent(class MyComponent extends Component {\n *     static TypeName = 'my-component';\n *     static Properties = {\n *         myParam: {type: Type.Float, default: 42.0},\n *     };\n *     init: function() {},\n *     start: function() {},\n *     update: function(dt) {},\n *     onActivate: function() {},\n *     onDeactivate: function() {},\n *     onDestroy: function() {}\n * });\n * ```\n *\n * Or directly use an object literal as a prototype:\n *\n * ```js\n * registerComponent('my-new-type', {\n *    myParam: {type: Type.Float, default: 42.0},\n * }, {\n *    init: function() {},\n *    start: function() {},\n *    update: function(dt) {},\n *    onActivate: function() {},\n *    onDeactivate: function() {},\n *    onDestroy: function() {},\n * });\n * ```\n *\n * @param name Name of the component or a class extending {@link Component}.\n * @param params Dict of param names to {@link CustomParameter}.\n * @param object Object containing functions for the component type.\n */\nfunction registerComponent(name, params, object) {\n    const typeIndex = _WL.registerComponent(name, params, object);\n    const ctor = _WL._componentTypes[typeIndex];\n    /* Set properties to the default value if needed. */\n    for (const name in ctor.Properties) {\n        const p = ctor.Properties[name];\n        p.default = p.default || _componentDefaults[p.type];\n        ctor.prototype[name] = p.default;\n    }\n}\n/**\n * Collider type enum for {@link CollisionComponent}.\n */\nexport var Collider;\n(function (Collider) {\n    /**\n     * **Sphere Collider**:\n     *\n     * Simplest and most performant collision shape. If this type is set on a\n     * {@link CollisionComponent}, only the first component of\n     * {@link CollisionComponent#extents} will be used to determine the radius.\n     */\n    Collider[Collider[\"Sphere\"] = 0] = \"Sphere\";\n    /**\n     * **Axis Aligned Bounding Box Collider**:\n     *\n     * Box that is always aligned to XYZ axis. It cannot be rotated but is more\n     * efficient than {@link Collider.Box}.\n     */\n    Collider[Collider[\"AxisAlignedBox\"] = 1] = \"AxisAlignedBox\";\n    /**\n     * **Aligned Bounding Box Collider**:\n     *\n     * Box that matches the object's rotation and translation correctly. This\n     * is the least efficient collider and should only be chosen over\n     * {@link Collider.Sphere} and {@link Collider.AxisAlignedBox} if really\n     * necessary.\n     */\n    Collider[Collider[\"Box\"] = 2] = \"Box\";\n})(Collider || (Collider = {}));\n/**\n * Alignment type enum for {@link TextComponent}.\n */\nexport var Alignment;\n(function (Alignment) {\n    /** Text start is at object origin */\n    Alignment[Alignment[\"Left\"] = 1] = \"Left\";\n    /** Text center is at object origin */\n    Alignment[Alignment[\"Center\"] = 2] = \"Center\";\n    /** Text end is at object origin */\n    Alignment[Alignment[\"Right\"] = 3] = \"Right\";\n})(Alignment || (Alignment = {}));\n/**\n * Justification type enum for {@link TextComponent}.\n */\nexport var Justification;\n(function (Justification) {\n    /** Text line is at object origin */\n    Justification[Justification[\"Line\"] = 1] = \"Line\";\n    /** Text middle is at object origin */\n    Justification[Justification[\"Middle\"] = 2] = \"Middle\";\n    /** Text top is at object origin */\n    Justification[Justification[\"Top\"] = 3] = \"Top\";\n    /** Text bottom is at object origin */\n    Justification[Justification[\"Bottom\"] = 4] = \"Bottom\";\n})(Justification || (Justification = {}));\n/**\n * Effect type enum for {@link TextComponent}.\n */\nexport var TextEffect;\n(function (TextEffect) {\n    /** Text is rendered normally */\n    TextEffect[TextEffect[\"None\"] = 0] = \"None\";\n    /** Text is rendered with an outline */\n    TextEffect[TextEffect[\"Outline\"] = 1] = \"Outline\";\n})(TextEffect || (TextEffect = {}));\n/**\n * Input type enum for {@link InputComponent}.\n */\nexport var InputType;\n(function (InputType) {\n    /** Head input */\n    InputType[InputType[\"Head\"] = 0] = \"Head\";\n    /** Left eye input */\n    InputType[InputType[\"EyeLeft\"] = 1] = \"EyeLeft\";\n    /** Right eye input */\n    InputType[InputType[\"EyeRight\"] = 2] = \"EyeRight\";\n    /** Left controller input */\n    InputType[InputType[\"ControllerLeft\"] = 3] = \"ControllerLeft\";\n    /** Right controller input */\n    InputType[InputType[\"ControllerRight\"] = 4] = \"ControllerRight\";\n    /** Left ray input */\n    InputType[InputType[\"RayLeft\"] = 5] = \"RayLeft\";\n    /** Right ray input */\n    InputType[InputType[\"RayRight\"] = 6] = \"RayRight\";\n})(InputType || (InputType = {}));\n/**\n * Light type enum for {@link LightComponent}.\n */\nexport var LightType;\n(function (LightType) {\n    /** Point light */\n    LightType[LightType[\"Point\"] = 1] = \"Point\";\n    /** Spot light */\n    LightType[LightType[\"Spot\"] = 2] = \"Spot\";\n    /** Sun light / Directional light */\n    LightType[LightType[\"Sun\"] = 3] = \"Sun\";\n})(LightType || (LightType = {}));\n/**\n * Animation state of {@link AnimationComponent}.\n */\nexport var AnimationState;\n(function (AnimationState) {\n    /** Animation is currently playing */\n    AnimationState[AnimationState[\"Playing\"] = 1] = \"Playing\";\n    /** Animation is paused and will continue at current playback\n     * time on {@link AnimationComponent#play} */\n    AnimationState[AnimationState[\"Paused\"] = 2] = \"Paused\";\n    /** Animation is stopped */\n    AnimationState[AnimationState[\"Stopped\"] = 3] = \"Stopped\";\n})(AnimationState || (AnimationState = {}));\n/**\n * Rigid body force mode for {@link PhysXComponent#addForce} and {@link PhysXComponent#addTorque}.\n *\n * [PhysX API Reference](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxapi/files/structPxForceMode.html)\n */\nexport var ForceMode;\n(function (ForceMode) {\n    /** Apply as force */\n    ForceMode[ForceMode[\"Force\"] = 0] = \"Force\";\n    /** Apply as impulse */\n    ForceMode[ForceMode[\"Impulse\"] = 1] = \"Impulse\";\n    /** Apply as velocity change, mass dependent */\n    ForceMode[ForceMode[\"VelocityChange\"] = 2] = \"VelocityChange\";\n    /** Apply as mass dependent force */\n    ForceMode[ForceMode[\"Acceleration\"] = 3] = \"Acceleration\";\n})(ForceMode || (ForceMode = {}));\n/**\n * Collision callback event type.\n */\nexport var CollisionEventType;\n(function (CollisionEventType) {\n    /** Touch/contact detected, collision */\n    CollisionEventType[CollisionEventType[\"Touch\"] = 0] = \"Touch\";\n    /** Touch/contact lost, uncollide */\n    CollisionEventType[CollisionEventType[\"TouchLost\"] = 1] = \"TouchLost\";\n    /** Touch/contact with trigger detected */\n    CollisionEventType[CollisionEventType[\"TriggerTouch\"] = 2] = \"TriggerTouch\";\n    /** Touch/contact with trigger lost */\n    CollisionEventType[CollisionEventType[\"TriggerTouchLost\"] = 3] = \"TriggerTouchLost\";\n})(CollisionEventType || (CollisionEventType = {}));\n/**\n * Rigid body {@link PhysXComponent#shape}.\n *\n * [PhysX SDK Guide](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/Geometry.html#geometry-types).\n */\nexport var Shape;\n(function (Shape) {\n    /** No shape. */\n    Shape[Shape[\"None\"] = 0] = \"None\";\n    /** Sphere shape. */\n    Shape[Shape[\"Sphere\"] = 1] = \"Sphere\";\n    /** Capsule shape. */\n    Shape[Shape[\"Capsule\"] = 2] = \"Capsule\";\n    /** Box shape. */\n    Shape[Shape[\"Box\"] = 3] = \"Box\";\n    /** Plane shape. */\n    Shape[Shape[\"Plane\"] = 4] = \"Plane\";\n    /** Convex mesh shape. */\n    Shape[Shape[\"ConvexMesh\"] = 5] = \"ConvexMesh\";\n    /** Triangle mesh shape. */\n    Shape[Shape[\"TriangleMesh\"] = 6] = \"TriangleMesh\";\n})(Shape || (Shape = {}));\n/**\n * Mesh attribute enum.\n * @since 0.9.0\n */\nexport var MeshAttribute;\n(function (MeshAttribute) {\n    /** Position attribute, 3 floats */\n    MeshAttribute[MeshAttribute[\"Position\"] = 0] = \"Position\";\n    /** Tangent attribute, 4 floats */\n    MeshAttribute[MeshAttribute[\"Tangent\"] = 1] = \"Tangent\";\n    /** Normal attribute, 3 floats */\n    MeshAttribute[MeshAttribute[\"Normal\"] = 2] = \"Normal\";\n    /** Texture coordinate attribute, 2 floats */\n    MeshAttribute[MeshAttribute[\"TextureCoordinate\"] = 3] = \"TextureCoordinate\";\n    /** Color attribute, 4 floats, RGBA, range `0` to `1` */\n    MeshAttribute[MeshAttribute[\"Color\"] = 4] = \"Color\";\n    /** Joint id attribute, 4 unsigned ints */\n    MeshAttribute[MeshAttribute[\"JointId\"] = 5] = \"JointId\";\n    /** Joint weights attribute, 4 floats */\n    MeshAttribute[MeshAttribute[\"JointWeight\"] = 6] = \"JointWeight\";\n    /** Secondary joint id attribute, 4 unsigned ints */\n    MeshAttribute[MeshAttribute[\"SecondaryJointId\"] = 7] = \"SecondaryJointId\";\n    /** Secondary joint weights attribute, 4 floats */\n    MeshAttribute[MeshAttribute[\"SecondaryJointWeight\"] = 8] = \"SecondaryJointWeight\";\n})(MeshAttribute || (MeshAttribute = {}));\n/**\n * Material parameter type.\n */\nexport var MaterialParamType;\n(function (MaterialParamType) {\n    /** Unsigned integer parameter type. */\n    MaterialParamType[MaterialParamType[\"UnsignedInt\"] = 0] = \"UnsignedInt\";\n    /** Integer parameter type. */\n    MaterialParamType[MaterialParamType[\"Int\"] = 1] = \"Int\";\n    /** Float parameter type. */\n    MaterialParamType[MaterialParamType[\"Float\"] = 2] = \"Float\";\n    /** Sampler resource parameter type, i.e., a {@link Texture}. */\n    MaterialParamType[MaterialParamType[\"Sampler\"] = 3] = \"Sampler\";\n    /**\n     * Font resource parameter type.\n     *\n     * **Note**: Changing font isn't exposed yet and will raise an error.\n     */\n    MaterialParamType[MaterialParamType[\"Font\"] = 4] = \"Font\";\n})(MaterialParamType || (MaterialParamType = {}));\n/**\n * Canvas element that Wonderland Engine renders to.\n */\nlet canvas = null;\n/**\n * Current WebXR session or {@link null} if no session active\n * @type {XRSession}\n */\nlet xrSession = null;\n/**\n * List of functions to call if a WebXR session is started\n */\nconst onXRSessionStart = [\n    (s) => {\n        xrSession = s;\n    },\n];\n/**\n * List of functions to call if a WebXR session ends\n */\nconst onXRSessionEnd = [\n    () => {\n        xrSession = null;\n    },\n];\n/**\n * Whether AR is supported by the browser\n *\n * `undefined` until support could be determined\n */\nlet arSupported = undefined;\n/**\n * Whether VR is supported by the browser\n *\n * `undefined` until support could be determined\n */\nlet vrSupported = undefined;\n/**\n * List of functions to call once VR/AR support has been determined.\n *\n * Will be called once for AR and once for VR independent of support for each.\n * This allows you to notify the user of both cases: support and missing support of XR.\n * See the `supported` parameter of the callback, which indicates support.\n */\nlet onXRSupported = [\n    (type, supported) => {\n        if (type == 'ar')\n            arSupported = supported;\n        if (type == 'vr')\n            vrSupported = supported;\n    },\n];\n/**\n * List of functions to call once the main scene has been loaded.\n */\nlet onSceneLoaded = [];\n/**\n * Current main scene\n * @type {Scene}\n */\nlet scene = undefined;\n/**\n * Physics, only available when physx is enabled in the runtime\n * @type {Physics}\n */\nlet physics = undefined;\n/**\n * Image cache.\n *\n * @hidden\n */\nlet _images = [];\n/**\n * List of callbacks triggered when the scene is loaded.\n *\n * @hidden\n */\nlet _sceneLoadedCallback = [];\nlet _tempMem = null;\nlet _tempMemSize = 0;\nlet _tempMemFloat = null;\nlet _tempMemInt = null;\nlet _tempMemUint32 = null;\nlet _tempMemUint16 = null;\nlet _tempMemUint8 = null;\n/**\n * Initialize API resources, called by the engine automatically.\n *\n * @hidden\n */\nfunction init() {\n    scene = new Scene();\n    /* For internal testing, we provide compatibility with DOM-less execution */\n    canvas =\n        typeof document === 'undefined'\n            ? null\n            : document.getElementById('canvas');\n    ComponentCache = {};\n    /* Object class instances per type to avoid GC */\n    ObjectCache = [];\n    /* Target memory for JS API functions that return arrays */\n    allocateTempMemory(1024);\n}\n/**\n * Reset the runtime state, including:\n *     - Component cache\n *     - Images\n *     - Callbacks\n *\n * **Note**: This is used internally.\n *\n * @hidden\n */\nfunction reset() {\n    ComponentCache = {};\n    ObjectCache.length = 0;\n    _images.length = 0;\n    _sceneLoadedCallback.length = 0;\n    _WL.reset();\n}\n/**\n * Initialize API resources, called by the engine automatically, if\n * PhysX is enabled.\n *\n * @hidden\n */\nfunction _initPhysics() {\n    physics = new Physics();\n}\nfunction allocateTempMemory(size) {\n    console.log('Allocating temp mem:', size);\n    _tempMemSize = size;\n    if (_tempMem)\n        _free(_tempMem);\n    _tempMem = _malloc(_tempMemSize);\n    updateTempMemory();\n}\nfunction requireTempMem(size) {\n    if (_tempMemSize >= size)\n        return;\n    /* Grow in 1kb increments */\n    allocateTempMemory(Math.ceil(size / 1024) * 1024);\n}\nfunction updateTempMemory() {\n    _tempMemFloat = new Float32Array(HEAP8.buffer, _tempMem, _tempMemSize >> 2);\n    _tempMemInt = new Int32Array(HEAP8.buffer, _tempMem, _tempMemSize >> 2);\n    _tempMemUint32 = new Uint32Array(HEAP8.buffer, _tempMem, _tempMemSize >> 2);\n    _tempMemUint16 = new Uint16Array(HEAP8.buffer, _tempMem, _tempMemSize >> 1);\n    _tempMemUint8 = new Uint8Array(HEAP8.buffer, _tempMem, _tempMemSize);\n}\n/**\n * Returns a uint8 buffer view on temporary WASM memory.\n *\n * **Note**: this method might allocate if the requested memory is bigger\n * than the current temporary memory allocated.\n *\n * @param count The number of **elements** required\n * @returns A {@link TypedArray} over the WASM memory\n */\nfunction getTempBufferU8(count) {\n    requireTempMem(count);\n    return _tempMemUint8;\n}\n/**\n * Returns a uint16 buffer view on temporary WASM memory.\n *\n * **Note**: this method might allocate if the requested memory is bigger\n * than the current temporary memory allocated.\n *\n * @param count The number of **elements** required\n * @returns A {@link TypedArray} over the WASM memory\n */\nfunction getTempBufferU16(count) {\n    requireTempMem(count * 2);\n    return _tempMemUint16;\n}\n/**\n * Returns a uint32 buffer view on temporary WASM memory.\n *\n * **Note**: this method might allocate if the requested memory is bigger\n * than the current temporary memory allocated.\n *\n * @param count The number of **elements** required.\n * @returns A {@link TypedArray} over the WASM memory.\n */\nfunction getTempBufferU32(count) {\n    requireTempMem(count * 4);\n    return _tempMemUint32;\n}\n/**\n * Returns a int32 buffer view on temporary WASM memory.\n *\n * **Note**: this method might allocate if the requested memory is bigger\n * than the current temporary memory allocated.\n *\n * @param count The number of **elements** required.\n * @returns A {@link TypedArray} over the WASM memory.\n */\nfunction getTempBufferI32(count) {\n    requireTempMem(count * 4);\n    return _tempMemInt;\n}\n/**\n * Returns a float32 buffer view on temporary WASM memory.\n *\n * **Note**: this method might allocate if the requested memory is bigger\n * than the current temporary memory allocated.\n *\n * @param {number} count The number of **elements** required.\n * @returns A {@link TypedArray} over the WASM memory.\n */\nfunction getTempBufferF32(count) {\n    requireTempMem(count * 4);\n    return _tempMemFloat;\n}\nexport { registerComponent, canvas, scene, xrSession, onXRSessionStart, onXRSessionEnd, onXRSupported, onSceneLoaded, arSupported, vrSupported, physics, _images, _sceneLoadedCallback, textures, init, reset, _initPhysics, updateTempMemory, };\n/**\n * Constants.\n */\n/**\n * Default world up vector.\n */\nconst UP_VECTOR = [0, 1, 0];\n/**\n * Provides global scene functionality like raycasting.\n */\nexport class Scene {\n    constructor() {\n        this._rayHit = _malloc(4 * (3 * 4 + 3 * 4 + 4 + 2) + 4);\n        this._hit = new RayHit(this._rayHit);\n        /* Hidden property, list of functions to call after a\n         * frame has been rendered */\n        this.onPreRender = [];\n        this.onPostRender = [];\n    }\n    /**\n     * Currently active view components.\n     */\n    get activeViews() {\n        const count = _wl_scene_get_active_views(_tempMem, 16);\n        const views = [];\n        const viewTypeIndex = $Object._typeIndexFor('view');\n        for (let i = 0; i < count; ++i) {\n            views.push(new ViewComponent(viewTypeIndex, _tempMemInt[i]));\n        }\n        return views;\n    }\n    /**\n     * Cast a ray through the scene and find intersecting objects.\n     *\n     * The resulting ray hit will contain up to **4** closest ray hits,\n     * sorted by increasing distance.\n     *\n     * @param o Ray origin.\n     * @param d Ray direction.\n     * @param group Collision group to filter by: only objects that are\n     *        part of given group are considered for raycast.\n     *\n     * @returns The scene cached {@link RayHit} instance.\n     * @note The returned object is owned by the Scene instance\n     *   will be reused with the next {@link Scene#rayCast} call.\n     */\n    rayCast(o, d, group) {\n        _wl_scene_ray_cast(o[0], o[1], o[2], d[0], d[1], d[2], group, this._rayHit);\n        return this._hit;\n    }\n    /**\n     * Add an object to the scene.\n     *\n     * @param parent Parent object or {@link null}.\n     * @returns A newly created object.\n     */\n    addObject(parent) {\n        const parentId = parent ? parent.objectId : 0;\n        const objectId = _wl_scene_add_object(parentId);\n        return _wrapObject(objectId);\n    }\n    /**\n     * Batch-add objects to the scene.\n     *\n     * Will provide better performance for adding multiple objects (e.g. > 16)\n     * than calling {@link Scene#addObject} repeatedly in a loop.\n     *\n     * By providing upfront information of how many objects will be required,\n     * the engine is able to batch-allocate the required memory rather than\n     * convervatively grow the memory in small steps.\n     *\n     * **Experimental:** This API might change in upcoming versions.\n     *\n     * @param count Number of objects to add.\n     * @param parent Parent object or {@link null}, default {@link null}.\n     * @param componentCountHint Hint for how many components in total will\n     *      be added to the created objects afterwards, default `0`.\n     * @returns {$Object[]} newly created objects\n     */\n    addObjects(count, parent, componentCountHint) {\n        const parentId = parent ? parent.objectId : 0;\n        requireTempMem(count * 2);\n        const actualCount = _wl_scene_add_objects(parentId, count, componentCountHint || 0, _tempMem, _tempMemSize >> 1);\n        const ids = _tempMemUint16.subarray(0, actualCount);\n        const objects = Array.from(ids, _wrapObject);\n        return objects;\n    }\n    /**\n     * Pre-allocate memory for a given amount of objects and components.\n     *\n     * Will provide better performance for adding objects later with {@link Scene#addObject}\n     * and {@link Scene#addObjects}.\n     *\n     * By providing upfront information of how many objects will be required,\n     * the engine is able to batch-allocate the required memory rather than\n     * convervatively grow the memory in small steps.\n     *\n     * **Experimental:** This API might change in upcoming versions.\n     *\n     * @param objectCount Number of objects to add.\n     * @param componentCountPerType Amount of components to\n     *      allocate for {@link $Object.addComponent}, e.g. `{mesh: 100, collision: 200, \"my-comp\": 100}`.\n     * @since 0.8.10\n     */\n    reserveObjects(objectCount, componentCountPerType) {\n        componentCountPerType = componentCountPerType || {};\n        const jsManagerIndex = $Object._typeIndexFor('js');\n        let countsPerTypeIndex = _tempMemInt.subarray();\n        countsPerTypeIndex.fill(0);\n        for (const e of Object.entries(componentCountPerType)) {\n            const typeIndex = $Object._typeIndexFor(e[0]);\n            countsPerTypeIndex[typeIndex < 0 ? jsManagerIndex : typeIndex] += e[1];\n        }\n        _wl_scene_reserve_objects(objectCount, _tempMem);\n    }\n    /**\n     * Set the background clear color.\n     *\n     * @param color new clear color (RGBA).\n     * @since 0.8.5\n     */\n    set clearColor(color) {\n        _wl_scene_set_clearColor(color[0], color[1], color[2], color[3]);\n    }\n    /**\n     * Set whether to clear the color framebuffer before drawing.\n     *\n     * This function is useful if an external framework (e.g. an AR tracking\n     * framework) is responsible for drawing a camera frame before Wonderland\n     * Engine draws the scene on top of it.\n     *\n     * @param b Whether to enable color clear.\n     * @since 0.9.4\n     */\n    set colorClearEnabled(b) {\n        _wl_scene_enableColorClear(b);\n    }\n    /**\n     * Load a scene file (.bin)\n     *\n     * Will replace the currently active scene with the one loaded\n     * from given file. It is assumed that JavaScript components required by\n     * the new scene were registered in advance.\n     *\n     * @param filename Path to the .bin file.\n     */\n    load(filename) {\n        const strLen = lengthBytesUTF8(filename) + 1;\n        const ptr = _malloc(strLen);\n        stringToUTF8(filename, ptr, strLen);\n        _wl_load_scene(ptr);\n        _free(ptr);\n    }\n    /**\n     * Load an external 3D file (.gltf, .glb).\n     *\n     * Loads and parses the gltf file and its images and appends the result\n     * to scene.\n     *\n     * ```js\n     * WL.scene.append(filename).then(root => {\n     *     // root contains the loaded scene\n     * });\n     * ```\n     *\n     * In case the `loadGltfExtensions` option is set to true, the response\n     * will be an object containing both the root of the loaded scene and\n     * any glTF extensions found on nodes, meshes and the root of the file.\n     *\n     * ```js\n     * WL.scene.append(filename, { loadGltfExtensions: true }).then(({root, extensions}) => {\n     *     // root contains the loaded scene\n     *     // extensions.root contains any extensions at the root of glTF document\n     *     const rootExtensions = extensions.root;\n     *     // extensions.mesh and extensions.node contain extensions indexed by Object id\n     *     const childObject = root.children[0];\n     *     const meshExtensions = root.meshExtensions[childObject.objectId];\n     *     const nodeExtensions = root.nodeExtensions[childObject.objectId];\n     *     // extensions.idMapping contains a mapping from glTF node index to Object id\n     * });\n     * ```\n     *\n     * @param filename Path to the .gltf or .glb file.\n     * @param options Additional options for loading.\n     * @returns Root of the loaded scene.\n     */\n    append(filename, options) {\n        options = options || {};\n        const loadGltfExtensions = !!options.loadGltfExtensions;\n        const strLen = lengthBytesUTF8(filename) + 1;\n        const ptr = _malloc(strLen);\n        stringToUTF8(filename, ptr, strLen);\n        const callback = _sceneLoadedCallback.length;\n        const promise = new Promise((resolve, reject) => {\n            _sceneLoadedCallback[callback] = {\n                success: (id, extensions) => {\n                    const root = _wrapObject(id);\n                    resolve(extensions ? { root, extensions } : root);\n                },\n                error: () => reject(),\n            };\n        });\n        _wl_append_scene(ptr, loadGltfExtensions, callback);\n        _free(ptr);\n        return promise;\n    }\n    /**\n     * Unmarshalls the GltfExtensions from an Uint32Array.\n     *\n     * @param data Array containing the gltf extension data.\n     * @returns The extensions stored in an object literal.\n     *\n     * @hidden\n     */\n    _unmarshallGltfExtensions(data) {\n        /* @todo: This method should be moved in the internal Emscripten library. */\n        const extensions = {\n            root: {},\n            mesh: {},\n            node: {},\n            idMapping: {},\n        };\n        let index = 0;\n        const readString = () => {\n            const strPtr = data[index++];\n            const strLen = data[index++];\n            return _WL.UTF8ViewToString(strPtr, strPtr + strLen);\n        };\n        const idMappingSize = data[index++];\n        const idMapping = new Array(idMappingSize);\n        for (let i = 0; i < idMappingSize; ++i) {\n            idMapping[i] = data[index++];\n        }\n        extensions.idMapping = idMapping;\n        const meshExtensionsSize = data[index++];\n        for (let i = 0; i < meshExtensionsSize; ++i) {\n            const objectId = data[index++];\n            extensions.mesh[idMapping[objectId]] = JSON.parse(readString());\n        }\n        const nodeExtensionsSize = data[index++];\n        for (let i = 0; i < nodeExtensionsSize; ++i) {\n            const objectId = data[index++];\n            extensions.node[idMapping[objectId]] = JSON.parse(readString());\n        }\n        const rootExtensionsStr = readString();\n        if (rootExtensionsStr) {\n            extensions.root = JSON.parse(rootExtensionsStr);\n        }\n        return extensions;\n    }\n    /**\n     * Reset the scene.\n     *\n     * This method deletes all used and allocated objects, and components.\n     */\n    reset() {\n        _wl_scene_reset();\n    }\n}\n/**\n * Native component\n *\n * Provides access to a native component instance of a specified component type.\n *\n * Usage example:\n *\n * ```js\n * import { Component, Type } from '@wonderlandengine/api';\n *\n * class MyComponent extends Component {\n *     static TypeName = 'my-component';\n *     static Properties = {\n *         myBoolean: { type: Type.Boolean, default: false },\n *     };\n *     start() {}\n *     onActivate() {}\n *     onDeactivate() {}\n *     update(dt) {}\n * }\n * ```\n */\nexport class Component {\n    /**\n     * Create a new instance\n     *\n     * @param managerIndex Index of the manager.\n     * @param id WASM component instance index.\n     *\n     * @hidden\n     */\n    constructor(managerIndex = -1, id = -1) {\n        this._manager = managerIndex;\n        this._id = id;\n        this._object = null;\n        this._type = null;\n    }\n    /** The name of this component's type */\n    get type() {\n        return this._type || $Object._typeNameFor(this._manager);\n    }\n    /** The object this component is attached to. */\n    get object() {\n        if (!this._object) {\n            const objectId = _wl_component_get_object(this._manager, this._id);\n            this._object = _wrapObject(objectId);\n        }\n        return this._object;\n    }\n    /**\n     * Set whether this component is active.\n     *\n     * Activating/deactivating a component comes at a small cost of reordering\n     * components in the respective component manager. This function therefore\n     * is not a trivial assignment.\n     *\n     * Does nothing if the component is already activated/deactivated.\n     *\n     * @param active New active state.\n     */\n    set active(active) {\n        _wl_component_setActive(this._manager, this._id, active);\n    }\n    /**\n     * Whether this component is active\n     */\n    get active() {\n        return _wl_component_isActive(this._manager, this._id) != 0;\n    }\n    /**\n     * Remove this component from its objects and destroy it.\n     *\n     * It is best practice to set the component to `null` after,\n     * to ensure it does not get used later.\n     *\n     * ```js\n     *    c.destroy();\n     *    c = null;\n     * ```\n     * @since 0.9.0\n     */\n    destroy() {\n        _wl_component_remove(this._manager, this._id);\n        /* @todo: shouldn't be set to undefined. */\n        // @ts-ignore\n        this._manager = undefined;\n        // @ts-ignore\n        this._id = undefined;\n    }\n    /**\n     * Checks equality by comparing whether the wrapped native component ids\n     * and component manager types are equal.\n     *\n     * @param otherComponent Component to check equality with.\n     * @returns Whether this component equals the given component.\n     */\n    equals(otherComponent) {\n        if (!otherComponent)\n            return false;\n        return this._manager == otherComponent._manager && this._id == otherComponent._id;\n    }\n}\n/**\n * Native collision component.\n *\n * Provides access to a native collision component instance.\n */\nexport class CollisionComponent extends Component {\n    /** Collision component collider */\n    get collider() {\n        return _wl_collision_component_get_collider(this._id);\n    }\n    /**\n     * Set collision component collider.\n     *\n     * @param collider Collider of the collision component.\n     */\n    set collider(collider) {\n        _wl_collision_component_set_collider(this._id, collider);\n    }\n    /**\n     * Collision component extents.\n     *\n     * If {@link collider} returns {@link Collider.Sphere}, only the first\n     * component of the returned vector is used.\n     */\n    get extents() {\n        return new Float32Array(HEAPF32.buffer, _wl_collision_component_get_extents(this._id), 3);\n    }\n    /**\n     * Set collision component extents.\n     *\n     * If {@link collider} returns {@link Collider.Sphere}, only the first\n     * component of the passed vector is used.\n     *\n     * Example:\n     *\n     * ```js\n     * // Spans 1 unit on the x-axis, 2 on the y-axis, 3 on the z-axis.\n     * collision.extent = [1, 2, 3];\n     * ```\n     *\n     * @param extents Extents of the collision component, expects a\n     *      3 component array.\n     */\n    set extents(extents) {\n        this.extents.set(extents);\n    }\n    /**\n     * Collision component group.\n     *\n     * The groups is a bitmask that is compared to other components in {@link CollisionComponent#queryOverlaps}\n     * or the group in {@link Scene#rayCast}.\n     *\n     * Colliders that have no common groups will not overlap with each other. If a collider\n     * has none of the groups set for {@link Scene#rayCast}, the ray will not hit it.\n     *\n     * Each bit represents belonging to a group, see example.\n     *\n     * ```js\n     *    // c belongs to group 2\n     *    c.group = (1 << 2);\n     *\n     *    // c belongs to group 0\n     *    c.group = (1 << 0);\n     *\n     *    // c belongs to group 0 *and* 2\n     *    c.group = (1 << 0) | (1 << 2);\n     *\n     *    (c.group & (1 << 2)) != 0; // true\n     *    (c.group & (1 << 7)) != 0; // false\n     * ```\n     */\n    get group() {\n        return _wl_collision_component_get_group(this._id);\n    }\n    /**\n     * Set collision component group.\n     *\n     * @param group Group mask of the collision component.\n     */\n    set group(group) {\n        _wl_collision_component_set_group(this._id, group);\n    }\n    /**\n     * Query overlapping objects.\n     *\n     * Usage:\n     *\n     * ```js\n     * const collision = object.getComponent('collision');\n     * const overlaps = collision.queryOverlaps();\n     * for(const otherCollision of overlaps) {\n     *     const otherObject = otherCollision.object;\n     *     console.log(`Collision with object ${otherObject.objectId}`);\n     * }\n     * ```\n     *\n     * @returns Collision components overlapping this collider.\n     */\n    queryOverlaps() {\n        const count = _wl_collision_component_query_overlaps(this._id, _tempMem, _tempMemSize >> 1);\n        let overlaps = new Array(count);\n        for (let i = 0; i < count; ++i) {\n            overlaps[i] = new CollisionComponent(this._manager, _tempMemUint16[i]);\n        }\n        return overlaps;\n    }\n}\n/**\n * Native text component\n *\n * Provides access to a native text component instance\n */\nexport class TextComponent extends Component {\n    /** Text component alignment. */\n    get alignment() {\n        return _wl_text_component_get_horizontal_alignment(this._id);\n    }\n    /**\n     * Set text component alignment.\n     *\n     * @param alignment Alignment for the text component.\n     */\n    set alignment(alignment) {\n        _wl_text_component_set_horizontal_alignment(this._id, alignment);\n    }\n    /** Text component justification. */\n    get justification() {\n        return _wl_text_component_get_vertical_alignment(this._id);\n    }\n    /**\n     * Set text component justification.\n     *\n     * @param justification Justification for the text component.\n     */\n    set justification(justification) {\n        _wl_text_component_set_vertical_alignment(this._id, justification);\n    }\n    /** Text component character spacing. */\n    get characterSpacing() {\n        return _wl_text_component_get_character_spacing(this._id);\n    }\n    /**\n     * Set text component character spacing.\n     *\n     * @param spacing Character spacing for the text component.\n     */\n    set characterSpacing(spacing) {\n        _wl_text_component_set_character_spacing(this._id, spacing);\n    }\n    /** Text component line spacing. */\n    get lineSpacing() {\n        return _wl_text_component_get_line_spacing(this._id);\n    }\n    /**\n     * Set text component line spacing\n     *\n     * @param spacing Line spacing for the text component\n     */\n    set lineSpacing(spacing) {\n        _wl_text_component_set_line_spacing(this._id, spacing);\n    }\n    /** Text component effect. */\n    get effect() {\n        return _wl_text_component_get_effect(this._id);\n    }\n    /**\n     * Set text component effect\n     *\n     * @param effect Effect for the text component\n     */\n    set effect(effect) {\n        _wl_text_component_set_effect(this._id, effect);\n    }\n    /** Text component text. */\n    get text() {\n        return UTF8ToString(_wl_text_component_get_text(this._id));\n    }\n    /**\n     * Set text component text.\n     *\n     * @param text Text of the text component.\n     */\n    set text(text) {\n        const strLen = lengthBytesUTF8(text) + 1;\n        const ptr = _malloc(strLen);\n        stringToUTF8(text, ptr, strLen);\n        _wl_text_component_set_text(this._id, ptr);\n        _free(ptr);\n    }\n    /**\n     * Set material to render the text with.\n     *\n     * @param material New material.\n     */\n    set material(material) {\n        const matIndex = material ? material._index : 0;\n        _wl_text_component_set_material(this._id, matIndex);\n    }\n    /** Material used to render the text. */\n    get material() {\n        const id = _wl_text_component_get_material(this._id);\n        return id > 0 ? new Material(id) : null;\n    }\n}\n/**\n * Native view component.\n *\n * Provides access to a native view component instance.\n */\nexport class ViewComponent extends Component {\n    /** Projection matrix. */\n    get projectionMatrix() {\n        return new Float32Array(HEAPF32.buffer, _wl_view_component_get_projection_matrix(this._id), 16);\n    }\n    /** ViewComponent near clipping plane value. */\n    get near() {\n        return _wl_view_component_get_near(this._id);\n    }\n    /**\n     * Set near clipping plane distance for the view.\n     *\n     * If an XR session is active, the change will apply in the\n     * following frame, otherwise the change is immediate.\n     *\n     * @param near Near depth value.\n     */\n    set near(near) {\n        _wl_view_component_set_near(this._id, near);\n    }\n    /** Far clipping plane value. */\n    get far() {\n        return _wl_view_component_get_far(this._id);\n    }\n    /**\n     * Set far clipping plane distance for the view.\n     *\n     * If an XR session is active, the change will apply in the\n     * following frame, otherwise the change is immediate.\n     *\n     * @param far Near depth value.\n     */\n    set far(far) {\n        _wl_view_component_set_far(this._id, far);\n    }\n    /**\n     * Get the horizontal field of view for the view, **in degrees**.\n     *\n     * If an XR session is active, this returns the field of view reported by\n     * the device, regardless of the fov that was set.\n     */\n    get fov() {\n        return _wl_view_component_get_fov(this._id);\n    }\n    /**\n     * Set the horizontal field of view for the view, **in degrees**.\n     *\n     * If an XR session is active, the field of view reported by the device is\n     * used and this value is ignored. After the XR session ends, the new value\n     * is applied.\n     *\n     * @param fov Horizontal field of view, **in degrees**.\n     */\n    set fov(fov) {\n        _wl_view_component_set_fov(this._id, fov);\n    }\n}\n/**\n * Native input component.\n *\n * Provides access to a native input component instance.\n */\nexport class InputComponent extends Component {\n    /** Input component type */\n    get inputType() {\n        return _wl_input_component_get_type(this._id);\n    }\n    /**\n     * Set input component type.\n     *\n     * @params New input component type.\n     */\n    set inputType(type) {\n        _wl_input_component_set_type(this._id, type);\n    }\n    /**\n     * WebXR Device API input source associated with this input component,\n     * if type {@link InputType.ControllerLeft} or {@link InputType.ControllerRight}.\n     */\n    get xrInputSource() {\n        if (xrSession) {\n            for (let inputSource of xrSession.inputSources) {\n                if (inputSource.handedness == this.handedness) {\n                    return inputSource;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * 'left', 'right' or {@link null} depending on the {@link InputComponent#inputType}.\n     */\n    get handedness() {\n        const inputType = this.inputType;\n        if (inputType == InputType.ControllerRight ||\n            inputType == InputType.RayRight ||\n            inputType == InputType.EyeRight)\n            return 'right';\n        if (inputType == InputType.ControllerLeft ||\n            inputType == InputType.RayLeft ||\n            inputType == InputType.EyeLeft)\n            return 'left';\n        return null;\n    }\n}\n/**\n * Native light component.\n *\n * Provides access to a native light component instance.\n */\nexport class LightComponent extends Component {\n    /** View on the light color */\n    get color() {\n        return new Float32Array(HEAPF32.buffer, _wl_light_component_get_color(this._id), 4);\n    }\n    /** Light type. */\n    get lightType() {\n        return _wl_light_component_get_type(this._id);\n    }\n    /**\n     * Set light type.\n     *\n     * @param lightType Type of the light component.\n     */\n    set lightType(t) {\n        _wl_light_component_set_type(this._id, t);\n    }\n}\n/**\n * Native animation component.\n *\n * Provides access to a native animation component instance.\n */\nexport class AnimationComponent extends Component {\n    /**\n     * Set animation to play.\n     *\n     * Make sure to {@link Animation#retarget} the animation to affect the\n     * right objects.\n     *\n     * @param anim Animation to play.\n     */\n    set animation(anim) {\n        _wl_animation_component_set_animation(this._id, anim._index);\n    }\n    /** Animation set for this component */\n    get animation() {\n        return new Animation(_wl_animation_component_get_animation(this._id));\n    }\n    /**\n     * Set play count. Set to `0` to loop indefinitely.\n     *\n     * @param playCount Number of times to repeat the animation.\n     */\n    set playCount(playCount) {\n        _wl_animation_component_set_playCount(this._id, playCount);\n    }\n    /** Number of times the animation is played. */\n    get playCount() {\n        return _wl_animation_component_get_playCount(this._id);\n    }\n    /**\n     * Set speed. Set to negative values to run the animation backwards.\n     *\n     * Setting speed has an immediate effect for the current frame's update\n     * and will continue with the speed from the current point in the animation.\n     *\n     * @param speed New speed at which to play the animation.\n     * @since 0.8.10\n     */\n    set speed(speed) {\n        _wl_animation_component_set_speed(this._id, speed);\n    }\n    /**\n     * Speed factor at which the animation is played.\n     *\n     * @since 0.8.10\n     */\n    get speed() {\n        return _wl_animation_component_get_speed(this._id);\n    }\n    /** Current playing state of the animation */\n    get state() {\n        return _wl_animation_component_state(this._id);\n    }\n    /** Play animation. */\n    play() {\n        _wl_animation_component_play(this._id);\n    }\n    /** Stop animation. */\n    stop() {\n        _wl_animation_component_stop(this._id);\n    }\n    /** Pause animation. */\n    pause() {\n        _wl_animation_component_pause(this._id);\n    }\n}\n/**\n * Native mesh component.\n *\n * Provides access to a native mesh component instance.\n */\nexport class MeshComponent extends Component {\n    /**\n     * Set material to render the mesh with.\n     *\n     * @param material Material to render the mesh with.\n     */\n    set material(material) {\n        _wl_mesh_component_set_material(this._id, material ? material._index : 0);\n    }\n    /** Material used to render the mesh. */\n    get material() {\n        const id = _wl_mesh_component_get_material(this._id);\n        return id > 0 ? new Material(id) : null;\n    }\n    /** Mesh rendered by this component. */\n    get mesh() {\n        return new Mesh(_wl_mesh_component_get_mesh(this._id));\n    }\n    /**\n     * Set mesh to rendered with this component.\n     *\n     * @param mesh Mesh rendered by this component.\n     */\n    set mesh(mesh) {\n        _wl_mesh_component_set_mesh(this._id, mesh ? mesh._index : 0);\n    }\n    /** Skin for this mesh component. */\n    get skin() {\n        return new Skin(_wl_mesh_component_get_skin(this._id));\n    }\n    /**\n     * Set skin to transform this mesh component.\n     *\n     * @param {?Skin} skin Skin to use for rendering skinned meshes.\n     */\n    set skin(skin) {\n        _wl_mesh_component_set_skin(this._id, skin._index);\n    }\n}\n/**\n * Native physx rigid body component.\n *\n * Provides access to a native mesh component instance.\n * Only available when using physx enabled runtime, see \"Project Settings > Runtime\".\n */\nclass PhysXComponent extends Component {\n    /**\n     * Set whether this rigid body is static.\n     *\n     * Setting this property only takes effect once the component\n     * switches from inactive to active.\n     *\n     * @param b Whether the rigid body should be static.\n     */\n    set static(b) {\n        _wl_physx_component_set_static(this._id, b);\n    }\n    /**\n     * Whether this rigid body is static.\n     *\n     * This property returns whether the rigid body is *effectively*\n     * static. If static property was set while the rigid body was\n     * active, it will not take effect until the rigid body is set\n     * inactive and active again. Until the component is set inactive,\n     * this getter will return whether the rigidbody is actually\n     * static.\n     */\n    get static() {\n        return !!_wl_physx_component_get_static(this._id);\n    }\n    /**\n     * Set whether this rigid body is kinematic.\n     *\n     * @param b Whether the rigid body should be kinematic.\n     */\n    set kinematic(b) {\n        _wl_physx_component_set_kinematic(this._id, b);\n    }\n    /**\n     * Whether this rigid body is kinematic.\n     */\n    get kinematic() {\n        return !!_wl_physx_component_get_kinematic(this._id);\n    }\n    /**\n     * Set the shape for collision detection.\n     *\n     * @param s New shape.\n     * @since 0.8.5\n     */\n    set shape(s) {\n        _wl_physx_component_set_shape(this._id, s);\n    }\n    /** The shape for collision detection. */\n    get shape() {\n        return _wl_physx_component_get_shape(this._id);\n    }\n    /**\n     * Set additional data for the shape.\n     *\n     * Retrieved only from {@link PhysXComponent#shapeData}.\n     * @since 0.8.10\n     */\n    set shapeData(d) {\n        /* @todo: The array includes is useless and slow. */\n        if (d == null || ![Shape.TriangleMesh, Shape.ConvexMesh].includes(this.shape))\n            return;\n        _wl_physx_component_set_shape_data(this._id, d.index);\n    }\n    /**\n     * Additional data for the shape.\n     *\n     * `null` for {@link Shape} values: `None`, `Sphere`, `Capsule`, `Box`, `Plane`.\n     * `{index: n}` for `TriangleMesh` and `ConvexHull`.\n     *\n     * This data is currently only for passing onto or creating other {@link PhysXComponent}.\n     * @since 0.8.10\n     */\n    get shapeData() {\n        if (![Shape.TriangleMesh, Shape.ConvexMesh].includes(this.shape))\n            return null;\n        return { index: _wl_physx_component_get_shape_data(this._id) };\n    }\n    /**\n     * Set the shape extents for collision detection.\n     *\n     * @param e New extents for the shape.\n     * @since 0.8.5\n     */\n    set extents(e) {\n        this.extents.set(e);\n    }\n    /**\n     * The shape extents for collision detection.\n     */\n    get extents() {\n        const ptr = _wl_physx_component_get_extents(this._id);\n        return new Float32Array(HEAPF32.buffer, ptr, 3);\n    }\n    /**\n     * Get staticFriction.\n     */\n    get staticFriction() {\n        return _wl_physx_component_get_staticFriction(this._id);\n    }\n    /**\n     * Set staticFriction.\n     * @param v New staticFriction.\n     */\n    set staticFriction(v) {\n        _wl_physx_component_set_staticFriction(this._id, v);\n    }\n    /**\n     * Get dynamicFriction.\n     */\n    get dynamicFriction() {\n        return _wl_physx_component_get_dynamicFriction(this._id);\n    }\n    /**\n     * Set dynamicFriction\n     * @param v New dynamicDamping.\n     */\n    set dynamicFriction(v) {\n        _wl_physx_component_set_dynamicFriction(this._id, v);\n    }\n    /**\n     * Get bounciness.\n     * @since 0.9.0\n     */\n    get bounciness() {\n        return _wl_physx_component_get_bounciness(this._id);\n    }\n    /**\n     * Set bounciness.\n     * @param v New bounciness.\n     * @since 0.9.0\n     */\n    set bounciness(v) {\n        _wl_physx_component_set_bounciness(this._id, v);\n    }\n    /**\n     * Get linearDamping/\n     */\n    get linearDamping() {\n        return _wl_physx_component_get_linearDamping(this._id);\n    }\n    /**\n     * Set linearDamping.\n     * @param v New linearDamping.\n     */\n    set linearDamping(v) {\n        _wl_physx_component_set_linearDamping(this._id, v);\n    }\n    /** Get angularDamping. */\n    get angularDamping() {\n        return _wl_physx_component_get_angularDamping(this._id);\n    }\n    /**\n     * Set angularDamping.\n     * @param v New angularDamping.\n     */\n    set angularDamping(v) {\n        _wl_physx_component_set_angularDamping(this._id, v);\n    }\n    /**\n     * Set linear velocity.\n     *\n     * [PhysX Manual - \"Velocity\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#velocity)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param v New linear velocity.\n     */\n    set linearVelocity(v) {\n        _wl_physx_component_set_linearVelocity(this._id, v[0], v[1], v[2]);\n    }\n    /** Linear velocity or `[0, 0, 0]` if the component is not active. */\n    get linearVelocity() {\n        _wl_physx_component_get_linearVelocity(this._id, _tempMem);\n        return new Float32Array(HEAPF32.buffer, _tempMem, 3);\n    }\n    /**\n     * Set angular velocity\n     *\n     * [PhysX Manual - \"Velocity\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#velocity)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param v New angular velocity\n     */\n    set angularVelocity(v) {\n        _wl_physx_component_set_angularVelocity(this._id, v[0], v[1], v[2]);\n    }\n    /** Angular velocity or `[0, 0, 0]` if the component is not active. */\n    get angularVelocity() {\n        _wl_physx_component_get_angularVelocity(this._id, _tempMem);\n        return new Float32Array(HEAPF32.buffer, _tempMem, 3);\n    }\n    /**\n     * Set mass.\n     *\n     * [PhysX Manual - \"Mass Properties\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#mass-properties)\n     *\n     * @param m New mass.\n     */\n    set mass(m) {\n        _wl_physx_component_set_mass(this._id, m);\n    }\n    /** Mass */\n    get mass() {\n        return _wl_physx_component_get_mass(this._id);\n    }\n    /**\n     * Set mass space interia tensor.\n     *\n     * [PhysX Manual - \"Mass Properties\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#mass-properties)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param v New mass space interatia tensor.\n     */\n    set massSpaceInteriaTensor(v) {\n        _wl_physx_component_set_massSpaceInertiaTensor(this._id, v[0], v[1], v[2]);\n    }\n    /**\n     * Apply a force.\n     *\n     * [PhysX Manual - \"Applying Forces and Torques\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#applying-forces-and-torques)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param f Force vector.\n     * @param m Force mode, see {@link ForceMode}, default `Force`.\n     * @param localForce Whether the force vector is in local space, default `false`.\n     * @param p Position to apply force at, default is center of mass.\n     * @param local Whether position is in local space, default `false`.\n     */\n    addForce(f, m, localForce, p, local) {\n        /* @todo: `localForce` should be a boolean`. */\n        m = m || ForceMode.Force;\n        if (!p) {\n            _wl_physx_component_addForce(this._id, f[0], f[1], f[2], m, !!localForce);\n        }\n        else {\n            _wl_physx_component_addForceAt(this._id, f[0], f[1], f[2], m, !!localForce, p[0], p[1], p[2], !!local);\n        }\n    }\n    /**\n     * Apply torque.\n     *\n     * [PhysX Manual - \"Applying Forces and Torques\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#applying-forces-and-torques)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param f Force vector.\n     * @param m Force mode, see {@link ForceMode}, default `Force`.\n     */\n    addTorque(f, m = ForceMode.Force) {\n        _wl_physx_component_addTorque(this._id, f[0], f[1], f[2], m);\n    }\n    /**\n     * Add on collision callback.\n     *\n     * @param callback Function to call when this rigid body (un)collides with any other.\n     *\n     * ```js\n     *  let rigidBody = this.object.getComponent('physx');\n     *  rigidBody.onCollision(function(type, other) {\n     *      // Ignore uncollides\n     *      if(type == CollisionEventType.TouchLost) return;\n     *\n     *      // Take damage on collision with enemies\n     *      if(other.object.name.startsWith('enemy-')) {\n     *          this.applyDamage(10);\n     *      }\n     *  }.bind(this));\n     * ```\n     *\n     * @returns Id of the new callback for use with {@link PhysXComponent#removeCollisionCallback}.\n     */\n    onCollision(callback) {\n        return this.onCollisionWith(this, callback);\n    }\n    /**\n     * Add filtered on collision callback.\n     *\n     * @param otherComp Component for which callbacks will\n     *        be triggered. If you pass this component, the method is equivalent to.\n     *        {@link PhysXComponent#onCollision}.\n     * @param callback Function to call when this rigid body\n     *        (un)collides with `otherComp`.\n     * @returns Id of the new callback for use with {@link PhysXComponent#removeCollisionCallback}.\n     */\n    onCollisionWith(otherComp, callback) {\n        physics._callbacks[this._id] = physics._callbacks[this._id] || [];\n        physics._callbacks[this._id].push(callback);\n        return _wl_physx_component_addCallback(this._id, otherComp._id || this._id);\n    }\n    /**\n     * Remove a collision callback added with {@link PhysXComponent#onCollision} or {@link PhysXComponent#onCollisionWith}.\n     *\n     * @param callbackId Callback id as returned by {@link PhysXComponent#onCollision} or {@link PhysXComponent#onCollisionWith}.\n     * @throws When the callback does not belong to the component.\n     * @throws When the callback does not exist.\n     */\n    removeCollisionCallback(callbackId) {\n        const r = _wl_physx_component_removeCallback(this._id, callbackId);\n        /* r is the amount of object to remove from the end of the\n         * callbacks array for this object */\n        if (r)\n            physics._callbacks[this._id].splice(-r);\n    }\n}\n/** @todo: Remove as this might break tree-shaking. Instead, would be better\n * to extend the `toJSON` method to serialize / unserialize. */\nfor (const prop of [\n    'static',\n    'extents',\n    'staticFriction',\n    'dynamicFriction',\n    'bounciness',\n    'linearDamping',\n    'angularDamping',\n    'shape',\n    'shapeData',\n    'kinematic',\n    'linearVelocity',\n    'angularVelocity',\n    'mass',\n]) {\n    Object.defineProperty(PhysXComponent.prototype, prop, { enumerable: true });\n}\nexport { PhysXComponent };\n/**\n * Access to the physics scene\n */\nexport class Physics {\n    constructor() {\n        this._rayHit = _malloc(4 * (3 * 4 + 3 * 4 + 4 + 2) + 4);\n        this._hit = new RayHit(this._rayHit);\n        this._callbacks = {};\n    }\n    /**\n     * Cast a ray through the physics scene and find intersecting objects.\n     *\n     * The resulting ray hit will contain **up to 4** closest ray hits,\n     * sorted by increasing distance.\n     *\n     * @param o Ray origin.\n     * @param d Ray direction.\n     * @param group Collision group to filter by: only objects that are\n     *        part of given group are considered for raycast.\n     * @param maxDistance Maximum ray distance, default `100.0`.\n     *\n     * @returns The RayHit instance, belonging to this class.\n     *\n     * @note The returned {@link RayHit} object is owned by the Physics instance and\n     *       will be reused with the next {@link Physics#rayCast} call.\n     */\n    rayCast(o, d, group, maxDistance) {\n        if (typeof maxDistance === 'undefined')\n            maxDistance = 100.0;\n        _wl_physx_ray_cast(o[0], o[1], o[2], d[0], d[1], d[2], group, maxDistance || 100, this._rayHit);\n        return this._hit;\n    }\n    /**\n     * Triggered by the WASM runtime.\n     *\n     * @hidden\n     */\n    _callCollisionCallback(a, index, type, b) {\n        physics._callbacks[a][index](type, new PhysXComponent($Object._typeIndexFor('physx'), b));\n    }\n}\n/**\n * Mesh index type.\n */\nexport var MeshIndexType;\n(function (MeshIndexType) {\n    /** Single byte mesh index, range 0-255 */\n    MeshIndexType[MeshIndexType[\"UnsignedByte\"] = 1] = \"UnsignedByte\";\n    /** Two byte mesh index, range 0-65535 */\n    MeshIndexType[MeshIndexType[\"UnsignedShort\"] = 2] = \"UnsignedShort\";\n    /** Four byte mesh index, range 0-4294967295 */\n    MeshIndexType[MeshIndexType[\"UnsignedInt\"] = 4] = \"UnsignedInt\";\n})(MeshIndexType || (MeshIndexType = {}));\n/**\n * Wrapper around a native mesh data.\n *\n * To modify a mesh, you get access to a {@link MeshAttributeAccessor} that allows you to modify\n * the content of the buffers:\n *\n * Usage:\n *\n * ```js\n * const mesh = new Mesh({vertexCount: 3, indexData: [0, 1, 2] });\n * const positions = mesh.attribute(MeshAttribute.Position);\n * ...\n * ```\n */\nexport class Mesh {\n    /**\n     * Size of a vertex in float elements.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttributeAccessor}\n     */\n    static get VERTEX_FLOAT_SIZE() {\n        return 3 + 3 + 2;\n    }\n    /**\n     * Size of a vertex in bytes.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttributeAccessor}\n     */\n    static get VERTEX_SIZE() {\n        return this.VERTEX_FLOAT_SIZE * 4;\n    }\n    /**\n     * Position attribute offsets in float elements.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttribute#Position}\n     */\n    static get POS() {\n        return { X: 0, Y: 1, Z: 2 };\n    }\n    /**\n     * Texture coordinate attribute offsets in float elements.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttribute#TextureCoordinate}\n     */\n    static get TEXCOORD() {\n        return { U: 3, V: 4 };\n    }\n    /**\n     * Normal attribute offsets in float elements.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttribute#Normal}\n     */\n    static get NORMAL() {\n        return { X: 5, Y: 6, Z: 7 };\n    }\n    /**\n     * Create a new instance.\n     *\n     * @param params Either a mesh index to wrap or set of parameters to create a new mesh.\n     *    For more information, please have a look at the {@link MeshParameters} interface.\n     */\n    constructor(params) {\n        if (typeof params === 'object') {\n            if (!params.vertexCount && params.vertexData) {\n                params.vertexCount = params.vertexData.length / Mesh.VERTEX_FLOAT_SIZE;\n            }\n            if (!params.vertexCount)\n                throw new Error(\"Missing parameter 'vertexCount'\");\n            let indexData = 0;\n            let indexType = 0;\n            let indexDataSize = 0;\n            if (params.indexData) {\n                indexType = params.indexType || MeshIndexType.UnsignedShort;\n                indexDataSize = params.indexData.length * indexType;\n                indexData = _malloc(indexDataSize);\n                /* Copy the index data into wasm memory */\n                switch (indexType) {\n                    case MeshIndexType.UnsignedByte:\n                        HEAPU8.set(params.indexData, indexData);\n                        break;\n                    case MeshIndexType.UnsignedShort:\n                        HEAPU16.set(params.indexData, indexData >> 1);\n                        break;\n                    case MeshIndexType.UnsignedInt:\n                        HEAPU32.set(params.indexData, indexData >> 2);\n                        break;\n                }\n            }\n            const { skinned = false } = params;\n            this._index = _wl_mesh_create(indexData, indexDataSize, indexType, params.vertexCount, skinned);\n            if (params.vertexData) {\n                const positions = this.attribute(MeshAttribute.Position);\n                const normals = this.attribute(MeshAttribute.Normal);\n                const textureCoordinates = this.attribute(MeshAttribute.TextureCoordinate);\n                for (let i = 0; i < params.vertexCount; ++i) {\n                    const start = i * Mesh.VERTEX_FLOAT_SIZE;\n                    positions.set(i, params.vertexData.subarray(start, start + 3));\n                    textureCoordinates === null || textureCoordinates === void 0 ? void 0 : textureCoordinates.set(i, params.vertexData.subarray(start + 3, start + 5));\n                    normals === null || normals === void 0 ? void 0 : normals.set(i, params.vertexData.subarray(start + 5, start + 8));\n                }\n            }\n        }\n        else {\n            this._index = params;\n        }\n    }\n    /**\n     * Vertex data (read-only).\n     *\n     * @deprecated Replaced with {@link attribute}\n     */\n    get vertexData() {\n        const ptr = _wl_mesh_get_vertexData(this._index, _tempMem);\n        return new Float32Array(HEAPF32.buffer, ptr, Mesh.VERTEX_FLOAT_SIZE * HEAPU32[_tempMem / 4]);\n    }\n    /** Number of vertices in this mesh. */\n    get vertexCount() {\n        return _wl_mesh_get_vertexCount(this._index);\n    }\n    /** Index data (read-only) or {@link null} if the mesh is not indexed. */\n    get indexData() {\n        const ptr = _wl_mesh_get_indexData(this._index, _tempMem, _tempMem + 4);\n        if (ptr === null)\n            return null;\n        const indexCount = HEAPU32[_tempMem / 4];\n        const indexSize = HEAPU32[_tempMem / 4 + 1];\n        switch (indexSize) {\n            case MeshIndexType.UnsignedByte:\n                return new Uint8Array(HEAPU8.buffer, ptr, indexCount);\n            case MeshIndexType.UnsignedShort:\n                return new Uint16Array(HEAPU16.buffer, ptr, indexCount);\n            case MeshIndexType.UnsignedInt:\n                return new Uint32Array(HEAPU32.buffer, ptr, indexCount);\n        }\n        return null;\n    }\n    /** Updates the bounding sphere to match new vertex positions. */\n    update() {\n        _wl_mesh_update(this._index);\n    }\n    /**\n     * Mesh bounding sphere.\n     *\n     * @param out Preallocated array to write into, to avoid garbage,\n     *     otherwise will allocate a new {@link Float32Array}.\n     *\n     * ```js\n     *  const sphere = new Float32Array(4);\n     *  for(...) {\n     *      mesh.getBoundingSphere(sphere);\n     *      ...\n     *  }\n     * ```\n     *\n     * If the position data is changed, call {@link Mesh#update} to update the\n     * bounding sphere.\n     *\n     * @returns Bounding sphere, 0-2 sphere origin, 3 radius.\n     */\n    getBoundingSphere(out = new Float32Array(4)) {\n        _wl_mesh_get_boundingSphere(this._index, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        out[3] = _tempMemFloat[3];\n        return out;\n    }\n    /**\n     * Get an attribute accessor to retrieve or modify data of give attribute.\n     *\n     * @param attr Attribute to get access to\n     * @returns {?MeshAttributeAccessor} attr Attribute to get access to or `null`,\n     *      if mesh does not have this attribute.\n     *\n     * If there are no shaders in the scene that use `TextureCoordinate` for example,\n     * no meshes will have the `TextureCoordinate` attribute.\n     *\n     * For flexible reusable components, take this into account that only `Position`\n     * is guaranteed to be present at all time.\n     */\n    attribute(attr) {\n        if (typeof attr != 'number')\n            throw new TypeError('Expected number, but got ' + typeof attr);\n        _wl_mesh_get_attribute(this._index, attr, _tempMem);\n        if (_tempMemUint32[0] == 255)\n            return null;\n        const a = new MeshAttributeAccessor(attr);\n        a._attribute = _tempMemUint32[0];\n        a._offset = _tempMemUint32[1];\n        a._stride = _tempMemUint32[2];\n        a._formatSize = _tempMemUint32[3];\n        a._componentCount = _tempMemUint32[4];\n        a.length = this.vertexCount;\n        return a;\n    }\n    /**\n     * Destroy and free the meshes memory.\n     *\n     * It is best practice to set the mesh variable to `null` after calling\n     * destroy to prevent accidental use:\n     *\n     * ```js\n     *   mesh.destroy();\n     *   mesh = null;\n     * ```\n     *\n     * Accessing the mesh after destruction behaves like accessing an empty\n     * mesh.\n     *\n     * @since 0.9.0\n     */\n    destroy() {\n        _wl_mesh_destroy(this._index);\n    }\n}\n/**\n * An iterator over a mesh vertex attribute.\n *\n * Usage:\n *\n * ```js\n *   const mesh = this.object.getComponent('mesh').mesh;\n *   const positions = mesh.attribute(WL.MeshAttribute.Position);\n *\n *   const temp = new Float32Array(3);\n *   for(int i = 0; i < positions.length; ++i) {\n *       // pos will reference temp and thereby not allocate additional\n *       // JavaScript garbage, which would cause a perf spike when collected.\n *       const pos = positions.get(i, temp);\n *       // scale position by 2 on X axis only\n *       pos[0] *= 2.0f;\n *       positions.set(i, pos);\n *   }\n * ```\n */\nexport class MeshAttributeAccessor {\n    /**\n     * Create a new instance.\n     *\n     * @param type The type of data this accessor is wrapping.\n     * @note Do not use this constructor. Instead, please use the {@link Mesh.attribute} method.\n     *\n     * @hidden\n     */\n    constructor(type = MeshAttribute.Position) {\n        /** Attribute index. @hidden */\n        this._attribute = -1;\n        /** Attribute offset. @hidden */\n        this._offset = 0;\n        /** Attribute stride. @hidden */\n        this._stride = 0;\n        /** Format size native enum. @hidden */\n        this._formatSize = 0;\n        /** Number of components per vertex. @hidden */\n        this._componentCount = 0;\n        /** Max number of elements. */\n        this.length = 0;\n        switch (type) {\n            case MeshAttribute.Position:\n            case MeshAttribute.Normal:\n            case MeshAttribute.TextureCoordinate:\n            case MeshAttribute.Tangent:\n            case MeshAttribute.Color:\n            case MeshAttribute.JointWeight:\n            case MeshAttribute.SecondaryJointWeight:\n                this._bufferType = Float32Array;\n                this._tempBufferGetter = getTempBufferF32;\n                break;\n            case MeshAttribute.JointId:\n            case MeshAttribute.SecondaryJointId:\n                this._bufferType = Uint16Array;\n                this._tempBufferGetter = getTempBufferU16;\n                break;\n            default:\n                throw new Error(`Invalid attribute accessor type: ${type}`);\n        }\n    }\n    /**\n     * Create a new TypedArray to hold this attribute values.\n     *\n     * This method is useful to create a view to hold the data to\n     * pass to {@link MeshAttributeAccessor.get} and {@link MeshAttributeAccessor.set}\n     *\n     * Example:\n     *\n     * ```js\n     * const vertexCount = 4;\n     * const positionAttribute = mesh.attribute(MeshAttributes.Position);\n     *\n     * // A position has 3 floats per vertex. Thus, positions has length 3 * 4.\n     * const positions = positionAttribute.createArray(vertexCount);\n     * ```\n     *\n     * @param count The number of **vertices** expected.\n     * @returns A TypedArray with the appropriate format to access the data\n     */\n    createArray(count = 1) {\n        count = count > this.length ? this.length : count;\n        return new this._bufferType(count * this._componentCount);\n    }\n    /**\n     * Get attribute element.\n     *\n     * @param {number} index Index\n     * @param out Preallocated array to write into,\n     *      to avoid garbage, otherwise will allocate a new TypedArray.\n     *\n     * `out.length` needs to be a multiple of the attributes component count, see\n     * {@link MeshAttribute}. If `out.length` is more than one multiple, it will be\n     * filled with the next n attribute elements, which can reduce overhead\n     * of this call.\n     *\n     * @returns The `out` parameter\n     */\n    get(index, out = this.createArray()) {\n        if (out.length % this._componentCount !== 0)\n            throw new Error(`out.length, ${out.length} is not a multiple of the attribute vector components, ${this._componentCount}`);\n        const dest = this._tempBufferGetter(out.length);\n        const bytesPerElt = this._bufferType.BYTES_PER_ELEMENT;\n        const bytes = bytesPerElt * out.length;\n        const destFormatSize = this._componentCount * bytesPerElt;\n        _wl_mesh_get_attribute_values(this._attribute, this._formatSize, this._offset + index * this._stride, this._stride, destFormatSize, dest.byteOffset, bytes);\n        for (let i = 0; i < out.length; ++i)\n            out[i] = dest[i];\n        return out;\n    }\n    /**\n     * Set attribute element.\n     *\n     * @param i Index\n     * @param v Value to set the element to\n     *\n     * `v.length` needs to be a multiple of the attributes component count, see\n     * {@link MeshAttribute}. If `v.length` is more than one multiple, it will be\n     * filled with the next n attribute elements, which can reduce overhead\n     * of this call.\n     *\n     * @returns Reference to self (for method chaining)\n     */\n    set(i, v) {\n        if (v.length % this._componentCount !== 0)\n            throw new Error(`out.length, ${v.length} is not a multiple of the attribute vector components, ${this._componentCount}`);\n        const bytesPerElt = this._bufferType.BYTES_PER_ELEMENT;\n        const bytes = bytesPerElt * v.length;\n        const srcFormatSize = this._componentCount * bytesPerElt;\n        /* Unless we are already working with data from WASM heap, we\n         * need to copy into temporary memory. */\n        if (v.buffer != HEAPU8.buffer) {\n            const dest = this._tempBufferGetter(v.length);\n            dest.set(v);\n            v = dest;\n        }\n        _wl_mesh_set_attribute_values(this._attribute, srcFormatSize, v.byteOffset, bytes, this._formatSize, this._offset + i * this._stride, this._stride);\n        return this;\n    }\n}\n/**\n * Wrapper around a native material.\n *\n * Each material instance will have properties associated to the pipeline it uses.\n * The material properties are automatically added to each material instance, example:\n *\n * ```js\n * const material = mesh.material; // Material with a `Phong Opaque Textured` pipeline\n * // You can access all the material properties from the editor using:\n * material.diffuseTexture = null;\n * material.diffuseColor = [1.0, 0.0, 0.0, 1.0];\n * ```\n */\nexport class Material {\n    /**\n     * Create a new Material.\n     *\n     * @note Creating material is expensive. Please use {@link Material#clone} to clone a material.\n     * @note Do not use this constructor directly with an index, this is reserved for internal purposes.\n     */\n    constructor(params) {\n        if (typeof params !== 'number') {\n            if (!(params === null || params === void 0 ? void 0 : params.pipeline))\n                throw new Error(\"Missing parameter 'pipeline'\");\n            const pipeline = params.pipeline;\n            const lengthBytes = lengthBytesUTF8(pipeline) + 1;\n            stringToUTF8(pipeline, _tempMem, lengthBytes);\n            this._index = _wl_material_create(_tempMem);\n            if (this._index < 0)\n                throw new Error(`No such pipeline '${pipeline}'`);\n        }\n        else {\n            this._index = params;\n        }\n        this._definition = _wl_material_get_definition(this._index);\n        if (!_WL._materialDefinitions[this._definition])\n            throw new Error(`Material Definition ${this._definition} not found for material with index ${this._index}`);\n        return new Proxy(this, {\n            get(target, prop) {\n                const definition = _WL._materialDefinitions[target._definition];\n                const param = definition.get(prop);\n                if (!param)\n                    return target[prop];\n                if (_wl_material_get_param_value(target._index, param.index, _tempMem)) {\n                    const type = param.type;\n                    switch (type.type) {\n                        case MaterialParamType.UnsignedInt:\n                            return type.componentCount == 1\n                                ? _tempMemUint32[0]\n                                : new Uint32Array(HEAPU32.buffer, _tempMem, type.componentCount);\n                        case MaterialParamType.Int:\n                            return type.componentCount == 1\n                                ? _tempMemInt[0]\n                                : new Int32Array(HEAP32.buffer, _tempMem, type.componentCount);\n                        case MaterialParamType.Float:\n                            return type.componentCount == 1\n                                ? _tempMemFloat[0]\n                                : new Float32Array(HEAPF32.buffer, _tempMem, type.componentCount);\n                        case MaterialParamType.Sampler:\n                            return new Texture(_tempMemInt[0]);\n                        default:\n                            throw new Error(`Invalid type ${type} on parameter ${param.index} for material ${target._index}`);\n                    }\n                }\n            },\n            set(target, prop, value) {\n                const definition = _WL._materialDefinitions[target._definition];\n                const param = definition.get(prop);\n                if (!param) {\n                    target[prop] = value;\n                    return true;\n                }\n                const type = param.type;\n                switch (type.type) {\n                    case MaterialParamType.UnsignedInt:\n                    case MaterialParamType.Int:\n                    case MaterialParamType.Sampler:\n                        const v = value instanceof Texture ? value.id : value;\n                        _wl_material_set_param_value_uint(target._index, param.index, v);\n                        break;\n                    case MaterialParamType.Float:\n                        let count = 1;\n                        if (typeof value === 'number') {\n                            _tempMemFloat[0] = value;\n                        }\n                        else {\n                            count = value.length;\n                            for (let i = 0; i < count; ++i)\n                                _tempMemFloat[i] = value[i];\n                        }\n                        _wl_material_set_param_value_float(target._index, param.index, _tempMem, count);\n                        break;\n                    case MaterialParamType.Font:\n                        throw new Error('Setting font properties is currently unsupported.');\n                }\n                return true;\n            },\n        });\n    }\n    /** Name of the shader used by this material. */\n    get shader() {\n        return UTF8ToString(_wl_material_get_shader(this._index));\n    }\n    /**\n     * Create a copy of the underlying native material.\n     *\n     * @returns Material clone.\n     */\n    clone() {\n        const id = _wl_material_clone(this._index);\n        return id > 0 ? new Material(id) : null;\n    }\n    /**\n     * Wrap a native material index.\n     *\n     * @param index The index.\n     * @returns Material instance or {@link null} if index <= 0.\n     *\n     * @deprecated Please use `new Material()` instead.\n     */\n    static wrap(index) {\n        /** @todo: this propagate nullable in the entire codebase. Remove. */\n        return index > 0 ? new Material(index) : null;\n    }\n}\n/** Temporary canvas */\nlet tempCanvas = null;\n/**\n * Wrapper around a native texture data.\n */\nexport class Texture {\n    /**\n     * @param param HTML media element to create texture from or texture id to wrap.\n     */\n    constructor(param) {\n        /** Index in the manager. @hidden */\n        this._id = 0;\n        /** HTML image index. @hidden */\n        this._imageIndex = undefined; /* @todo: Remove undefined */\n        if (param instanceof HTMLImageElement ||\n            param instanceof HTMLVideoElement ||\n            param instanceof HTMLCanvasElement) {\n            const index = _images.length;\n            _images.push(param);\n            this._imageIndex = index;\n            this._id = _wl_renderer_addImage(index);\n        }\n        else {\n            this._id = param;\n        }\n        textures[this._id] = this;\n    }\n    /** Whether this texture is valid. */\n    get valid() {\n        return this._id >= 0;\n    }\n    /** Index in this manager. */\n    get id() {\n        return this._id;\n    }\n    /** Update the texture to match the HTML element (e.g. reflect the current frame of a video). */\n    update() {\n        if (!this.valid)\n            return;\n        _wl_renderer_updateImage(this._id, this._imageIndex);\n    }\n    /** Width of the texture. */\n    get width() {\n        return _wl_texture_width(this._id);\n    }\n    /** Height of the texture. */\n    get height() {\n        return _wl_texture_height(this._id);\n    }\n    /**\n     * Update a subrange on the texture to match the HTML element (e.g. reflect the current frame of a video).\n     *\n     * Usage:\n     *\n     * ```js\n     * // Copies rectangle of pixel starting from (10, 20)\n     * texture.updateSubImage(10, 20, 600, 400);\n     * ```\n     *\n     * @param x x offset\n     * @param y y offset\n     * @param w width\n     * @param h height\n     */\n    updateSubImage(x, y, w, h) {\n        var _a;\n        if (!this.valid)\n            return;\n        /* Lazy initialize temp canvas */\n        if (!tempCanvas)\n            tempCanvas = document.createElement('canvas');\n        const img = _images[this._imageIndex];\n        if (!img)\n            return;\n        tempCanvas.width = w;\n        tempCanvas.height = h;\n        /* @todo: Would be smarted to cache context. */\n        (_a = tempCanvas.getContext('2d')) === null || _a === void 0 ? void 0 : _a.drawImage(img, x, y, w, h, 0, 0, w, h);\n        /* @todo: Do not store temporary canvas. */\n        _images[this._imageIndex] = tempCanvas;\n        try {\n            _wl_renderer_updateImage(this._id, this._imageIndex, x, (img.videoHeight || img.height) - y - h);\n        }\n        finally {\n            _images[this._imageIndex] = img;\n        }\n    }\n    /**\n     * Destroy and free the texture's texture altas space and memory.\n     *\n     * It is best practice to set the texture variable to `null` after calling\n     * destroy to prevent accidental use of the invalid texture:\n     *\n     * ```js\n     *   texture.destroy();\n     *   texture = null;\n     * ```\n     *\n     * @since 0.9.0\n     */\n    destroy() {\n        _wl_texture_destroy(this._id);\n        if (this._imageIndex) {\n            _images[this._imageIndex] = null;\n            this._imageIndex = undefined;\n        }\n    }\n}\n/**\n * Access to the textures managed by Wonderland Engine.\n */\nconst textures = {\n    /**\n     * Load an image from URL as {@link Texture}\n     * @param {string} filename URL to load from\n     * @param {string} crossOrigin Cross origin flag for the {@link Image} object\n     * @returns {Promise<Texture>} Loaded texture\n     */\n    load: function (filename, crossOrigin) {\n        let image = new Image();\n        if (crossOrigin !== undefined) {\n            image.crossOrigin = crossOrigin;\n        }\n        image.src = filename;\n        return new Promise((resolve, reject) => {\n            image.onload = function () {\n                let texture = new Texture(image);\n                if (!texture.valid) {\n                    reject('Failed to add image ' +\n                        image.src +\n                        ' to texture atlas. Probably incompatible format.');\n                }\n                resolve(texture);\n            };\n        });\n    },\n};\n/**\n * Wrapper around a native animation.\n */\nexport class Animation {\n    /**\n     * @param index Index in the manager\n     */\n    constructor(index) {\n        this._index = index;\n    }\n    /** Duration of this animation. */\n    get duration() {\n        return _wl_animation_get_duration(this._index);\n    }\n    /** Number of tracks in this animation. */\n    get trackCount() {\n        return _wl_animation_get_trackCount(this._index);\n    }\n    /**\n     * Clone this animation retargeted to a new set of objects.\n     *\n     * The clone shares most of the data with the original and is therefore\n     * light-weight.\n     *\n     * **Experimental:** This API might change in upcoming versions.\n     *\n     * If retargetting to {@link Skin}, the join names will be used to determine a mapping\n     * from the previous skin to the new skin. The source skin will be retrieved from\n     * the first track in the animation that targets a joint.\n     *\n     * @param newTargets New targets per track. Expected to have\n     *      {@link Animation#trackCount} elements or to be a {@link Skin}.\n     * @returns The retargeted clone of this animation.\n     */\n    retarget(newTargets) {\n        if (newTargets instanceof Skin) {\n            const animId = _wl_animation_retargetToSkin(this._index, newTargets._index);\n            return new Animation(animId);\n        }\n        if (newTargets.length != this.trackCount) {\n            throw Error('Expected ' +\n                this.trackCount.toString() +\n                ' targets, but got ' +\n                newTargets.length.toString());\n        }\n        const ptr = _malloc(2 * newTargets.length);\n        for (let i = 0; i < newTargets.length; ++i) {\n            HEAPU16[ptr >> (1 + i)] = newTargets[i].objectId;\n        }\n        const animId = _wl_animation_retarget(this._index, ptr);\n        _free(ptr);\n        return new Animation(animId);\n    }\n}\n/**\n * Scene graph object.\n *\n * Node in the scene graph or \"entity\". Consists of transformation and a reference\n * to its parent object. Usually holds components and is accessible by components\n * through {@link Component#object}.\n *\n * Objects are stored in a data oriented manner inside WebAssembly memory. This class\n * is a JavaScript API wrapper around this memory for more convenient use in\n * components.\n *\n * Objects can be created and added to a scene through\n * {@link Scene#addObject} on the {@link scene|main scene}.\n */\nclass $Object {\n    /**\n     * @param o Object id to wrap\n     */\n    constructor(o) {\n        this.objectId = o;\n    }\n    /**\n     * Name of the object.\n     *\n     * Useful for identifying objects during debugging.\n     */\n    get name() {\n        return UTF8ToString(_wl_object_name(this.objectId));\n    }\n    /**\n     * Set the object's name.\n     *\n     * @param newName The new name to set.\n     */\n    set name(newName) {\n        const lengthBytes = lengthBytesUTF8(newName) + 1;\n        const mem = _malloc(lengthBytes);\n        stringToUTF8(newName, mem, lengthBytes);\n        _wl_object_set_name(this.objectId, mem);\n        _free(mem);\n    }\n    /**\n     * Parent of this object or {@link null} if parented to root.\n     */\n    get parent() {\n        const p = _wl_object_parent(this.objectId);\n        return p == 0 ? null : _wrapObject(p);\n    }\n    /**\n     * Children of this object.\n     */\n    get children() {\n        const childrenCount = _wl_object_get_children_count(this.objectId);\n        if (childrenCount === 0)\n            return [];\n        requireTempMem(childrenCount * 2);\n        _wl_object_get_children(this.objectId, _tempMem, _tempMemSize >> 1);\n        const children = new Array(childrenCount);\n        for (let i = 0; i < childrenCount; ++i) {\n            children[i] = _wrapObject(_tempMemUint16[i]);\n        }\n        return children;\n    }\n    /**\n     * Reparent object to given object.\n     *\n     * @note Reparenting is not trivial and might have a noticeable performance impact.\n     *\n     * @param newParent New parent or {@link null} to parent to root\n     */\n    set parent(newParent) {\n        _wl_object_set_parent(this.objectId, newParent == null ? 0 : newParent.objectId);\n    }\n    /** Reset local transformation (translation, rotation and scaling) to identity. */\n    resetTransform() {\n        _wl_object_reset_translation_rotation(this.objectId);\n        _wl_object_reset_scaling(this.objectId);\n    }\n    /** Reset local translation and rotation to identity */\n    resetTranslationRotation() {\n        _wl_object_reset_translation_rotation(this.objectId);\n    }\n    /**\n     * Reset local rotation, keep translation.\n     * @note To reset both rotation and translation, prefer\n     *       {@link resetTranslationRotation}.\n     */\n    resetRotation() {\n        _wl_object_reset_rotation(this.objectId);\n    }\n    /**\n     * Reset local translation, keep rotation.\n     * @note To reset both rotation and translation, prefer\n     *       {@link resetTranslationRotation}.\n     */\n    resetTranslation() {\n        _wl_object_reset_translation(this.objectId);\n    }\n    /** Reset local scaling to identity (``[1.0, 1.0, 1.0]``). */\n    resetScaling() {\n        _wl_object_reset_scaling(this.objectId);\n    }\n    /**\n     * Translate object by a vector in the parent's space.\n     * @param v Vector to translate by.\n     */\n    translate(v) {\n        _wl_object_translate(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Translate object by a vector in object space.\n     * @param v Vector to translate by.\n     */\n    translateObject(v) {\n        _wl_object_translate_obj(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Translate object by a vector in world space.\n     * @param v Vector to translate by.\n     */\n    translateWorld(v) {\n        _wl_object_translate_world(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Rotate around given axis by given angle (degrees) in local space.\n     *\n     * @param a Vector representing the rotation axis.\n     * @param d Angle in degrees.\n     *\n     * @note If the object is translated the rotation will be around\n     *     the parent. To rotate around the object origin, use\n     *     {@link rotateAxisAngleDegObject}\n     *\n     * @see {@link rotateAxisAngleRad}\n     */\n    rotateAxisAngleDeg(a, d) {\n        _wl_object_rotate_axis_angle(this.objectId, a[0], a[1], a[2], d);\n    }\n    /**\n     * Rotate around given axis by given angle (radians) in local space.\n     *\n     * @param {number[]} a Vector representing the rotation axis.\n     * @param {number} d Angle in radians.\n     *\n     * @note If the object is translated the rotation will be around\n     *     the parent. To rotate around the object origin, use\n     *     {@link rotateAxisAngleDegObject}\n     *\n     * @see {@link rotateAxisAngleDeg}\n     */\n    rotateAxisAngleRad(a, d) {\n        _wl_object_rotate_axis_angle_rad(this.objectId, a[0], a[1], a[2], d);\n    }\n    /**\n     * Rotate around given axis by given angle (degrees) in object space.\n     *\n     * @param a Vector representing the rotation axis.\n     * @param d Angle in degrees.\n     *\n     * Equivalent to prepending a rotation quaternion to the object's\n     * local transformation.\n     *\n     * @see {@link rotateAxisAngleRadObject}\n     */\n    rotateAxisAngleDegObject(a, d) {\n        _wl_object_rotate_axis_angle_obj(this.objectId, a[0], a[1], a[2], d);\n    }\n    /**\n     * Rotate around given axis by given angle (radians) in object space\n     * Equivalent to prepending a rotation quaternion to the object's\n     * local transformation.\n     *\n     * @param a Vector representing the rotation axis\n     * @param d Angle in degrees\n     *\n     * @see {@link rotateAxisAngleDegObject}\n     */\n    rotateAxisAngleRadObject(a, d) {\n        _wl_object_rotate_axis_angle_rad_obj(this.objectId, a[0], a[1], a[2], d);\n    }\n    /**\n     * Rotate by a quaternion.\n     *\n     * @param q the Quaternion to rotate by.\n     */\n    rotate(q) {\n        _wl_object_rotate_quat(this.objectId, q[0], q[1], q[2], q[3]);\n    }\n    /**\n     * Rotate by a quaternion in object space.\n     *\n     * Equivalent to prepending a rotation quaternion to the object's\n     * local transformation.\n     *\n     * @param q the Quaternion to rotate by.\n     */\n    rotateObject(q) {\n        _wl_object_rotate_quat_obj(this.objectId, q[0], q[1], q[2], q[3]);\n    }\n    /**\n     * Scale object by a vector in object space.\n     *\n     * @param v Vector to scale by.\n     */\n    scale(v) {\n        _wl_object_scale(this.objectId, v[0], v[1], v[2]);\n    }\n    /** Local / object space transformation. */\n    get transformLocal() {\n        return new Float32Array(HEAPF32.buffer, _wl_object_trans_local(this.objectId), 8);\n    }\n    /**\n     * Set local transform.\n     *\n     * @param t Local space transformation.\n     *\n     * @since 0.8.5\n     */\n    set transformLocal(t) {\n        this.transformLocal.set(t);\n        this.setDirty();\n    }\n    /**\n     * Compute local / object space translation from transformation.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getTranslationLocal(out) {\n        _wl_object_get_translation_local(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Compute world space translation from transformation.\n     *\n     * May recompute transformations of the hierarchy of this object,\n     * if they were changed by JavaScript components this frame.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getTranslationWorld(out) {\n        _wl_object_get_translation_world(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Set local / object space translation.\n     *\n     * Concatenates a new translation dual quaternion onto the existing rotation.\n     *\n     * @param v New local translation array/vector, expected to have at least 3 elements.\n     */\n    setTranslationLocal(v) {\n        _wl_object_set_translation_local(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Set world space translation.\n     *\n     * Applies the inverse parent transform with a new translation dual quaternion\n     * which is concatenated onto the existing rotation.\n     *\n     * @param v New world translation array/vector, expected to have at least 3 elements.\n     */\n    setTranslationWorld(v) {\n        _wl_object_set_translation_world(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Global / world space transformation.\n     *\n     * May recompute transformations of the hierarchy of this object,\n     * if they were changed by JavaScript components this frame.\n     */\n    get transformWorld() {\n        return new Float32Array(HEAPF32.buffer, _wl_object_trans_world(this.objectId), 8);\n    }\n    /**\n     * Set world transform.\n     *\n     * @param t Global / world space transformation.\n     *\n     * @since 0.8.5\n     */\n    set transformWorld(t) {\n        this.transformWorld.set(t);\n        _wl_object_trans_world_to_local(this.objectId);\n    }\n    /** Local / object space scaling. */\n    get scalingLocal() {\n        return new Float32Array(HEAPF32.buffer, _wl_object_scaling_local(this.objectId), 3);\n    }\n    /**\n     * Set scaling local.\n     *\n     * @param s Global / world space transformation.\n     *\n     * @since 0.8.7\n     */\n    set scalingLocal(s) {\n        this.scalingLocal.set(s);\n        this.setDirty();\n    }\n    /**\n     * Global / world space scaling.\n     *\n     * May recompute transformations of the hierarchy of this object,\n     * if they were changed by JavaScript components this frame.\n     */\n    get scalingWorld() {\n        return new Float32Array(HEAPF32.buffer, _wl_object_scaling_world(this.objectId), 3);\n    }\n    /**\n     * Set scaling world.\n     *\n     * @param t Global / world space transformation.\n     *\n     * @since 0.8.7\n     */\n    set scalingWorld(s) {\n        this.scalingWorld.set(s);\n        _wl_object_scaling_world_to_local(this.objectId);\n    }\n    /**\n     * Local space rotation.\n     *\n     * @since 0.8.7\n     */\n    get rotationLocal() {\n        return this.transformLocal.subarray(0, 4);\n    }\n    /**\n     * Global / world space rotation\n     *\n     * @since 0.8.7\n     */\n    get rotationWorld() {\n        return this.transformWorld.subarray(0, 4);\n    }\n    /**\n     * Set rotation local\n     *\n     * @param r Local space rotation\n     *\n     * @since 0.8.7\n     */\n    set rotationLocal(r) {\n        _wl_object_set_rotation_local(this.objectId, r[0], r[1], r[2], r[3]);\n    }\n    /**\n     * Set rotation world.\n     *\n     * @param {number} r Global / world space rotation.\n     *\n     * @since 0.8.7\n     */\n    set rotationWorld(r) {\n        _wl_object_set_rotation_world(this.objectId, r[0], r[1], r[2], r[3]);\n    }\n    /**\n     * Compute the object's forward facing world space vector.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getForward(out) {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = -1;\n        this.transformVectorWorld(out);\n        return out;\n    }\n    /**\n     * Compute the object's up facing world space vector.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getUp(out) {\n        out[0] = 0;\n        out[1] = 1;\n        out[2] = 0;\n        this.transformVectorWorld(out);\n        return out;\n    }\n    /**\n     * Compute the object's right facing world space vector/\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getRight(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        this.transformVectorWorld(out);\n        return out;\n    }\n    /**\n     * Transform a vector by this object's world transform.\n     *\n     * @param out Out point\n     * @param v Point to transform, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorWorld(out, v) {\n        v = v || out;\n        _tempMemFloat[0] = v[0];\n        _tempMemFloat[1] = v[1];\n        _tempMemFloat[2] = v[2];\n        _wl_object_transformVectorWorld(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a vector by this object's local transform\n     *\n     * @param out Out point\n     * @param v Point to transform, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorLocal(out, v) {\n        v = v || out;\n        _tempMemFloat[0] = v[0];\n        _tempMemFloat[1] = v[1];\n        _tempMemFloat[2] = v[2];\n        _wl_object_transformVectorLocal(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's world transform.\n     *\n     * @param out Out point.\n     * @param p Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointWorld(out, p) {\n        p = p || out;\n        _tempMemFloat[0] = p[0];\n        _tempMemFloat[1] = p[1];\n        _tempMemFloat[2] = p[2];\n        _wl_object_transformPointWorld(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's local transform.\n     *\n     * @param out Out point.\n     * @param p Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointLocal(out, p) {\n        p = p || out;\n        _tempMemFloat[0] = p[0];\n        _tempMemFloat[1] = p[1];\n        _tempMemFloat[2] = p[2];\n        _wl_object_transformPointLocal(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a vector by this object's inverse world transform.\n     *\n     * @param {number[]} out Out point.\n     * @param {number[]} v Vector to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorInverseWorld(out, v) {\n        v = v || out;\n        _tempMemFloat[0] = v[0];\n        _tempMemFloat[1] = v[1];\n        _tempMemFloat[2] = v[2];\n        _wl_object_transformVectorInverseWorld(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's inverse local transform.\n     *\n     * @param out Out point\n     * @param v Vector to transform, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorInverseLocal(out, v) {\n        v = v || out;\n        _tempMemFloat[0] = v[0];\n        _tempMemFloat[1] = v[1];\n        _tempMemFloat[2] = v[2];\n        _wl_object_transformVectorInverseLocal(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's inverse world transform.\n     *\n     * @param out Out point.\n     * @param v Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointInverseWorld(out, p) {\n        p = p || out;\n        _tempMemFloat[0] = p[0];\n        _tempMemFloat[1] = p[1];\n        _tempMemFloat[2] = p[2];\n        _wl_object_transformPointInverseWorld(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's inverse local transform.\n     *\n     * @param out Out point.\n     * @param p Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointInverseLocal(out, p) {\n        p = p || out;\n        _tempMemFloat.set(p);\n        _wl_object_transformPointInverseLocal(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform an object space dual quaternion into world space.\n     *\n     * @param out Out transformation.\n     * @param q Local space transformation, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    toWorldSpaceTransform(out, q) {\n        q = q || out;\n        _tempMemFloat.set(q);\n        _wl_object_toWorldSpaceTransform(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        out[3] = _tempMemFloat[3];\n        out[4] = _tempMemFloat[4];\n        out[5] = _tempMemFloat[5];\n        out[6] = _tempMemFloat[6];\n        out[7] = _tempMemFloat[7];\n        return out;\n    }\n    /**\n     * Transform a world space dual quaternion into local space\n     *\n     * @param {number[]} out Out transformation\n     * @param {number[]} q World space transformation, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    toLocalSpaceTransform(out, q) {\n        const p = this.parent;\n        q = q || out;\n        if (!p) {\n            if (out !== q) {\n                out[0] = q[0];\n                out[1] = q[1];\n                out[2] = q[2];\n                out[3] = q[3];\n                out[4] = q[4];\n                out[5] = q[5];\n                out[6] = q[6];\n                out[7] = q[7];\n            }\n        }\n        else {\n            /* @todo: This is broken. It should use `out`. */\n            p.toObjectSpaceTransform(q);\n        }\n        return out;\n    }\n    /**\n     * Transform a world space dual quaternion into object space\n     *\n     * @param out Out transformation.\n     * @param q World space transformation, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    toObjectSpaceTransform(out, q) {\n        q = q || out;\n        _tempMemFloat.set(q);\n        _wl_object_toObjectSpaceTransform(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        out[3] = _tempMemFloat[3];\n        out[4] = _tempMemFloat[4];\n        out[5] = _tempMemFloat[5];\n        out[6] = _tempMemFloat[6];\n        out[7] = _tempMemFloat[7];\n        return out;\n    }\n    /**\n     * Turn towards / look at target.\n     *\n     * @param v Target vector to turn towards.\n     * @param up Up vector of this object, default `[0, 1, 0]`.\n     */\n    lookAt(v, up = UP_VECTOR) {\n        _wl_object_lookAt(this.objectId, v[0], v[1], v[2], up[0], up[1], up[2]);\n    }\n    /** Destroy the object with all of its components and remove it from the scene */\n    destroy() {\n        _wl_scene_remove_object(this.objectId);\n        /* @todo: Shouldn't be `null` otherwise the API is unexpected */\n        this.objectId = null;\n    }\n    /**\n     * Mark transformation dirty.\n     *\n     * Causes an eventual recalculation of {@link transformWorld}, either\n     * on next {@link getTranslationWorld}, {@link transformWorld} or\n     * {@link scalingWorld} or the beginning of next frame, whichever\n     * happens first.\n     */\n    setDirty() {\n        _wl_object_set_dirty(this.objectId);\n    }\n    /**\n     * Disable/enable all components of this object.\n     *\n     * @param b New state for the components.\n     *\n     * @since 0.8.5\n     */\n    set active(b) {\n        const comps = this.getComponents();\n        for (let c of comps) {\n            c.active = b;\n        }\n    }\n    /**\n     * Get a component attached to this object.\n     *\n     * @param typeOrClass Type name. It's also possible to give a class definition.\n     *     In this case, the method will use the `class.TypeName` field to find the component.\n     * @param index=0 Index for component of given type. This can be used to access specific\n     *      components if the object has multiple components of the same type.\n     * @returns The component or {@link null} if there is no such component on this object\n     */\n    getComponent(typeOrClass, index) {\n        const type = isString(typeOrClass)\n            ? typeOrClass\n            : typeOrClass.TypeName;\n        const lengthBytes = lengthBytesUTF8(type) + 1;\n        const mem = _malloc(lengthBytes);\n        stringToUTF8(type, mem, lengthBytes);\n        const componentType = _wl_get_component_manager_index(mem);\n        _free(mem);\n        if (componentType < 0) {\n            /* Not a native component, try js: */\n            const typeIndex = _WL._componentTypeIndices[type];\n            const jsIndex = _wl_get_js_component_index(this.objectId, typeIndex, index || 0);\n            return jsIndex < 0 ? null : _WL._components[jsIndex];\n        }\n        const componentId = _wl_get_component_id(this.objectId, componentType, index || 0);\n        return _wrapComponent(type, componentType, componentId);\n    }\n    /**\n     * @param typeOrClass Type name, pass a falsey value (`undefined` or {@link null}) to retrieve all.\n     *     It's also possible to give a class definition. In this case, the method will use the `class.TypeName` field to\n     *     find the components.\n     * @returns All components of given type attached to this object.\n     *\n     * @note As this function is non-trivial, avoid using it in `update()` repeatedly,\n     *      but rather store its result in `init()` or `start()`\n     * @warning This method will currently return at most 341 components.\n     */\n    getComponents(typeOrClass) {\n        let componentType = null;\n        let type = null;\n        if (typeOrClass) {\n            type = isString(typeOrClass)\n                ? typeOrClass\n                : typeOrClass.TypeName;\n            componentType = $Object._typeIndexFor(type);\n        }\n        const components = [];\n        const maxComps = Math.floor((_tempMemSize / 3) * 2);\n        const componentsCount = _wl_object_get_components(this.objectId, _tempMem, maxComps);\n        const offset = 2 * componentsCount;\n        _wl_object_get_component_types(this.objectId, _tempMem + offset, maxComps);\n        const jsManagerIndex = $Object._typeIndexFor('js');\n        for (let i = 0; i < componentsCount; ++i) {\n            const t = _tempMemUint8[i + offset];\n            const componentId = _tempMemUint16[i];\n            /* Handle JS types separately */\n            if (t == jsManagerIndex) {\n                const comp = _WL._components[_wl_get_js_component_index_for_id(componentId)];\n                if (componentType === null || comp.type == type)\n                    components.push(comp);\n                continue;\n            }\n            if (componentType === null) {\n                const managerName = $Object._typeNameFor(t);\n                components.push(_wrapComponent(managerName, t, componentId));\n            }\n            else if (t == componentType) {\n                /* Optimized manager name retrieval, already have type */\n                components.push(_wrapComponent(type, componentType, componentId));\n            }\n        }\n        return components;\n    }\n    /**\n     * Add component of given type to the object.\n     *\n     * You can use this function to clone components, see the example below.\n     *\n     * ```js\n     *  // Clone existing component (since 0.8.10)\n     *  let original = this.object.getComponent('mesh');\n     *  otherObject.addComponent('mesh', original);\n     *  // Create component from parameters\n     *  this.object.addComponent('mesh', {\n     *      mesh: someMesh,\n     *      material: someMaterial,\n     *  });\n     * ```\n     *\n     * @param typeOrClass Typename to create a component of. Can be native or\n     *     custom JavaScript component type. It's also possible to give a class definition.\n     *     In this case, the method will use the `class.TypeName` field.\n     * @param params Parameters to initialize properties of the new component,\n     *      can be another component to copy properties from.\n     *\n     * @returns {?(Component|CollisionComponent|TextComponent|ViewComponent|MeshComponent|InputComponent|LightComponent|AnimationComponent|PhysXComponent)} The component or {@link null} if the type was not found\n     */\n    addComponent(typeOrClass, params) {\n        const type = isString(typeOrClass)\n            ? typeOrClass\n            : typeOrClass.TypeName;\n        const componentType = $Object._typeIndexFor(type);\n        let component = null;\n        let componentIndex = null;\n        if (componentType < 0) {\n            /* JavaScript component */\n            if (!(type in _WL._componentTypeIndices)) {\n                throw new TypeError(\"Unknown component type '\" + type + \"'\");\n            }\n            const componentId = _wl_object_add_js_component(this.objectId, _WL._componentTypeIndices[type]);\n            componentIndex = _wl_get_js_component_index_for_id(componentId);\n            component = _WL._components[componentIndex];\n        }\n        else {\n            /* native component */\n            const componentId = _wl_object_add_component(this.objectId, componentType);\n            component = _wrapComponent(type, componentType, componentId);\n        }\n        if (params !== undefined) {\n            for (const key in params) {\n                /* active will be set later, other properties should be skipped if\n                 * passing a component for cloning. */\n                if (EXCLUDED_COMPONENT_PROPERTIES.includes(key))\n                    continue;\n                component[key] = params[key];\n            }\n        }\n        /* Explicitly initialize native components */\n        if (componentType < 0) {\n            /* @todo: `componentIndex` can be null here, that's an error */\n            _wljs_component_init(componentIndex);\n            /* start() is called through onActivate() */\n        }\n        /* If it was not explicitly requested by the user to leave the component inactive,\n         * we activate it as a final step. This invalidates componentIndex! */\n        if (!params || !('active' in params && !params.active)) {\n            component.active = true;\n        }\n        return component;\n    }\n    /**\n     * Whether given object's transformation has changed.\n     */\n    get changed() {\n        return !!_wl_object_is_changed(this.objectId);\n    }\n    /**\n     * Checks equality by comparing whether the wrapped native component ids\n     * and component manager types are equal.\n     *\n     * @param otherObject Object to check equality with.\n     * @returns Whether this object equals the given object.\n     */\n    equals(otherObject) {\n        if (!otherObject)\n            return false;\n        return this.objectId == otherObject.objectId;\n    }\n    /**\n     * Used internally.\n     *\n     * @param type The type\n     * @return The component type\n     */\n    static _typeIndexFor(type) {\n        const lengthBytes = lengthBytesUTF8(type) + 1;\n        const mem = _malloc(lengthBytes);\n        stringToUTF8(type, mem, lengthBytes);\n        const componentType = _wl_get_component_manager_index(mem);\n        _free(mem);\n        return componentType;\n    }\n    /**\n     * Used internally.\n     *\n     * @param typeIndex The type index\n     * @return The name as a string\n     */\n    static _typeNameFor(typeIndex) {\n        return UTF8ToString(_wl_component_manager_name(typeIndex));\n    }\n}\n/**\n * Wrapper around a native skin data.\n */\nexport class Skin {\n    constructor(index) {\n        this._index = index;\n    }\n    /** Amount of joints in this skin. */\n    get jointCount() {\n        return _wl_skin_get_joint_count(this._index);\n    }\n    /** Joints object ids for this skin */\n    get jointIds() {\n        return new Uint16Array(HEAPU16.buffer, _wl_skin_joint_ids(this._index), this.jointCount);\n    }\n    /**\n     * Dual quaternions in a flat array of size 8 times {@link jointCount}.\n     *\n     * Inverse bind transforms of the skin.\n     */\n    get inverseBindTransforms() {\n        return new Float32Array(HEAPF32.buffer, _wl_skin_inverse_bind_transforms(this._index), 8 * this.jointCount);\n    }\n    /**\n     * Vectors in a flat array of size 3 times {@link jointCount}.\n     *\n     * Inverse bind scalings of the skin.\n     */\n    get inverseBindScalings() {\n        return new Float32Array(HEAPF32.buffer, _wl_skin_inverse_bind_scalings(this._index), 3 * this.jointCount);\n    }\n}\n/* Unfortunately, the name \"Object\" is reserved, so internally we\n * use $Object, while we expose WL.Object as previously. */\nexport { $Object as Object };\n/**\n * Ray hit.\n *\n * Result of a {@link Scene.rayCast}.\n *\n * @note this class wraps internal engine data and should only be created internally.\n */\nexport class RayHit {\n    /**\n     * @param ptr Pointer to the ray hits memory.\n     */\n    constructor(ptr) {\n        assert((ptr & 3) == 0, MISALIGNED_MSG);\n        this._ptr = ptr;\n    }\n    /** Array of ray hit locations. */\n    get locations() {\n        let p = this._ptr;\n        let l = [];\n        for (let i = 0; i < this.hitCount; ++i) {\n            l.push(new Float32Array(HEAPF32.buffer, p + 12 * i, 3));\n        }\n        return l;\n    }\n    /** Array of ray hit normals (only when using {@link Physics#rayCast}. */\n    get normals() {\n        let p = this._ptr + 48;\n        let l = [];\n        for (let i = 0; i < this.hitCount; ++i) {\n            l.push(new Float32Array(HEAPF32.buffer, p + 12 * i, 3));\n        }\n        return l;\n    }\n    /**\n     * Prefer these to recalculating the distance from locations.\n     *\n     * Distances of array hits to ray origin.\n     */\n    get distances() {\n        const p = this._ptr + 48 * 2;\n        return new Float32Array(HEAPF32.buffer, p, this.hitCount);\n    }\n    /** Hit objects */\n    get objects() {\n        let p = this._ptr + (48 * 2 + 16);\n        let objIds = new Uint16Array(HEAPU16.buffer, p, this.hitCount);\n        return [\n            objIds[0] <= 0 ? null : _wrapObject(objIds[0]),\n            objIds[1] <= 0 ? null : _wrapObject(objIds[1]),\n            objIds[2] <= 0 ? null : _wrapObject(objIds[2]),\n            objIds[3] <= 0 ? null : _wrapObject(objIds[3]),\n        ];\n    }\n    /** Number of hits (max 4) */\n    get hitCount() {\n        return Math.min(HEAPU32[this._ptr / 4 + 30], 4);\n    }\n}\nclass math {\n    /** (Experimental!) Cubic Hermite spline interpolation for vector3 and quaternions.\n     *\n     * With `f == 0`, `out` will be `b`, if `f == 1`, `out` will be c.\n     *\n     * Whether a quaternion or vector3 interpolation is intended is determined by\n     * length of `a`.\n     *\n     * @param out Array to write result to.\n     * @param a First tangent/handle.\n     * @param b First point or quaternion.\n     * @param c Second point or quaternion.\n     * @param d Second handle.\n     * @param f Interpolation factor in [0; 1].\n     * @returns The `out` parameter.\n     *\n     * @since 0.8.6\n     */\n    static cubicHermite(out, a, b, c, d, f) {\n        _tempMemFloat.subarray(0).set(a);\n        _tempMemFloat.subarray(4).set(b);\n        _tempMemFloat.subarray(8).set(c);\n        _tempMemFloat.subarray(12).set(d);\n        const isQuat = a.length == 4;\n        _wl_math_cubicHermite(_tempMem + 4 * 16, _tempMem + 4 * 0, _tempMem + 4 * 4, _tempMem + 4 * 8, _tempMem + 4 * 12, f, isQuat);\n        out[0] = _tempMemFloat[16];\n        out[1] = _tempMemFloat[17];\n        out[2] = _tempMemFloat[18];\n        if (isQuat)\n            out[3] = _tempMemFloat[19];\n        return out;\n    }\n}\nexport { math };\n/**\n * Check if a given value is a native string or a `String` instance.\n *\n * @param value The value to check.\n * @returns `true` if the `value` has type string literal or `String`, `false` otherwise.\n */\nexport function isString(value) {\n    return value && (typeof value === 'string' || value.constructor === String);\n}\n/**\n * @param objectId Object ID to wrap\n *\n * @returns Wrapped object\n * @note This is used for internal purposes\n *\n * @hidden\n */\nexport function _wrapObject(objectId) {\n    const o = ObjectCache[objectId] || (ObjectCache[objectId] = new $Object(objectId));\n    o.objectId = objectId;\n    return o;\n}\n/**\n * Retrieves a component instance if it exists, or create and cache\n * a new one.\n *\n * @param type component type name\n * @param {number} componentType Component manager index\n * @param {number} componentId Component id in the manager\n *\n * @returns JavaScript instance wrapping the native component\n *\n * @hidden\n */\nexport function _wrapComponent(type, componentType, componentId) {\n    if (componentId < 0)\n        return null;\n    /* @todo: extremely slow in JS to do that... Better to use a Map or allocate the array. */\n    const c = ComponentCache[componentType] || (ComponentCache[componentType] = []);\n    if (c[componentId]) {\n        return c[componentId];\n    }\n    let component;\n    if (type == 'collision') {\n        component = new CollisionComponent(componentType, componentId);\n    }\n    else if (type == 'text') {\n        component = new TextComponent(componentType, componentId);\n    }\n    else if (type == 'view') {\n        component = new ViewComponent(componentType, componentId);\n    }\n    else if (type == 'mesh') {\n        component = new MeshComponent(componentType, componentId);\n    }\n    else if (type == 'input') {\n        component = new InputComponent(componentType, componentId);\n    }\n    else if (type == 'light') {\n        component = new LightComponent(componentType, componentId);\n    }\n    else if (type == 'animation') {\n        component = new AnimationComponent(componentType, componentId);\n    }\n    else if (type == 'physx') {\n        component = new PhysXComponent(componentType, componentId);\n    }\n    else {\n        const typeIndex = _WL._componentTypeIndices[type];\n        const constructor = _WL._componentTypes[typeIndex];\n        component = new constructor();\n    }\n    /* Sets the manager and identifier from the outside, to\n     * simplify the user's constructor. */\n    component._manager = componentType;\n    component._id = componentId;\n    c[componentId] = component;\n    return component;\n}\n", "import { simd, threads } from 'wasm-feature-detect';\nexport * from './wonderland.js';\n/**\n * Finds whether simd & threading are supported or not.\n *\n * @returns An object containing boolean for simd and thread.\n */\nasync function detectFeatures() {\n    let [simdSupported, threadsSupported] = await Promise.all([simd(), threads()]);\n    if (simdSupported) {\n        console.log('WASM SIMD is supported');\n    }\n    else {\n        console.warn('WASM SIMD is not supported');\n    }\n    if (threadsSupported) {\n        if (self.crossOriginIsolated) {\n            console.log('WASM Threads is supported');\n        }\n        else {\n            console.warn('WASM Threads is supported, but the page is not crossOriginIsolated, therefore thread support is disabled.');\n        }\n    }\n    else {\n        console.warn('WASM Threads is not supported');\n    }\n    threadsSupported = threadsSupported && self.crossOriginIsolated;\n    return {\n        simdSupported,\n        threadsSupported,\n    };\n}\n/**\n * Load the runtime using the WASM and JS files.\n *\n * @param runtime The runtime base string, e.g,: `WonderlandRuntime-loader-physx`.\n * @param options Options to modify the loading behaviour.\n *\n * @returns A promise that resolves when the engine is ready to be used.\n */\nexport async function loadRuntime(runtime, options = {}) {\n    const { simdSupported, threadsSupported } = await detectFeatures();\n    const { simd = simdSupported, threads = threadsSupported } = options;\n    const filename = `${runtime}${simd ? '-simd' : ''}${threads ? '-threads' : ''}`;\n    const r = await fetch(filename + '.wasm');\n    const wasm = await r.arrayBuffer();\n    return new Promise((res) => {\n        window.Module = {\n            worker: `${filename}.worker.js`,\n            wasm,\n        };\n        window.Module.ready = function () {\n            window._wl_application_start();\n            res();\n        };\n        const s = document.createElement('script');\n        s.type = 'text/javascript';\n        s.src = `${filename}.js`;\n        document.body.append(s);\n    });\n}\n", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.myAudioManager = null;\r\n\r\nPP.AudioManagerComponent = class AudioManagerComponent extends Component {\r\n    static TypeName = 'pp-audio-manager';\r\n    static Properties = {};\r\n\r\n    init() {\r\n        PP.myAudioManager = new PP.AudioManager();\r\n    }\r\n\r\n    start() {\r\n    }\r\n\r\n    update(dt) {\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.AudioManagerComponent);", "import { Howler } from 'howler';\r\n\r\nPP.AudioManager = class AudioManager {\r\n    constructor() {\r\n        this._myAudioSetups = new Map();\r\n    }\r\n\r\n    createAudioPlayer(audioSetupID) {\r\n        let audioSetup = this.getAudioSetup(audioSetupID);\r\n        if (audioSetup != null) {\r\n            return new PP.AudioPlayer(this.getAudioSetup(audioSetupID));\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAudioSetup(id) {\r\n        return this._myAudioSetups.get(id);\r\n    }\r\n\r\n    addAudioSetup(id, audioSetup, preload = true) {\r\n        this._myAudioSetups.set(id, audioSetup);\r\n        if (preload) {\r\n            this.createAudioPlayer(id);\r\n        }\r\n    }\r\n\r\n    removeAudioSetup(id) {\r\n        this._myAudioSetups.delete(id);\r\n    }\r\n\r\n    setVolume(volume) {\r\n        Howler.volume(volume);\r\n    }\r\n\r\n    setMute(mute) {\r\n        Howler.mute(mute);\r\n    }\r\n\r\n    stop() {\r\n        Howler.stop();\r\n    }\r\n};", "import { Howl } from 'howler';\r\n\r\nPP.AudioEvent = {\r\n    END: \"end\",\r\n    STOP: \"stop\",\r\n    LOAD: \"load\",\r\n    LOAD_ERROR: \"loaderror\",\r\n    PLAY: \"play\",\r\n    PLAY_ERROR: \"playerror\",\r\n    PAUSE: \"pause\",\r\n    MUTE: \"mute\",\r\n    VOLUME: \"volume\",\r\n    RATE: \"rate\",\r\n    SEEK: \"seek\",\r\n    FADE: \"fade\",\r\n    UNLOCK: \"unlock\"\r\n};\r\n\r\nPP.AudioPlayer = class AudioPlayer {\r\n    constructor(audioSetupOrAudioFilePath, createAudio = true) {\r\n        if (audioSetupOrAudioFilePath == null) {\r\n            this._myAudioSetup = new PP.AudioSetup();\r\n        } else if (typeof audioSetupOrAudioFilePath === 'string') {\r\n            this._myAudioSetup = new PP.AudioSetup(audioSetupOrAudioFile);\r\n        } else {\r\n            this._myAudioSetup = audioSetupOrAudioFilePath.clone();\r\n        }\r\n\r\n        this._myAudio = null;\r\n\r\n        if (createAudio) {\r\n            this._myAudio = new Howl({\r\n                src: [this._myAudioSetup.myAudioFilePath],\r\n                loop: this._myAudioSetup.myLoop,\r\n                volume: this._myAudioSetup.myVolume,\r\n                autoplay: this._myAudioSetup.myAutoplay,\r\n                rate: this._myAudioSetup.myRate,\r\n                pool: this._myAudioSetup.myPool,\r\n                pos: (this._myAudioSetup.mySpatial) ? this._myAudioSetup.myPosition : null,\r\n                refDistance: this._myAudioSetup.myReferenceDistance,\r\n                preload: this._myAudioSetup.myPreload,\r\n                onloaderror: function () {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"audio_load_error\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            this._myAudio._pannerAttr.refDistance = this._myAudioSetup.myReferenceDistance;\r\n        }\r\n\r\n        this._myLastAudioID = null;\r\n\r\n        this._myCallbacks = new Map();\r\n        for (let eventKey in PP.AudioEvent) {\r\n            this._myCallbacks.set(PP.AudioEvent[eventKey], new Map());    // Signature: callback(audioID)\r\n        }\r\n\r\n        if (createAudio) {\r\n            this._addListeners();\r\n        }\r\n    }\r\n\r\n    isValid() {\r\n        return this._myAudio != null;\r\n    }\r\n\r\n    play() {\r\n        if (Howler.state != \"running\" && this._myAudioSetup.myPreventPlayWhenAudioContextNotRunning) {\r\n            return false;\r\n        }\r\n\r\n        let audioID = this._myAudio.play();\r\n        if (audioID != null) {\r\n            this._myLastAudioID = audioID;\r\n\r\n            this.updatePosition(this._myAudioSetup.myPosition, true);\r\n            this.updatePitch(this._myAudioSetup.myPitch, true);\r\n            this.updateVolume(this._myAudioSetup.myVolume, true);\r\n        }\r\n\r\n        return audioID != null;\r\n    }\r\n\r\n    stop() {\r\n        this._myAudio.stop();\r\n    }\r\n\r\n    pause() {\r\n        this._myAudio.pause();\r\n    }\r\n\r\n    resume() {\r\n        this._myAudio.play();\r\n    }\r\n\r\n    isPlaying(checkOnlyLast = false) {\r\n        let isPlaying = false;\r\n\r\n        if (checkOnlyLast) {\r\n            isPlaying = this._myAudio.playing(this._myLastAudioID);\r\n        }\r\n        else {\r\n            isPlaying = this._myAudio.playing();\r\n        }\r\n\r\n        return isPlaying;\r\n    }\r\n\r\n    isLoaded() {\r\n        return this._myAudio.state() == \"loaded\";\r\n    }\r\n\r\n    fade(fromVolume, toVolume, duration, updateOnlyLast = false) {\r\n        this.setVolume(toVolume);\r\n\r\n        if (updateOnlyLast) {\r\n            this._myAudio.fade(fromVolume, toVolume, duration * 1000, this._myLastAudioID);\r\n        } else {\r\n            this._myAudio.fade(fromVolume, toVolume, duration * 1000);\r\n        }\r\n    }\r\n\r\n    updatePosition(position, updateOnlyLast = false) {\r\n        this.setPosition(position);\r\n\r\n        if (this._myAudioSetup.mySpatial && position) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.pos(position[0], position[1], position[2], this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.pos(position[0], position[1], position[2]);\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePitch(pitch, updateOnlyLast = false) {\r\n        this.updateRate(pitch, updateOnlyLast);\r\n    }\r\n\r\n    updateRate(rate, updateOnlyLast = false) {\r\n        this.setRate(rate);\r\n\r\n        if (rate != null) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.rate(rate, this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.rate(rate);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateVolume(volume, updateOnlyLast = false) {\r\n        this.setVolume(volume);\r\n\r\n        if (volume != null) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.volume(volume, this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.volume(volume);\r\n            }\r\n        }\r\n    }\r\n\r\n    setSpatial(spatial) {\r\n        this._myAudioSetup.mySpatial = spatial;\r\n    }\r\n\r\n    setPosition(position) {\r\n        this._myAudioSetup.myPosition = position;\r\n    }\r\n\r\n    setPitch(pitch) {\r\n        this._myAudioSetup.myPitch = pitch;\r\n    }\r\n\r\n    setRate(rate) {\r\n        this._myAudioSetup.myRate = rate;\r\n    }\r\n\r\n    setVolume(volume) {\r\n        this._myAudioSetup.myVolume = volume;\r\n    }\r\n\r\n    getDuration() {\r\n        return this._myAudio.duration();\r\n    }\r\n\r\n    getVolume() {\r\n        return this._myAudioSetup.myVolume;\r\n    }\r\n\r\n    getPitch() {\r\n        return this._myAudioSetup.myPitch;\r\n    }\r\n\r\n    getRate() {\r\n        return this._myAudioSetup.myRate;\r\n    }\r\n\r\n    registerAudioEventListener(audioEvent, listenerID, callback) {\r\n        this._myCallbacks.get(audioEvent).set(listenerID, callback);\r\n    }\r\n\r\n    unregisterAudioEventListener(audioEvent, listenerID) {\r\n        this._myCallbacks.get(audioEvent).delete(listenerID);\r\n    }\r\n\r\n    _addListeners() {\r\n        if (this._myAudio != null) {\r\n            for (let eventKey in PP.AudioEvent) {\r\n                let event = PP.AudioEvent[eventKey];\r\n                this._myAudio.on(event, function (audioID) {\r\n                    let callbacks = this._myCallbacks.get(event);\r\n                    for (let callback of callbacks.values()) {\r\n                        callback(audioID);\r\n                    }\r\n                }.bind(this));\r\n            }\r\n        }\r\n    }\r\n};", "PP.AudioSetup = class AudioSetup {\r\n    constructor(audioFilePath = null) {\r\n        this.myAudioFilePath = (audioFilePath) ? audioFilePath.slice(0) : null;\r\n\r\n        this.myLoop = false;\r\n        this.myAutoplay = false;\r\n\r\n        this.myVolume = 1.0;\r\n        this._myRate = 1.0; // From 0.5 to 4.0\r\n\r\n        this.myPool = 5;\r\n        this.myPreload = true;\r\n\r\n        this.myPreventPlayWhenAudioContextNotRunning = false;\r\n\r\n        // Spatial Setup\r\n\r\n        this.myPosition = null;\r\n        this.mySpatial = true;\r\n        this.myReferenceDistance = 1.0; // At this distance (and closer) the volume is not reduced\r\n    }\r\n\r\n    clone() {\r\n        let audioSetup = new PP.AudioSetup();\r\n\r\n        audioSetup.myAudioFilePath = this.myAudioFilePath.slice(0);\r\n\r\n        audioSetup.myLoop = this.myLoop;\r\n        audioSetup.myAutoplay = this.myAutoplay;\r\n\r\n        audioSetup.myVolume = this.myVolume;\r\n        audioSetup.myPitch = this.myPitch;\r\n        audioSetup.myRate = this.myRate;\r\n\r\n        audioSetup.myPool = this.myPool;\r\n        audioSetup.myPreload = this.myPreload;\r\n\r\n        audioSetup.myPreventPlayWhenAudioContextNotRunning = this.myPreventPlayWhenAudioContextNotRunning;\r\n\r\n        // Spatial\r\n\r\n        if (this.myPosition != null) {\r\n            audioSetup.myPosition = this.myPosition.vec3_clone();\r\n        } else {\r\n            audioSetup.myPosition = null;\r\n        }\r\n\r\n        audioSetup.mySpatial = this.mySpatial;\r\n        audioSetup.myReferenceDistance = this.myReferenceDistance;\r\n\r\n        return audioSetup;\r\n    }\r\n\r\n    get myPitch() {\r\n        return this._myRate;\r\n    }\r\n\r\n    get myRate() {\r\n        return this._myRate;\r\n    }\r\n\r\n    set myPitch(pitch) {\r\n        this._myRate = pitch;\r\n    }\r\n\r\n    set myRate(rate) {\r\n        this._myRate = rate;\r\n    }\r\n};", "PP.AudioUtils = {\r\n    isAudioPlaybackBlocked: function () {\r\n        let isBlocked = false;\r\n\r\n        if (Howler != null && Howler.state != \"running\") {\r\n            isBlocked = true;\r\n        }\r\n\r\n        return isBlocked;\r\n    }\r\n}", "import { Howler } from 'howler';\r\n\r\nWL.registerComponent('pp-mute-everything', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        Howler.mute(true);\r\n    },\r\n    update: function (dt) {\r\n    },\r\n});", "PP.HowlerAudioPlayer = class HowlerAudioPlayer extends PP.AudioPlayer {\r\n    constructor(howl, audioSetup = null) {\r\n        super(audioSetup, false);\r\n\r\n        this._myAudio = howl;\r\n\r\n        if (audioSetup == null) {\r\n            this._myAudioSetup.myAudioFilePath = this._myAudio._src;\r\n\r\n            this._myAudioSetup.myLoop = this._myAudio._loop;\r\n            this._myAudioSetup.myAutoplay = this._myAudio._autoplay;\r\n\r\n            this._myAudioSetup.myVolume = this._myAudio._volume;\r\n            this._myAudioSetup.myRate = this._myAudio._rate;\r\n\r\n            this._myAudioSetup.myPool = this._myAudio._pool;\r\n            this._myAudioSetup.myPreload = this._myAudio._preload;\r\n\r\n            this._myAudioSetup.myPosition = (this._myAudio._pos != null) ? this._myAudio._pos.vec3_clone() : null;\r\n            this._myAudioSetup.mySpatial = this._myAudio._pos != null;\r\n            this._myAudioSetup.myReferenceDistance = this._myAudio._pannerAttr.refDistance;\r\n        } else {\r\n            this._myAudioSetup.myAudioFilePath = this._myAudio._src;\r\n\r\n            this._myAudio.loop(this._myAudioSetup.myLoop);\r\n            this._myAudio._autoplay = this._myAudioSetup.myAutoplay;\r\n\r\n            this._myAudio.volume(this._myAudioSetup.myVolume);\r\n            this._myAudio.rate(this._myAudioSetup.myRate);\r\n\r\n            this._myAudio._pool = this._myAudioSetup.myPool;\r\n            this._myAudio._preload = this._myAudioSetup.myPreload;\r\n\r\n            this.updatePosition(this._myAudioSetup.myPosition);\r\n\r\n            this._myAudio._pannerAttr.refDistance = this._myAudioSetup.myReferenceDistance;\r\n\r\n            if (this._myAudioSetup.myAutoplay) {\r\n                this._myAudio.play();\r\n            }\r\n        }\r\n\r\n        this._addListeners();\r\n    }\r\n}", "import * as glMatrix from 'gl-matrix';\r\n\r\n// adjust the gravity to a low value like -0.05 to have better results, since the dynamic objects will move slowly instead of quickly falling far away\r\nWL.registerComponent('pp-benchmark-max-physx', {\r\n    _myStaticDomeSize: { type: WL.Type.Float, default: 40 },\r\n    _myStaticPhysXCount: { type: WL.Type.Int, default: 1000 },\r\n    _myDynamicDomeSize: { type: WL.Type.Float, default: 80 },\r\n    _myDynamicPhysXCount: { type: WL.Type.Int, default: 250 },\r\n    _myKinematicDomeSize: { type: WL.Type.Float, default: 120 },\r\n    _myKinematicPhysXCount: { type: WL.Type.Int, default: 250 },\r\n    _myRaycastCount: { type: WL.Type.Int, default: 100 },\r\n    _myVisualizeRaycast: { type: WL.Type.Bool, default: false },\r\n    _myVisualizeRaycastDelay: { type: WL.Type.Float, default: 0.5 },\r\n\r\n    // you can use this to test with convex mesh, \r\n    // but u first need to add a physx with a convex mesh to the scene and read the shapeData index on the component to set it as _myShapeIndex\r\n    _myUseConvexMesh: { type: WL.Type.Bool, default: false },\r\n    _myShapeIndex: { type: WL.Type.Int, default: 0 },\r\n    _myShapeScaleMultiplier: { type: WL.Type.Float, default: 1 }, // used to adjust the scale of the convex mesh if too big or small based on how u imported it\r\n\r\n    _myEnableLog: { type: WL.Type.Bool, default: true },\r\n}, {\r\n    start: function () {\r\n        this._myRootObject = WL.scene.addObject(this.object);\r\n\r\n        this._myRaycastSetup = new PP.RaycastSetup();\r\n        this._myRaycastResults = new PP.RaycastResults();\r\n\r\n        this._myStaticPhysXObjects = [];\r\n        this._myStaticPhysXComponents = [];\r\n        this._myStaticPhysXCollectors = [];\r\n        this._myDynamicPhysXObjects = [];\r\n        this._myDynamicPhysXComponents = [];\r\n        this._myDynamicPhysXCollectors = [];\r\n        this._myKinematicPhysXObjects = [];\r\n        this._myKinematicPhysXComponents = [];\r\n        this._myKinematicPhysXCollectors = [];\r\n\r\n        this._spawnDome(true, false);\r\n        this._spawnDome(false, false);\r\n        this._spawnDome(false, true);\r\n\r\n        this._myStartTimer = new PP.Timer(1);\r\n        this._myTimer = new PP.Timer(0);\r\n        this._myDebugTimer = new PP.Timer(this._myVisualizeRaycastDelay);\r\n        this._myEnableLogTimer = new PP.Timer(1);\r\n        this._myFPSHistory = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            this._myFPSHistory.push(0);\r\n        }\r\n\r\n        this._myAddVelocityDelay = 10;\r\n\r\n        this._myTranslateVec3 = PP.vec3_create();\r\n        this._myRotateVec3 = PP.vec3_create();\r\n    },\r\n    update: function (dt) {\r\n        this._myStartTimer.update(dt);\r\n        if (this._myStartTimer.isDone()) {\r\n            this._myTimer.update(dt);\r\n            this._myDebugTimer.update(dt);\r\n            this._myEnableLogTimer.update(dt);\r\n            if (this._myTimer.isDone()) {\r\n                this._myTimer.start();\r\n\r\n                let debugActive = false;\r\n                if (this._myDebugTimer.isDone()) {\r\n                    this._myDebugTimer.start();\r\n                    debugActive = true;\r\n                }\r\n\r\n                debugActive = debugActive && this._myVisualizeRaycast;\r\n                this._raycastTest(debugActive);\r\n            }\r\n\r\n            this._myFPSHistory.pop();\r\n            this._myFPSHistory.unshift(Math.round(1 / dt));\r\n\r\n            if (this._myEnableLog) {\r\n                if (this._myEnableLogTimer.isDone()) {\r\n                    this._myEnableLogTimer.start();\r\n                    console.clear();\r\n                    console.log(\"Static PhysX Dome Size:\", this._myStaticPhysXObjects.length);\r\n                    console.log(\"Dynamic PhysX Dome Size:\", this._myDynamicPhysXObjects.length);\r\n                    console.log(\"Kinematic PhysX Dome Size:\", this._myKinematicPhysXObjects.length);\r\n\r\n                    let staticCollisions = 0;\r\n                    for (let collector of this._myStaticPhysXCollectors) {\r\n                        staticCollisions += collector.getCollisions().length;\r\n                    }\r\n\r\n                    let dynamicCollisions = 0;\r\n                    for (let collector of this._myDynamicPhysXCollectors) {\r\n                        dynamicCollisions += collector.getCollisions().length;\r\n                    }\r\n\r\n                    let kinematicCollisions = 0;\r\n                    for (let collector of this._myKinematicPhysXCollectors) {\r\n                        kinematicCollisions += collector.getCollisions().length;\r\n                    }\r\n\r\n                    let totalCollisions = (staticCollisions + dynamicCollisions + kinematicCollisions) / 2; //every collision is considered twice since it is caught by 2 physX\r\n\r\n                    console.log(\"Current Collisions Count:\", totalCollisions);\r\n                    console.log(\"Raycast Count:\", this._myRaycastCount);\r\n                    console.log(\"FPS History:\");\r\n                    let fpsString = \"\";\r\n                    for (let fps of this._myFPSHistory) {\r\n                        fpsString = fpsString.concat(fps, \"\\n\");\r\n                    }\r\n                    console.log(fpsString);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myAddVelocityDelay > 0) {\r\n            this._myAddVelocityDelay--;\r\n            if (this._myAddVelocityDelay == 0) {\r\n                for (let physX of this._myDynamicPhysXComponents) {\r\n                    physX.kinematic = false;\r\n                    let strength = 50;\r\n                    physX.linearVelocity = [Math.pp_random(-strength, strength), Math.pp_random(-strength, strength), Math.pp_random(-strength, strength)];\r\n                    physX.angularVelocity = [Math.pp_random(-strength, strength), Math.pp_random(-strength, strength), Math.pp_random(-strength, strength)];\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let physX of this._myKinematicPhysXObjects) {\r\n            let strength = 5 * dt;\r\n            this._myTranslateVec3.vec3_set(Math.pp_random(-strength, strength), Math.pp_random(-strength, strength), Math.pp_random(-strength, strength));\r\n            physX.pp_translate(this._myTranslateVec3);\r\n\r\n            rotateStrength = 50 * dt;\r\n            this._myRotateVec3.vec3_set(Math.pp_random(-rotateStrength, rotateStrength), Math.pp_random(-rotateStrength, rotateStrength), Math.pp_random(-rotateStrength, rotateStrength));\r\n            physX.pp_rotate(this._myRotateVec3);\r\n        }\r\n    },\r\n    _raycastTest(debugActive) {\r\n        let raycastCount = this._myRaycastCount;\r\n\r\n        let distance = 10000;\r\n\r\n        for (let i = 0; i < raycastCount; i++) {\r\n            let origin = [Math.pp_random(1, 2) * Math.pp_randomSign(), Math.pp_random(1, 2) * Math.pp_randomSign(), Math.pp_random(1, 2) * Math.pp_randomSign()];\r\n            let direction = [Math.pp_random(-1, 1), Math.pp_random(-1, 1), Math.pp_random(-1, 1)];\r\n            direction.vec3_normalize(direction);\r\n\r\n            this._myRaycastSetup.myOrigin.vec3_copy(origin);\r\n            this._myRaycastSetup.myDirection.vec3_copy(direction);\r\n            this._myRaycastSetup.myDistance = distance;\r\n            this._myRaycastSetup.myBlockLayerFlags.setMask(255);\r\n\r\n            let raycastResults = PP.PhysicsUtils.raycast(this._myRaycastSetup, this._myRaycastResults);\r\n\r\n            if (debugActive) {\r\n                PP.myDebugVisualManager.drawRaycast(this._myDebugTimer.getDuration(), raycastResults, true, 5, 0.015);\r\n            }\r\n        }\r\n    },\r\n    _spawnDome(isStatic, isDynamic) {\r\n        let maxCount = this._myStaticPhysXCount;\r\n        let physXList = this._myStaticPhysXObjects;\r\n        let cloves = Math.ceil(Math.sqrt(this._myStaticPhysXCount));\r\n        if (!isStatic) {\r\n            if (isDynamic) {\r\n                cloves = Math.ceil(Math.sqrt(this._myDynamicPhysXCount));\r\n                maxCount = this._myDynamicPhysXCount;\r\n                physXList = this._myDynamicPhysXObjects;\r\n            } else {\r\n                cloves = Math.ceil(Math.sqrt(this._myKinematicPhysXCount));\r\n                maxCount = this._myKinematicPhysXCount;\r\n                physXList = this._myKinematicPhysXObjects;\r\n            }\r\n        }\r\n\r\n        let angleForClove = Math.PI * 2 / cloves;\r\n\r\n        let minDistance = Math.max(0, this._myStaticDomeSize - 20);\r\n        let maxDistance = this._myStaticDomeSize + 20;\r\n\r\n        if (!isStatic) {\r\n            if (isDynamic) {\r\n                minDistance = Math.max(0, this._myDynamicDomeSize - 20);\r\n                maxDistance = this._myDynamicDomeSize + 20;\r\n            } else {\r\n                minDistance = Math.max(0, this._myKinematicDomeSize - 20);\r\n                maxDistance = this._myKinematicDomeSize + 20;\r\n            }\r\n        }\r\n\r\n        let minExtraRotation = 0;\r\n        let maxExtraRotation = Math.pp_toRadians(10);\r\n\r\n        let upDirection = PP.vec3_create(0, 1, 0);\r\n        let horizontalDirection = PP.vec3_create(0, 0, -1);\r\n\r\n        for (let i = 0; i < cloves / 2; i++) {\r\n            let verticalDirection = PP.vec3_create(0, 1, 0);\r\n\r\n            let rotationAxis = PP.vec3_create();\r\n            glMatrix.vec3.cross(rotationAxis, horizontalDirection, verticalDirection);\r\n            glMatrix.vec3.normalize(rotationAxis, rotationAxis);\r\n\r\n            for (let j = 0; j < cloves; j++) {\r\n                if (physXList.length < maxCount) {\r\n                    let distance = Math.random() * (maxDistance - minDistance) + minDistance;\r\n                    let extraAxisRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let extraUpRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let physXDirection = verticalDirection.slice(0);\r\n\r\n                    physXDirection.vec3_rotateAxisRadians(extraAxisRotation, rotationAxis, physXDirection);\r\n                    physXDirection.vec3_rotateAxisRadians(extraUpRotation, upDirection, physXDirection);\r\n\r\n                    glMatrix.vec3.scale(physXDirection, physXDirection, distance);\r\n\r\n                    this._addPhysX(physXDirection, isStatic, isDynamic);\r\n                }\r\n\r\n                verticalDirection.vec3_rotateAxisRadians(angleForClove / 2, rotationAxis, verticalDirection);\r\n\r\n                if (physXList.length < maxCount) {\r\n                    let distance = Math.random() * (maxDistance - minDistance) + minDistance;\r\n                    let extraAxisRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let extraUpRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let physXDirection = verticalDirection.slice(0);\r\n\r\n                    physXDirection.vec3_rotateAxisRadians(extraAxisRotation, rotationAxis, physXDirection);\r\n                    physXDirection.vec3_rotateAxisRadians(extraUpRotation, upDirection, physXDirection);\r\n\r\n                    glMatrix.vec3.scale(physXDirection, physXDirection, distance);\r\n\r\n                    this._addPhysX(physXDirection, isStatic, isDynamic);\r\n                }\r\n\r\n                verticalDirection.vec3_rotateAxisRadians(angleForClove / 2, rotationAxis, verticalDirection);\r\n\r\n            }\r\n\r\n            horizontalDirection.vec3_rotateAxisRadians(angleForClove, upDirection, horizontalDirection);\r\n        }\r\n    },\r\n    _addPhysX(physXDirection, isStatic, isDynamic) {\r\n        let position = physXDirection;\r\n        let scale = Math.pp_random(1, 10);\r\n        let shape = Math.pp_randomPick(WL.Shape.Sphere, WL.Shape.Box);\r\n        if (this._myUseConvexMesh) {\r\n            shape = WL.Shape.ConvexMesh;\r\n            scale *= this._myShapeScaleMultiplier;\r\n        }\r\n\r\n        let physX = WL.scene.addObject(this._myRootObject);\r\n        physX.pp_setPosition(position);\r\n\r\n        let physXComponent = physX.pp_addComponent(\"physx\", {\r\n            \"shape\": shape, \"shapeData\": { index: this._myShapeIndex },\r\n            \"extents\": PP.vec3_create(scale, scale, scale),\r\n            \"static\": isStatic,\r\n            \"kinematic\": !isDynamic,\r\n            \"mass\": 1\r\n        });\r\n\r\n        if (isStatic) {\r\n            this._myStaticPhysXObjects.push(physX);\r\n            this._myStaticPhysXComponents.push(physXComponent);\r\n            this._myStaticPhysXCollectors.push(new PP.PhysicsCollisionCollector(physXComponent));\r\n        } else if (isDynamic) {\r\n            this._myDynamicPhysXObjects.push(physX);\r\n            this._myDynamicPhysXComponents.push(physXComponent);\r\n            this._myDynamicPhysXCollectors.push(new PP.PhysicsCollisionCollector(physXComponent));\r\n        } else {\r\n            this._myKinematicPhysXObjects.push(physX);\r\n            this._myKinematicPhysXComponents.push(physXComponent);\r\n            this._myKinematicPhysXCollectors.push(new PP.PhysicsCollisionCollector(physXComponent));\r\n        }\r\n    }\r\n});", "WL.registerComponent(\"pp-benchmark-max-visible-triangles\", {\r\n    _myTargetFrameRate: { type: WL.Type.Int, default: -1 },     // -1 means it will auto detect it at start\r\n    _myTargetFrameRateThreshold: { type: WL.Type.Int, default: 3 },\r\n    _myStartPlaneCount: { type: WL.Type.Int, default: 1 },\r\n    _myPlaneTriangles: { type: WL.Type.Int, default: 100 },\r\n    _mySecondsBeforeDoubling: { type: WL.Type.Float, default: 0.5 },    // higher gives a better frame rate evaluation\r\n    _myDTHistoryToIgnorePercentage: { type: WL.Type.Float, default: 0.25 },\r\n    _myCloneMaterial: { type: WL.Type.Bool, default: false },\r\n    _myCloneMesh: { type: WL.Type.Bool, default: false },\r\n\r\n    _myEnableLog: { type: WL.Type.Bool, default: true },\r\n\r\n    _myPlaneMaterial: { type: WL.Type.Material },\r\n    _myBackgroundMaterial: { type: WL.Type.Material },\r\n    _myTextMaterial: { type: WL.Type.Material, default: null },\r\n}, {\r\n    _start() {\r\n        this._myBackgroundSize = 4;\r\n        this._myBackgroundObject.pp_setActive(true);\r\n        this._myBackgroundObject.pp_setScale(this._myBackgroundSize + 0.1);\r\n        this._myBackgroundObject.pp_translate(PP.vec3_create(0, 0, -0.001));\r\n\r\n        this._myDoubleTimer = new PP.Timer(this._mySecondsBeforeDoubling);\r\n        this._myIsDone = false;\r\n\r\n        this._myCurrentPlanes = this._myStartPlaneCount;\r\n\r\n        this._myDTHistory = [];\r\n\r\n        this._myUpperLimit = -1;\r\n        this._myLowerLimit = 0;\r\n\r\n        this._myPlanes = [];\r\n        this._mySkipNextFrames = 0;\r\n        this._myMaxWaitFrames = 0;\r\n\r\n        this._myMaxPlanesReached = false;\r\n\r\n        this._myFirstTime = true;\r\n    },\r\n    _update(dt) {\r\n        // Skip lag frames after the new set of plane has been shown, wait for it to be stable\r\n        {\r\n            if (dt < 0.00001) {\r\n                return;\r\n            }\r\n\r\n            if (dt > 0.5 && this._myMaxWaitFrames > 0) {\r\n                this._myMaxWaitFrames--;\r\n                return;\r\n            }\r\n\r\n            this._myMaxWaitFrames = 10;\r\n\r\n            if (this._mySkipNextFrames > 0) {\r\n                this._mySkipNextFrames--;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!this._myIsDone) {\r\n            this._myDoubleTimer.update(dt);\r\n\r\n            this._myDTHistory.push(dt);\r\n\r\n            if (this._myDoubleTimer.isDone()) {\r\n                this._myDoubleTimer.start();\r\n\r\n                let frameRate = this._computeAverageFrameRate(false);\r\n\r\n                if (this._myFirstTime) {\r\n                    this._myFirstTime = false;\r\n                } else {\r\n\r\n                    // if there is not lag, the current plane count is a good lower limit, otherwise the current count is now a upper threshold, we have to search below it\r\n                    let isLagging = false;\r\n                    if (frameRate < this._myStableFrameRate - this._myTargetFrameRateThreshold) {\r\n                        this._myUpperLimit = this._myCurrentPlanes;\r\n\r\n                        isLagging = true;\r\n\r\n                        if (this._myUpperLimit == 1) {\r\n                            this._myLowerLimit = 1;\r\n                        }\r\n                    } else {\r\n                        this._myLowerLimit = this._myCurrentPlanes;\r\n                        if (this._myUpperLimit > 0) {\r\n                            this._myUpperLimit = Math.max(this._myUpperLimit, this._myLowerLimit);\r\n                        }\r\n                    }\r\n\r\n                    this._myTriangleTextComponent.text = \"Triangles: \" + this._myCurrentPlanes * this._myRealTrianglesAmount;\r\n                    this._myPlaneTextComponent.text = \"Planes: \" + this._myCurrentPlanes;\r\n                    this._myFPSTextComponent.text = \"FPS: \" + frameRate + \" / \" + this._myStableFrameRate;\r\n\r\n                    if (isLagging) {\r\n                        this._myTriangleTextComponent.material.color = this._myLagColor;\r\n                        this._myPlaneTextComponent.material.color = this._myLagColor;\r\n                        this._myFPSTextComponent.material.color = this._myLagColor;\r\n                    } else {\r\n                        this._myTriangleTextComponent.material.color = this._myNormalColor;\r\n                        this._myPlaneTextComponent.material.color = this._myNormalColor;\r\n                        this._myFPSTextComponent.material.color = this._myNormalColor;\r\n                    }\r\n\r\n                    let reset = false;\r\n\r\n                    // check if the binary search is completed\r\n                    if ((this._myUpperLimit > 0 &&\r\n                        (!isLagging && (this._myUpperLimit - this._myLowerLimit) <= Math.max(2, 1000 / this._myRealTrianglesAmount)) ||\r\n                        (isLagging && (this._myUpperLimit - this._myLowerLimit) <= 1)) ||\r\n                        (!isLagging && this._myMaxPlanesReached)) {\r\n                        if (frameRate < this._myStableFrameRate - this._myTargetFrameRateThreshold) {\r\n                            // going a bit back with the binary search, maybe the lower limit was not lower after all cause of a bad assumption of average FPS\r\n                            this._myLowerLimit = Math.max(1, Math.floor(this._myUpperLimit / 2.5));\r\n                            this._myUpperLimit = 0;\r\n                            reset = true;\r\n\r\n                            if (this._myEnableLog) {\r\n                                console.log(\"Rst - Triangles:\", this._myCurrentPlanes * this._myRealTrianglesAmount, \"- Planes:\", this._myCurrentPlanes, \"- Frame Rate:\", frameRate);\r\n                            }\r\n                        } else {\r\n                            if (this._myMaxPlanesReached) {\r\n                                if (this._myEnableLog) {\r\n                                    console.log(\"Aborted - Max Planes Reached\");\r\n\r\n                                    this._myDoneTextComponent.text = \"Aborted - Max Planes Reached\";\r\n                                }\r\n                            } else {\r\n                                this._displayPlanes(this._myLowerLimit);\r\n\r\n                                if (this._myEnableLog) {\r\n                                    console.log(\"\\nEnd - Triangles:\", this._myLowerLimit * this._myRealTrianglesAmount, \"- Planes:\", this._myLowerLimit, \"- Frame Rate:\", frameRate);\r\n                                    console.log(\"Plane Triangles (Adjusted):\", this._myRealTrianglesAmount);\r\n                                    console.log(\"Target Frame Rate:\", this._myStableFrameRate, \"- Threshold: \", (this._myStableFrameRate - this._myTargetFrameRateThreshold));\r\n                                }\r\n\r\n                                this._myTriangleTextComponent.text = \"Triangles: \" + this._myLowerLimit * this._myRealTrianglesAmount;\r\n                                this._myPlaneTextComponent.text = \"Planes: \" + this._myLowerLimit;\r\n                                this._myFPSTextComponent.text = \"FPS: \" + frameRate + \" / \" + this._myStableFrameRate;\r\n\r\n                                this._myDoneTextComponent.text = \"End\";\r\n                            }\r\n                            this._myIsDone = true;\r\n                        }\r\n                    }\r\n\r\n                    if (isLagging && !reset) {\r\n                        if (this._myEnableLog) {\r\n                            console.log(\"Lag - Triangles:\", this._myCurrentPlanes * this._myRealTrianglesAmount, \"- Planes:\", this._myCurrentPlanes, \"- Frame Rate:\", frameRate);\r\n                        }\r\n                    }\r\n\r\n                    if (!this._myIsDone) {\r\n                        // sort of binary search, if there is no upper limit yet, just double\r\n                        if (this._myUpperLimit > 0) {\r\n                            this._myCurrentPlanes = Math.floor((this._myUpperLimit + this._myLowerLimit) / 2);\r\n                            this._myCurrentPlanes = Math.max(this._myCurrentPlanes, 1);\r\n                        } else if (!reset) {\r\n                            this._myCurrentPlanes = this._myLowerLimit * 2;\r\n                        } else {\r\n                            this._myCurrentPlanes = this._myLowerLimit;\r\n                        }\r\n\r\n                        if (this._myCurrentPlanes > 50000) {\r\n                            this._myCurrentPlanes = 50000;\r\n                            this._myMaxPlanesReached = true;\r\n                        } else {\r\n                            this._myMaxPlanesReached = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!this._myIsDone) {\r\n                    this._displayPlanes(this._myCurrentPlanes);\r\n                    this._myElapsedTime = 0;\r\n                    this._myFrameCount = 0;\r\n\r\n                    this._mySkipNextFrames = 30;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _displayPlanes(count) {\r\n        while (this._myPlanes.length > count) {\r\n            let plane = this._myPlanes.pop();\r\n            this._myPlanePool.release(plane);\r\n        }\r\n\r\n        while (this._myPlanes.length < count) {\r\n            let plane = this._myPlanePool.get();\r\n            this._myPlanes.push(plane);\r\n        }\r\n\r\n        let gridSize = 1;\r\n        while (gridSize * gridSize < count) {\r\n            gridSize++;\r\n        }\r\n\r\n        let spaceBetween = 0.01;\r\n        let totalSpaceBetween = spaceBetween * (gridSize - 1);\r\n        let planeSize = (this._myBackgroundSize * 2 - totalSpaceBetween) / (gridSize * 2);\r\n\r\n        let currentCount = count;\r\n\r\n        for (let i = 0; i < gridSize && currentCount > 0; i++) {\r\n            for (let j = 0; j < gridSize && currentCount > 0; j++) {\r\n                let plane = this._myPlanes[currentCount - 1];\r\n                plane.pp_setScale(planeSize);\r\n\r\n                let position = [-this._myBackgroundSize + planeSize + j * planeSize * 2 + j * spaceBetween, this._myBackgroundSize - planeSize - i * planeSize * 2 - i * spaceBetween, 0];\r\n\r\n                plane.pp_setPositionLocal(position);\r\n                plane.pp_setActive(true);\r\n\r\n                currentCount--;\r\n            }\r\n        }\r\n    },\r\n    start() {\r\n        this._myLagColor = PP.vec4_create(0.5, 0, 0, 1);\r\n        this._myNormalColor = PP.vec4_create(0, 0, 0, 1);\r\n\r\n        this._myRealTrianglesAmount = 0;\r\n\r\n        this._myTrianglesObject = WL.scene.addObject(this.object);\r\n\r\n        this._myBackgroundObject = WL.scene.addObject(this._myTrianglesObject);\r\n        {\r\n            let meshComponent = this._myBackgroundObject.addComponent('mesh');\r\n            meshComponent.mesh = PP.MeshUtils.createPlaneMesh();\r\n            meshComponent.material = this._myBackgroundMaterial.clone();\r\n        }\r\n\r\n        this._myPlaneObject = WL.scene.addObject(this._myTrianglesObject);\r\n        {\r\n            let meshComponent = this._myPlaneObject.addComponent('mesh');\r\n            meshComponent.mesh = this._createPlaneMesh(this._myPlaneTriangles);\r\n            this._myRealTrianglesAmount = meshComponent.mesh.indexData.length / 3;\r\n            meshComponent.material = this._myPlaneMaterial.clone();\r\n        }\r\n\r\n        let poolParams = new PP.ObjectPoolParams();\r\n        if (!this._myCloneMesh) {\r\n            poolParams.myInitialPoolSize = 30000;\r\n        } else {\r\n            if (this._myRealTrianglesAmount <= 4) {\r\n                poolParams.myInitialPoolSize = 15000;\r\n            } else if (this._myRealTrianglesAmount <= 8) {\r\n                poolParams.myInitialPoolSize = 10000;\r\n            } else if (this._myRealTrianglesAmount <= 64) {\r\n                poolParams.myInitialPoolSize = 7500;\r\n            } else {\r\n                poolParams.myInitialPoolSize = 5000;\r\n            }\r\n        }\r\n        poolParams.myPercentageToAddWhenEmpty = 0;\r\n        poolParams.myAmountToAddWhenEmpty = 10000;\r\n        poolParams.myCloneParams = new PP.CloneParams();\r\n        poolParams.myCloneParams.myDeepCloneParams.setDeepCloneComponentVariable(\"mesh\", \"material\", this._myCloneMaterial);\r\n        poolParams.myCloneParams.myDeepCloneParams.setDeepCloneComponentVariable(\"mesh\", \"mesh\", this._myCloneMesh);\r\n        this._myPlanePool = new PP.ObjectPool(this._myPlaneObject, poolParams);\r\n\r\n        this._myBackgroundObject.pp_setActive(false);\r\n        this._myPlaneObject.pp_setActive(false);\r\n\r\n        this._myStartTimer = new PP.Timer(this._mySecondsBeforeDoubling * 2);\r\n        this._mySessionStarted = false;\r\n\r\n        this._myTextsObject = WL.scene.addObject(this._myTrianglesObject);\r\n        //this._myTextsObject.pp_addComponent(\"pp-easy-transform\");\r\n\r\n        this._myTriangleTextObject = WL.scene.addObject(this._myTextsObject);\r\n        //this._myTriangleTextObject.pp_addComponent(\"pp-easy-transform\", { _myIsLocal: true });\r\n\r\n        this._myTriangleTextComponent = this._myTriangleTextObject.addComponent('text');\r\n\r\n        this._myTriangleTextComponent.alignment = WL.Alignment.Left;\r\n        this._myTriangleTextComponent.justification = WL.Justification.Line;\r\n        this._myTriangleTextComponent.material = this._myTextMaterial.clone();\r\n        this._myTriangleTextComponent.material.color = this._myNormalColor;\r\n        this._myTriangleTextComponent.text = \" \";\r\n        //this._myTriangleTextComponent.text = \"Triangles: 9999999\";\r\n\r\n        this._myPlaneTextObject = WL.scene.addObject(this._myTextsObject);\r\n\r\n        this._myPlaneTextComponent = this._myPlaneTextObject.addComponent('text');\r\n        //this._myPlaneTextObject.pp_addComponent(\"pp-easy-transform\", { _myIsLocal: true });\r\n\r\n        this._myPlaneTextComponent.alignment = WL.Alignment.Left;\r\n        this._myPlaneTextComponent.justification = WL.Justification.Line;\r\n        this._myPlaneTextComponent.material = this._myTextMaterial.clone();\r\n        this._myPlaneTextComponent.material.color = this._myNormalColor;\r\n        this._myPlaneTextComponent.text = \" \";\r\n        //this._myPlaneTextComponent.text = \"Planes: 9999999\";\r\n\r\n        this._myFPSTextObject = WL.scene.addObject(this._myTextsObject);\r\n\r\n        this._myFPSTextComponent = this._myFPSTextObject.addComponent('text');\r\n        //this._myFPSTextObject.pp_addComponent(\"pp-easy-transform\", { _myIsLocal: true });\r\n\r\n        this._myFPSTextComponent.alignment = WL.Alignment.Left;\r\n        this._myFPSTextComponent.justification = WL.Justification.Line;\r\n        this._myFPSTextComponent.material = this._myTextMaterial.clone();\r\n        this._myFPSTextComponent.material.color = this._myNormalColor;\r\n        this._myFPSTextComponent.text = \" \";\r\n        //this._myFPSTextComponent.text = \"FPS: 99.99\";\r\n\r\n        this._myDoneTextObject = WL.scene.addObject(this._myTrianglesObject);\r\n\r\n        this._myDoneTextComponent = this._myDoneTextObject.addComponent('text');\r\n        //this._myDoneTextObject.pp_addComponent(\"pp-easy-transform\", { _myIsLocal: true });\r\n\r\n        this._myDoneTextComponent.alignment = WL.Alignment.Center;\r\n        this._myDoneTextComponent.justification = WL.Justification.Line;\r\n        this._myDoneTextComponent.material = this._myTextMaterial.clone();\r\n        this._myDoneTextComponent.material.color = this._myNormalColor;\r\n        this._myDoneTextComponent.text = \" \";\r\n        //this._myDoneTextComponent.text = \"End\";\r\n\r\n        this._myTextsObject.pp_setPositionLocal(PP.vec3_create(0, 4.3, 0));\r\n        this._myTextsObject.pp_setScale(2.75);\r\n\r\n        this._myTriangleTextObject.pp_setPositionLocal(PP.vec3_create(-1.4, 0, 0));\r\n        this._myPlaneTextObject.pp_setPositionLocal(PP.vec3_create(0.55, 0, 0));\r\n        this._myFPSTextObject.pp_setPositionLocal(PP.vec3_create(-0.315, 0, 0));\r\n        this._myDoneTextObject.pp_setPositionLocal(PP.vec3_create(0, -4.6, 0));\r\n        this._myDoneTextObject.pp_setScale(4);\r\n\r\n        this._myDTHistory = [];\r\n    },\r\n    update(dt) {\r\n        if (this._mySessionStarted) {\r\n            if (this._myStartTimer.isRunning()) {\r\n                this._myStartTimer.update(dt);\r\n\r\n                this._myDTHistory.push(dt);\r\n\r\n                if (this._myStartTimer.isDone()) {\r\n                    this._myStableFrameRate = this._computeAverageFrameRate(true);\r\n                    if (this._myTargetFrameRate > 0) {\r\n                        this._myStableFrameRate = this._myTargetFrameRate;\r\n                    }\r\n\r\n                    if (this._myEnableLog) {\r\n                        console.log(\"\\nPlane Triangles (Adjusted):\", this._myRealTrianglesAmount);\r\n                        console.log(\"Target Frame Rate:\", this._myStableFrameRate, \"- Threshold: \", (this._myStableFrameRate - this._myTargetFrameRateThreshold));\r\n                        console.log(\"\");\r\n                    }\r\n                    this._start();\r\n                }\r\n            } else {\r\n                this._update(dt);\r\n            }\r\n        } else {\r\n            this._mySessionStarted = WL.xrSession != null;\r\n        }\r\n    },\r\n    _computeAverageFrameRate(isStart) {\r\n        let frameRate = 0;\r\n\r\n        this._myDTHistory.sort();\r\n        let elementToRemove = Math.floor(this._myDTHistory.length) * Math.min(0.9, this._myDTHistoryToIgnorePercentage * (isStart ? 2 : 1));\r\n        for (let i = 0; i < elementToRemove; i++) {\r\n            this._myDTHistory.pop();\r\n        }\r\n\r\n        let averageDT = 0;\r\n        for (let dt of this._myDTHistory) {\r\n            averageDT += dt;\r\n        }\r\n        averageDT /= this._myDTHistory.length;\r\n        frameRate = Math.round(1 / averageDT);\r\n\r\n        this._myDTHistory = [];\r\n\r\n        return frameRate;\r\n    },\r\n    _createPlaneMesh(trianglesAmount) {\r\n        let squaresAmount = Math.ceil(trianglesAmount / 2);\r\n\r\n        let row = 1;\r\n        let column = 1;\r\n\r\n        let closestSqrt = 1;\r\n        while (closestSqrt * closestSqrt < squaresAmount) {\r\n            closestSqrt++;\r\n        }\r\n\r\n        row = closestSqrt;\r\n        column = closestSqrt;\r\n\r\n        while (row > 1 && column > 1 && row * column > squaresAmount && ((row - 1) * column >= squaresAmount)) {\r\n            row--;\r\n        }\r\n\r\n        let meshParams = new PP.MeshCreationParams();\r\n\r\n        for (let i = 0; i < row + 1; i++) {\r\n            for (let j = 0; j < column + 1; j++) {\r\n\r\n                let x = (2 / column) * j;\r\n                let y = (2 / row) * i;\r\n\r\n                let vertexParams = new PP.MeshCreationVertexParams();\r\n\r\n                vertexParams.myPosition = new PP.vec3_create();\r\n                vertexParams.myPosition[0] = x - 1;\r\n                vertexParams.myPosition[1] = y - 1;\r\n                vertexParams.myPosition[2] = 0;\r\n\r\n                vertexParams.myTextureCoordinates = new PP.vec2_create();\r\n                vertexParams.myTextureCoordinates[0] = x / 2;\r\n                vertexParams.myTextureCoordinates[1] = y / 2;\r\n\r\n                vertexParams.myNormal = new PP.vec3_create();\r\n                vertexParams.myNormal[0] = 0;\r\n                vertexParams.myNormal[1] = 0;\r\n                vertexParams.myNormal[2] = 1;\r\n\r\n                meshParams.myVertexes.push(vertexParams);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < row; i++) {\r\n            for (let j = 0; j < column; j++) {\r\n                let firstTriangle = new PP.MeshCreationTriangleParams();\r\n                firstTriangle.myIndexes[0] = (i * (column + 1)) + j;\r\n                firstTriangle.myIndexes[1] = (i * (column + 1)) + j + 1;\r\n                firstTriangle.myIndexes[2] = ((i + 1) * (column + 1)) + j;\r\n\r\n                let secondTriangle = new PP.MeshCreationTriangleParams();\r\n                secondTriangle.myIndexes[0] = ((i + 1) * (column + 1)) + j;\r\n                secondTriangle.myIndexes[1] = (i * (column + 1)) + j + 1;\r\n                secondTriangle.myIndexes[2] = ((i + 1) * (column + 1)) + j + 1;\r\n\r\n                meshParams.myTriangles.push(firstTriangle);\r\n                meshParams.myTriangles.push(secondTriangle);\r\n            }\r\n        }\r\n\r\n        let mesh = PP.MeshUtils.createMesh(meshParams);\r\n\r\n        return mesh;\r\n    }\r\n});", "PP.ObjectPoolManager = class ObjectPoolManager {\r\n    constructor() {\r\n        this._myPools = new Map();\r\n    }\r\n\r\n    addPool(poolID, poolObject, objectPoolParams = new PP.ObjectPoolParams()) {\r\n        if (!this._myPools.has(poolID)) {\r\n            let pool = new PP.ObjectPool(poolObject, objectPoolParams);\r\n            this._myPools.set(poolID, pool);\r\n        } else {\r\n            console.error(\"Pool already created with this ID\");\r\n        }\r\n    }\r\n\r\n    increasePool(poolID, amount) {\r\n        let pool = this._myPools.get(poolID);\r\n        if (pool) {\r\n            pool.increase(amount);\r\n        }\r\n    }\r\n\r\n    increasePoolPercentage(poolID, percentage) {\r\n        let pool = this._myPools.get(poolID);\r\n        if (pool) {\r\n            pool.increasePercentage(percentage);\r\n        }\r\n    }\r\n\r\n    getPool(poolID) {\r\n        return this._myPools.get(poolID);\r\n    }\r\n\r\n    hasPool(poolID) {\r\n        return this._myPools.has(poolID);\r\n    }\r\n\r\n    getObject(poolID) {\r\n        if (this._myPools.has(poolID)) {\r\n            return this._myPools.get(poolID).get();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    releaseObject(poolID, object) {\r\n        this._myPools.get(poolID).release(object);\r\n    }\r\n};\r\n\r\nPP.ObjectPoolParams = class ObjectPoolParams {\r\n    constructor() {\r\n        this.myInitialPoolSize = 0;\r\n        this.myAmountToAddWhenEmpty = 0;        //If all the objects are busy, this amount will be added to the pool\r\n        this.myPercentageToAddWhenEmpty = 0;    //If all the objects are busy, this percentage of the current pool size will be added to the pool        \r\n\r\n        this.myCloneParams = undefined;\r\n\r\n        this.myOptimizeObjectsAllocation = true;    //If true it will pre-allocate the memory before adding new objects to the pool\r\n\r\n        //These extra functions can be used if u want to use the pool with objects that are not from WLE (WL.Object)\r\n        this.myCloneCallback = undefined;                       //Signature: callback(object, cloneParams) -> clonedObject\r\n        this.mySetActiveCallback = undefined;                   //Signature: callback(object, active)\r\n        this.myEqualCallback = undefined;                       //Signature: callback(firstObject, secondObject) -> bool\r\n        this.myOptimizeObjectsAllocationCallback = undefined;   //Signature: callback(object, numberOfObjectsToAllocate)\r\n\r\n        this.myEnableDebugLog = true;\r\n    }\r\n};\r\n\r\nPP.ObjectPool = class ObjectPool {\r\n    constructor(poolObject, objectPoolParams) {\r\n        this._myObjectPoolParams = objectPoolParams;\r\n        this._myPrototype = this._clone(poolObject);\r\n\r\n        this._myAvailableObjects = [];\r\n        this._myBusyObjects = [];\r\n\r\n        this._addToPool(objectPoolParams.myInitialPoolSize, false);\r\n    }\r\n\r\n    get() {\r\n        let object = this._myAvailableObjects.shift();\r\n\r\n        if (object == null) {\r\n            let amountToAdd = Math.ceil(this._myBusyObjects.length * this._myObjectPoolParams.myPercentageToAddWhenEmpty);\r\n            amountToAdd += this._myObjectPoolParams.myAmountToAddWhenEmpty;\r\n            this._addToPool(amountToAdd, this._myObjectPoolParams.myEnableDebugLog);\r\n            object = this._myAvailableObjects.shift();\r\n        }\r\n\r\n        //object could still be null if the amountToAdd is 0\r\n        if (object != null) {\r\n            this._myBusyObjects.push(object);\r\n        }\r\n\r\n        return object;\r\n    }\r\n\r\n    release(object) {\r\n        let released = this._myBusyObjects.pp_remove(this._equals.bind(this, object));\r\n        if (released) {\r\n            this._setActive(released, false);\r\n            this._myAvailableObjects.push(released);\r\n        }\r\n    }\r\n\r\n    increase(amount) {\r\n        this._addToPool(amount, false);\r\n    }\r\n\r\n    increasePercentage(percentage) {\r\n        let amount = Math.ceil((this.getSize()) * percentage);\r\n        this._addToPool(amount, false);\r\n    }\r\n\r\n    getSize() {\r\n        return this._myBusyObjects.length + this._myAvailableObjects.length;\r\n    }\r\n\r\n    getAvailableSize() {\r\n        return this._myAvailableObjects.length;\r\n    }\r\n\r\n    getBusySize() {\r\n        return this._myAvailableObjects.length;\r\n    }\r\n\r\n    _addToPool(size, log) {\r\n        if (size <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._myObjectPoolParams.myOptimizeObjectsAllocation) {\r\n            if (this._myObjectPoolParams.myOptimizeObjectsAllocationCallback) {\r\n                this._myObjectPoolParams.myOptimizeObjectsAllocationCallback(this._myPrototype, size);\r\n            } else if (this._myPrototype.pp_reserveObjectsHierarchy != null) {\r\n                this._myPrototype.pp_reserveObjectsHierarchy(size);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            this._myAvailableObjects.push(this._clone(this._myPrototype));\r\n        }\r\n\r\n        if (log) {\r\n            console.warn(\"Added new elements to the pool:\", size);\r\n        }\r\n    }\r\n\r\n    _clone(object) {\r\n        let clone = null;\r\n\r\n        if (this._myObjectPoolParams.myCloneCallback != null) {\r\n            clone = this._myObjectPoolParams.myCloneCallback(object, this._myObjectPoolParams.myCloneParams);\r\n        } else if (object.pp_clone != null) {\r\n            clone = object.pp_clone(this._myObjectPoolParams.myCloneParams);\r\n        } else if (object.clone != null) {\r\n            clone = object.clone(this._myObjectPoolParams.myCloneParams);\r\n        }\r\n\r\n        if (clone == null) {\r\n            console.error(\"Object not cloneable, pool will return null\");\r\n        } else {\r\n            this._setActive(clone, false);\r\n        }\r\n\r\n        return clone;\r\n    }\r\n\r\n    _setActive(object, active) {\r\n        if (this._myObjectPoolParams.mySetActiveCallback != null) {\r\n            this._myObjectPoolParams.mySetActiveCallback(object, active);\r\n        } else if (object.pp_setActive != null) {\r\n            object.pp_setActive(active);\r\n        } else if (object.setActive != null) {\r\n            object.setActive(active);\r\n        }\r\n    }\r\n\r\n    _equals(first, second) {\r\n        let equals = false;\r\n\r\n        if (this._myObjectPoolParams.myEqualCallback != null) {\r\n            equals = this._myObjectPoolParams.myEqualCallback(first, second);\r\n        } else if (first.pp_equals != null) {\r\n            equals = first.pp_equals(second);\r\n        } else if (first.equals != null) {\r\n            equals = first.equals(second);\r\n        } else {\r\n            equals = first == second;\r\n        }\r\n\r\n        return equals;\r\n    }\r\n};", "PP.SaveManager = class SaveManager {\r\n    constructor() {\r\n        this._mySaveCache = new Map();\r\n\r\n        this._myCommitSavesDelayTimer = new PP.Timer(0, false);\r\n        this._myDelaySavesCommit = true;\r\n        this._myIDsToCommit = [];\r\n\r\n        this._myCacheDefaultValueOnFail = true;\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n\r\n        this._myClearCallbacks = new Map();                 // Signature: callback()\r\n        this._myDeleteCallbacks = new Map();                // Signature: callback(id)\r\n        this._myDeleteIDCallbacks = new Map();              // Signature: callback(id)\r\n        this._mySaveCallbacks = new Map();                  // Signature: callback(id, value)\r\n        this._mySaveValueChangedCallbacks = new Map();      // Signature: callback(id, value)\r\n        this._mySaveIDCallbacks = new Map();                // Signature: callback(id, value)\r\n        this._mySaveValueChangedIDCallbacks = new Map();    // Signature: callback(id, value)\r\n        this._myCommitSaveCallbacks = new Map();            // Signature: callback(id, value, isCommitSaveDelayed, failed)\r\n        this._myCommitSaveIDCallbacks = new Map();          // Signature: callback(id, value, isCommitSaveDelayed, failed)\r\n        this._myCommitSavesCallbacks = new Map();           // Signature: callback(isCommitSavesDelayed, failed)\r\n\r\n        this._myLoadCallbacks = new Map();                  // Signature: callback(id, value, loadFromCache, failed)\r\n        this._myLoadIDCallbacks = new Map();                // Signature: callback(id, value, loadFromCache, failed)\r\n    }\r\n\r\n    setCommitSavesDelay(delay) {\r\n        this._myCommitSavesDelayTimer.start(delay);\r\n    }\r\n\r\n    setDelaySavesCommit(delayed) {\r\n        this._myDelaySavesCommit = delayed;\r\n    }\r\n\r\n    setCacheDefaultValueOnFail(cache) {\r\n        this._myCacheDefaultValueOnFail = cache;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myCommitSavesDelayTimer.isRunning()) {\r\n            this._myCommitSavesDelayTimer.update(dt);\r\n            if (this._myCommitSavesDelayTimer.isDone()) {\r\n                this.commitSaves();\r\n            }\r\n        }\r\n    }\r\n\r\n    save(id, value, overrideDelaySavesCommit = null) {\r\n        let sameValue = false;\r\n        if (this._mySaveCache.has(id)) {\r\n            sameValue = this._mySaveCache.get(id) === value;\r\n        }\r\n\r\n        if (!sameValue || true) {\r\n            this._mySaveCache.set(id, value);\r\n            if ((this._myDelaySavesCommit && overrideDelaySavesCommit == null) || (overrideDelaySavesCommit != null && overrideDelaySavesCommit)) {\r\n                this._myIDsToCommit.pp_pushUnique(id);\r\n                if (!this._myCommitSavesDelayTimer.isRunning()) {\r\n                    this._myCommitSavesDelayTimer.start();\r\n                }\r\n            } else {\r\n                let failed = this._commitSave(id, false);\r\n\r\n                if (this._myCommitSavesCallbacks.size > 0) {\r\n                    let isCommitSaveDelayed = false;\r\n                    this._myCommitSavesCallbacks.forEach(function (callback) { callback(isCommitSaveDelayed, failed); });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._mySaveCallbacks.size > 0) {\r\n            this._mySaveCallbacks.forEach(function (callback) { callback(id, value); });\r\n        }\r\n\r\n        if (this._mySaveIDCallbacks.size > 0) {\r\n            let callbacks = this._mySaveIDCallbacks.get(id);\r\n            if (callbacks != null) {\r\n                callbacks.forEach(function (callback) { callback(id, value); });\r\n            }\r\n        }\r\n\r\n        if (!sameValue) {\r\n            if (this._mySaveValueChangedCallbacks.size > 0) {\r\n                this._mySaveValueChangedCallbacks.forEach(function (callback) { callback(id, value); });\r\n            }\r\n\r\n            if (this._mySaveValueChangedIDCallbacks.size > 0) {\r\n                let callbacks = this._mySaveValueChangedIDCallbacks.get(id);\r\n                if (callbacks != null) {\r\n                    callbacks.forEach(function (callback) { callback(id, value); });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    commitSaves() {\r\n        if (this._myIDsToCommit.length > 0) {\r\n            let failed = false;\r\n\r\n            for (let id of this._myIDsToCommit) {\r\n                if (this._mySaveCache.has(id)) {\r\n                    let result = this._commitSave(id, true);\r\n                    failed = failed || result;\r\n                }\r\n            }\r\n\r\n            this._myIDsToCommit = [];\r\n\r\n            if (this._myCommitSavesCallbacks.size > 0) {\r\n                let isCommitSavesDelayed = true;\r\n                this._myCommitSavesCallbacks.forEach(function (callback) { callback(isCommitSavesDelayed, failed); });\r\n            }\r\n        }\r\n    }\r\n\r\n    has(id) {\r\n        return this._mySaveCache.has(id) || PP.SaveUtils.has(id);\r\n    }\r\n\r\n    delete(id) {\r\n        this._mySaveCache.delete(id);\r\n        PP.SaveUtils.delete(id);\r\n\r\n        if (this._myDeleteCallbacks.size > 0) {\r\n            this._myDeleteCallbacks.forEach(function (callback) { callback(id); });\r\n        }\r\n\r\n        if (this._myDeleteIDCallbacks.size > 0) {\r\n            let callbacks = this._myDeleteIDCallbacks.get(id);\r\n            if (callbacks != null) {\r\n                callbacks.forEach(function (callback) { callback(id); });\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this._mySaveCache.clear();\r\n        PP.SaveUtils.clear();\r\n\r\n        if (this._myClearCallbacks.size > 0) {\r\n            this._myClearCallbacks.forEach(function (callback) { callback(); });\r\n        }\r\n    }\r\n\r\n    load(id, defaultValue = null) {\r\n        return this._load(id, defaultValue, \"load\");\r\n    }\r\n\r\n    loadString(id, defaultValue = null) {\r\n        return this._load(id, defaultValue, \"loadString\");\r\n    }\r\n\r\n    loadNumber(id, defaultValue = null) {\r\n        return this._load(id, defaultValue, \"loadNumber\");\r\n    }\r\n\r\n    loadBool(id, defaultValue = null) {\r\n        return this._load(id, defaultValue, \"loadBool\");\r\n    }\r\n\r\n    getCommitSavesDelay() {\r\n        return this._myCommitSavesDelayTimer.getDuration();\r\n    }\r\n\r\n    isDelaySavesCommit() {\r\n        return this._myDelaySavesCommit;\r\n    }\r\n\r\n    isCacheDefaultValueOnFail() {\r\n        return this._myCacheDefaultValueOnFail;\r\n    }\r\n\r\n    _commitSave(id, isCommitSaveDelayed) {\r\n        let value = this._mySaveCache.get(id);\r\n        let failed = false;\r\n\r\n        try {\r\n            PP.SaveUtils.save(id, value);\r\n        } catch (error) {\r\n            failed = true;\r\n        }\r\n\r\n        if (this._myCommitSaveCallbacks.size > 0) {\r\n            this._myCommitSaveCallbacks.forEach(function (callback) { callback(id, value, isCommitSaveDelayed, failed); });\r\n        }\r\n\r\n        if (this._myCommitSaveIDCallbacks.size > 0) {\r\n            let callbacks = this._myCommitSaveIDCallbacks.get(id);\r\n            if (callbacks != null) {\r\n                callbacks.forEach(function (callback) { callback(id, value, isCommitSaveDelayed, failed); });\r\n            }\r\n        }\r\n\r\n        return failed;\r\n    }\r\n\r\n    _load(id, defaultValue, functionName) {\r\n        let value = null;\r\n        let failed = false;\r\n        let loadFromCache = false;\r\n\r\n        if (this._mySaveCache.has(id)) {\r\n            value = this._mySaveCache.get(id);\r\n\r\n            if (value == null && defaultValue != null) {\r\n                value = defaultValue;\r\n                if (this._myCacheDefaultValueOnFail) {\r\n                    this._mySaveCache.set(id, value);\r\n                }\r\n            }\r\n\r\n            loadFromCache = true;\r\n        } else {\r\n            let saveResult = null;\r\n            try {\r\n                saveResult = PP.SaveUtils[functionName](id, null);\r\n            } catch (error) {\r\n                // Error is managed as if it worked but there was no value\r\n                saveResult = null;\r\n                failed = true;\r\n            }\r\n\r\n            if (saveResult == null) {\r\n                value = defaultValue;\r\n            } else {\r\n                value = saveResult;\r\n            }\r\n\r\n            if (saveResult != null || this._myCacheDefaultValueOnFail) {\r\n                this._mySaveCache.set(id, value);\r\n            } else {\r\n                this._mySaveCache.set(id, null);\r\n            }\r\n        }\r\n\r\n        if (this._myLoadCallbacks.size > 0) {\r\n            this._myLoadCallbacks.forEach(function (callback) { callback(id, value, loadFromCache, failed); });\r\n        }\r\n\r\n        if (this._myLoadIDCallbacks.size > 0) {\r\n            let callbacks = this._myLoadIDCallbacks.get(id);\r\n            if (callbacks != null) {\r\n                callbacks.forEach(function (callback) { callback(id, value, loadFromCache, failed); });\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _onXRSessionStart(session) {\r\n        session.addEventListener('visibilitychange', function (event) {\r\n            if (event.session.visibilityState != \"visible\") {\r\n                this._onXRSessionInterrupt();\r\n            }\r\n        }.bind(this));\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._onXRSessionInterrupt();\r\n    }\r\n\r\n    _onXRSessionInterrupt() {\r\n        this.commitSaves();\r\n    }\r\n\r\n    registerClearEventListener(callbackID, callback) {\r\n        this._myClearCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterClearEventListener(callbackID) {\r\n        this._myClearCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerDeleteEventListener(callbackID, callback) {\r\n        this._myDeleteCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterDeleteEventListener(callbackID) {\r\n        this._myDeleteCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerDeleteIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._myDeleteIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._myDeleteIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._myDeleteIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterDeleteIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._myDeleteIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._myDeleteIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerSaveEventListener(callbackID, callback) {\r\n        this._mySaveCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveEventListener(callbackID) {\r\n        this._mySaveCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerSaveIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._mySaveIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._mySaveIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._mySaveIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._mySaveIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._mySaveIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerSaveValueChangedEventListener(callbackID, callback) {\r\n        this._mySaveValueChangedCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveValueChangedEventListener(callbackID) {\r\n        this._mySaveValueChangedCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerSaveValueChangedIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._mySaveValueChangedIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._mySaveValueChangedIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._mySaveValueChangedIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveValueChangedIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._mySaveValueChangedIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._mySaveValueChangedIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerCommitSavesEventListener(callbackID, callback) {\r\n        this._myCommitSavesCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCommitSavesEventListener(callbackID) {\r\n        this._myCommitSavesCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerCommitSaveEventListener(callbackID, callback) {\r\n        this._myCommitSaveCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCommitSaveEventListener(callbackID) {\r\n        this._myCommitSaveCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerCommitSaveIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._myCommitSaveIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._myCommitSaveIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._myCommitSaveIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCommitSaveIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._myCommitSaveIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._myCommitSaveIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerLoadEventListener(callbackID, callback) {\r\n        this._myLoadCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterLoadEventListener(callbackID) {\r\n        this._myLoadCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerLoadIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._myLoadIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._myLoadIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._myLoadIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterLoadIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._myLoadIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._myLoadIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n};", "PP.Timer = class Timer {\r\n    constructor(duration, autoStart = true) {\r\n        this._myDuration = duration;\r\n        this._myOnEndCallbacks = new Map();     // Signature: callback()\r\n\r\n        this._myDone = false;\r\n        this._myJustDone = false;\r\n        this._myStarted = false;\r\n\r\n        if (autoStart) {\r\n            this.start();\r\n        } else {\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    start(duration = null) {\r\n        this.reset(duration);\r\n        this._myStarted = true;\r\n    }\r\n\r\n    end() {\r\n        this._done();\r\n    }\r\n\r\n    reset(duration = null) {\r\n        if (duration != null) {\r\n            this._myDuration = Math.max(0, duration);\r\n        }\r\n\r\n        this._myTimeLeft = this._myDuration;\r\n        this._myDone = false;\r\n        this._myJustDone = false;\r\n        this._myStarted = false;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myJustDone = false;\r\n\r\n        if (this.isRunning()) {\r\n            this._myTimeLeft = Math.max(0, this._myTimeLeft - dt);\r\n            if (this._myTimeLeft == 0) {\r\n                this._done();\r\n            }\r\n        }\r\n    }\r\n\r\n    isDone() {\r\n        return this._myDone;\r\n    }\r\n\r\n    isJustDone() {\r\n        return this._myJustDone;\r\n    }\r\n\r\n    isStarted() {\r\n        return this._myStarted;\r\n    }\r\n\r\n    isRunning() {\r\n        return this.isStarted() && !this.isDone();\r\n    }\r\n\r\n    getDuration() {\r\n        return this._myDuration;\r\n    }\r\n\r\n    setDuration(duration) {\r\n        this._myDuration = Math.max(0, duration);\r\n    }\r\n\r\n    getTimeLeft() {\r\n        return this._myTimeLeft;\r\n    }\r\n\r\n    getPercentage() {\r\n        let percentage = 1;\r\n        if (this._myTimeLeft > 0 && this._myDuration > 0) {\r\n            percentage = (this._myDuration - this._myTimeLeft) / this._myDuration;\r\n        }\r\n        return Math.pp_clamp(percentage, 0, 1);\r\n    }\r\n\r\n    setPercentage(percentage) {\r\n        if (this.isRunning()) {\r\n            let durationPercentage = Math.pp_clamp(1 - percentage, 0, 1);\r\n            this._myTimeLeft = this._myDuration * durationPercentage;\r\n        }\r\n    }\r\n\r\n    onEnd(callback, id = null) {\r\n        this._myOnEndCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterOnEnd(id = null) {\r\n        this._myOnEndCallbacks.delete(id);\r\n    }\r\n\r\n    _done() {\r\n        this._myTimeLeft = 0;\r\n        this._myDone = true;\r\n        this._myJustDone = true;\r\n        if (this._myOnEndCallbacks.size > 0) {\r\n            for (let callback of this._myOnEndCallbacks.values()) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n};", "WL.registerComponent(\"pp-clear-console-on-xr-session-start\", {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myFirstTime = true;\r\n        WL.onXRSessionStart.push(function () {\r\n            if (this._myFirstTime) {\r\n                this._myFirstTime = false;\r\n                console.clear();\r\n            }\r\n        }.bind(this));\r\n    },\r\n    update: function (dt) {\r\n    }\r\n});", "WL.registerComponent('pp-set-active', {\r\n    _myActive: { type: WL.Type.Bool, default: true },\r\n    _mySetActiveOn: { type: WL.Type.Enum, values: ['self', 'children', 'descendants', 'hierarchy'], default: 'hierarchy' },\r\n    _mySetActiveWhen: { type: WL.Type.Enum, values: ['init', 'start', 'first_update'], default: 'init' },\r\n}, {\r\n    init: function () {\r\n        if (this.active && this._mySetActiveWhen == 0) {\r\n            this._setActive();\r\n        }\r\n    },\r\n    start: function () {\r\n        if (this._mySetActiveWhen == 1) {\r\n            this._setActive();\r\n        }\r\n        this._myFirst = true;\r\n    },\r\n    update: function (dt) {\r\n        if (this._mySetActiveWhen == 2 && this._myFirst) {\r\n            this._myFirst = false;\r\n            this._setActive();\r\n        }\r\n    },\r\n    _setActive() {\r\n        if (this._mySetActiveOn == 0) {\r\n            this.object.pp_setActiveSelf(this._myActive);\r\n        } else if (this._mySetActiveOn == 1) {\r\n            this.object.pp_setActiveChildren(this._myActive);\r\n        } else if (this._mySetActiveOn == 2) {\r\n            this.object.pp_setActiveDescendants(this._myActive);\r\n        } else {\r\n            this.object.pp_setActiveHierarchy(this._myActive);\r\n        }\r\n    }\r\n});", "WL.registerComponent('pp-adjust-hierarchy-physx-scale', {\r\n    _myWhen: { type: WL.Type.Enum, values: ['init', 'start', 'first_update'], default: 'start' },\r\n}, {\r\n    init: function () {\r\n        if (this.active && this._myWhen == 0) {\r\n            this._adjustScale();\r\n        }\r\n    },\r\n    start: function () {\r\n        if (this._myWhen == 1) {\r\n            this._adjustScale();\r\n        }\r\n        this._myFirst = true;\r\n    },\r\n    update: function (dt) {\r\n        if (this._myWhen == 2 && this._myFirst) {\r\n            this._myFirst = false;\r\n            this._adjustScale();\r\n        }\r\n    },\r\n    _adjustScale() {\r\n        let scale = this.object.pp_getScale();\r\n        let physXComponents = this.object.pp_getComponentsHierarchy(\"physx\");\r\n        for (let physX of physXComponents) {\r\n            physX.extents[0] = physX.extents[0] * scale[0];\r\n            physX.extents[1] = physX.extents[1] * scale[1];\r\n            physX.extents[2] = physX.extents[2] * scale[2];\r\n\r\n            if (physX.active) {\r\n                physX.active = false;\r\n                physX.active = true;\r\n            }\r\n        }\r\n    }\r\n});", "WL.registerComponent(\"pp-get-player-objects\", {\r\n    _myPlayer: { type: WL.Type.Object },\r\n    _myPlayerPivot: { type: WL.Type.Object },   // if u don't have a pivot under the player you set this to null, by default will be the same as the player\r\n    _myNonVRCamera: { type: WL.Type.Object },\r\n    _myEyeLeft: { type: WL.Type.Object },\r\n    _myEyeRight: { type: WL.Type.Object },\r\n    _myHead: { type: WL.Type.Object },\r\n    _myNonVRHead: { type: WL.Type.Object },\r\n    _myVRHead: { type: WL.Type.Object },\r\n    _myHandLeft: { type: WL.Type.Object },\r\n    _myHandRight: { type: WL.Type.Object }\r\n}, {\r\n    init: function () {\r\n        PP.myPlayerObjects.myPlayer = this._myPlayer;\r\n        PP.myPlayerObjects.myPlayerPivot = this._myPlayerPivot;\r\n        PP.myPlayerObjects.myNonVRCamera = this._myNonVRCamera;\r\n        PP.myPlayerObjects.myHead = this._myHead;\r\n        PP.myPlayerObjects.myNonVRHead = this._myNonVRHead;\r\n        PP.myPlayerObjects.myVRHead = this._myVRHead;\r\n        PP.myPlayerObjects.myEyeLeft = this._myEyeLeft;\r\n        PP.myPlayerObjects.myEyeRight = this._myEyeRight;\r\n        PP.myPlayerObjects.myHandLeft = this._myHandLeft;\r\n        PP.myPlayerObjects.myHandRight = this._myHandRight;\r\n\r\n        PP.myPlayerObjects.myEyes = [];\r\n        PP.myPlayerObjects.myEyes[PP.Handedness.LEFT] = this._myEyeLeft;\r\n        PP.myPlayerObjects.myEyes[PP.Handedness.RIGHT] = this._myEyeRight;\r\n\r\n        PP.myPlayerObjects.myHands = [];\r\n        PP.myPlayerObjects.myHands[PP.Handedness.LEFT] = this._myHandLeft;\r\n        PP.myPlayerObjects.myHands[PP.Handedness.RIGHT] = this._myHandRight;\r\n\r\n        if (PP.myPlayerObjects.myPlayerPivot == null) {\r\n            PP.myPlayerObjects.myPlayerPivot = PP.myPlayerObjects.myPlayer;\r\n        }\r\n    }\r\n});\r\n\r\nPP.myPlayerObjects = {\r\n    myPlayer: null,\r\n    myPlayerPivot: null,\r\n    myNonVRCamera: null,\r\n    myNonVRHead: null,\r\n    myVRHead: null,\r\n    myHead: null,\r\n    myEyeLeft: null,\r\n    myEyeRight: null,\r\n    myEyes: [],\r\n    myHandLeft: null,\r\n    myHandRight: null,\r\n    myHands: [],\r\n};", "WL.registerComponent('pp-get-default-resources', {\r\n    _myPlane: { type: WL.Type.Mesh },\r\n    _myCube: { type: WL.Type.Mesh },\r\n    _mySphere: { type: WL.Type.Mesh },\r\n    _myCone: { type: WL.Type.Mesh },\r\n    _myCylinder: { type: WL.Type.Mesh },\r\n    _myCircle: { type: WL.Type.Mesh },\r\n\r\n    _myFlatOpaque: { type: WL.Type.Material },\r\n    _myFlatTransparentNoDepth: { type: WL.Type.Material },\r\n    _myPhongOpaque: { type: WL.Type.Material },\r\n    _myText: { type: WL.Type.Material },\r\n\r\n}, {\r\n    init() {\r\n        PP.myDefaultResources.myMeshes.myPlane = PP.MeshUtils.cloneMesh(this._myPlane);\r\n        PP.myDefaultResources.myMeshes.myCube = PP.MeshUtils.cloneMesh(this._myCube);\r\n        PP.myDefaultResources.myMeshes.mySphere = PP.MeshUtils.cloneMesh(this._mySphere);\r\n        PP.myDefaultResources.myMeshes.myCone = PP.MeshUtils.cloneMesh(this._myCone);\r\n        PP.myDefaultResources.myMeshes.myCylinder = PP.MeshUtils.cloneMesh(this._myCylinder);\r\n        PP.myDefaultResources.myMeshes.myCircle = PP.MeshUtils.cloneMesh(this._myCircle);\r\n\r\n        PP.myDefaultResources.myMeshes.myInvertedCube = PP.MeshUtils.invertMesh(this._myCube);\r\n        PP.myDefaultResources.myMeshes.myInvertedSphere = PP.MeshUtils.invertMesh(this._mySphere);\r\n        PP.myDefaultResources.myMeshes.myInvertedCone = PP.MeshUtils.invertMesh(this._myCone);\r\n        PP.myDefaultResources.myMeshes.myInvertedCylinder = PP.MeshUtils.invertMesh(this._myCylinder);\r\n\r\n        if (this._myFlatOpaque != null) {\r\n            PP.myDefaultResources.myMaterials.myFlatOpaque = this._myFlatOpaque.clone();\r\n        }\r\n\r\n        if (this._myFlatTransparentNoDepth != null) {\r\n            PP.myDefaultResources.myMaterials.myFlatTransparentNoDepth = this._myFlatTransparentNoDepth.clone();\r\n        }\r\n\r\n        if (this._myPhongOpaque != null) {\r\n            PP.myDefaultResources.myMaterials.myPhongOpaque = this._myPhongOpaque.clone();\r\n        }\r\n\r\n        if (this._myText != null) {\r\n            PP.myDefaultResources.myMaterials.myText = this._myText.clone();\r\n        }\r\n    }\r\n});\r\n\r\nPP.myDefaultResources = {\r\n    myMeshes: {\r\n        myPlane: null,\r\n        myCube: null,\r\n        mySphere: null,\r\n        myCone: null,\r\n        myCylinder: null,\r\n        myCircle: null,\r\n\r\n        myInvertedCube: null,\r\n        myInvertedSphere: null,\r\n        myInvertedCone: null,\r\n        myInvertedCylinder: null\r\n    },\r\n    myMaterials: {\r\n        myFlatOpaque: null,\r\n        myFlatTransparentNoDepth: null, // for now the pipeline needs to be the last one to make this work properly\r\n        myPhongOpaque: null,\r\n        myText: null,\r\n    }\r\n};", "WL.registerComponent('pp-show-fps', {\r\n    _myRefreshSeconds: { type: WL.Type.Float, default: 0.25 },\r\n    _myTextMaterial: { type: WL.Type.Material }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start() {\r\n        this._myTimer = new PP.Timer(this._myRefreshSeconds);\r\n        this._myTotalDT = 0;\r\n        this._myFrames = 0;\r\n\r\n        this._myVisualFPSParent = this.object.pp_addObject();\r\n\r\n        let visualParams = new PP.VisualTextParams();\r\n        visualParams.myText = \"0\";\r\n\r\n        visualParams.myTransform.mat4_setPositionRotationScale(PP.vec3_create(-0.115, -0.115, 0.35), PP.vec3_create(0, 180, 0), PP.vec3_create(0.3, 0.3, 0.3));\r\n\r\n        if (this._myTextMaterial != null) {\r\n            visualParams.myMaterial = this._myTextMaterial.clone();\r\n        } else {\r\n            visualParams.myMaterial = PP.myDefaultResources.myMaterials.myText.clone();\r\n            visualParams.myMaterial.color = PP.vec4_create(0, 1, 0, 1);\r\n        }\r\n\r\n        visualParams.myParent = this._myVisualFPSParent;\r\n        visualParams.myIsLocal = true;\r\n\r\n        this._myVisualFPS = new PP.VisualText(visualParams);\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"FPS X\", -0.25, 0.1, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"FPS Y\", -0.130, 0.1, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"FPS Z\", 0.35, 0.1, 3));\r\n    },\r\n    update: function () {\r\n        let playerTransformQuat = PP.quat2_create();\r\n        return function update(dt) {\r\n            this._myTotalDT += dt;\r\n            this._myFrames++;\r\n\r\n            this._myTimer.update(dt);\r\n            if (this._myTimer.isDone()) {\r\n                this._myTimer.start();\r\n\r\n                let fps = Math.round(this._myFrames / this._myTotalDT);\r\n\r\n                let visualParams = this._myVisualFPS.getParams();\r\n\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    visualParams.myTransform.mat4_setPositionRotationScale(PP.vec3_create(-0.115, -0.115, 0.35), PP.vec3_create(0, 180, 0), PP.vec3_create(0.3, 0.3, 0.3));\r\n                } else {\r\n                    visualParams.myTransform.mat4_setPositionRotationScale(PP.vec3_create(-0.25, -0.130, 0.35), PP.vec3_create(0, 180, 0), PP.vec3_create(0.3, 0.3, 0.3));\r\n                }\r\n\r\n                //visualParams.myTransform.mat4_setPositionRotationScale([PP.myEasyTuneVariables.get(\"FPS X\"), PP.myEasyTuneVariables.get(\"FPS Y\"), PP.myEasyTuneVariables.get(\"FPS Z\")], PP.vec3_create(0, 180, 0), PP.vec3_create(0.3, 0.3, 0.3));\r\n\r\n                visualParams.myText = fps.toFixed(0);\r\n                this._myVisualFPS.paramsUpdated();\r\n\r\n                this._myTotalDT = 0;\r\n                this._myFrames = 0;\r\n            }\r\n\r\n            this._myVisualFPSParent.pp_setTransformQuat(PP.myPlayerObjects.myHead.pp_getTransformQuat(playerTransformQuat));\r\n        };\r\n    }()\r\n});", "/*\r\n    You can also use plain functions for state/transition if u want to do something simple and quick\r\n\r\n    Signatures:\r\n        function stateUpdate(dt, fsm)\r\n        function init(fsm, initStateData)\r\n        function transition(fsm, transitionData)\r\n*/\r\n\r\nPP.StateData = class StateData {\r\n    constructor(stateID, stateObject) {\r\n        this.myID = stateID;\r\n        this.myObject = stateObject;\r\n    }\r\n};\r\n\r\nPP.TransitionData = class TransitionData {\r\n    constructor(transitionID, fromStateData, toStateData, transitionObject, skipStateFunction) {\r\n        this.myID = transitionID;\r\n        this.myFromState = fromStateData;\r\n        this.myToState = toStateData;\r\n        this.myObject = transitionObject;\r\n        this.mySkipStateFunction = skipStateFunction;\r\n    }\r\n};\r\n\r\nPP.PendingPerform = class PendingPerform {\r\n    constructor(transitionID, ...args) {\r\n        this.myID = transitionID;\r\n        this.myArgs = args;\r\n    }\r\n};\r\n\r\nPP.PerformMode = {\r\n    IMMEDIATE: 0,\r\n    DELAYED: 1\r\n};\r\n\r\nPP.PerformDelayedMode = {\r\n    QUEUE: 0,\r\n    KEEP_FIRST: 1,\r\n    KEEP_LAST: 2\r\n};\r\n\r\nPP.SkipStateFunction = {\r\n    NONE: 0,\r\n    END: 1,\r\n    START: 2,\r\n    BOTH: 3\r\n};\r\n\r\nPP.FSM = class FSM {\r\n\r\n    constructor(performMode = PP.PerformMode.IMMEDIATE, performDelayedMode = PP.PerformDelayedMode.QUEUE) {\r\n        this._myCurrentStateData = null;\r\n\r\n        this._myStates = new Map();\r\n        this._myTransitions = new Map();\r\n\r\n        this._myDebugLogActive = false;\r\n        this._myDebugShowDelayedInfo = false;\r\n        this._myDebugLogName = \"FSM\";\r\n\r\n        this._myPerformMode = performMode;\r\n        this._myPerformDelayedMode = performDelayedMode;\r\n        this._myPendingPerforms = [];\r\n        this._myCurrentlyPerformedTransition = null;\r\n\r\n        this._myInitCallbacks = new Map();            // Signature: callback(fsm, initStateData, initTransitionObject, ...args)\r\n        this._myInitIDCallbacks = new Map();          // Signature: callback(fsm, initStateData, initTransitionObject, ...args)\r\n        this._myTransitionCallbacks = new Map();      // Signature: callback(fsm, fromStateData, toStateData, transitionData, performMode, ...args)\r\n        this._myTransitionIDCallbacks = [];           // Signature: callback(fsm, fromStateData, toStateData, transitionData, performMode, ...args)\r\n    }\r\n\r\n    addState(stateID, state = null) {\r\n        let stateObject = null;\r\n        if (!state || typeof state == 'function') {\r\n            stateObject = {};\r\n            if (typeof state == 'function') {\r\n                stateObject.update = state;\r\n            } else {\r\n                stateObject.update = null;\r\n            }\r\n            stateObject.clone = function () {\r\n                let cloneObject = {};\r\n                cloneObject.update = this.update;\r\n                cloneObject.clone = this.clone;\r\n                return cloneObject;\r\n            };\r\n        } else {\r\n            stateObject = state;\r\n        }\r\n\r\n        let stateData = new PP.StateData(stateID, stateObject);\r\n        this._myStates.set(stateID, stateData);\r\n        this._myTransitions.set(stateID, new Map());\r\n    }\r\n\r\n    addTransition(fromStateID, toStateID, transitionID, transition = null, skipStateFunction = PP.SkipStateFunction.NONE) {\r\n        let transitionObject = null;\r\n        if (!transition || typeof transition == 'function') {\r\n            transitionObject = {};\r\n            if (typeof transition == 'function') {\r\n                transitionObject.perform = transition;\r\n            } else {\r\n                transitionObject.perform = null;\r\n            }\r\n            transitionObject.clone = function () {\r\n                let cloneObject = {};\r\n                cloneObject.perform = this.perform;\r\n                cloneObject.clone = this.clone;\r\n                return cloneObject;\r\n            };\r\n        } else {\r\n            transitionObject = transition;\r\n        }\r\n\r\n        if (this.hasState(fromStateID) && this.hasState(toStateID)) {\r\n            let transitionsFromState = this._getTransitionsFromState(fromStateID);\r\n\r\n            let transitionData = new PP.TransitionData(transitionID, this.getState(fromStateID), this.getState(toStateID), transitionObject, skipStateFunction);\r\n            transitionsFromState.set(transitionID, transitionData);\r\n        } else {\r\n            if (!this.hasState(fromStateID) && !this.hasState(toStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- from state not found:\", fromStateID, \"- to state not found:\", toStateID);\r\n            } else if (!this.hasState(fromStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- from state not found:\", fromStateID);\r\n            } else if (!this.hasState(toStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- to state not found:\", toStateID);\r\n            }\r\n        }\r\n    }\r\n\r\n    init(initStateID, initTransition = null, ...args) {\r\n        let initTransitionObject = initTransition;\r\n        if (initTransition && typeof initTransition == 'function') {\r\n            initTransitionObject = {};\r\n            initTransitionObject.performInit = initTransition;\r\n        }\r\n\r\n        if (this.hasState(initStateID)) {\r\n            let initStateData = this._myStates.get(initStateID);\r\n\r\n            if (this._myDebugLogActive) {\r\n                console.log(this._myDebugLogName, \"- Init:\", initStateID);\r\n            }\r\n\r\n            if (initTransitionObject && initTransitionObject.performInit) {\r\n                initTransitionObject.performInit(this, initStateData, ...args);\r\n            } else if (initStateData.myObject && initStateData.myObject.init) {\r\n                initStateData.myObject.init(this, initStateData, ...args);\r\n            }\r\n\r\n            this._myCurrentStateData = initStateData;\r\n\r\n            if (this._myInitCallbacks.size > 0) {\r\n                this._myInitCallbacks.forEach(function (callback) { callback(this, initStateData, initTransitionObject, ...args); }.bind(this));\r\n            }\r\n\r\n            if (this._myInitIDCallbacks.size > 0) {\r\n                let callbacks = this._myInitIDCallbacks.get(initStateID);\r\n                if (callbacks != null) {\r\n                    callbacks.forEach(function (callback) { callback(this, initStateData, initTransitionObject, ...args); }.bind(this));\r\n                }\r\n            }\r\n        } else if (this._myDebugLogActive) {\r\n            console.warn(this._myDebugLogName, \"- Init state not found:\", initStateID);\r\n        }\r\n    }\r\n\r\n    update(dt, ...args) {\r\n        if (this._myPendingPerforms.length > 0) {\r\n            for (let i = 0; i < this._myPendingPerforms.length; i++) {\r\n                this._perform(this._myPendingPerforms[i].myID, PP.PerformMode.DELAYED, ...this._myPendingPerforms[i].myArgs);\r\n            }\r\n            this._myPendingPerforms = [];\r\n        }\r\n\r\n        if (this._myCurrentStateData && this._myCurrentStateData.myObject && this._myCurrentStateData.myObject.update) {\r\n            this._myCurrentStateData.myObject.update(dt, this, ...args);\r\n        }\r\n    }\r\n\r\n    perform(transitionID, ...args) {\r\n        if (this._myPerformMode == PP.PerformMode.DELAYED) {\r\n            this.performDelayed(transitionID, ...args);\r\n        } else {\r\n            this.performImmediate(transitionID, ...args);\r\n        }\r\n    }\r\n\r\n    performDelayed(transitionID, ...args) {\r\n        let performDelayed = false;\r\n\r\n        switch (this._myPerformDelayedMode) {\r\n            case PP.PerformDelayedMode.QUEUE:\r\n                this._myPendingPerforms.push(new PP.PendingPerform(transitionID, ...args));\r\n                performDelayed = true;\r\n                break;\r\n            case PP.PerformDelayedMode.KEEP_FIRST:\r\n                if (!this.hasPendingPerforms()) {\r\n                    this._myPendingPerforms.push(new PP.PendingPerform(transitionID, ...args));\r\n                    performDelayed = true;\r\n                }\r\n                break;\r\n            case PP.PerformDelayedMode.KEEP_LAST:\r\n                this.resetPendingPerforms();\r\n                this._myPendingPerforms.push(new PP.PendingPerform(transitionID, ...args));\r\n                performDelayed = true;\r\n                break;\r\n        }\r\n\r\n        return performDelayed;\r\n    }\r\n\r\n    performImmediate(transitionID, ...args) {\r\n        return this._perform(transitionID, PP.PerformMode.IMMEDIATE, ...args);\r\n    }\r\n\r\n    canPerform(transitionID) {\r\n        return this.hasTransitionFromState(this._myCurrentStateData.myID, transitionID);\r\n    }\r\n\r\n    canGoTo(stateID, transitionID = null) {\r\n        return this.hasTransitionFromStateToState(this._myCurrentStateData.myID, stateID, transitionID);\r\n    }\r\n\r\n    isInState(stateID) {\r\n        return this._myCurrentStateData != null && this._myCurrentStateData.myID == stateID;\r\n    }\r\n\r\n    isPerformingTransition() {\r\n        return this._myCurrentlyPerformedTransition != null;\r\n    }\r\n\r\n    getCurrentlyPerformedTransition() {\r\n        return this._myCurrentlyPerformedTransition;\r\n    }\r\n\r\n    hasBeenInit() {\r\n        return this._myCurrentStateData != null;\r\n    }\r\n\r\n    reset() {\r\n        this.resetState();\r\n        this.resetPendingPerforms();\r\n    }\r\n\r\n    resetState() {\r\n        this._myCurrentStateData = null;\r\n    }\r\n\r\n    resetPendingPerforms() {\r\n        this._myPendingPerforms = [];\r\n    }\r\n\r\n    getCurrentState() {\r\n        return this._myCurrentStateData;\r\n    }\r\n\r\n    getCurrentTransitions() {\r\n        return this.getTransitionsFromState(this._myCurrentStateData.myID);\r\n    }\r\n\r\n    getCurrentTransitionsToState(stateID) {\r\n        return this.getTransitionsFromStateToState(this._myCurrentStateData.myID, stateID);\r\n    }\r\n\r\n    getState(stateID) {\r\n        return this._myStates.get(stateID);\r\n    }\r\n\r\n    getStates() {\r\n        return this._myStates.values();\r\n    }\r\n\r\n    getTransitions() {\r\n        let transitions = [];\r\n\r\n        for (let transitionsFromState of this._myTransitions.values()) {\r\n            for (let transitionData of transitionsFromState.values()) {\r\n                transitions.push(transitionData);\r\n            }\r\n        }\r\n\r\n        return transitions;\r\n    }\r\n\r\n    getTransitionsFromState(fromStateID) {\r\n        let transitionsFromState = this._getTransitionsFromState(fromStateID);\r\n        return Array.from(transitionsFromState.values());\r\n    }\r\n\r\n    getTransitionsFromStateToState(fromStateID, toStateID) {\r\n        let transitionsFromState = this._getTransitionsFromState(fromStateID);\r\n\r\n        let transitionsToState = [];\r\n        for (let transitionData of transitionsFromState.values()) {\r\n            if (transitionData.myToState.myID == toStateID) {\r\n                transitionsToState.push(transitionData);\r\n            }\r\n        }\r\n\r\n        return transitionsToState;\r\n    }\r\n\r\n    removeState(stateID) {\r\n        if (this.hasState(stateID)) {\r\n            this._myStates.delete(stateID);\r\n            this._myTransitions.delete(stateID);\r\n\r\n            for (let transitionsFromState of this._myTransitions.values()) {\r\n                let toDelete = [];\r\n                for (let [transitionID, transitionData] of transitionsFromState.entries()) {\r\n                    if (transitionData.myToState.myID == stateID) {\r\n                        toDelete.push(transitionID);\r\n                    }\r\n                }\r\n\r\n                for (let transitionID of toDelete) {\r\n                    transitionsFromState.delete(transitionID);\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    removeTransitionFromState(fromStateID, transitionID) {\r\n        let fromTransitions = this._getTransitionsFromState(fromStateID);\r\n        if (fromTransitions) {\r\n            return fromTransitions.delete(transitionID);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    hasState(stateID) {\r\n        return this._myStates.has(stateID);\r\n    }\r\n\r\n    hasTransitionFromState(fromStateID, transitionID) {\r\n        let transitions = this.getTransitionsFromState(fromStateID);\r\n\r\n        let transitionIndex = transitions.findIndex(function (transition) {\r\n            return transition.myID == transitionID;\r\n        });\r\n\r\n        return transitionIndex >= 0;\r\n    }\r\n\r\n    hasTransitionFromStateToState(fromStateID, toStateID, transitionID = null) {\r\n        let transitions = this.getTransitionsFromStateToState(fromStateID, toStateID);\r\n\r\n        let hasTransition = false;\r\n        if (transitionID) {\r\n            let transitionIndex = transitions.findIndex(function (transition) {\r\n                return transition.myID == transitionID;\r\n            });\r\n\r\n            hasTransition = transitionIndex >= 0;\r\n        } else {\r\n            hasTransition = transitions.length > 0;\r\n        }\r\n\r\n        return hasTransition;\r\n    }\r\n\r\n    setPerformMode(performMode) {\r\n        this._myPerformMode = performMode;\r\n    }\r\n\r\n    getPerformMode() {\r\n        return this._myPerformMode;\r\n    }\r\n\r\n    setPerformDelayedMode(performDelayedMode) {\r\n        this._myPerformDelayedMode = performDelayedMode;\r\n    }\r\n\r\n    getPerformDelayedMode() {\r\n        return this._myPerformDelayedMode;\r\n    }\r\n\r\n    hasPendingPerforms() {\r\n        return this._myPendingPerforms.length > 0;\r\n    }\r\n\r\n    getPendingPerforms() {\r\n        return this._myPendingPerforms.slice(0);\r\n    }\r\n\r\n    clone(deepClone = false) {\r\n        if (!this.isCloneable(deepClone)) {\r\n            return null;\r\n        }\r\n\r\n        let cloneFSM = new PP.FSM();\r\n\r\n        cloneFSM._myDebugLogActive = this._myDebugLogActive;\r\n        cloneFSM._myDebugShowDelayedInfo = this._myDebugShowDelayedInfo;\r\n        cloneFSM._myDebugLogName = this._myDebugLogName.slice(0);\r\n\r\n        cloneFSM._myPerformMode = this._myPerformMode;\r\n        cloneFSM._myPerformDelayedMode = this._myPerformDelayedMode;\r\n        cloneFSM._myPendingPerforms = this._myPendingPerforms.slice(0);\r\n\r\n        for (let entry of this._myStates.entries()) {\r\n            let stateData = null;\r\n\r\n            if (deepClone) {\r\n                stateData = new PP.StateData(entry[1].myID, entry[1].myObject.clone());\r\n            } else {\r\n                stateData = new PP.StateData(entry[1].myID, entry[1].myObject);\r\n            }\r\n\r\n            cloneFSM._myStates.set(stateData.myID, stateData);\r\n        }\r\n\r\n        for (let entry of this._myTransitions.entries()) {\r\n            let transitionsFromState = new Map();\r\n            cloneFSM._myTransitions.set(entry[0], transitionsFromState);\r\n\r\n            for (let transitonEntry of entry[1].entries()) {\r\n                let transitionData = null;\r\n\r\n                let fromState = cloneFSM.getState(transitonEntry[1].myFromState.myID);\r\n                let toState = cloneFSM.getState(transitonEntry[1].myToState.myID);\r\n\r\n                if (deepClone) {\r\n                    transitionData = new PP.TransitionData(transitonEntry[1].myID, fromState, toState, transitonEntry[1].myObject.clone(), transitonEntry[1].mySkipStateFunction);\r\n                } else {\r\n                    transitionData = new PP.TransitionData(transitonEntry[1].myID, fromState, toState, transitonEntry[1].myObject, transitonEntry[1].mySkipStateFunction);\r\n                }\r\n\r\n                transitionsFromState.set(transitionData.myID, transitionData);\r\n            }\r\n        }\r\n\r\n        if (this._myCurrentStateData) {\r\n            cloneFSM._myCurrentStateData = cloneFSM.getState(this._myCurrentStateData.myID);\r\n        }\r\n\r\n        return cloneFSM;\r\n    }\r\n\r\n    isCloneable(deepClone = false) {\r\n        if (!deepClone) {\r\n            return true;\r\n        }\r\n\r\n        let isDeepCloneable = true;\r\n\r\n        for (let entry of this._myStates.entries()) {\r\n            isDeepCloneable = isDeepCloneable && entry[1].myObject.clone != null;\r\n        }\r\n\r\n        for (let entry of this._myTransitions.entries()) {\r\n            for (let transitonEntry of entry[1].entries()) {\r\n                isDeepCloneable = isDeepCloneable && transitonEntry[1].myObject.clone != null;\r\n            }\r\n        }\r\n\r\n        return isDeepCloneable;\r\n    }\r\n\r\n    setDebugLogActive(active, debugLogName = null, showDelayedInfo = false) {\r\n        this._myDebugLogActive = active;\r\n        this._myDebugShowDelayedInfo = showDelayedInfo;\r\n        if (debugLogName) {\r\n            this._myDebugLogName = \"FSM: \".concat(debugLogName);\r\n        }\r\n    }\r\n\r\n    registerInitEventListener(callbackID, callback) {\r\n        this._myInitCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterInitEventListener(callbackID) {\r\n        this._myInitCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerInitIDEventListener(initStateID, callbackID, callback) {\r\n        let initStateIDCallbacks = this._myInitIDCallbacks.get(initStateID);\r\n        if (initStateIDCallbacks == null) {\r\n            this._myInitIDCallbacks.set(initStateID, new Map());\r\n            initStateIDCallbacks = this._myInitIDCallbacks.get(initStateID);\r\n        }\r\n\r\n        initStateIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterInitIDEventListener(initStateID, callbackID) {\r\n        let initStateIDCallbacks = this._myInitIDCallbacks.get(initStateID);\r\n        if (initStateIDCallbacks != null) {\r\n            initStateIDCallbacks.delete(callbackID);\r\n\r\n            if (initStateIDCallbacks.size <= 0) {\r\n                this._myInitIDCallbacks.delete(initStateID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerTransitionEventListener(callbackID, callback) {\r\n        this._myTransitionCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterTransitionEventListener(callbackID) {\r\n        this._myTransitionCallbacks.delete(callbackID);\r\n    }\r\n\r\n    //the fsm IDs can be null, that means that the callback is called whenever only the valid IDs match\r\n    //this let you register to all the transitions with a specific ID and from of a specific state but to every state (toStateID == null)\r\n    registerTransitionIDEventListener(fromStateID, toStateID, transitionID, callbackID, callback) {\r\n        let internalTransitionIDCallbacks = null;\r\n        for (let value of this._myTransitionIDCallbacks) {\r\n            if (value[0] == fromStateID && value[1] == toStateID && value[2] == transitionID) {\r\n                internalTransitionIDCallbacks = value[3];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (internalTransitionIDCallbacks == null) {\r\n            let transitionIDCallbacks = [];\r\n            transitionIDCallbacks[0] = fromStateID;\r\n            transitionIDCallbacks[1] = toStateID;\r\n            transitionIDCallbacks[2] = transitionID;\r\n            transitionIDCallbacks[3] = new Map();\r\n\r\n            internalTransitionIDCallbacks = transitionIDCallbacks[3];\r\n\r\n            this._myTransitionIDCallbacks.push(transitionIDCallbacks);\r\n        }\r\n\r\n        internalTransitionIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterTransitionIDEventListener(fromStateID, toStateID, transitionID, callbackID) {\r\n        let internalTransitionIDCallbacks = null;\r\n        for (let value of this._myTransitionIDCallbacks) {\r\n            if (value[0] == fromStateID && value[1] == toStateID && value[2] == transitionID) {\r\n                internalTransitionIDCallbacks = value[3];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (internalTransitionIDCallbacks != null) {\r\n            internalTransitionIDCallbacks.delete(callbackID);\r\n\r\n            if (internalTransitionIDCallbacks.size <= 0) {\r\n                this._myTransitionIDCallbacks.pp_remove(element => element[0] == fromStateID && element[1] == toStateID && element[2] == transitionID);\r\n            }\r\n        }\r\n    }\r\n\r\n    _perform(transitionID, performMode, ...args) {\r\n        if (this.isPerformingTransition()) {\r\n            let currentlyPerformedTransition = this.getCurrentlyPerformedTransition();\r\n            let consoleArguments = [this._myDebugLogName, \"- Trying to perform:\", transitionID];\r\n            if (this._myDebugShowDelayedInfo) {\r\n                consoleArguments.push(performMode == PP.PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n            }\r\n            consoleArguments.push(\"- But another transition is currently being performed -\", currentlyPerformedTransition.myID);\r\n            console.warn(...consoleArguments);\r\n\r\n            return false;\r\n        }\r\n\r\n        if (this._myCurrentStateData) {\r\n            if (this.canPerform(transitionID)) {\r\n                let transitions = this._myTransitions.get(this._myCurrentStateData.myID);\r\n                let transitionToPerform = transitions.get(transitionID);\r\n\r\n                this._myCurrentlyPerformedTransition = transitionToPerform;\r\n\r\n                let fromState = this._myCurrentStateData;\r\n                let toState = this._myStates.get(transitionToPerform.myToState.myID);\r\n\r\n                if (this._myDebugLogActive) {\r\n                    let consoleArguments = [this._myDebugLogName, \"- From:\", fromState.myID, \"- To:\", toState.myID, \"- With:\", transitionID];\r\n                    if (this._myDebugShowDelayedInfo) {\r\n                        consoleArguments.push(performMode == PP.PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n                    }\r\n                    console.log(...consoleArguments);\r\n                }\r\n\r\n                if (transitionToPerform.mySkipStateFunction != PP.SkipStateFunction.END && transitionToPerform.mySkipStateFunction != PP.SkipStateFunction.BOTH &&\r\n                    fromState.myObject && fromState.myObject.end) {\r\n                    fromState.myObject.end(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                if (transitionToPerform.myObject && transitionToPerform.myObject.perform) {\r\n                    transitionToPerform.myObject.perform(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                if (transitionToPerform.mySkipStateFunction != PP.SkipStateFunction.START && transitionToPerform.mySkipStateFunction != PP.SkipStateFunction.BOTH &&\r\n                    toState.myObject && toState.myObject.start) {\r\n                    toState.myObject.start(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                this._myCurrentStateData = transitionToPerform.myToState;\r\n\r\n                if (this._myTransitionCallbacks.size > 0) {\r\n                    this._myTransitionCallbacks.forEach(function (callback) { callback(this, fromState, toState, transitionToPerform, performMode, ...args); }.bind(this));\r\n                }\r\n\r\n                if (this._myTransitionIDCallbacks.length > 0) {\r\n                    let internalTransitionIDCallbacks = [];\r\n                    for (let value of this._myTransitionIDCallbacks) {\r\n                        if ((value[0] == null || value[0] == fromState.myID) &&\r\n                            (value[1] == null || value[1] == toState.myID) &&\r\n                            (value[2] == null || value[2] == transitionToPerform.myID)) {\r\n                            internalTransitionIDCallbacks.push(value[3]);\r\n                        }\r\n                    }\r\n\r\n                    for (let callbacks of this.internalTransitionIDCallbacks) {\r\n                        callbacks.forEach(function (callback) { callback(this, fromState, toState, transitionToPerform, performMode, ...args); }.bind(this));\r\n                    }\r\n                }\r\n\r\n                this._myCurrentlyPerformedTransition = null;\r\n\r\n                return true;\r\n            } else if (this._myDebugLogActive) {\r\n                let consoleArguments = [this._myDebugLogName, \"- No Transition:\", transitionID, \"- From:\", this._myCurrentStateData.myID];\r\n                if (this._myDebugShowDelayedInfo) {\r\n                    consoleArguments.push(performMode == PP.PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n                }\r\n                console.warn(...consoleArguments);\r\n            }\r\n        } else if (this._myDebugLogActive) {\r\n            let consoleArguments = [this._myDebugLogName, \"- FSM not initialized yet\"];\r\n            if (this._myDebugShowDelayedInfo) {\r\n                consoleArguments.push(performMode == PP.PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n            }\r\n            console.warn(...consoleArguments);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _getTransitionsFromState(fromStateID) {\r\n        return this._myTransitions.get(fromStateID);\r\n    }\r\n};", "/*\r\n    There is no need to inherit from this state, especially since states can be only functions\r\n    It's more like an example of what is needed\r\n    \r\n    If you don't specify some functions the fsm will just skip them\r\n    Or consider them always valid\r\n\r\n    The param state is of type PP.StateData and can be used to retrieve the stateID and other data\r\n    The param transition is of type PP.TransitionData and can be used to retrieve the transitionID, the from and to states and other data\r\n*/\r\n\r\nPP.State = class State {\r\n\r\n    //Called every frame if this is the current state\r\n    //You can retrieve this state data by calling fsm.getCurrentState()\r\n    update(dt, fsm, ...args) {\r\n    }\r\n\r\n    //Called when the fsm is started with this init state if no init transition object is specified or it does not have a performInit function\r\n    //Since the state is set as the current one after the init, you can't use fsm.getCurrentState() to get it, so it is forwarded as a param if needed\r\n    init(fsm, state, ...args) {\r\n    }\r\n\r\n    //Called when entering this state if no transition object is specified or it does not have a perform function\r\n    //You can get this state data by accesing to the to state data inside the transition\r\n    start(fsm, transition, ...args) {\r\n    }\r\n\r\n    //Called when exiting this state if no transition function is specified\r\n    //You can get this state data by accesing to the from state data inside the transition\r\n    end(fsm, transition, ...args) {\r\n    }\r\n\r\n};", "/*\r\n    There is no need to inherit from this transition, especially since states can be only transitions\r\n    It's more like an example of what is needed\r\n    \r\n    The param transition (forwarded at the end every function) is of type PP.TransitionData and can be used to retrieve the transitionID and other data\r\n    The initState param is of type PP.StateData and can be used to retrieve the stateID and other data\r\n*/\r\n\r\nPP.Transition = class Transition {\r\n\r\n    //Called if this is used as an init transition for the fsm\r\n    performInit(fsm, initState, ...args) {\r\n\r\n    }\r\n\r\n    //Called when performing a transition\r\n    //You can find the from and to states inside the transition params\r\n    perform(fsm, transition, ...args) {\r\n    }\r\n\r\n};", "PP.TimerState = class TimerState extends PP.State {\r\n    constructor(duration = 0, transitionToPerformOnEnd = null, ...transitionArgs) {\r\n        super();\r\n\r\n        this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n        this._myTransitionArgs = transitionArgs;\r\n\r\n        this._myTimer = new PP.Timer(duration, false);\r\n    }\r\n\r\n    setDuration(duration) {\r\n        this._myTimer.setDuration(duration);\r\n    }\r\n\r\n    setTransitionToPerformOnEnd(transitionToPerformOnEnd, ...transitionArgs) {\r\n        this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n        this._myTransitionArgs = transitionArgs;\r\n    }\r\n\r\n    onEnd(callback, id = null) {\r\n        this._myTimer.onEnd(callback, id);\r\n    }\r\n\r\n    unregisterOnEnd(id = null) {\r\n        this._myTimer.unregisterOnEnd(id);\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myTimer.update(dt);\r\n        if (this._myTimer.isDone()) {\r\n            if (this._myTransitionToPerformOnEnd != null) {\r\n                fsm.perform(this._myTransitionToPerformOnEnd, ...this._myTransitionArgs);\r\n            }\r\n        }\r\n    }\r\n\r\n    start(fsm, transition, duration = null, transitionToPerformOnEnd = null, ...transitionArgs) {\r\n        this._myTimer.start(duration);\r\n        if (transitionToPerformOnEnd != null) {\r\n            this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n            this._myTransitionArgs = transitionArgs;\r\n        }\r\n    }\r\n\r\n    init(fsm, state, duration = null, transitionToPerformOnEnd = null, ...transitionArgs) {\r\n        this._myTimer.start(duration);\r\n        if (transitionToPerformOnEnd != null) {\r\n            this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n            this._myTransitionArgs = transitionArgs;\r\n        }\r\n    }\r\n};", "PP.ColorUtils = {\r\n    //RGB is in [0,1], alpha is not changed\r\n    rgbToHsv: function (rgb) {\r\n        let hsv = rgb.pp_clone();\r\n\r\n        let r = rgb[0];\r\n        let g = rgb[1];\r\n        let b = rgb[2];\r\n\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n            d = max - min,\r\n            h,\r\n            s = (max === 0 ? 0 : d / max),\r\n            v = max;\r\n\r\n        switch (max) {\r\n            case min: h = 0; break;\r\n            case r: h = (g - b) + d * (g < b ? 6 : 0); h /= 6 * d; break;\r\n            case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n            case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n        }\r\n\r\n        hsv[0] = h;\r\n        hsv[1] = s;\r\n        hsv[2] = v;\r\n\r\n        return hsv;\r\n    },\r\n    //alpha is not changed\r\n    hsvToRgb: function (hsv) {\r\n        let rgb = hsv.pp_clone();\r\n\r\n        let h = hsv[0];\r\n        let s = hsv[1];\r\n        let v = hsv[2];\r\n\r\n        let r, g, b, i, f, p, q, t;\r\n        i = Math.floor(h * 6);\r\n        f = h * 6 - i;\r\n        p = v * (1 - s);\r\n        q = v * (1 - f * s);\r\n        t = v * (1 - (1 - f) * s);\r\n\r\n        switch (i % 6) {\r\n            case 0: r = v, g = t, b = p; break;\r\n            case 1: r = q, g = v, b = p; break;\r\n            case 2: r = p, g = v, b = t; break;\r\n            case 3: r = p, g = q, b = v; break;\r\n            case 4: r = t, g = p, b = v; break;\r\n            case 5: r = v, g = p, b = q; break;\r\n        }\r\n\r\n        rgb[0] = r;\r\n        rgb[1] = g;\r\n        rgb[2] = b;\r\n\r\n        return rgb;\r\n    },\r\n    rgbCodeToHuman(rgb) {\r\n        return PP.ColorUtils.color1To255(rgb);\r\n    },\r\n    rgbHumanToCode(rgb) {\r\n        return PP.ColorUtils.color255To1(rgb);\r\n    },\r\n    hsvCodeToHuman(hsv) {\r\n        return PP.ColorUtils.color1To255(hsv);\r\n    },\r\n    hsvHumanToCode(hsv) {\r\n        return PP.ColorUtils.color255To1(hsv);\r\n    },\r\n    color255To1(color) {\r\n        let result = color.pp_clone();\r\n\r\n        for (let i = 0; i < result.length; i++) {\r\n            result[i] /= 255;\r\n            result[i] = Math.pp_clamp(result[i], 0, 1);\r\n        }\r\n\r\n        return result;\r\n    },\r\n    color1To255(color) {\r\n        let result = color.pp_clone();\r\n\r\n        for (let i = 0; i < result.length; i++) {\r\n            result[i] = Math.round(result[i] * 255);\r\n            result[i] = Math.pp_clamp(result[i], 0, 255);\r\n        }\r\n\r\n        return result;\r\n    },\r\n};", "PP.MaterialUtils = {\r\n    setAlpha: function () {\r\n        let color = PP.vec4_create();\r\n        return function setAlpha(material, alpha) {\r\n            if (material.color != null) {\r\n                color.vec4_copy(material.color);\r\n                color[3] = alpha;\r\n                material.color = color;\r\n            }\r\n\r\n            if (material.diffuseColor != null) {\r\n                color.vec4_copy(material.diffuseColor);\r\n                color[3] = alpha;\r\n                material.diffuseColor = color;\r\n            }\r\n\r\n            if (material.ambientColor != null) {\r\n                color.vec4_copy(material.ambientColor);\r\n                color[3] = alpha;\r\n                material.ambientColor = color;\r\n            }\r\n        };\r\n    }(),\r\n    setObjectAlpha: function (object, alpha) {\r\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\r\n\r\n        for (let meshComponent of meshComponents) {\r\n            if (meshComponent.material != null) {\r\n                PP.MaterialUtils.setAlpha(meshComponent.material, alpha);\r\n            }\r\n        }\r\n    },\r\n    setObjectMaterial: function (object, material, cloneMaterial = false) {\r\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\r\n\r\n        for (let meshComponent of meshComponents) {\r\n            if (cloneMaterial) {\r\n                meshComponent.material = material.clone();\r\n            } else {\r\n                meshComponent.material = material;\r\n            }\r\n        }\r\n    },\r\n    setObjectClonedMaterials: function (object) {\r\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\r\n\r\n        for (let meshComponent of meshComponents) {\r\n            meshComponent.material = meshComponent.material.clone();\r\n        }\r\n    },\r\n    setObjectSpecularColor: function (object, color) {\r\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\r\n\r\n        for (let meshComponent of meshComponents) {\r\n            if (meshComponent.material.specularColor != null) {\r\n                meshComponent.material.specularColor = color;\r\n            }\r\n        }\r\n    },\r\n    setObjectFogColor: function (object, color) {\r\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\r\n\r\n        for (let meshComponent of meshComponents) {\r\n            if (meshComponent.material.fogColor != null) {\r\n                meshComponent.material.fogColor = color;\r\n            }\r\n        }\r\n    },\r\n};", "PP.MeshCreationVertexParams = class MeshCreationVertexParams {\r\n    constructor() {\r\n        this.myPosition = null;             // vec3\r\n        this.myTextureCoordinates = null;   // vec2\r\n        this.myNormal = null;               // vec3\r\n        this.myColor = null;                // vec4\r\n    }\r\n};\r\n\r\nPP.MeshCreationTriangleParams = class MeshCreationTriangleParams {\r\n    constructor() {\r\n        this.myIndexes = new Uint32Array(3);\r\n    }\r\n};\r\n\r\nPP.MeshCreationParams = class MeshCreationParams {\r\n    constructor() {\r\n        this.myVertexes = [];\r\n        this.myTriangles = [];\r\n    }\r\n};\r\n\r\nPP.MeshUtils = {\r\n    createPlaneMesh: function () {\r\n        let vertexCount = 4;\r\n\r\n        let meshParams = new PP.MeshCreationParams();\r\n\r\n        for (let i = 0; i < vertexCount; ++i) {\r\n            let vertexParams = new PP.MeshCreationVertexParams();\r\n\r\n            vertexParams.myPosition = new PP.vec3_create();\r\n            vertexParams.myPosition[0] = -1 + (i & 1) * 2;\r\n            vertexParams.myPosition[1] = -1 + ((i & 2) >> 1) * 2; // this is a quick way to have positions (-1,-1) (1,-1) (1,-1) (1,1)\r\n            vertexParams.myPosition[2] = 0;\r\n\r\n            vertexParams.myTextureCoordinates = new PP.vec2_create();\r\n            vertexParams.myTextureCoordinates[0] = (i & 1);\r\n            vertexParams.myTextureCoordinates[1] = ((i & 2) >> 1);\r\n\r\n            vertexParams.myNormal = new PP.vec3_create();\r\n            vertexParams.myNormal[0] = 0;\r\n            vertexParams.myNormal[1] = 0;\r\n            vertexParams.myNormal[2] = 1;\r\n\r\n            meshParams.myVertexes.push(vertexParams);\r\n        }\r\n\r\n        let firstTriangle = new PP.MeshCreationTriangleParams();\r\n        firstTriangle.myIndexes[0] = 0;\r\n        firstTriangle.myIndexes[1] = 1;\r\n        firstTriangle.myIndexes[2] = 2;\r\n\r\n        let secondTriangle = new PP.MeshCreationTriangleParams();\r\n        secondTriangle.myIndexes[0] = 2;\r\n        secondTriangle.myIndexes[1] = 1;\r\n        secondTriangle.myIndexes[2] = 3;\r\n\r\n        meshParams.myTriangles.push(firstTriangle);\r\n        meshParams.myTriangles.push(secondTriangle);\r\n\r\n        let mesh = PP.MeshUtils.createMesh(meshParams);\r\n\r\n        return mesh;\r\n    },\r\n    createMesh: function (meshCreationParams) {\r\n        let indexData = [];\r\n        for (let triangle of meshCreationParams.myTriangles) {\r\n            indexData.push(triangle.myIndexes[0]);\r\n            indexData.push(triangle.myIndexes[1]);\r\n            indexData.push(triangle.myIndexes[2]);\r\n        }\r\n\r\n        let indexDataUnsignedInt = new Uint32Array(indexData.length);\r\n        indexDataUnsignedInt.pp_copy(indexData);\r\n\r\n        let vertexCount = meshCreationParams.myVertexes.length;\r\n        let mesh = new WL.Mesh({\r\n            vertexCount: vertexCount,\r\n            indexData: indexDataUnsignedInt,\r\n            indexType: WL.MeshIndexType.UnsignedInt,\r\n        });\r\n\r\n        let positionAttribute = null;\r\n        let textureCoordinatesAttribute = null;\r\n        let normalAttribute = null;\r\n        let colorAttribute = null;\r\n\r\n        try {\r\n            positionAttribute = mesh.attribute(WL.MeshAttribute.Position);\r\n        } catch (error) {\r\n            positionAttribute = null;\r\n        }\r\n\r\n        try {\r\n            textureCoordinatesAttribute = mesh.attribute(WL.MeshAttribute.TextureCoordinate);\r\n        } catch (error) {\r\n            textureCoordinatesAttribute = null;\r\n        }\r\n\r\n        try {\r\n            normalAttribute = mesh.attribute(WL.MeshAttribute.Normal);\r\n        } catch (error) {\r\n            normalAttribute = null;\r\n        }\r\n\r\n        try {\r\n            colorAttribute = mesh.attribute(WL.MeshAttribute.Color);\r\n        } catch (error) {\r\n            colorAttribute = null;\r\n        }\r\n\r\n        for (let i = 0; i < meshCreationParams.myVertexes.length; i++) {\r\n            let vertex = meshCreationParams.myVertexes[i];\r\n            if (positionAttribute != null && vertex.myPosition) {\r\n                positionAttribute.set(i, vertex.myPosition);\r\n            }\r\n            if (textureCoordinatesAttribute != null && vertex.myTextureCoordinates) {\r\n                textureCoordinatesAttribute.set(i, vertex.myTextureCoordinates);\r\n            }\r\n            if (normalAttribute != null && vertex.myNormal) {\r\n                normalAttribute.set(i, vertex.myNormal);\r\n            }\r\n            if (colorAttribute != null && vertex.myColor) {\r\n                colorAttribute.set(i, vertex.myColor);\r\n            }\r\n        }\r\n\r\n        return mesh;\r\n    },\r\n    cloneMesh: function () {\r\n        let position = PP.vec3_create();\r\n        let textureCoordinates = PP.vec2_create();\r\n        let normal = PP.vec3_create();\r\n        let color = PP.vec4_create();\r\n\r\n        return function cloneMesh(mesh) {\r\n            if (mesh == null) {\r\n                return null;\r\n            }\r\n\r\n            let clonedIndexData = new Uint32Array(mesh.indexData.length);\r\n            for (let i = 0; i < mesh.indexData.length; i++) {\r\n                clonedIndexData[i] = mesh.indexData[i];\r\n            }\r\n\r\n            let clonedMesh = new WL.Mesh({\r\n                vertexCount: mesh.vertexCount,\r\n                indexData: clonedIndexData,\r\n                indexType: WL.MeshIndexType.UnsignedInt,\r\n            });\r\n\r\n            let positionAttribute = null;\r\n            let textureCoordinatesAttribute = null;\r\n            let normalAttribute = null;\r\n            let colorAttribute = null;\r\n\r\n            let clonedPositionAttribute = null;\r\n            let clonedTextureCoordinatesAttribute = null;\r\n            let clonedNormalAttribute = null;\r\n            let clonedColorAttribute = null;\r\n\r\n\r\n            try {\r\n                positionAttribute = mesh.attribute(WL.MeshAttribute.Position);\r\n                clonedPositionAttribute = clonedMesh.attribute(WL.MeshAttribute.Position);\r\n            } catch (error) {\r\n                positionAttribute = null;\r\n                clonedPositionAttribute = null;\r\n            }\r\n\r\n            try {\r\n                textureCoordinatesAttribute = mesh.attribute(WL.MeshAttribute.TextureCoordinate);\r\n                clonedTextureCoordinatesAttribute = clonedMesh.attribute(WL.MeshAttribute.TextureCoordinate);\r\n            } catch (error) {\r\n                textureCoordinatesAttribute = null;\r\n                clonedTextureCoordinatesAttribute = null;\r\n            }\r\n\r\n            try {\r\n                normalAttribute = mesh.attribute(WL.MeshAttribute.Normal);\r\n                clonedNormalAttribute = clonedMesh.attribute(WL.MeshAttribute.Normal);\r\n            } catch (error) {\r\n                normalAttribute = null;\r\n                clonedNormalAttribute = null;\r\n            }\r\n\r\n            try {\r\n                colorAttribute = mesh.attribute(WL.MeshAttribute.Color);\r\n                clonedColorAttribute = clonedMesh.attribute(WL.MeshAttribute.Color);\r\n            } catch (error) {\r\n                colorAttribute = null;\r\n                clonedColorAttribute = null;\r\n            }\r\n\r\n            for (let i = 0; i < mesh.vertexCount; i++) {\r\n                if (positionAttribute != null && clonedPositionAttribute != null) {\r\n                    clonedPositionAttribute.set(i, positionAttribute.get(i, position));\r\n                }\r\n                if (textureCoordinatesAttribute != null && clonedTextureCoordinatesAttribute != null) {\r\n                    clonedTextureCoordinatesAttribute.set(i, textureCoordinatesAttribute.get(i, textureCoordinates));\r\n                }\r\n                if (normalAttribute != null && clonedNormalAttribute != null) {\r\n                    clonedNormalAttribute.set(i, normalAttribute.get(i, normal));\r\n                }\r\n                if (colorAttribute != null && clonedColorAttribute != null) {\r\n                    clonedColorAttribute.set(i, colorAttribute.get(i, color));\r\n                }\r\n            }\r\n\r\n            return clonedMesh;\r\n        };\r\n    }(),\r\n    invertMesh: function () {\r\n        let position = PP.vec3_create();\r\n        let textureCoordinates = PP.vec2_create();\r\n        let normal = PP.vec3_create();\r\n        let color = PP.vec4_create();\r\n\r\n        return function invertMesh(mesh) {\r\n            if (mesh == null) {\r\n                return null;\r\n            }\r\n\r\n            let invertedIndexData = new Uint32Array(mesh.indexData.length);\r\n            for (let i = 0; i < mesh.indexData.length / 3; i++) {\r\n                invertedIndexData[i * 3 + 0] = mesh.indexData[i * 3 + 2];\r\n                invertedIndexData[i * 3 + 1] = mesh.indexData[i * 3 + 1];\r\n                invertedIndexData[i * 3 + 2] = mesh.indexData[i * 3 + 0];\r\n            }\r\n\r\n            let invertedMesh = new WL.Mesh({\r\n                vertexCount: mesh.vertexCount,\r\n                indexData: invertedIndexData,\r\n                indexType: WL.MeshIndexType.UnsignedInt,\r\n            });\r\n\r\n            let positionAttribute = null;\r\n            let textureCoordinatesAttribute = null;\r\n            let normalAttribute = null;\r\n            let colorAttribute = null;\r\n\r\n            let invertedPositionAttribute = null;\r\n            let invertedTextureCoordinatesAttribute = null;\r\n            let invertedNormalAttribute = null;\r\n            let invertedColorAttribute = null;\r\n\r\n\r\n            try {\r\n                positionAttribute = mesh.attribute(WL.MeshAttribute.Position);\r\n                invertedPositionAttribute = invertedMesh.attribute(WL.MeshAttribute.Position);\r\n            } catch (error) {\r\n                positionAttribute = null;\r\n                invertedPositionAttribute = null;\r\n            }\r\n\r\n            try {\r\n                textureCoordinatesAttribute = mesh.attribute(WL.MeshAttribute.TextureCoordinate);\r\n                invertedTextureCoordinatesAttribute = invertedMesh.attribute(WL.MeshAttribute.TextureCoordinate);\r\n            } catch (error) {\r\n                textureCoordinatesAttribute = null;\r\n                invertedTextureCoordinatesAttribute = null;\r\n            }\r\n\r\n            try {\r\n                normalAttribute = mesh.attribute(WL.MeshAttribute.Normal);\r\n                invertedNormalAttribute = invertedMesh.attribute(WL.MeshAttribute.Normal);\r\n            } catch (error) {\r\n                normalAttribute = null;\r\n                invertedNormalAttribute = null;\r\n            }\r\n\r\n            try {\r\n                colorAttribute = mesh.attribute(WL.MeshAttribute.Color);\r\n                invertedColorAttribute = invertedMesh.attribute(WL.MeshAttribute.Color);\r\n            } catch (error) {\r\n                colorAttribute = null;\r\n                invertedColorAttribute = null;\r\n            }\r\n\r\n            for (let i = 0; i < mesh.vertexCount; i++) {\r\n                if (positionAttribute != null && invertedPositionAttribute != null) {\r\n                    invertedPositionAttribute.set(i, positionAttribute.get(i, position));\r\n                }\r\n                if (textureCoordinatesAttribute != null && invertedTextureCoordinatesAttribute != null) {\r\n                    invertedTextureCoordinatesAttribute.set(i, textureCoordinatesAttribute.get(i, textureCoordinates));\r\n                }\r\n                if (normalAttribute != null && invertedNormalAttribute != null) {\r\n                    normalAttribute.get(i, normal)\r\n                    normal.vec3_negate(normal);\r\n                    invertedNormalAttribute.set(i, normal);\r\n                }\r\n                if (colorAttribute != null && invertedColorAttribute != null) {\r\n                    invertedColorAttribute.set(i, colorAttribute.get(i, color));\r\n                }\r\n            }\r\n\r\n            return invertedMesh;\r\n        };\r\n    }()\r\n};", "PP.SaveUtils = {\r\n    save: function (id, value) {\r\n        if (value != null) {\r\n            localStorage.setItem(id, value);\r\n        }\r\n    },\r\n    has: function (id) {\r\n        return PP.SaveUtils.loadString(id, null) != null;\r\n    },\r\n    delete: function (id) {\r\n        return localStorage.removeItem(id);\r\n    },\r\n    clear: function () {\r\n        return localStorage.clear();\r\n    },\r\n    load: function (id, defaultValue = null) {\r\n        return PP.SaveUtils.loadString(id, defaultValue);\r\n    },\r\n    loadString: function (id, defaultValue = null) {\r\n        let item = localStorage.getItem(id);\r\n\r\n        if (item == null) {\r\n            item = defaultValue;\r\n        }\r\n\r\n        return item;\r\n    },\r\n    loadNumber: function (id, defaultValue = null) {\r\n        let item = PP.SaveUtils.loadString(id);\r\n\r\n        if (item != null) {\r\n            return Number(item);\r\n        }\r\n\r\n        return defaultValue;\r\n    },\r\n    loadBool: function (id, defaultValue = null) {\r\n        let item = PP.SaveUtils.loadString(id);\r\n\r\n        if (item == \"true\") {\r\n            return true;\r\n        } else if (item == \"false\") {\r\n            return false;\r\n        }\r\n\r\n        return defaultValue;\r\n    }\r\n};", "PP.TextUtils = {\r\n    setClonedMaterials: function (object) {\r\n        let textComponents = object.pp_getComponentsHierarchy(\"text\");\r\n\r\n        for (let textComponent of textComponents) {\r\n            textComponent.material = textComponent.material.clone();\r\n        }\r\n    },\r\n};", "PP.XRUtils = {\r\n    isDeviceEmulated: function () {\r\n        let isEmulated = ('CustomWebXRPolyfill' in window);\r\n        return isEmulated;\r\n    },\r\n    isSessionActive: function () {\r\n        return WL.xrSession != null;\r\n    },\r\n    isReferenceSpaceLocalFloor: function () {\r\n        return ![\"local\", \"viewer\"].includes(WebXR.refSpace);\r\n    }\r\n};", "PP.BrowserUtils = {\r\n    isMobile: function () {\r\n        return /Mobi/i.test(window.navigator.userAgent);\r\n    },\r\n    isDesktop: function () {\r\n        return !PP.BrowserUtils.isMobile();\r\n    },\r\n};", "PP.PhysicsUtils = {\r\n    _myLayerFlagsAmount: 8,\r\n    _myLayerFlagsNames: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\r\n    setLayerFlagsAmount: function (layerFlagsAmount) {\r\n        PP.PhysicsUtils._myLayerFlagsAmount = layerFlagsAmount;\r\n    },\r\n    setLayerFlagsNames: function (layerFlagsNames) {\r\n        PP.PhysicsUtils._myLayerFlagsNames = layerFlagsNames;\r\n    },\r\n    getLayerFlagsAmount: function () {\r\n        return PP.PhysicsUtils._myLayerFlagsAmount;\r\n    },\r\n    getLayerFlagsNames: function () {\r\n        return PP.PhysicsUtils._myLayerFlagsNames;\r\n    },\r\n    raycast: function () {\r\n        let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n        return function raycast(raycastSetup, raycastResults = new PP.RaycastResults()) {\r\n            let internalRaycastResults = WL.physics.rayCast(raycastSetup.myOrigin, raycastSetup.myDirection, raycastSetup.myBlockLayerFlags.getMask(), raycastSetup.myDistance);\r\n\r\n            raycastResults.myRaycastSetup = raycastSetup;\r\n\r\n            let currentValidHitIndex = 0;\r\n            let validHitsCount = 0;\r\n\r\n            for (let i = 0; i < internalRaycastResults.hitCount; i++) {\r\n                let isHitValid = true;\r\n\r\n                isHitValid = isHitValid &&\r\n                    (raycastSetup.myObjectsToIgnore.length == 0 ||\r\n                        !raycastSetup.myObjectsToIgnore.pp_hasEqual(internalRaycastResults.objects[i], objectsEqualCallback));\r\n\r\n                let isHitInsideCollision = isHitValid &&\r\n                    internalRaycastResults.distances[i] == 0 &&\r\n                    (raycastSetup.myOrigin.vec3_distance(internalRaycastResults.locations[i]) < 0.00001 &&\r\n                        Math.abs(raycastSetup.myDirection.vec3_angle(internalRaycastResults.normals[i]) - 180) < 0.00001);\r\n\r\n                isHitValid = isHitValid && (!raycastSetup.myIgnoreHitsInsideCollision || !isHitInsideCollision);\r\n\r\n                if (isHitValid) {\r\n                    let hit = null;\r\n\r\n                    if (currentValidHitIndex < raycastResults.myHits.length) {\r\n                        hit = raycastResults.myHits[currentValidHitIndex];\r\n                    } else if (raycastResults._myUnusedHits != null && raycastResults._myUnusedHits.length > 0) {\r\n                        hit = raycastResults._myUnusedHits.pop();\r\n                        raycastResults.myHits.push(hit);\r\n                    } else {\r\n                        hit = new PP.RaycastHit();\r\n                        raycastResults.myHits.push(hit);\r\n                    }\r\n\r\n                    hit.myPosition.vec3_copy(internalRaycastResults.locations[i]);\r\n                    hit.myNormal.vec3_copy(internalRaycastResults.normals[i]);\r\n                    hit.myDistance = internalRaycastResults.distances[i];\r\n                    hit.myObject = internalRaycastResults.objects[i];\r\n                    hit.myIsInsideCollision = isHitInsideCollision;\r\n\r\n                    validHitsCount++;\r\n                    currentValidHitIndex++;\r\n                }\r\n            }\r\n\r\n            if (raycastResults.myHits.length > validHitsCount) {\r\n                if (raycastResults._myUnusedHits == null) {\r\n                    raycastResults._myUnusedHits = [];\r\n                }\r\n\r\n                let hitsToRemove = raycastResults.myHits.length - validHitsCount;\r\n                for (let i = 0; i < hitsToRemove; i++) {\r\n                    raycastResults._myUnusedHits.push(raycastResults.myHits.pop());\r\n                }\r\n            }\r\n\r\n            return raycastResults;\r\n        };\r\n    }()\r\n};", "/*\r\nlet raycastSetup = new PP.RaycastSetup();\r\n\r\nraycastSetup.myOrigin.vec3_copy(origin);\r\nraycastSetup.myDirection.vec3_copy(direction);\r\nraycastSetup.myDistance = distance;\r\nraycastSetup.myBlockLayerFlags.setMask(flags);\r\nraycastSetup.myObjectsToIgnore.pp_clear();\r\nraycastSetup.myIgnoreHitsInsideCollision = false;\r\n\r\nlet raycastResults = PP.PhysicsUtils.raycast(raycastSetup);\r\n*/\r\n\r\nPP.RaycastSetup = class RaycastSetup {\r\n    constructor() {\r\n        this.myOrigin = PP.vec3_create();\r\n        this.myDirection = PP.vec3_create();\r\n        this.myDistance = 0;\r\n\r\n        this.myBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n\r\n        this.myObjectsToIgnore = [];\r\n        this.myIgnoreHitsInsideCollision = false;\r\n    }\r\n\r\n    copy(setup) {\r\n        this.myOrigin.vec3_copy(setup.myOrigin);\r\n        this.myDirection.vec3_copy(setup.myDirection);\r\n        this.myDistance = setup.myDistance;\r\n\r\n        this.myBlockLayerFlags.copy(setup.myBlockLayerFlags);\r\n\r\n        this.myObjectsToIgnore.pp_copy(setup.myObjectsToIgnore);\r\n        this.myIgnoreHitsInsideCollision = setup.myIgnoreHitsInsideCollision;\r\n    }\r\n};\r\n\r\nPP.RaycastResults = class RaycastResult {\r\n    constructor() {\r\n        this.myRaycastSetup = null;\r\n        this.myHits = [];\r\n\r\n        this._myUnusedHits = null;\r\n    }\r\n\r\n    isColliding(ignoreHitsInsideCollision = false) {\r\n        return ignoreHitsInsideCollision ? this.getFirstHitOutsideCollision() != null : this.myHits.length > 0;\r\n    }\r\n\r\n    getFirstHitInsideCollision() {\r\n        let firstHit = null;\r\n\r\n        for (let hit of this.myHits) {\r\n            if (hit.myIsInsideCollision) {\r\n                firstHit = hit;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return firstHit;\r\n    }\r\n\r\n    getFirstHitOutsideCollision() {\r\n        let firstHit = null;\r\n\r\n        for (let hit of this.myHits) {\r\n            if (!hit.myIsInsideCollision) {\r\n                firstHit = hit;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return firstHit;\r\n    }\r\n\r\n    getHitsInsideCollision() {\r\n        let hits = [];\r\n\r\n        for (let hit of this.myHits) {\r\n            if (hit.myIsInsideCollision) {\r\n                hits.push(hit);\r\n            }\r\n        }\r\n\r\n        return hits;\r\n    }\r\n\r\n    getHitsOutsideCollision() {\r\n        let hits = [];\r\n\r\n        for (let hit of this.myHits) {\r\n            if (!hit.myIsInsideCollision) {\r\n                hits.push(hit);\r\n            }\r\n        }\r\n\r\n        return hits;\r\n    }\r\n\r\n    removeHit(hitIndex) {\r\n        let removedHit = this.myHits.pp_removeIndex(hitIndex);\r\n\r\n        if (removedHit != null) {\r\n            if (this._myUnusedHits == null) {\r\n                this._myUnusedHits = [];\r\n            }\r\n\r\n            this._myUnusedHits.push(removedHit);\r\n        }\r\n\r\n        return removedHit;\r\n    }\r\n\r\n    copy(result) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.RaycastHit = class RaycastHit {\r\n    constructor() {\r\n        this.myPosition = PP.vec3_create();\r\n        this.myNormal = PP.vec3_create();\r\n        this.myDistance = 0;\r\n        this.myObject = null;\r\n\r\n        this.myIsInsideCollision = false;\r\n    }\r\n\r\n    isValid() {\r\n        return this.myObject != null;\r\n    }\r\n\r\n    copy(hit) {\r\n        this.myPosition.vec3_copy(hit.myPosition);\r\n        this.myNormal.vec3_copy(hit.myNormal);\r\n        this.myDistance = hit.myDistance;\r\n        this.myObject = hit.myObject;\r\n        this.myIsInsideCollision = hit.myIsInsideCollision;\r\n    }\r\n\r\n    reset() {\r\n        this.myPosition.vec3_zero();\r\n        this.myNormal.vec3_zero();\r\n        this.myDistance = 0;\r\n        this.myObject = null;\r\n        this.myIsInsideCollision = false;\r\n    }\r\n};\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPP.RaycastResults.prototype.copy = function () {\r\n    let copyHitCallback = function (currentElement, elementToCopy) {\r\n        if (currentElement == null) {\r\n            currentElement = new PP.RaycastHit();\r\n        }\r\n\r\n        currentElement.copy(elementToCopy);\r\n\r\n        return currentElement;\r\n    };\r\n\r\n    return function copy(result) {\r\n        if (result.myRaycastSetup == null) {\r\n            this.myRaycastSetup = null;\r\n        } else {\r\n            if (this.myRaycastSetup == null) {\r\n                this.myRaycastSetup = new PP.RaycastSetup();\r\n            }\r\n\r\n            this.myRaycastSetup.copy(result.myRaycastSetup);\r\n        }\r\n\r\n        if (this.myHits.length > result.myHits.length) {\r\n            if (this._myUnusedHits == null) {\r\n                this._myUnusedHits = [];\r\n            }\r\n\r\n            for (let i = 0; i < this.myHits.length - result.myHits.length; i++) {\r\n                this._myUnusedHits.push(this.myHits.pop());\r\n            }\r\n        } else if (this.myHits.length < result.myHits.length) {\r\n            if (this._myUnusedHits != null) {\r\n                let length = Math.min(this._myUnusedHits.length, result.myHits.length - this.myHits.length);\r\n\r\n                for (let i = 0; i < length; i++) {\r\n                    this.myHits.push(this._myUnusedHits.pop());\r\n                }\r\n            }\r\n        }\r\n\r\n        this.myHits.pp_copy(result.myHits, copyHitCallback);\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.RaycastResults.prototype, \"copy\", { enumerable: false });", "PP.PhysicsLayerFlags = class PhysicsLayerFlags {\r\n    constructor() {\r\n        this._myLayerMask = 0;\r\n    }\r\n\r\n    setFlagActive(indexOrName, active) {\r\n        let index = indexOrName;\r\n        if (isNaN(indexOrName)) {\r\n            index = PP.PhysicsUtils.getLayerFlagsNames().pp_findIndexEqual(indexOrName);\r\n        }\r\n\r\n        if (index >= 0 && index < PP.PhysicsUtils.getLayerFlagsAmount()) {\r\n            let mask = 1 << index;\r\n\r\n            if (active) {\r\n                this._myLayerMask = this._myLayerMask | mask;\r\n            } else {\r\n                this._myLayerMask = this._myLayerMask & ~mask;\r\n            }\r\n        }\r\n    }\r\n\r\n    isFlagActive(indexOrName) {\r\n        let index = indexOrName;\r\n        if (isNaN(indexOrName)) {\r\n            index = PP.PhysicsUtils.getLayerFlagsNames().pp_findIndexEqual(indexOrName);\r\n        }\r\n\r\n        let isActive = false;\r\n\r\n        if (index >= 0 && index < PP.PhysicsUtils.getLayerFlagsAmount()) {\r\n            let mask = 1 << index;\r\n            isActive = !!(this._myLayerMask & mask);\r\n        }\r\n\r\n        return isActive;\r\n    }\r\n\r\n    setAllFlagsActive(active) {\r\n        if (!active) {\r\n            this._myLayerMask = 0;\r\n        } else {\r\n            this._myLayerMask = Math.pow(2, PP.PhysicsUtils.getLayerFlagsAmount()) - 1;\r\n        }\r\n    }\r\n\r\n    add(layerFlags) {\r\n        this._myLayerMask = this._myLayerMask | layerFlags.getMask();\r\n    }\r\n\r\n    remove(layerFlags) {\r\n        this._myLayerMask = this._myLayerMask & ~(layerFlags.getMask());\r\n    }\r\n\r\n    intersect(layerFlags) {\r\n        this._myLayerMask = this._myLayerMask & layerFlags.getMask();\r\n    }\r\n\r\n    copy(layerFlags) {\r\n        this._myLayerMask = layerFlags._myLayerMask;\r\n    }\r\n\r\n    getMask() {\r\n        return this._myLayerMask;\r\n    }\r\n\r\n    setMask(layerMask) {\r\n        this._myLayerMask = layerMask;\r\n    }\r\n};", "PP.PhysicsCollisionCollector = class PhysicsCollisionCollector {\r\n    constructor(physXComponent, isTrigger = false) {\r\n        this._myPhysX = physXComponent;\r\n\r\n        this._myIsTrigger = isTrigger;\r\n\r\n        this._myCollisions = [];\r\n\r\n        this._myCollisionsStart = [];\r\n        this._myCollisionsEnd = [];\r\n        this._myUpdateActive = false;\r\n        this._myCollisionsStartToProcess = [];\r\n        this._myCollisionsEndToProcess = [];\r\n\r\n        this._myCollisionCallbackID = null;\r\n\r\n        this._myIsActive = false;\r\n        this.setActive(true);\r\n\r\n        this._myDebugActive = false;\r\n\r\n        this._myTriggerDesyncFixDelay = new PP.Timer(0.1);\r\n\r\n        this._myCollisionCallbacks = new Map();          // Signature: callback(thisPhysX, otherPhysX, collisionType)\r\n        this._myCollisionStartCallbacks = new Map();     // Signature: callback(thisPhysX, otherPhysX, collisionType)\r\n        this._myCollisionEndCallbacks = new Map();       // Signature: callback(thisPhysX, otherPhysX, collisionType)\r\n\r\n    }\r\n\r\n    getPhysX() {\r\n        return this._myPhysX;\r\n    }\r\n\r\n    getCollisions() {\r\n        return this._myCollisions;\r\n    }\r\n\r\n    getCollisionsStart() {\r\n        return this._myCollisionsStart;\r\n    }\r\n\r\n    getCollisionsEnd() {\r\n        return this._myCollisionsEnd;\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myIsActive != active) {\r\n            this._myIsActive = active;\r\n\r\n            this._myCollisions = [];\r\n\r\n            this._myCollisionsStart = [];\r\n            this._myCollisionsEnd = [];\r\n            this._myUpdateActive = false;\r\n            this._myCollisionsStartToProcess = [];\r\n            this._myCollisionsEndToProcess = [];\r\n\r\n            if (this._myIsActive) {\r\n                this._myCollisionCallbackID = this._myPhysX.onCollision(this._onCollision.bind(this));\r\n            } else if (this._myCollisionCallbackID != null) {\r\n                this._myPhysX.removeCollisionCallback(this._myCollisionCallbackID);\r\n                this._myCollisionCallbackID = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Set to true only if u are going to actually update this object and don't want to lose any collision start/end events prior to updating the first time after activation\r\n    setUpdateActive(active) {\r\n        this._myUpdateActive = active;\r\n    }\r\n\r\n    //Update is not mandatory, use it only if u want to access collisions start and end\r\n    update(dt) {\r\n        if (!this._myIsActive) {\r\n            return;\r\n        }\r\n\r\n        this._myUpdateActive = true;\r\n\r\n        this._myCollisionsStart = this._myCollisionsStartToProcess;\r\n        this._myCollisionsStartToProcess = [];\r\n\r\n        this._myCollisionsEnd = this._myCollisionsEndToProcess;\r\n        this._myCollisionsEndToProcess = [];\r\n\r\n        if (this._myIsTrigger) {\r\n            this._triggerDesyncFix(dt);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this._myCollisionCallbackID != null) {\r\n            this._myPhysX.removeCollisionCallback(this._myCollisionCallbackID);\r\n            this._myCollisionCallbackID = null;\r\n        }\r\n    }\r\n\r\n    setDebugActive(active) {\r\n        this._myDebugActive = active;\r\n    }\r\n\r\n    registerCollisionEventListener(callbackID, callback) {\r\n        this._myCollisionCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCollisionEventListener(callbackID) {\r\n        this._myCollisionCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerCollisionStartEventListener(callbackID, callback) {\r\n        this._myCollisionStartCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCollisionStartEventListener(callbackID) {\r\n        this._myCollisionStartCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerCollisionEndEventListener(callbackID, callback) {\r\n        this._myCollisionEndCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCollisionEndEventListener(callbackID) {\r\n        this._myCollisionEndCallbacks.delete(callbackID);\r\n    }\r\n\r\n    _onCollision(type, physXComponent) {\r\n        if (type == WL.CollisionEventType.Touch || type == WL.CollisionEventType.TriggerTouch) {\r\n            this._onCollisionStart(physXComponent);\r\n        } else if (type == WL.CollisionEventType.TouchLost || type == WL.CollisionEventType.TriggerTouchLost) {\r\n            this._onCollisionEnd(physXComponent);\r\n        }\r\n\r\n        if (this._myCollisionCallbacks.size > 0) {\r\n            this._myCollisionCallbacks.forEach(function (callback) { callback(this._myPhysX, physXComponent, type); });\r\n        }\r\n    }\r\n\r\n    _onCollisionStart(physXComponent) {\r\n        if (this._myDebugActive) {\r\n            let objectFound = false;\r\n            for (let object of this._myCollisions) {\r\n                if (object.pp_equals(physXComponent.object)) {\r\n                    objectFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (objectFound) {\r\n                console.error(\"Collision Start on object already collected\");\r\n            }\r\n        }\r\n\r\n        this._myCollisions.push(physXComponent.object);\r\n\r\n        if (this._myUpdateActive) {\r\n            this._myCollisionsStartToProcess.push(physXComponent.object);\r\n            this._myCollisionsEndToProcess.pp_removeAll(function (element) {\r\n                return element.pp_equals(physXComponent.object);\r\n            });\r\n        }\r\n\r\n        if (this._myDebugActive) {\r\n            console.log(\"Collision Start -\", this._myCollisions.length);\r\n        }\r\n\r\n        if (this._myCollisionStartCallbacks.size > 0) {\r\n            this._myCollisionStartCallbacks.forEach(function (callback) { callback(this._myPhysX, physXComponent, type); });\r\n        }\r\n    }\r\n\r\n    _onCollisionEnd(physXComponent) {\r\n        if (this._myDebugActive) {\r\n            let objectFound = false;\r\n            for (let object of this._myCollisions) {\r\n                if (object.pp_equals(physXComponent.object)) {\r\n                    objectFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!objectFound) {\r\n                console.error(\"Collision End on object not collected\");\r\n            }\r\n        }\r\n\r\n\r\n        this._myCollisions.pp_removeAll(function (element) {\r\n            return element.pp_equals(physXComponent.object);\r\n        });\r\n\r\n        if (this._myUpdateActive) {\r\n            this._myCollisionsEndToProcess.push(physXComponent.object);\r\n            this._myCollisionsStartToProcess.pp_removeAll(function (element) {\r\n                return element.pp_equals(physXComponent.object);\r\n            });\r\n        }\r\n\r\n        if (this._myDebugActive) {\r\n            console.log(\"Collision End -\", this._myCollisions.length);\r\n        }\r\n\r\n        if (this._myCollisionEndCallbacks.size > 0) {\r\n            this._myCollisionEndCallbacks.forEach(function (callback) { callback(this._myPhysX, physXComponent, type); });\r\n        }\r\n    }\r\n\r\n    _triggerDesyncFix(dt) {\r\n        this._myTriggerDesyncFixDelay.update(dt);\r\n        if (this._myTriggerDesyncFixDelay.isDone()) {\r\n            this._myTriggerDesyncFixDelay.start();\r\n\r\n            let collisionsToEnd = this._myCollisions.pp_findAll(function (element) {\r\n                let physX = element.pp_getComponentSelf(\"physx\");\r\n                return physX == null || !physX.active;\r\n            });\r\n\r\n            if (collisionsToEnd.length > 0) {\r\n                //console.error(\"DESYNC RESOLVED\");\r\n\r\n                for (let collision of collisionsToEnd) {\r\n                    let physX = collision.pp_getComponentSelf(\"physx\");\r\n                    if (physX) {\r\n                        this._onCollisionEnd(physX);\r\n                    } else {\r\n                        console.error(\"NO PHYSX, HOW?\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};", "PP.VisualManager = class VisualManager {\r\n    constructor() {\r\n        this._myVisualElementPrototypeCreationCallbacks = new Map();\r\n\r\n        this._myVisualElementsTypeMap = new Map();\r\n        this._myVisualElementLastID = 0;\r\n        this._myVisualElementsPool = new PP.ObjectPoolManager();\r\n        this._myVisualElementsToShow = [];\r\n\r\n        this._myActive = true;\r\n\r\n        this._addStandardVisualElementTypes();\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myActive != active) {\r\n            this._myActive = active;\r\n\r\n            if (!this._myActive) {\r\n                this.clearDraw();\r\n            }\r\n        }\r\n    }\r\n\r\n    isActive() {\r\n        return this._myActive;\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    update(dt) {\r\n        this._updateDraw(dt);\r\n    }\r\n\r\n    //lifetimeSeconds can be null, in that case the element will be drawn until cleared\r\n    draw(visualElementParams, lifetimeSeconds = 0, idToReuse = null) {\r\n        if (!this._myActive) {\r\n            return 0;\r\n        }\r\n\r\n        let visualElement = null;\r\n        let idReused = false;\r\n        if (idToReuse != null) {\r\n            if (this._myVisualElementsTypeMap.has(visualElementParams.myType)) {\r\n                let visualElements = this._myVisualElementsTypeMap.get(visualElementParams.myType);\r\n                if (visualElements.has(idToReuse)) {\r\n                    visualElement = visualElements.get(idToReuse)[0];\r\n                    visualElement.setParams(visualElementParams);\r\n                    visualElement.setVisible(false);\r\n                    idReused = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (visualElement == null) {\r\n            visualElement = this._getVisualElement(visualElementParams);\r\n        }\r\n\r\n        if (visualElement == null) {\r\n            console.error(\"Couldn't create the requested visual element\");\r\n            return null;\r\n        }\r\n\r\n        if (!this._myVisualElementsTypeMap.has(visualElementParams.myType)) {\r\n            this._myVisualElementsTypeMap.set(visualElementParams.myType, new Map());\r\n        }\r\n        let visualElements = this._myVisualElementsTypeMap.get(visualElementParams.myType);\r\n\r\n        let elementID = null;\r\n        if (!idReused) {\r\n            elementID = this._myVisualElementLastID + 1;\r\n            this._myVisualElementLastID = elementID;\r\n\r\n            visualElements.set(elementID, [visualElement, new PP.Timer(lifetimeSeconds, lifetimeSeconds != null)]);\r\n        } else {\r\n            elementID = idToReuse;\r\n            let visualElementPair = visualElements.get(elementID);\r\n            visualElementPair[0] = visualElement;\r\n            visualElementPair[1].reset(lifetimeSeconds);\r\n            if (lifetimeSeconds != null) {\r\n                visualElementPair[1].start();\r\n            }\r\n        }\r\n\r\n        this._myVisualElementsToShow.push(visualElement);\r\n\r\n        return elementID;\r\n    }\r\n\r\n    getDraw(elementID) {\r\n        let visualElement = null;\r\n\r\n        for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n            if (visualElements.has(elementID)) {\r\n                let visualElementPair = visualElements.get(elementID);\r\n                visualElement = visualElementPair[0];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return visualElement;\r\n    }\r\n\r\n    clearDraw(elementID = null) {\r\n        if (elementID == null) {\r\n            for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n                for (let visualElement of visualElements.values()) {\r\n                    this._myVisualElementsPool.releaseObject(visualElement[0].getParams().myType, visualElement[0]);\r\n                }\r\n            }\r\n\r\n            this._myVisualElementsToShow = [];\r\n            this._myVisualElementsTypeMap = new Map();\r\n            this._myVisualElementLastID = 0;\r\n        } else {\r\n            for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n                if (visualElements.has(elementID)) {\r\n                    let visualElementPair = visualElements.get(elementID);\r\n                    this._myVisualElementsPool.releaseObject(visualElementPair[0].getParams().myType, visualElementPair[0]);\r\n                    visualElements.delete(elementID);\r\n\r\n                    this._myVisualElementsToShow.pp_removeEqual(visualElementPair[0]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    allocateDraw(visualElementType, amount) {\r\n        if (!this._myVisualElementsPool.hasPool(visualElementType)) {\r\n            this._addVisualElementTypeToPool(visualElementType);\r\n        }\r\n\r\n        let pool = this._myVisualElementsPool.getPool(visualElementType);\r\n\r\n        let difference = pool.getAvailableSize() - amount;\r\n        if (difference < 0) {\r\n            pool.increase(-difference);\r\n        }\r\n    }\r\n\r\n    addVisualElementType(visualElementType, visuaElementPrototypeCreationCallback) {\r\n        this._myVisualElementPrototypeCreationCallbacks.set(visualElementType, visuaElementPrototypeCreationCallback);\r\n    }\r\n\r\n    removeVisualElementType(visualElementType) {\r\n        this._myVisualElementPrototypeCreationCallbacks.delete(visualElementType);\r\n    }\r\n\r\n    _updateDraw(dt) {\r\n        for (let visualElement of this._myVisualElementsToShow) {\r\n            visualElement.setVisible(true);\r\n        }\r\n        this._myVisualElementsToShow = [];\r\n\r\n        for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n            let idsToRemove = [];\r\n            for (let visualElementsEntry of visualElements.entries()) {\r\n                let visualElement = visualElementsEntry[1];\r\n                if (visualElement[1].isDone()) {\r\n                    this._myVisualElementsPool.releaseObject(visualElement[0].getParams().myType, visualElement[0]);\r\n                    idsToRemove.push(visualElementsEntry[0]);\r\n                }\r\n\r\n                visualElement[1].update(dt);\r\n            }\r\n\r\n            for (let id of idsToRemove) {\r\n                visualElements.delete(id);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getVisualElement(params) {\r\n        let element = null;\r\n\r\n        if (!this._myVisualElementsPool.hasPool(params.myType)) {\r\n            this._addVisualElementTypeToPool(params.myType);\r\n        }\r\n\r\n        element = this._myVisualElementsPool.getObject(params.myType);\r\n\r\n        if (element != null) {\r\n            element.setParams(params);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    _addVisualElementTypeToPool(type) {\r\n        let objectPoolParams = new PP.ObjectPoolParams();\r\n        objectPoolParams.myInitialPoolSize = 10;\r\n        objectPoolParams.myAmountToAddWhenEmpty = 0;\r\n        objectPoolParams.myPercentageToAddWhenEmpty = 0.5;\r\n        objectPoolParams.myEnableDebugLog = false;\r\n        objectPoolParams.mySetActiveCallback = function (object, active) {\r\n            object.setVisible(active);\r\n        };\r\n\r\n        let visualElementPrototype = null;\r\n        if (this._myVisualElementPrototypeCreationCallbacks.has(type)) {\r\n            visualElementPrototype = this._myVisualElementPrototypeCreationCallbacks.get(type)();\r\n        }\r\n\r\n        if (visualElementPrototype != null) {\r\n            visualElementPrototype.setVisible(false);\r\n            visualElementPrototype.setAutoRefresh(true);\r\n\r\n            this._myVisualElementsPool.addPool(type, visualElementPrototype, objectPoolParams);\r\n        } else {\r\n            console.error(\"Visual element type not supported\");\r\n        }\r\n    }\r\n\r\n    _addStandardVisualElementTypes() {\r\n        this.addVisualElementType(PP.VisualElementType.LINE, () => new PP.VisualLine());\r\n        this.addVisualElementType(PP.VisualElementType.MESH, () => new PP.VisualMesh());\r\n        this.addVisualElementType(PP.VisualElementType.POINT, () => new PP.VisualPoint());\r\n        this.addVisualElementType(PP.VisualElementType.ARROW, () => new PP.VisualArrow());\r\n        this.addVisualElementType(PP.VisualElementType.TEXT, () => new PP.VisualText());\r\n        this.addVisualElementType(PP.VisualElementType.TRANSFORM, () => new PP.VisualTransform());\r\n        this.addVisualElementType(PP.VisualElementType.RAYCAST, () => new PP.VisualRaycast());\r\n        this.addVisualElementType(PP.VisualElementType.TORUS, () => new PP.VisualTorus());\r\n    }\r\n};", "PP.VisualElementType = {\r\n    MESH: 0,\r\n    LINE: 1,\r\n    POINT: 2,\r\n    TEXT: 3,\r\n    ARROW: 4,\r\n    TRANSFORM: 5,\r\n    RAYCAST: 6,\r\n    TORUS: 7,\r\n};", "/*\r\nlet visualParams = new PP.VisualLineParams();\r\nvisualParams.myStart.vec3_copy(start);\r\nvisualParams.myDirection.vec3_copy(direction);\r\nvisualParams.myLength = 0.2;\r\nvisualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualLine = new PP.VisualLine(visualParams);\r\n*/\r\n\r\nPP.VisualLineParams = class VisualLineParams {\r\n\r\n    constructor() {\r\n        this.myStart = PP.vec3_create();\r\n        this.myDirection = PP.vec3_create(0, 0, 1);\r\n        this.myLength = 0;\r\n\r\n        this.myThickness = 0.005;\r\n\r\n        this.myMesh = null;         // the mesh is scaled along up axis, null means it will default on PP.myDefaultResources.myMeshes.myCylinder\r\n\r\n        this.myMaterial = null;     // null means it will default on PP.myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // if this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.LINE;\r\n    }\r\n\r\n    setStartEnd(start, end) {\r\n        end.vec3_sub(start, this.myDirection);\r\n        this.myLength = this.myDirection.vec3_length();\r\n        this.myDirection.vec3_normalize(this.myDirection);\r\n        this.myStart.vec3_copy(start);\r\n\r\n        return this;\r\n    }\r\n};\r\n\r\nPP.VisualLine = class VisualLine {\r\n\r\n    constructor(params = new PP.VisualLineParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myLineRootObject = null;\r\n        this._myLineObject = null;\r\n        this._myLineMeshComponent = null;\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myLineRootObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myLineRootObject = WL.scene.addObject(null);\r\n        this._myLineObject = WL.scene.addObject(this._myLineRootObject);\r\n\r\n        this._myLineMeshComponent = this._myLineObject.addComponent('mesh');\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualLineParams();\r\n        clonedParams.myStart.vec3_copy(this._myParams.myStart);\r\n        clonedParams.myDirection.vec3_copy(this._myParams.myDirection);\r\n        clonedParams.myLength = this._myParams.myLength;\r\n        clonedParams.myThickness = this._myParams.myThickness;\r\n\r\n        clonedParams.myMesh = this._myParams.myMesh;\r\n\r\n        if (this._myParams.myMaterial != null) {\r\n            clonedParams.myMaterial = this._myParams.myMaterial.clone();\r\n        } else {\r\n            clonedParams.myMaterial = null;\r\n        }\r\n\r\n        if (this._myParams.myColor != null) {\r\n            clonedParams.myColor.vec4_copy(this._myParams.myColor);\r\n        } else {\r\n            clonedParams.myColor = null;\r\n        }\r\n\r\n        clonedParams.myParent = this._myParams.myParent;\r\n        clonedParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n        let clone = new PP.VisualLine(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n};\r\n\r\nPP.VisualLine.prototype._refresh = function () {\r\n    let scaleLine = PP.vec3_create();\r\n    let translateLine = PP.vec3_create();\r\n\r\n    let forward = PP.vec3_create(0, 1, 0);\r\n    return function _refresh() {\r\n        this._myLineRootObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myLineRootObject.pp_setPositionLocal(this._myParams.myStart);\r\n        } else {\r\n            this._myLineRootObject.pp_setPosition(this._myParams.myStart);\r\n        }\r\n\r\n        scaleLine.vec3_set(this._myParams.myThickness / 2, this._myParams.myLength / 2, this._myParams.myThickness / 2);\r\n        if (this._myParams.myIsLocal) {\r\n            this._myLineObject.pp_setScaleLocal(scaleLine);\r\n        } else {\r\n            this._myLineObject.pp_setScale(scaleLine);\r\n        }\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myLineObject.pp_setUpLocal(this._myParams.myDirection, forward);\r\n        } else {\r\n            this._myLineObject.pp_setUp(this._myParams.myDirection, forward);\r\n        }\r\n\r\n        this._myLineObject.pp_resetPositionLocal();\r\n        translateLine.vec3_set(0, this._myParams.myLength / 2, 0);\r\n        this._myLineObject.pp_translateObject(translateLine);\r\n\r\n        if (this._myParams.myMesh != null) {\r\n            this._myLineMeshComponent.mesh = this._myParams.myMesh;\r\n        } else {\r\n            this._myLineMeshComponent.mesh = PP.myDefaultResources.myMeshes.myCylinder;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myLineMeshComponent.material = PP.myVisualData.myDefaultMaterials.myDefaultMeshMaterial;\r\n            } else {\r\n                if (this._myFlatOpaqueMaterial == null) {\r\n                    this._myFlatOpaqueMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                }\r\n                this._myLineMeshComponent.material = this._myFlatOpaqueMaterial;\r\n                this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myLineMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.VisualLine.prototype, \"_refresh\", { enumerable: false });", "/*\r\nlet visualParams = new PP.VisualMeshParams();\r\nvisualParams.myTransform = transform;\r\nvisualParams.myMesh = PP.myDefaultResources.myMeshes.mySphere;\r\nvisualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualMesh = new PP.VisualMesh(visualParams);\r\n*/\r\n\r\nPP.VisualMeshParams = class VisualMeshParams {\r\n\r\n    constructor() {\r\n        this.myTransform = PP.mat4_create();\r\n\r\n        this.myMesh = null;\r\n        this.myMaterial = null;\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.MESH;\r\n    }\r\n};\r\n\r\nPP.VisualMesh = class VisualMesh {\r\n\r\n    constructor(params = new PP.VisualMeshParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myMeshObject = null;\r\n        this._myMeshComponent = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myMeshObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _refresh() {\r\n        this._myMeshObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myMeshObject.pp_setTransformLocal(this._myParams.myTransform);\r\n        } else {\r\n            this._myMeshObject.pp_setTransform(this._myParams.myTransform);\r\n        }\r\n\r\n        if (this._myParams.myMesh == null) {\r\n            this._myMeshComponent.mesh = PP.myDefaultResources.myMeshes.mySphere;\r\n        } else {\r\n            this._myMeshComponent.mesh = this._myParams.myMesh;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            this._myMeshComponent.material = PP.myVisualData.myDefaultMaterials.myDefaultMeshMaterial;\r\n        } else {\r\n            this._myMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myMeshObject = WL.scene.addObject(null);\r\n\r\n        this._myMeshComponent = this._myMeshObject.addComponent('mesh');\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualMeshParams();\r\n        clonedParams.myTransform.pp_copy(this._myParams.myTransform);\r\n\r\n        if (this._myParams.myMesh != null) {\r\n            clonedParams.myMesh = this._myParams.myMesh;\r\n        } else {\r\n            clonedParams.myMesh = null;\r\n        }\r\n\r\n        if (this._myParams.myMaterial != null) {\r\n            clonedParams.myMaterial = this._myParams.myMaterial.clone();\r\n        } else {\r\n            clonedParams.myMaterial = null;\r\n        }\r\n\r\n        clonedParams.myParent = this._myParams.myParent;\r\n        clonedParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n        let clone = new PP.VisualMesh(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n};", "/*\r\nlet visualParams = new PP.VisualPointParams();\r\nvisualParams.myPosition.vec3_copy(position);\r\nvisualParams.myRadius = 0.005;\r\nvisualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualPoint = new PP.VisualPoint(visualParams);\r\n*/\r\n\r\nPP.VisualPointParams = class VisualPointParams {\r\n\r\n    constructor() {\r\n        this.myPosition = PP.vec3_create();\r\n        this.myRadius = 0.005;\r\n\r\n        this.myMesh = null;         // the mesh is scaled along up axis, null means it will default on PP.myDefaultResources.myMeshes.mySphere\r\n\r\n        this.myMaterial = null;     // null means it will default on PP.myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // if this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.POINT;\r\n    }\r\n};\r\n\r\nPP.VisualPoint = class VisualPoint {\r\n\r\n    constructor(params = new PP.VisualPointParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myPointObject = null;\r\n        this._myPointMeshComponent = null;\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myPointObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myPointObject = WL.scene.addObject(null);\r\n\r\n        this._myPointMeshComponent = this._myPointObject.addComponent('mesh');\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualPointParams();\r\n        clonedParams.myPosition.vec3_copy(this._myParams.myPosition);\r\n        clonedParams.myRadius = this._myParams.myRadius;\r\n\r\n        clonedParams.myMesh = this._myParams.myMesh;\r\n\r\n        if (this._myParams.myMaterial != null) {\r\n            clonedParams.myMaterial = this._myParams.myMaterial.clone();\r\n        } else {\r\n            clonedParams.myMaterial = null;\r\n        }\r\n\r\n        if (this._myParams.myColor != null) {\r\n            clonedParams.myColor.vec4_copy(this._myParams.myColor);\r\n        } else {\r\n            clonedParams.myColor = null;\r\n        }\r\n\r\n        clonedParams.myParent = this._myParams.myParent;\r\n        clonedParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n        let clone = new PP.VisualPoint(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n};\r\n\r\nPP.VisualPoint.prototype._refresh = function () {\r\n    let rotation = PP.vec3_create(0, 0, 0);\r\n    return function _refresh() {\r\n        this._myPointObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myPointObject.pp_setPositionLocal(this._myParams.myPosition);\r\n            this._myPointObject.pp_setRotationLocal(rotation);\r\n            this._myPointObject.pp_setScaleLocal(this._myParams.myRadius);\r\n        } else {\r\n            this._myPointObject.pp_setPosition(this._myParams.myPosition);\r\n            this._myPointObject.pp_setRotation(rotation);\r\n            this._myPointObject.pp_setScale(this._myParams.myRadius);\r\n        }\r\n\r\n        if (this._myParams.myMesh != null) {\r\n            this._myPointMeshComponent.mesh = this._myParams.myMesh;\r\n        } else {\r\n            this._myPointMeshComponent.mesh = PP.myDefaultResources.myMeshes.mySphere;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myPointMeshComponent.material = PP.myVisualData.myDefaultMaterials.myDefaultMeshMaterial;\r\n            } else {\r\n                if (this._myFlatOpaqueMaterial == null) {\r\n                    this._myFlatOpaqueMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                }\r\n                this._myPointMeshComponent.material = this._myFlatOpaqueMaterial;\r\n                this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myPointMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n    }\r\n}();\r\n\r\n\r\nObject.defineProperty(PP.VisualPoint.prototype, \"_refresh\", { enumerable: false });", "/*\r\nlet visualParams = new PP.VisualArrowParams();\r\nvisualParams.myStart.vec3_copy(start);\r\nvisualParams.myDirection.vec3_copy(direction);\r\nvisualParams.myLength = 0.2;\r\nvisualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualArrow = new PP.VisualArrow(visualParams);\r\n*/\r\n\r\nPP.VisualArrowParams = class VisualArrowParams {\r\n    constructor() {\r\n        this.myStart = PP.vec3_create();\r\n        this.myDirection = PP.vec3_create(0, 0, 1);\r\n        this.myLength = 0;\r\n\r\n        this.myThickness = 0.005;\r\n\r\n        this.myLineMesh = null;     // the mesh is scaled along up axis, null means it will default on PP.myDefaultResources.myMeshes.myCylinder\r\n        this.myArrowMesh = null;    // the mesh is scaled along up axis, null means it will default on PP.myDefaultResources.myMeshes.myCone\r\n\r\n        this.myMaterial = null;     // null means it will default on PP.myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // if this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.ARROW;\r\n    }\r\n\r\n    setStartEnd(start, end) {\r\n        end.vec3_sub(start, this.myDirection);\r\n        this.myLength = this.myDirection.vec3_length();\r\n        this.myDirection.vec3_normalize(this.myDirection);\r\n        this.myStart.vec3_copy(start);\r\n\r\n        return this;\r\n    }\r\n};\r\n\r\nPP.VisualArrow = class VisualArrow {\r\n\r\n    constructor(params = new PP.VisualArrowParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myVisualLine = new PP.VisualLine();\r\n        this._myVisualLine.setAutoRefresh(false);\r\n\r\n        this._myArrowRootObject = null;\r\n        this._myArrowObject = null;\r\n        this._myArrowMeshComponent = null;\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myVisualLine.setVisible(visible);\r\n            this._myArrowRootObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        this._myVisualLine.forceRefresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n            this._myDirty = false;\r\n        }\r\n\r\n        this._myVisualLine.update(dt);\r\n    }\r\n\r\n    _build() {\r\n        this._myArrowRootObject = WL.scene.addObject(null);\r\n        this._myArrowObject = WL.scene.addObject(this._myArrowRootObject);\r\n\r\n        this._myArrowMeshComponent = this._myArrowObject.addComponent('mesh');\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualArrowParams();\r\n        clonedParams.myStart.vec3_copy(this._myParams.myStart);\r\n        clonedParams.myDirection.vec3_copy(this._myParams.myDirection);\r\n        clonedParams.myLength = this._myParams.myLength;\r\n        clonedParams.myThickness = this._myParams.myThickness;\r\n\r\n        clonedParams.myArrowMesh = this._myParams.myArrowMesh;\r\n        clonedParams.myLineMesh = this._myParams.myLineMesh;\r\n\r\n        if (this._myParams.myMaterial != null) {\r\n            clonedParams.myMaterial = this._myParams.myMaterial.clone();\r\n        } else {\r\n            clonedParams.myMaterial = null;\r\n        }\r\n\r\n        if (this._myParams.myColor != null) {\r\n            clonedParams.myColor.vec4_copy(this._myParams.myColor);\r\n        } else {\r\n            clonedParams.myColor = null;\r\n        }\r\n\r\n        clonedParams.myParent = this._myParams.myParent;\r\n        clonedParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n        let clone = new PP.VisualArrow(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n};\r\n\r\nPP.VisualArrow.prototype._refresh = function () {\r\n    let end = PP.vec3_create();\r\n    let translateRoot = PP.vec3_create();\r\n    let scaleArrow = PP.vec3_create();\r\n    let direction = PP.vec3_create();\r\n\r\n    let forward = PP.vec3_create(0, 1, 0);\r\n    return function _refresh() {\r\n        this._myArrowRootObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        this._myParams.myDirection.vec3_scale(Math.max(0.001, this._myParams.myLength - this._myParams.myThickness * 4), end);\r\n        end.vec3_add(this._myParams.myStart, end);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myArrowRootObject.pp_setPositionLocal(end);\r\n            this._myArrowRootObject.pp_setUpLocal(this._myParams.myDirection, forward);\r\n        } else {\r\n            this._myArrowRootObject.pp_setPosition(end);\r\n            this._myArrowRootObject.pp_setUp(this._myParams.myDirection, forward);\r\n        }\r\n\r\n        translateRoot.vec3_set(0, this._myParams.myThickness * 2 - 0.00001, 0);\r\n        this._myArrowRootObject.pp_translateObject(translateRoot);\r\n\r\n        scaleArrow.vec3_set(this._myParams.myThickness * 1.25, this._myParams.myThickness * 2, this._myParams.myThickness * 1.25);\r\n        if (this._myParams.myIsLocal) {\r\n            this._myArrowObject.pp_setScaleLocal(scaleArrow);\r\n        } else {\r\n            this._myArrowObject.pp_setScale(scaleArrow);\r\n        }\r\n\r\n        if (this._myParams.myArrowMesh != null) {\r\n            this._myArrowMeshComponent.mesh = this._myParams.myArrowMesh;\r\n        } else {\r\n            this._myArrowMeshComponent.mesh = PP.myDefaultResources.myMeshes.myCone;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myArrowMeshComponent.material = PP.myVisualData.myDefaultMaterials.myDefaultMeshMaterial;\r\n            } else {\r\n                if (this._myFlatOpaqueMaterial == null) {\r\n                    this._myFlatOpaqueMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                }\r\n                this._myArrowMeshComponent.material = this._myFlatOpaqueMaterial;\r\n                this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myArrowMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n\r\n        direction = end.vec3_sub(this._myParams.myStart, direction);\r\n        let visualLineParams = this._myVisualLine.getParams();\r\n        visualLineParams.myStart.vec3_copy(this._myParams.myStart);\r\n        visualLineParams.myDirection = direction.vec3_normalize(visualLineParams.myDirection);\r\n        visualLineParams.myLength = direction.vec3_length();\r\n        visualLineParams.myThickness = this._myParams.myThickness;\r\n        visualLineParams.myMesh = this._myParams.myLineMesh;\r\n\r\n        visualLineParams.myMaterial = this._myArrowMeshComponent.material;\r\n\r\n        visualLineParams.myParent = this._myParams.myParent;\r\n        visualLineParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n        this._myVisualLine.paramsUpdated();\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.VisualArrow.prototype, \"_refresh\", { enumerable: false });", "/*\r\nlet visualParams = new PP.VisualTextParams();\r\nvisualParams.myText = text;\r\nvisualParams.myTransform.mat4_copy(transform);\r\nvisualParams.myMaterial = PP.myDefaultResources.myMaterials.myText.clone();\r\nvisualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualText = new PP.VisualText(visualParams);\r\n*/\r\n\r\nPP.VisualTextParams = class VisualTextParams {\r\n\r\n    constructor() {\r\n        this.myText = \"\";\r\n        this.myAlignment = WL.Alignment.Center;\r\n        this.myJustification = WL.Justification.Middle;\r\n\r\n        this.myTransform = PP.mat4_create();\r\n\r\n        this.myMaterial = null;     // null means it will default on PP.myDefaultResources.myMaterials.myDefaultTextMaterial\r\n\r\n        this.myColor = null;        // if this is set and material is null, it will use the default text material with this color\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.TEXT;\r\n    }\r\n};\r\n\r\nPP.VisualText = class VisualText {\r\n\r\n    constructor(params = new PP.VisualTextParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myTextObject = null;\r\n        this._myTextComponent = null;\r\n\r\n        this._myTextMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myTextObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _refresh() {\r\n        this._myTextObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myTextObject.pp_setTransformLocal(this._myParams.myTransform);\r\n        } else {\r\n            this._myTextObject.pp_setTransform(this._myParams.myTransform);\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myTextComponent.material = PP.myVisualData.myDefaultMaterials.myDefaultTextMaterial;\r\n            } else {\r\n                if (this._myTextMaterial == null) {\r\n                    this._myTextMaterial = PP.myDefaultResources.myMaterials.myText.clone();\r\n                }\r\n                this._myTextComponent.material = this._myTextMaterial;\r\n                this._myTextMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myTextComponent.material = this._myParams.myMaterial;\r\n        }\r\n\r\n        this._myTextComponent.text = this._myParams.myText;\r\n        this._myTextComponent.alignment = this._myParams.myAlignment;\r\n        this._myTextComponent.justification = this._myParams.myJustification;\r\n\r\n        this._myDirty = false;\r\n    }\r\n\r\n    _build() {\r\n        this._myTextObject = WL.scene.addObject(null);\r\n        this._myTextComponent = this._myTextObject.addComponent('text');\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualTextParams();\r\n\r\n        clonedParams.myText = this._myParams.myText;\r\n        clonedParams.myAlignment = this._myParams.myAlignment;\r\n        clonedParams.myJustification = this._myParams.myJustification;\r\n\r\n        clonedParams.myTransform.mat4_copy(this._myParams.myTransform);\r\n\r\n        if (this._myParams.myMaterial != null) {\r\n            clonedParams.myMaterial = this._myParams.myMaterial.clone();\r\n        } else {\r\n            clonedParams.myMaterial = null;\r\n        }\r\n\r\n        if (this._myParams.myColor != null) {\r\n            clonedParams.myColor.vec4_copy(this._myParams.myColor);\r\n        } else {\r\n            clonedParams.myColor = null;\r\n        }\r\n\r\n        clonedParams.myParent = this._myParams.myParent;\r\n        clonedParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n        let clone = new PP.VisualText(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n};", "/*\r\nlet visualParams = new PP.VisualTransformParams();\r\nvisualParams.myTransform.mat4_copy(transform);\r\nvisualParams.myLength = 0.2;\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualTransform = new PP.VisualTransform(visualParams);\r\n*/\r\n\r\nPP.VisualTransformParams = class VisualTransformParams {\r\n\r\n    constructor() {\r\n        this.myTransform = PP.mat4_create();\r\n        this.myLength = 0.2;\r\n        this.myThickness = 0.005;\r\n\r\n        this.myForwardMaterial = null;\r\n        this.myUpMaterial = null;\r\n        this.myRightMaterial = null;\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.TRANSFORM;\r\n    }\r\n};\r\n\r\nPP.VisualTransform = class VisualTransform {\r\n\r\n    constructor(params = new PP.VisualTransformParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myVisualRight = new PP.VisualArrow();\r\n        this._myVisualUp = new PP.VisualArrow();\r\n        this._myVisualForward = new PP.VisualArrow();\r\n\r\n        this._myVisualRight.setAutoRefresh(false);\r\n        this._myVisualUp.setAutoRefresh(false);\r\n        this._myVisualForward.setAutoRefresh(false);\r\n\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myVisualRight.setVisible(visible);\r\n            this._myVisualUp.setVisible(visible);\r\n            this._myVisualForward.setVisible(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        this._myVisualRight.forceRefresh();\r\n        this._myVisualUp.forceRefresh();\r\n        this._myVisualForward.forceRefresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n\r\n        this._myVisualRight.update(dt);\r\n        this._myVisualUp.update(dt);\r\n        this._myVisualForward.update(dt);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualTransformParams();\r\n        clonedParams.myTransform.mat4_copy(this._myParams.myTransform);\r\n        clonedParams.myLength = this._myParams.myLength;\r\n        clonedParams.myThickness = this._myParams.myThickness;\r\n\r\n        if (this._myParams.myRightMaterial != null) {\r\n            clonedParams.myRightMaterial = this._myParams.myRightMaterial.clone();\r\n        } else {\r\n            clonedParams.myRightMaterial = null;\r\n        }\r\n\r\n        if (this._myParams.myUpMaterial != null) {\r\n            clonedParams.myUpMaterial = this._myParams.myUpMaterial.clone();\r\n        } else {\r\n            clonedParams.myUpMaterial = null;\r\n        }\r\n\r\n        if (this._myParams.myForwardMaterial != null) {\r\n            clonedParams.myForwardMaterial = this._myParams.myForwardMaterial.clone();\r\n        } else {\r\n            clonedParams.myForwardMaterial = null;\r\n        }\r\n\r\n        clonedParams.myParent = this._myParams.myParent;\r\n        clonedParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n        let clone = new PP.VisualTransform(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n};\r\n\r\nPP.VisualTransform.prototype._refresh = function () {\r\n    let axes = [PP.vec3_create(), PP.vec3_create(), PP.vec3_create()];\r\n    let scale = PP.vec3_create();\r\n    let position = PP.vec3_create();\r\n    return function _refresh() {\r\n        axes = this._myParams.myTransform.mat4_getAxes(axes);\r\n        scale = this._myParams.myTransform.mat4_getScale(scale);\r\n        let maxValue = 0;\r\n        for (let value of scale) {\r\n            maxValue = Math.max(value, maxValue);\r\n        }\r\n\r\n        if (maxValue == 0) {\r\n            scale[0] = 1;\r\n            scale[1] = 1;\r\n            scale[2] = 1;\r\n        } else {\r\n            scale[0] = scale[0] / maxValue;\r\n            scale[1] = scale[1] / maxValue;\r\n            scale[2] = scale[2] / maxValue;\r\n        }\r\n\r\n        position = this._myParams.myTransform.mat4_getPosition(position);\r\n\r\n        {\r\n            let visualArrowParams = this._myVisualRight.getParams();\r\n            visualArrowParams.myStart.vec3_copy(position);\r\n            visualArrowParams.myDirection = axes[0].vec3_negate(visualArrowParams.myDirection).vec3_normalize(visualArrowParams.myDirection);\r\n            visualArrowParams.myLength = Math.max(this._myParams.myLength * scale[0], 0.001);\r\n            visualArrowParams.myThickness = this._myParams.myThickness;\r\n\r\n            if (this._myParams.myRightMaterial == null) {\r\n                visualArrowParams.myMaterial = PP.myVisualData.myDefaultMaterials.myDefaultRightMaterial;\r\n            } else {\r\n                visualArrowParams.myMaterial = this._myParams.myRightMaterial;\r\n            }\r\n\r\n            visualArrowParams.myParent = this._myParams.myParent;\r\n            visualArrowParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n            this._myVisualRight.paramsUpdated();\r\n        }\r\n\r\n        {\r\n            let visualArrowParams = this._myVisualUp.getParams();\r\n            visualArrowParams.myStart.vec3_copy(position);\r\n            visualArrowParams.myDirection = axes[1].vec3_normalize(visualArrowParams.myDirection);\r\n            visualArrowParams.myLength = Math.max(this._myParams.myLength * scale[1], 0.001);\r\n            visualArrowParams.myThickness = this._myParams.myThickness;\r\n\r\n            if (this._myParams.myUpMaterial == null) {\r\n                visualArrowParams.myMaterial = PP.myVisualData.myDefaultMaterials.myDefaultUpMaterial;\r\n            } else {\r\n                visualArrowParams.myMaterial = this._myParams.myUpMaterial;\r\n            }\r\n\r\n            visualArrowParams.myParent = this._myParams.myParent;\r\n            visualArrowParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n            this._myVisualUp.paramsUpdated();\r\n        }\r\n\r\n        {\r\n            let visualArrowParams = this._myVisualForward.getParams();\r\n            visualArrowParams.myStart.vec3_copy(position);\r\n            visualArrowParams.myDirection = axes[2].vec3_normalize(visualArrowParams.myDirection);\r\n            visualArrowParams.myLength = Math.max(this._myParams.myLength * scale[2], 0.001);\r\n            visualArrowParams.myThickness = this._myParams.myThickness;\r\n\r\n            if (this._myParams.myForwardMaterial == null) {\r\n                visualArrowParams.myMaterial = PP.myVisualData.myDefaultMaterials.myDefaultForwardMaterial;\r\n            } else {\r\n                visualArrowParams.myMaterial = this._myParams.myForwardMaterial;\r\n            }\r\n\r\n            visualArrowParams.myParent = this._myParams.myParent;\r\n            visualArrowParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n            this._myVisualForward.paramsUpdated();\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.VisualTransform.prototype, \"_refresh\", { enumerable: false });", "/*\r\nlet visualParams = new PP.VisualRaycastParams();\r\nvisualParams.myRaycastResults = raycastResults;\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualRaycast = new PP.VisualRaycast(visualParams);\r\n*/\r\n\r\nPP.VisualRaycastParams = class VisualRaycastParams {\r\n\r\n    constructor() {\r\n        this._myRaycastResults = new PP.RaycastResults();\r\n\r\n        this.myHitNormalLength = 0.2;\r\n        this.myThickness = 0.005;\r\n\r\n        this.myShowOnlyFirstHit = true;\r\n\r\n        this.myRayMaterial = null;\r\n        this.myHitNormalMaterial = null;\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.RAYCAST;\r\n    }\r\n\r\n    get myRaycastResults() {\r\n        return this._myRaycastResults;\r\n    }\r\n\r\n    set myRaycastResults(result) {\r\n        this._myRaycastResults.copy(result);\r\n    }\r\n};\r\n\r\nPP.VisualRaycast = class VisualRaycast {\r\n\r\n    constructor(params = new PP.VisualRaycastParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myVisualRaycast = new PP.VisualArrow();\r\n\r\n        this._myVisualRaycast.setAutoRefresh(false);\r\n\r\n        this._myVisualRaycastHitList = [];\r\n        this._addVisualRaycastHit();\r\n\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n\r\n            if (this._myVisible) {\r\n                if (this._myParams.myRaycastResults.myRaycastSetup != null) {\r\n                    this._myVisualRaycast.setVisible(true);\r\n                }\r\n\r\n                if (this._myParams.myRaycastResults.myHits.length > 0) {\r\n                    let hitsToShow = Math.min(this._myParams.myRaycastResults.myHits.length, this._myVisualRaycastHitList.length);\r\n\r\n                    for (let i = 0; i < hitsToShow; i++) {\r\n                        let visualRaycastHit = this._myVisualRaycastHitList[i];\r\n                        visualRaycastHit.setVisible(true);\r\n                    }\r\n                }\r\n            } else {\r\n                this._myVisualRaycast.setVisible(false);\r\n\r\n                for (let visualRaycastHit of this._myVisualRaycastHitList) {\r\n                    visualRaycastHit.setVisible(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        this._myVisualRaycast.forceRefresh();\r\n\r\n        if (this._myParams.myRaycastResults.myHits.length > 0) {\r\n            let hitsToRefresh = Math.min(this._myParams.myRaycastResults.myHits.length, this._myVisualRaycastHitList.length);\r\n\r\n            for (let i = 0; i < hitsToRefresh; i++) {\r\n                let visualRaycastHit = this._myVisualRaycastHitList[i];\r\n                visualRaycastHit.forceRefresh();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n            this._myDirty = false;\r\n        }\r\n\r\n        this._myVisualRaycast.update(dt);\r\n        for (let visualRaycastHit of this._myVisualRaycastHitList) {\r\n            visualRaycastHit.update(dt);\r\n        }\r\n    }\r\n\r\n    _refresh() {\r\n        for (let visualRaycastHit of this._myVisualRaycastHitList) {\r\n            visualRaycastHit.setVisible(false);\r\n        }\r\n\r\n        if (this._myParams.myRaycastResults.myHits.length > 0) {\r\n            let raycastDistance = this._myParams.myShowOnlyFirstHit ?\r\n                this._myParams.myRaycastResults.myHits.pp_first().myDistance :\r\n                this._myParams.myRaycastResults.myHits.pp_last().myDistance;\r\n\r\n            {\r\n                let visualRaycastParams = this._myVisualRaycast.getParams();\r\n                visualRaycastParams.myStart.vec3_copy(this._myParams.myRaycastResults.myRaycastSetup.myOrigin);\r\n                visualRaycastParams.myDirection.vec3_copy(this._myParams.myRaycastResults.myRaycastSetup.myDirection);\r\n                visualRaycastParams.myLength = raycastDistance;\r\n                visualRaycastParams.myThickness = this._myParams.myThickness;\r\n\r\n                if (this._myParams.myRayMaterial == null) {\r\n                    visualRaycastParams.myMaterial = PP.myVisualData.myDefaultMaterials.myDefaultRayMaterial;\r\n                } else {\r\n                    visualRaycastParams.myMaterial = this._myParams.myRayMaterial;\r\n                }\r\n\r\n                visualRaycastParams.myParent = this._myParams.myParent;\r\n                visualRaycastParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n                this._myVisualRaycast.paramsUpdated();\r\n\r\n                this._myVisualRaycast.setVisible(this._myVisible);\r\n            }\r\n\r\n            let hitsToShow = this._myParams.myShowOnlyFirstHit ? 1 : this._myParams.myRaycastResults.myHits.length;\r\n            while (hitsToShow > this._myVisualRaycastHitList.length) {\r\n                this._addVisualRaycastHit();\r\n            }\r\n\r\n            for (let i = 0; i < hitsToShow; i++) {\r\n                let visualRaycastHit = this._myVisualRaycastHitList[i];\r\n\r\n                {\r\n                    let visualRaycastHitParams = visualRaycastHit.getParams();\r\n                    visualRaycastHitParams.myStart.vec3_copy(this._myParams.myRaycastResults.myHits[i].myPosition);\r\n                    visualRaycastHitParams.myDirection.vec3_copy(this._myParams.myRaycastResults.myHits[i].myNormal);\r\n                    visualRaycastHitParams.myLength = this._myParams.myHitNormalLength;\r\n                    visualRaycastHitParams.myThickness = this._myParams.myThickness;\r\n\r\n                    if (this._myParams.myHitNormalMaterial == null) {\r\n                        visualRaycastHitParams.myMaterial = PP.myVisualData.myDefaultMaterials.myDefaultHitNormalMaterial;\r\n                    } else {\r\n                        visualRaycastHitParams.myMaterial = this._myParams.myHitNormalMaterial;\r\n                    }\r\n\r\n                    visualRaycastHitParams.myParent = this._myParams.myParent;\r\n                    visualRaycastHitParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n                    visualRaycastHit.paramsUpdated();\r\n\r\n                    visualRaycastHit.setVisible(this._myVisible);\r\n                }\r\n            }\r\n\r\n        } else if (this._myParams.myRaycastResults.myRaycastSetup != null) {\r\n            {\r\n                let visualRaycastParams = this._myVisualRaycast.getParams();\r\n                visualRaycastParams.myStart.vec3_copy(this._myParams.myRaycastResults.myRaycastSetup.myOrigin);\r\n                visualRaycastParams.myDirection.vec3_copy(this._myParams.myRaycastResults.myRaycastSetup.myDirection);\r\n                visualRaycastParams.myLength = this._myParams.myRaycastResults.myRaycastSetup.myDistance;\r\n                visualRaycastParams.myThickness = this._myParams.myThickness;\r\n\r\n                if (this._myParams.myRayMaterial == null) {\r\n                    visualRaycastParams.myMaterial = PP.myVisualData.myDefaultMaterials.myDefaultRayMaterial;\r\n                } else {\r\n                    visualRaycastParams.myMaterial = this._myParams.myRayMaterial;\r\n                }\r\n\r\n                visualRaycastParams.myParent = this._myParams.myParent;\r\n                visualRaycastParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n                this._myVisualRaycast.paramsUpdated();\r\n\r\n                this._myVisualRaycast.setVisible(this._myVisible);\r\n            }\r\n        } else {\r\n            this._myVisualRaycast.setVisible(false);\r\n        }\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualRaycastParams();\r\n        clonedParams.myRaycastResults = this._myParams.myRaycastResults;\r\n        clonedParams.myHitNormalLength = this._myParams.myHitNormalLength;\r\n        clonedParams.myThickness = this._myParams.myThickness;\r\n        clonedParams.myShowOnlyFirstHit = this._myParams.myShowOnlyFirstHit;\r\n\r\n        if (this._myParams.myRayMaterial != null) {\r\n            clonedParams.myRayMaterial = this._myParams.myRayMaterial.clone();\r\n        } else {\r\n            clonedParams.myRayMaterial = null;\r\n        }\r\n\r\n        if (this._myParams.myHitNormalMaterial != null) {\r\n            clonedParams.myHitNormalMaterial = this._myParams.myHitNormalMaterial.clone();\r\n        } else {\r\n            clonedParams.myHitNormalMaterial = null;\r\n        }\r\n\r\n        clonedParams.myParent = this._myParams.myParent;\r\n        clonedParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n        let clone = new PP.VisualRaycast(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    _addVisualRaycastHit() {\r\n        let visualRaycastHit = new PP.VisualArrow();\r\n\r\n        visualRaycastHit.setAutoRefresh(false);\r\n        visualRaycastHit.setVisible(false);\r\n\r\n        this._myVisualRaycastHitList.push(visualRaycastHit);\r\n    }\r\n};", "/*\r\nlet visualParams = new PP.VisualTorusParams();\r\nvisualParams.myRadius = 1;\r\nvisualParams.mySegmentsAmount = 12;\r\nvisualParams.mySegmentThickness = 0.05;\r\nvisualParams.myTransform.mat4_copy(transform);\r\nvisualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualTorus = new PP.VisualTorus(visualParams);\r\n*/\r\n\r\nPP.VisualTorusParams = class VisualTorusParams {\r\n\r\n    constructor() {\r\n        this.myTransform = PP.mat4_create();\r\n        this.myRadius = 0;\r\n\r\n        this.mySegmentsAmount = 12;\r\n        this.mySegmentThickness = 0.05;\r\n\r\n        this.mySegmentMesh = null;  // the mesh is scaled along up axis, null means it will default on PP.myDefaultResources.myMeshes.myCylinder\r\n\r\n        this.myMaterial = null;     // null means it will default on PP.myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // if this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.TORUS;\r\n    }\r\n};\r\n\r\nPP.VisualTorus = class VisualTorus {\r\n\r\n    constructor(params = new PP.VisualTorusParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myTorusRootObject = null;\r\n\r\n        this._myVisualSegmentList = [];\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n\r\n            if (this._myVisible) {\r\n                let segmentToShow = Math.min(this._myParams.mySegmentsAmount, this._myVisualSegmentList.length);\r\n\r\n                for (let i = 0; i < segmentToShow; i++) {\r\n                    let visualSegment = this._myVisualSegmentList[i];\r\n                    visualSegment.setVisible(true);\r\n                }\r\n            } else {\r\n                for (let visualSegment of this._myVisualSegmentList) {\r\n                    visualSegment.setVisible(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        let segmentToRefresh = Math.min(this._myParams.mySegmentsAmount, this._myVisualSegmentList.length);\r\n\r\n        for (let i = 0; i < segmentToRefresh; i++) {\r\n            let visualSegment = this._myVisualSegmentList[i];\r\n            visualSegment.forceRefresh();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n\r\n        for (let visualSegment of this._myVisualSegmentList) {\r\n            visualSegment.update(dt);\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myTorusRootObject = WL.scene.addObject(null);\r\n\r\n        this._fillSegmentList();\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    _fillSegmentList() {\r\n        while (this._myVisualSegmentList.length < this._myParams.mySegmentsAmount) {\r\n            let visualSegment = new PP.VisualLine();\r\n\r\n            visualSegment.setAutoRefresh(false);\r\n            visualSegment.setVisible(false);\r\n\r\n            visualSegment.getParams().myParent = this._myTorusRootObject;\r\n            visualSegment.getParams().myIsLocal = true;\r\n\r\n            this._myVisualSegmentList.push(visualSegment);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualTorusParams();\r\n        clonedParams.myRadius = this._myParams.myRadius;\r\n        clonedParams.mySegmentsAmount = this._myParams.mySegmentsAmount;\r\n        clonedParams.mySegmentThickness = this._myParams.mySegmentThickness;\r\n\r\n        clonedParams.myTransform.mat4_copy(this._myParams.myTransform);\r\n\r\n        clonedParams.mySegmentMesh = this._myParams.mySegmentMesh;\r\n\r\n        if (this._myParams.myMaterial != null) {\r\n            clonedParams.myMaterial = this._myParams.myMaterial.clone();\r\n        } else {\r\n            clonedParams.myMaterial = null;\r\n        }\r\n\r\n        if (this._myParams.myColor != null) {\r\n            clonedParams.myColor.vec4_copy(this._myParams.myColor);\r\n        } else {\r\n            clonedParams.myColor = null;\r\n        }\r\n\r\n        clonedParams.myParent = this._myParams.myParent;\r\n        clonedParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n        let clone = new PP.VisualTorus(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n};\r\n\r\nPP.VisualTorus.prototype._refresh = function () {\r\n    let segmentStart = PP.vec3_create();\r\n    let segmentEnd = PP.vec3_create();\r\n\r\n    let segmentDirection = PP.vec3_create();\r\n\r\n    let fixedSegmentStart = PP.vec3_create();\r\n    let fixedSegmentEnd = PP.vec3_create();\r\n\r\n    let up = PP.vec3_create(0, 1, 0);\r\n    return function _refresh() {\r\n        this._fillSegmentList();\r\n\r\n        for (let visualSegment of this._myVisualSegmentList) {\r\n            visualSegment.setVisible(false);\r\n        }\r\n\r\n        this._myTorusRootObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myTorusRootObject.pp_setTransformLocal(this._myParams.myTransform);\r\n        } else {\r\n            this._myTorusRootObject.pp_setTransform(this._myParams.myTransform);\r\n        }\r\n\r\n        let sliceAngle = 2 * Math.PI / this._myParams.mySegmentsAmount;\r\n        segmentStart.vec3_set(this._myParams.myRadius, 0, 0);\r\n        for (let i = 0; i < this._myParams.mySegmentsAmount; i++) {\r\n            segmentEnd = segmentStart.vec3_rotateAxisRadians(sliceAngle, up, segmentEnd);\r\n\r\n            segmentDirection = segmentEnd.vec3_sub(segmentStart, segmentDirection).vec3_normalize(segmentDirection);\r\n\r\n            let extraLength = Math.tan(sliceAngle / 2) * this._myParams.mySegmentThickness / 2;\r\n\r\n            fixedSegmentStart = segmentStart.vec3_sub(segmentDirection.vec3_scale(extraLength, fixedSegmentStart), fixedSegmentStart);\r\n            fixedSegmentEnd = segmentEnd.vec3_add(segmentDirection.vec3_scale(extraLength, fixedSegmentEnd), fixedSegmentEnd);\r\n\r\n            let visualSegment = this._myVisualSegmentList[i];\r\n\r\n            let visualSegmentParams = visualSegment.getParams();\r\n            visualSegmentParams.setStartEnd(fixedSegmentStart, fixedSegmentEnd);\r\n            visualSegmentParams.myThickness = this._myParams.mySegmentThickness;\r\n\r\n            visualSegmentParams.myMesh = this._myParams.mySegmentMesh;\r\n\r\n            if (this._myParams.myMaterial == null) {\r\n                if (this._myParams.myColor == null) {\r\n                    visualSegmentParams.myMaterial = PP.myVisualData.myDefaultMaterials.myDefaultMeshMaterial;\r\n                } else {\r\n                    if (this._myFlatOpaqueMaterial == null) {\r\n                        this._myFlatOpaqueMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                    }\r\n                    visualSegmentParams.myMaterial = this._myFlatOpaqueMaterial;\r\n                    this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n                }\r\n            } else {\r\n                visualSegmentParams.myMaterial = this._myParams.myMaterial;\r\n            }\r\n\r\n            visualSegment.paramsUpdated();\r\n\r\n            visualSegment.setVisible(this._myVisible);\r\n\r\n            segmentStart.vec3_copy(segmentEnd);\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.VisualTorus.prototype, \"_refresh\", { enumerable: false });", "WL.registerComponent('pp-visual-manager', {\r\n}, {\r\n    init: function () {\r\n        if (this.active) {\r\n            PP.myVisualData.myRootObject = WL.scene.addObject(null);\r\n\r\n            PP.myVisualManager = new PP.VisualManager();\r\n        }\r\n    },\r\n    start() {\r\n        PP.myVisualData.myDefaultMaterials.myDefaultMeshMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n\r\n        PP.myVisualData.myDefaultMaterials.myDefaultTextMaterial = PP.myDefaultResources.myMaterials.myText.clone();\r\n\r\n        PP.myVisualData.myDefaultMaterials.myDefaultRightMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        PP.myVisualData.myDefaultMaterials.myDefaultRightMaterial.color = PP.vec4_create(1, 0, 0, 1);\r\n        PP.myVisualData.myDefaultMaterials.myDefaultUpMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        PP.myVisualData.myDefaultMaterials.myDefaultUpMaterial.color = PP.vec4_create(0, 1, 0, 1);\r\n        PP.myVisualData.myDefaultMaterials.myDefaultForwardMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        PP.myVisualData.myDefaultMaterials.myDefaultForwardMaterial.color = PP.vec4_create(0, 0, 1, 1);\r\n\r\n        PP.myVisualData.myDefaultMaterials.myDefaultRayMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        PP.myVisualData.myDefaultMaterials.myDefaultRayMaterial.color = PP.vec4_create(0, 1, 0, 1);\r\n        PP.myVisualData.myDefaultMaterials.myDefaultHitNormalMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        PP.myVisualData.myDefaultMaterials.myDefaultHitNormalMaterial.color = PP.vec4_create(1, 0, 0, 1);\r\n\r\n        PP.myVisualManager.start();\r\n    },\r\n    update(dt) {\r\n        PP.myVisualManager.update(dt);\r\n    }\r\n});\r\n\r\nPP.myVisualManager = null;\r\n\r\nPP.myVisualData = {\r\n    myRootObject: null,\r\n    myDefaultMaterials: {\r\n        myDefaultMeshMaterial: null,\r\n        myDefaultTextMaterial: null,\r\n        myDefaultRightMaterial: null,\r\n        myDefaultUpMaterial: null,\r\n        myDefaultForwardMaterial: null,\r\n        myDefaultRayMaterial: null,\r\n        myDefaultHitNormalMaterial: null\r\n    }\r\n};", "PP.DebugManager = class DebugManager {\r\n    constructor() {\r\n        this._myDebugVisualManager = new PP.DebugVisualManager();\r\n    }\r\n\r\n    getDebugVisualManager() {\r\n        return this._myDebugVisualManager;\r\n    }\r\n\r\n    start() {\r\n        this._myDebugVisualManager.start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myDebugVisualManager.update(dt);\r\n    }\r\n};", "PP.DebugVisualManager = class DebugVisualManager extends PP.VisualManager {\r\n    drawLine(lifetimeSeconds, start, direction, length, color = PP.vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        let visualParams = new PP.VisualLineParams();\r\n        visualParams.myStart.vec3_copy(start);\r\n        visualParams.myDirection.vec3_copy(direction);\r\n        visualParams.myLength = length;\r\n        visualParams.myThickness = thickness;\r\n        visualParams.myColor = PP.vec4_create();\r\n        visualParams.myColor.vec4_copy(color);\r\n        this.draw(visualParams, lifetimeSeconds);\r\n    }\r\n\r\n    drawLineEnd(lifetimeSeconds, start, end, color = PP.vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    drawArrow(lifetimeSeconds, start, direction, length, color = PP.vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        let visualParams = new PP.VisualArrowParams();\r\n        visualParams.myStart.vec3_copy(start);\r\n        visualParams.myDirection.vec3_copy(direction);\r\n        visualParams.myLength = length;\r\n        visualParams.myThickness = thickness;\r\n        visualParams.myColor = PP.vec4_create();\r\n        visualParams.myColor.vec4_copy(color);\r\n        this.draw(visualParams, lifetimeSeconds);\r\n    }\r\n\r\n    drawArrowEnd(lifetimeSeconds, start, end, color = PP.vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    drawPoint(lifetimeSeconds, position, color = PP.vec4_create(0, 1, 0, 1), radius = 0.005) {\r\n        let visualParams = new PP.VisualPointParams();\r\n        visualParams.myPosition.vec3_copy(position);\r\n        visualParams.myRadius = radius;\r\n        visualParams.myColor = PP.vec4_create();\r\n        visualParams.myColor.vec4_copy(color);\r\n        this.draw(visualParams, lifetimeSeconds);\r\n    }\r\n\r\n    drawText(lifetimeSeconds, text, transform, color = PP.vec4_create(0, 1, 0, 1), alignment = WL.Alignment.Center, justification = WL.Justification.Middle) {\r\n        let visualParams = new PP.VisualTextParams();\r\n        visualParams.myText = text;\r\n        visualParams.myAlignment = alignment;\r\n        visualParams.myJustification = justification;\r\n        visualParams.myTransform.mat4_copy(transform);\r\n        visualParams.myColor = PP.vec4_create();\r\n        visualParams.myColor.vec4_copy(color);\r\n        this.draw(visualParams, lifetimeSeconds);\r\n    }\r\n\r\n    drawRaycast(lifetimeSeconds, raycastResult, showOnlyFirstHit = true, hitNormalLength = 0.2, thickness = 0.005) {\r\n        let visualParams = new PP.VisualRaycastParams();\r\n        visualParams.myRaycastResults = raycastResult;\r\n        visualParams.myShowOnlyFirstHit = showOnlyFirstHit;\r\n        visualParams.myHitNormalLength = hitNormalLength;\r\n        visualParams.myThickness = thickness;\r\n        this.draw(visualParams, lifetimeSeconds);\r\n    }\r\n\r\n    drawTransform(lifetimeSeconds, transform, length = 0.2, thickness = 0.005) {\r\n        let visualParams = new PP.VisualTransformParams();\r\n        visualParams.myTransform.mat4_copy(transform);\r\n        visualParams.myLength = length;\r\n        visualParams.myThickness = thickness;\r\n        this.draw(visualParams, lifetimeSeconds);\r\n    }\r\n};\r\n\r\nPP.DebugVisualManager.prototype.drawLineEnd = function () {\r\n    let direction = PP.vec3_create();\r\n    return function drawLineEnd(lifetimeSeconds, start, end, color = PP.vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        direction = end.vec3_sub(start, direction);\r\n        length = direction.vec3_length();\r\n        direction.vec3_normalize(direction);\r\n        this.drawLine(lifetimeSeconds, start, direction, length, color, thickness);\r\n    };\r\n}();\r\n\r\nPP.DebugVisualManager.prototype.drawArrowEnd = function () {\r\n    let direction = PP.vec3_create();\r\n    return function drawArrowEnd(lifetimeSeconds, start, end, color = PP.vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        direction = end.vec3_sub(start, direction);\r\n        length = direction.vec3_length();\r\n        direction.vec3_normalize(direction);\r\n        this.drawArrow(lifetimeSeconds, start, direction, length, color, thickness);\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.DebugVisualManager.prototype, \"drawLineEnd\", { enumerable: false });\r\nObject.defineProperty(PP.DebugVisualManager.prototype, \"drawArrowEnd\", { enumerable: false });", "WL.registerComponent(\"pp-debug-transform\", {\r\n    _myLength: { type: WL.Type.Float, default: 0.1 },\r\n    _myThickness: { type: WL.Type.Float, default: 0.005 }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myDebugTransformParams = new PP.VisualTransformParams();\r\n        this._myDebugTransformParams.myLength = this._myLength;\r\n        this._myDebugTransformParams.myThickness = this._myThickness;\r\n\r\n        this._myDebugVisualTransform = new PP.VisualTransform(this._myDebugTransformParams);\r\n    },\r\n    update: function (dt) {\r\n        this.object.pp_getTransform(this._myDebugTransformParams.myTransform);\r\n        this._myDebugVisualTransform.paramsUpdated();\r\n    }\r\n});", "WL.registerComponent('pp-debug-manager', {\r\n}, {\r\n    init: function () {\r\n        if (this.active) {\r\n            PP.myDebugManager = new PP.DebugManager();\r\n            PP.myDebugVisualManager = PP.myDebugManager.getDebugVisualManager();\r\n        }\r\n    },\r\n    start() {\r\n        PP.myDebugManager.start();\r\n    },\r\n    update(dt) {\r\n        PP.myDebugManager.update(dt);\r\n    }\r\n});\r\n\r\nPP.myDebugManager = null;\r\nPP.myDebugVisualManager = null;", "PP.Direction2DTo3DConverterParams = class Direction2DTo3DConverterParams {\r\n    constructor() {\r\n        this.myStartFlyingForward = false;\r\n        this.myStartFlyingRight = false;\r\n\r\n        this.myAutoUpdateFlyForward = false;\r\n        this.myAutoUpdateFlyRight = false;\r\n\r\n        this.myResetFlyForwardWhenZero = false;\r\n        this.myResetFlyRightWhenZero = false;\r\n\r\n        this.myMinAngleToFlyForwardUp = 90;\r\n        this.myMinAngleToFlyForwardDown = 90;\r\n        this.myMinAngleToFlyRightUp = 90;\r\n        this.myMinAngleToFlyRightDown = 90;\r\n    }\r\n};\r\n\r\nPP.Direction2DTo3DConverter = class Direction2DTo3DConverter {\r\n\r\n    constructor(params = new PP.Direction2DTo3DConverterParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myIsFlyingForward = this._myParams.myStartFlyingForward;\r\n        this._myIsFlyingRight = this._myParams.myStartFlyingRight;\r\n\r\n        this._myLastValidFlatForward = PP.vec3_create();\r\n        this._myLastValidFlatRight = PP.vec3_create();\r\n\r\n        //Setup\r\n\r\n        this._myMinAngleToBeValid = 5;\r\n    }\r\n\r\n    // direction3DUp can be used to flat the direction if the conversionTransform is not aligned with it\r\n    // it's also needed to specify the fly axis, if different from the conversionTransform up\r\n    // if direction3DUp is null, conversionTransform up is used\r\n    convert(direction2D, conversionTransform, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        return this.convertTransform(direction2D, conversionTransform, direction3DUp, outDirection3D);\r\n    }\r\n\r\n    isFlying() {\r\n        return this._myIsFlyingForward || this._myIsFlyingRight;\r\n    }\r\n\r\n    isFlyingForward() {\r\n        return this._myIsFlyingForward;\r\n    }\r\n\r\n    isFlyingRight() {\r\n        return this._myIsFlyingRight;\r\n    }\r\n\r\n    startFlying() {\r\n        this._myIsFlyingForward = true;\r\n        this._myIsFlyingRight = true;\r\n    }\r\n\r\n    startFlyingForward() {\r\n        this._myIsFlyingForward = true;\r\n    }\r\n\r\n    startFlyingRight() {\r\n        this._myIsFlyingRight = true;\r\n    }\r\n\r\n    stopFlying() {\r\n        this._myIsFlyingForward = false;\r\n        this._myIsFlyingRight = false;\r\n    }\r\n\r\n    stopFlyingForward() {\r\n        this._myIsFlyingForward = false;\r\n    }\r\n\r\n    stopFlyingRight() {\r\n        this._myIsFlyingRight = false;\r\n    }\r\n\r\n    resetFly() {\r\n        this.resetFlyForward();\r\n        this.resetFlyRight();\r\n    }\r\n\r\n    resetFlyForward() {\r\n        if (this._myParams.myStartFlyingForward) {\r\n            this.startFlyingForward();\r\n        } else {\r\n            this.stopFlyingForward();\r\n        }\r\n\r\n        this._myLastValidFlatForward.vec3_zero();\r\n    }\r\n\r\n    resetFlyRight() {\r\n        if (this._myParams.myStartFlyingRight) {\r\n            this.startFlyingRight();\r\n        } else {\r\n            this.stopFlyingRight();\r\n        }\r\n\r\n        this._myLastValidFlatRight.vec3_zero();\r\n    }\r\n\r\n    // Convert Alternatives\r\n\r\n    // if direction3DUp is null, PP.vec3_create(0, 1, 0) is used\r\n    // does not work properly if forward is aligned with direction3DUp\r\n    convertForward(direction2D, forward, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    // direction3DUp can be used to flat the direction if the conversionTransform is not aligned with it\r\n    // it's also needed to specify the fly axis, if different from the conversionTransform up\r\n    // if direction3DUp is null, conversionTransform up is used\r\n    convertTransform(direction2D, conversionTransform, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        return this.convertTransformMatrix(direction2D, conversionTransform, direction3DUp, outDirection3D);\r\n    }\r\n\r\n    convertTransformMatrix(direction2D, conversionTransformMatrix, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    convertTransformQuat(direction2D, conversionTransformQuat, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    convertRotationQuat(direction2D, conversionRotationQuat, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.Direction2DTo3DConverter.prototype.convertForward = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function convertForward(direction2D, forward, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        rotationQuat.quat_identity();\r\n        rotationQuat.quat_setForward(forward, direction3DUp);\r\n        return this.convertRotationQuat(direction2D, rotationQuat, direction3DUp, outDirection3D);\r\n    }\r\n}();\r\n\r\nPP.Direction2DTo3DConverter.prototype.convertTransformMatrix = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function convertTransformMatrix(direction2D, conversionTransformMatrix, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        rotationQuat = conversionTransformMatrix.mat4_getRotationQuat(rotationQuat);\r\n        return this.convertRotationQuat(direction2D, rotationQuat, direction3DUp, outDirection3D);\r\n    }\r\n}();\r\n\r\nPP.Direction2DTo3DConverter.prototype.convertTransformQuat = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function convertTransformQuat(direction2D, conversionTransformQuat, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        rotationQuat = conversionTransformQuat.quat2_getRotationQuat(rotationQuat);\r\n        return this.convertRotationQuat(direction2D, rotationQuat, direction3DUp, outDirection3D);\r\n    }\r\n}();\r\n\r\nPP.Direction2DTo3DConverter.prototype.convertRotationQuat = function () {\r\n    let forward = PP.vec3_create();\r\n    let right = PP.vec3_create();\r\n    let direction3DUpNegate = PP.vec3_create();\r\n    let forwardScaled = PP.vec3_create();\r\n    let rightScaled = PP.vec3_create();\r\n    return function convertRotationQuat(direction2D, conversionRotationQuat, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        if (direction2D.vec2_isZero()) {\r\n            let resetFlyForward = this._myParams.myAutoUpdateFlyForward && this._myParams.myResetFlyForwardWhenZero;\r\n            if (resetFlyForward) {\r\n                this.resetFlyForward();\r\n            }\r\n\r\n            let resetFlyRight = this._myParams.myAutoUpdateFlyRight && this._myParams.myResetFlyRightWhenZero;\r\n            if (resetFlyRight) {\r\n                this.resetFlyRight();\r\n            }\r\n\r\n            outDirection3D.vec3_zero();\r\n            return outDirection3D;\r\n        } else {\r\n            if (direction2D[0] == 0) {\r\n                this._myLastValidFlatRight.vec3_zero();\r\n            }\r\n\r\n            if (direction2D[1] == 0) {\r\n                this._myLastValidFlatForward.vec3_zero();\r\n            }\r\n        }\r\n\r\n        forward = conversionRotationQuat.quat_getForward(forward);\r\n        right = conversionRotationQuat.quat_getRight(right);\r\n\r\n        if (direction3DUp != null) {\r\n            direction3DUpNegate = direction3DUp.vec3_negate(direction3DUpNegate);\r\n\r\n            // check if it is flying based on the convert transform orientation \r\n            if (this._myParams.myAutoUpdateFlyForward) {\r\n                let angleForwardWithDirectionUp = forward.vec3_angle(direction3DUp);\r\n                this._myIsFlyingForward = this._myIsFlyingForward ||\r\n                    (angleForwardWithDirectionUp < 90 - this._myParams.myMinAngleToFlyForwardUp || angleForwardWithDirectionUp > 90 + this._myParams.myMinAngleToFlyForwardDown);\r\n            }\r\n\r\n            if (this._myParams.myAutoUpdateFlyRight) {\r\n                let angleRightWithDirectionUp = right.vec3_angle(direction3DUp);\r\n                this._myIsFlyingRight = this._myIsFlyingRight ||\r\n                    (angleRightWithDirectionUp < 90 - this._myParams.myMinAngleToFlyRightUp || angleRightWithDirectionUp > 90 + this._myParams.myMinAngleToFlyRightDown);\r\n            }\r\n\r\n            // remove the component to prevent flying, if needed\r\n            if (!this._myIsFlyingForward) {\r\n                // if the forward is too similar to the up (or down) take the last valid forward\r\n                if (!this._myLastValidFlatForward.vec3_isZero(0.000001) && (forward.vec3_angle(direction3DUp) < this._myMinAngleToBeValid || forward.vec3_angle(direction3DUpNegate) < this._myMinAngleToBeValid)) {\r\n                    if (forward.vec3_isConcordant(this._myLastValidFlatForward)) {\r\n                        forward.pp_copy(this._myLastValidFlatForward);\r\n                    } else {\r\n                        forward = this._myLastValidFlatForward.vec3_negate(forward);\r\n                    }\r\n                }\r\n\r\n                forward = forward.vec3_removeComponentAlongAxis(direction3DUp, forward);\r\n                forward.vec3_normalize(forward);\r\n            }\r\n\r\n            if (!this._myIsFlyingRight) {\r\n                // if the right is too similar to the up (or down) take the last valid right\r\n                if (!this._myLastValidFlatRight.vec3_isZero(0.000001) && (right.vec3_angle(direction3DUp) < this._myMinAngleToBeValid || right.vec3_angle(direction3DUpNegate) < this._myMinAngleToBeValid)) {\r\n                    if (right.vec3_isConcordant(this._myLastValidFlatRight)) {\r\n                        right.pp_copy(this._myLastValidFlatRight);\r\n                    } else {\r\n                        right = this._myLastValidFlatRight.vec3_negate(right);\r\n                    }\r\n                }\r\n\r\n                right = right.vec3_removeComponentAlongAxis(direction3DUp, right);\r\n                right.vec3_normalize(right);\r\n            }\r\n\r\n            // update last valid\r\n            if ((forward.vec3_angle(direction3DUp) > this._myMinAngleToBeValid && forward.vec3_angle(direction3DUpNegate) > this._myMinAngleToBeValid) ||\r\n                (direction2D[1] != 0 && this._myLastValidFlatForward.vec3_isZero(0.000001))) {\r\n                this._myLastValidFlatForward = forward.vec3_removeComponentAlongAxis(direction3DUp, this._myLastValidFlatForward);\r\n                this._myLastValidFlatForward.vec3_normalize(this._myLastValidFlatForward);\r\n            }\r\n\r\n            if ((right.vec3_angle(direction3DUp) > this._myMinAngleToBeValid && right.vec3_angle(direction3DUpNegate) > this._myMinAngleToBeValid) ||\r\n                (direction2D[0] != 0 && this._myLastValidFlatRight.vec3_isZero(0.000001))) {\r\n                this._myLastValidFlatRight = right.vec3_removeComponentAlongAxis(direction3DUp, this._myLastValidFlatRight);\r\n                this._myLastValidFlatRight.vec3_normalize(this._myLastValidFlatRight);\r\n            }\r\n        }\r\n\r\n        // compute direction 3D\r\n        outDirection3D = right.vec3_scale(direction2D[0], rightScaled).vec3_add(forward.vec3_scale(direction2D[1], forwardScaled), outDirection3D);\r\n\r\n        if (direction3DUp != null && !this._myIsFlyingForward && !this._myIsFlyingRight) {\r\n            outDirection3D = outDirection3D.vec3_removeComponentAlongAxis(direction3DUp, outDirection3D);\r\n        }\r\n\r\n        outDirection3D.vec3_normalize(outDirection3D);\r\n\r\n        return outDirection3D;\r\n    };\r\n}();", "//This is added just to make it easy to just use plain number instead of doing new PP.NumberOverValue(<number>) \r\n//You can remove this if it cause issues but you won't be able anymore to use plain number and will have to use new PP.NumberOverValue(<number>) \r\nNumber.prototype.get = function () {\r\n    return this.valueOf();\r\n};\r\nObject.defineProperty(Number.prototype, \"get\", { enumerable: false });\r\n\r\n//You can just put startNumber if u want a number that doesn't actually change -> new PP.NumberOverValue(13)\r\nPP.NumberOverValue = class NumberOverValue {\r\n    constructor(startNumber, endNumber = null, startInterpolationValue = 0, endInterpolationValue = 0, easingFunction = PP.EasingFunction.linear, roundingFunction = null) {\r\n        if (endNumber == null) {\r\n            endNumber = startNumber;\r\n        }\r\n\r\n        this._myStartNumber = startNumber;\r\n        this._myEndNumber = endNumber;\r\n\r\n        this._myStartInterpolationValue = startInterpolationValue;\r\n        this._myEndInterpolationValue = endInterpolationValue;\r\n\r\n        this._myEasingFunction = easingFunction;\r\n        this._myRoundingFunction = roundingFunction; // function(numberToRound, startNumber = null, endNumber = null), Math.round/floor/ceil can be used, must return an int\r\n    }\r\n\r\n    get(interpolationValue) {\r\n        let lerpInterpolationValue = this._myEasingFunction(Math.pp_mapToRange(interpolationValue, this._myStartInterpolationValue, this._myEndInterpolationValue, 0, 1));\r\n        let lerpNumber = Math.pp_lerp(this._myStartNumber, this._myEndNumber, lerpInterpolationValue);\r\n\r\n        if (this._myRoundingFunction) {\r\n            lerpNumber = this._myRoundingFunction(lerpNumber, this._myStartNumber, this._myEndNumber);\r\n        }\r\n\r\n        return lerpNumber;\r\n    }\r\n\r\n    getAverage(interpolationValue) {\r\n        return this.get(interpolationValue);\r\n    }\r\n\r\n    getRange(interpolationValue) {\r\n        let number = this.get(interpolationValue);\r\n        return [number, number];\r\n    }\r\n\r\n    getMax(interpolationValue) {\r\n        return this.get(interpolationValue);\r\n    }\r\n\r\n    getMin(interpolationValue) {\r\n        return this.get(interpolationValue);\r\n    }\r\n\r\n    isInside(number, interpolationValue) {\r\n        let currentNumber = this.get(interpolationValue);\r\n\r\n        return currentNumber == number;\r\n    }\r\n\r\n    isInsideAngleRange(number, interpolationValue) {\r\n        return this.isInsideAngleRangeDegrees(number, interpolationValue);\r\n    }\r\n\r\n    isInsideAngleRangeDegrees(number, interpolationValue) {\r\n        let currentNumber = this.get(interpolationValue);\r\n\r\n        let clampedNumber = Math.pp_angleClampDegrees(number);\r\n        let clampedCurrentNumber = Math.pp_angleClampDegrees(currentNumber);\r\n\r\n        return clampedNumber == clampedCurrentNumber;\r\n    }\r\n\r\n    isInsideAngleRangeRadians(number, interpolationValue) {\r\n        let currentNumber = this.get(interpolationValue);\r\n\r\n        let clampedNumber = Math.pp_angleClampRadians(number);\r\n        let clampedCurrentNumber = Math.pp_angleClampRadians(currentNumber);\r\n\r\n        return clampedNumber == clampedCurrentNumber;\r\n    }\r\n};\r\n\r\nPP.IntOverValue = class IntOverValue extends PP.NumberOverValue {\r\n    constructor(startNumber, endNumber, startInterpolationValue, endInterpolationValue, easingFunction = PP.EasingFunction.linear, roundingFunction = null) {\r\n        if (roundingFunction == null) {\r\n            roundingFunction = function (numberToRound, startNumber, endNumber) {\r\n                let roundedNumber = null;\r\n\r\n                let useFloor = startNumber <= endNumber;\r\n                if (useFloor) {\r\n                    roundedNumber = Math.floor(numberToRound);\r\n                } else {\r\n                    roundedNumber = Math.ceil(numberToRound);\r\n                }\r\n\r\n                return roundedNumber;\r\n            };\r\n        }\r\n\r\n        super(startNumber, endNumber, startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n    }\r\n};\r\n\r\n//You can just put startRange if u want a range that doesn't actually change -> new PP.NumberOverValue([1,25])\r\nPP.NumberRangeOverValue = class NumberRangeOverValue {\r\n    constructor(startRange, endRange = null, startInterpolationValue = 0, endInterpolationValue = 0, easingFunction = PP.EasingFunction.linear, roundingFunction = null) {\r\n        if (endRange == null) {\r\n            endRange = startRange;\r\n        }\r\n\r\n        this._myStartNumberOverValue = new PP.NumberOverValue(startRange[0], endRange[0], startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n        this._myEndNumberOverValue = new PP.NumberOverValue(startRange[1], endRange[1], startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n\r\n        this._myRoundingFunction = roundingFunction; // function(numberToRound, startNumber = null, endNumber = null), Math.round/floor/ceil can be used, must return an int\r\n    }\r\n\r\n    get(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        let randomValue = null;\r\n\r\n        if (this._myRoundingFunction) {\r\n            randomValue = Math.pp_randomInt(startNumber, endNumber);\r\n        } else {\r\n            randomValue = Math.pp_random(startNumber, endNumber);\r\n        }\r\n\r\n        return randomValue;\r\n    }\r\n\r\n    getAverage(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        let average = (startNumber + endNumber) / 2;\r\n        if (this._myRoundingFunction) {\r\n            average = this._myRoundingFunction(average, startNumber, endNumber);\r\n        }\r\n\r\n        return average;\r\n    }\r\n\r\n    getRange(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return [startNumber, endNumber];\r\n    }\r\n\r\n    getMax(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.max(startNumber, endNumber);\r\n    }\r\n\r\n    getMin(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.min(startNumber, endNumber);\r\n    }\r\n\r\n    isInside(number, interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        let min = Math.min(startNumber, endNumber);\r\n        let max = Math.max(startNumber, endNumber);\r\n\r\n        return number >= min && number <= max;\r\n    }\r\n\r\n    isInsideAngleRange(number, interpolationValue) {\r\n        return this.isInsideAngleRangeDegrees(number, interpolationValue);\r\n    }\r\n\r\n    isInsideAngleRangeDegrees(number, interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.pp_isInsideAngleRangeDegrees(number, startNumber, endNumber);\r\n    }\r\n\r\n    isInsideAngleRangeRadians(number, interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.pp_isInsideAngleRangeRadians(number, startNumber, endNumber);\r\n    }\r\n};\r\n\r\nPP.IntRangeOverValue = class IntRangeOverValue extends PP.NumberRangeOverValue {\r\n    constructor(startRange, endRange, startInterpolationValue, endInterpolationValue, easingFunction = PP.EasingFunction.linear, roundingFunction = null) {\r\n        if (roundingFunction == null) {\r\n            roundingFunction = function (numberToRound, startNumber, endNumber) {\r\n                let roundedNumber = null;\r\n\r\n                let useFloor = startNumber <= endNumber;\r\n                if (useFloor) {\r\n                    roundedNumber = Math.floor(numberToRound);\r\n                } else {\r\n                    roundedNumber = Math.ceil(numberToRound);\r\n                }\r\n\r\n                return roundedNumber;\r\n            };\r\n        }\r\n\r\n        super(startRange, endRange, startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n    }\r\n};", "PP.PlayerHeadController = class PlayerHeadController {\r\n    constructor() {\r\n    }\r\n};", "PP.PlayerOcclusion = class PlayerOcclusion {\r\n    constructor() {\r\n    }\r\n};", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.PlayerHeadControllerComponent = class PlayerHeadControllerComponent extends Component {\r\n    static TypeName = 'pp-player-head-controller';\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerHeadController = new PP.PlayerHeadController();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerHeadController.update(dt);\r\n    }\r\n\r\n    getPlayerHeadController() {\r\n        return this._myPlayerHeadController;\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.PlayerHeadControllerComponent);", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.PlayerOcclusionComponent = class PlayerOcclusionComponent extends Component {\r\n    static TypeName = 'pp-player-occlusion';\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerOcclusion = new PP.PlayerOcclusion();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerOcclusion.update(dt);\r\n    }\r\n\r\n    getPlayerOcclusion() {\r\n        return this._myPlayerOcclusion;\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.PlayerOcclusionComponent);", "\r\nCollisionCheckParams = class CollisionCheckParams {\r\n    constructor() {\r\n        this.mySplitMovementEnabled = false;\r\n        this.mySplitMovementMaxLength = 0;\r\n        this.mySplitMovementMaxStepsEnabled = false;\r\n        this.mySplitMovementMaxSteps = 0;\r\n        this.mySplitMovementStepEqualLength = false;\r\n        this.mySplitMovementStepEqualLengthMinLength = 0;\r\n        this.mySplitMovementStopWhenHorizontalMovementCanceled = false;\r\n        this.mySplitMovementStopWhenVerticalMovementCanceled = false;\r\n        this.mySplitMovementStopCallback = null;                        // Signature: callback(collisionRuntimeParams)\r\n        this.mySplitMovementStopReturnPrevious = false;\r\n\r\n        this.myRadius = 0;\r\n        this.myDistanceFromFeetToIgnore = 0;\r\n        this.myDistanceFromHeadToIgnore = 0;\r\n\r\n        this.myPositionOffsetLocal = PP.vec3_create();\r\n        this.myRotationOffsetLocalQuat = PP.quat_create();\r\n\r\n        this.myHorizontalMovementCheckEnabled = false;\r\n\r\n        // usually the horizontal movement is very small and it could be simply skipped has a check, the horizontal position check will be enough\r\n        // with small I mean that it's very unlikely that in 10 cm of movement in a frame u are going to hit something in between but not in the final position\r\n        // if u feel like the movement is bigger or want to be sure u can always enabled this\r\n        // if the movement is really that big it's probably better to use the mySplitMovementEnabled flag and split the movement check into smaller movements\r\n        this.myHorizontalMovementStepEnabled = false;\r\n        this.myHorizontalMovementStepMaxLength = 0;\r\n\r\n        this.myHorizontalMovementRadialStepAmount = 0;\r\n        this.myHorizontalMovementCheckDiagonalOutward = false;\r\n        this.myHorizontalMovementCheckDiagonalInward = false;\r\n        this.myHorizontalMovementCheckStraight = false;\r\n        this.myHorizontalMovementCheckHorizontalBorder = false;\r\n        this.myHorizontalMovementCheckVerticalStraight = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardInward = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardInward = false;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalUpward = false;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalDownward = false;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = false;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = false;\r\n        this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionCheckEnabled = false;\r\n\r\n        this.myHalfConeAngle = 0;\r\n        this.myHalfConeSliceAmount = 0;\r\n        this.myCheckConeBorder = false;\r\n        this.myCheckConeRay = false;\r\n        this.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = true; // true gives less issues(tm), but may also collide a bit more, resulting in less sliding\r\n        this.myHorizontalPositionCheckVerticalDirectionType = 0; // somewhat expensive, 2 times the check for the vertical check of the horizontal movement!\r\n        // 0: check upward, gives less issues(tm) (hitting a very small step at the end of a slope /-) with a grounded movement (not fly or snapped to ceiling), but may also collide a bit more, resulting in less sliding\r\n        // 1: check downard, gives less issues(tm) with a ceiling-ed movement (not fly or snapped to ground), but may also collide a bit more, resulting in less sliding and more stuck in front of a wall\r\n        // 2: check both directions, more expensive and better prevent collision, sliding more, but is more expensive and gives more issues            \r\n        //                                                                                                                                                      ___\r\n        // the issues(tm) means that a small step at the end of a slope, maybe due to 2 rectangles, one for the floor and the other for the slope like this -> /   \r\n        // can create a small step if the floor rectangle is a bit above the end of the slope, this will make the character get stuck thinking it's a wall\r\n        // 0 avoid this issue for a grounded movement, 2 instead do a more \"aggressive\" vertical check that makes the character get less stuck in other situations, but can get stuck in this one\r\n        // the better solution is to properly create the level, and if possible combine the 2 rectangles by having the floor a little below the end of the slope\r\n        // the step that is created \"on the other side\" in fact can easily be ignored thanks to the myDistanceFromFeetToIgnore field\r\n        // if the level is properly created the best solution should be myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = false and myHorizontalPositionCheckVerticalDirectionType = 0\r\n\r\n        this.myCheckHorizontalFixedForwardEnabled = false; // this is basically only useful if the cone angle is 180 degrees\r\n        this.myCheckHorizontalFixedForward = PP.vec3_create();\r\n\r\n        this.myVerticalMovementCheckEnabled = false;\r\n        this.myVerticalPositionCheckEnabled = false;\r\n        this.myFeetRadius = 0;\r\n\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhill = false;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphill = false;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle = null;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle = null;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhill = false;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = null;\r\n\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhill = false;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphill = false;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = null;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhill = false;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle = null;\r\n\r\n        this.myCheckVerticalFixedForwardEnabled = false;\r\n        this.myCheckVerticalFixedForward = PP.vec3_create();\r\n        this.myCheckVerticalBothDirection = false;\r\n\r\n        this.mySnapOnGroundEnabled = false;\r\n        this.mySnapOnGroundExtraDistance = 0;\r\n        this.mySnapOnCeilingEnabled = false;\r\n        this.mySnapOnCeilingExtraDistance = 0;\r\n\r\n        this.myGroundPopOutEnabled = false;\r\n        this.myGroundPopOutExtraDistance = 0;\r\n        this.myCeilingPopOutEnabled = false;\r\n        this.myCeilingPopOutExtraDistance = 0;\r\n\r\n        this.myVerticalMovementReduceEnabled = false;\r\n\r\n        this.myGroundCircumferenceAddCenter = false;\r\n        this.myGroundCircumferenceSliceAmount = 0;\r\n        this.myGroundCircumferenceStepAmount = 0;\r\n        this.myGroundCircumferenceRotationPerStep = 0;\r\n        this.myVerticalAllowHitInsideCollisionIfOneOk = false;\r\n\r\n        this.myCheckHeight = false;\r\n        this.myCheckHeightVerticalMovement = false;\r\n        this.myCheckHeightVerticalPosition = false;\r\n        this.myCheckHeightTopMovement = false;\r\n        this.myCheckHeightTopPosition = false;\r\n        this.myCheckHeightConeOnCollision = false;\r\n        this.myCheckHeightConeOnCollisionKeepHit = false;\r\n        // if true and myCheckHeightConeOnCollision is true, if the cone does not hit the height hit will be restored\r\n        // the fact that the cone does not hit could be due to the fact that it thinks that the collision can be ignored though, sop restoring can be a bit safer but also collide more\r\n\r\n        this.myHeightCheckStepAmountMovement = 0;\r\n        this.myHeightCheckStepAmountPosition = 0;\r\n        this.myCheckVerticalStraight = false;\r\n        this.myCheckVerticalDiagonalRayOutward = false;\r\n        this.myCheckVerticalDiagonalRayInward = false;\r\n        this.myCheckVerticalDiagonalBorderOutward = false;\r\n        this.myCheckVerticalDiagonalBorderInward = false;\r\n        this.myCheckVerticalDiagonalBorderRayOutward = false;\r\n        this.myCheckVerticalDiagonalBorderRayInward = false;\r\n        this.myCheckVerticalSearchFartherVerticalHit = false; //somewhat expensive, but can help fix sime sliding issues\r\n\r\n        this.myGroundAngleToIgnore = 0;\r\n        this.myGroundAngleToIgnoreWithPerceivedAngle = null;\r\n        this.myCeilingAngleToIgnore = 0;\r\n        this.myCeilingAngleToIgnoreWithPerceivedAngle = null;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreHeight = null;\r\n        this.myHorizontalMovementCeilingAngleIgnoreHeight = null;\r\n        this.myHorizontalPositionGroundAngleIgnoreHeight = null;\r\n        this.myHorizontalPositionCeilingAngleIgnoreHeight = null;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = null;\r\n        this.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft = null;\r\n\r\n        this.myHeight = 0;\r\n\r\n        this.myComputeGroundInfoEnabled = false;\r\n        this.myComputeCeilingInfoEnabled = false;\r\n        this.myDistanceToBeOnGround = 0;\r\n        this.myDistanceToComputeGroundInfo = 0;\r\n        this.myDistanceToBeOnCeiling = 0;\r\n        this.myDistanceToComputeCeilingInfo = 0;\r\n        this.myVerticalFixToBeOnGround = 0;\r\n        this.myVerticalFixToComputeGroundInfo = 0;\r\n        this.myVerticalFixToBeOnCeiling = 0;\r\n        this.myVerticalFixToComputeCeilingInfo = 0;\r\n        this.myGroundIsBaseInsideCollisionCheckEnabled = false;\r\n        this.myCeilingIsBaseInsideCollisionCheckEnabled = false;\r\n        this.myIsOnGroundIfInsideHit = false;\r\n        this.myIsOnCeilingIfInsideHit = false;\r\n        this.myIsOnGroundMaxSurfaceAngle = null;\r\n        this.myIsOnCeilingMaxSurfaceAngle = null;\r\n        this.myFindGroundDistanceMaxOutsideDistance = 0;\r\n        this.myFindGroundDistanceMaxInsideDistance = 0;\r\n        this.myFindCeilingDistanceMaxOutsideDistance = 0;\r\n        this.myFindCeilingDistanceMaxInsideDistance = 0;\r\n\r\n        this.myAllowGroundSteepFix = false;\r\n        this.myAllowCeilingSteepFix = false;\r\n        this.myMustStayOnGround = false;\r\n        this.myMustStayOnCeiling = false;\r\n        this.myMustStayOnValidGroundAngleDownhill = false;\r\n        this.myMustStayOnValidCeilingAngleDownhill = false;\r\n        this.myRegatherGroundInfoOnSurfaceCheckFail = false;\r\n        this.myRegatherCeilingInfoOnSurfaceCheckFail = false;\r\n        this.myMustStayBelowIgnorableGroundAngleDownhill = false;\r\n        this.myMustStayBelowIgnorableCeilingAngleDownhill = false;\r\n        this.myMustStayBelowGroundAngleDownhill = null;\r\n        this.myMustStayBelowCeilingAngleDownhill = null;\r\n        this.myMovementMustStayOnGroundHitAngle = null;\r\n        this.myMovementMustStayOnCeilingHitAngle = null;\r\n\r\n        this.myTeleportMustBeOnIgnorableGroundAngle = false;\r\n        this.myCheckTransformMustBeOnIgnorableGroundAngle = false;\r\n        this.myTeleportMustBeOnIgnorableCeilingAngle = false;\r\n        this.myCheckTransformMustBeOnIgnorableCeilingAngle = false;\r\n\r\n        this.myTeleportMustBeOnGroundAngle = null;\r\n        this.myCheckTransformMustBeOnGroundAngle = null;\r\n        this.myTeleportMustBeOnCeilingAngle = null;\r\n        this.myCheckTransformMustBeOnCeilingAngle = null;\r\n\r\n        this.myTeleportMustBeOnGround = false;\r\n        this.myCheckTransformMustBeOnGround = false;\r\n        this.myTeleportMustBeOnCeiling = false;\r\n        this.myCheckTransformMustBeOnCeiling = false;\r\n\r\n        this.mySlidingEnabled = false;\r\n        this.mySlidingHorizontalMovementCheckBetterNormal = false;\r\n        this.mySlidingMaxAttempts = 0;\r\n        this.mySlidingCheckBothDirections = false;       // expensive, 2 times the check for the whole horizontal movement!\r\n        // this can fix some edge cases in which u can get stuck instead of sliding\r\n        // it basically require that u also add flicker prevention\r\n\r\n        this.mySlidingFlickeringPreventionType = 0;      // expensive, 2 times the check for the whole horizontal movement!\r\n        // 0: no prevention\r\n        // 1: use previous frame data to understand if the sliding could flicker, this avoid stopping the movement when the flicker would just last some frames, \r\n        //    but also allows a bit of flicker that stabilize after 2-3 frames\r\n        // 2: check when sliding collision angle is more then 90 degrees, prevents most flicker apart those on almost flat surfaces\r\n        // 3: check 2 + check when sliding movement angle is more then 85 degrees, prevents almost all flicker, even on almost flat surfaces\r\n        // 4: check every time\r\n        //\r\n        // from 3 and above you could have that the flicker prevents the movement when u expect it, because it's a more aggressive prevention\r\n        // in case a fluid movement is more important than a bit of flicker from time to time, 1 is a better choice (which is also less expensive than 3 and above)\r\n        // 2 is just a less expensive version of 3 (check less times) but also less precise, allowing more flickering\r\n\r\n        this.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = false;\r\n        // this flag make it so the prevention is done only if it was already sliding, this can lead to a few frames of flicker if u go toward a corner directly\r\n        // but allow the movement to be more fluid, avoiding getting stuck\r\n\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = 0;\r\n        // if the collision think it needs to check for flicker, it will keep checking for the next X frames based on this value even if the condition are not met anymore\r\n        // this help in catching the flicker when the direction is not changing every frame but every 2-3 for example\r\n        // it's especially useful if combo-ed with mySlidingFlickeringPreventionType #1, making it a bit less fluid but also less flickering\r\n\r\n        this.mySlidingAdjustSign90Degrees = false;\r\n\r\n        this.myHorizontalBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myHorizontalObjectsToIgnore = [];\r\n\r\n        this.myVerticalBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myVerticalObjectsToIgnore = [];\r\n\r\n        this.myExtraMovementCheckCallback = null;              // Signature: callback(startMovement, endMovement, currentPosition, currentTransformUp, currentTransformForward, currentHeight, collisionCheckParams, prevCollisionRuntimeParams, outCollisionRuntimeParams, outFixedMovement) -> outFixedMovement\r\n        this.myExtraTeleportCheckCallback = null;              // Signature: callback(collisionRuntimeParams) -> bool\r\n        this.myExtraCheckTransformCheckCallback = null;        // Signature: callback(collisionRuntimeParams) -> bool\r\n\r\n        this.myDebugActive = false;\r\n\r\n        this.myDebugHorizontalMovementActive = false;\r\n        this.myDebugHorizontalPositionActive = false;\r\n        this.myDebugVerticalMovementActive = false;\r\n        this.myDebugVerticalPositionActive = false;\r\n        this.myDebugSlidingActive = false;\r\n        this.myDebugGroundInfoActive = false;\r\n        this.myDebugCeilingInfoActive = false;\r\n        this.myDebugRuntimeParamsActive = false;\r\n        this.myDebugMovementActive = false;\r\n    }\r\n\r\n    copy(other) {\r\n        this.mySplitMovementEnabled = other.mySplitMovementEnabled;\r\n        this.mySplitMovementMaxLength = other.mySplitMovementMaxLength;\r\n        this.mySplitMovementMaxStepsEnabled = other.mySplitMovementMaxStepsEnabled;\r\n        this.mySplitMovementMaxSteps = other.mySplitMovementMaxSteps;\r\n        this.mySplitMovementStepEqualLength = other.mySplitMovementStepEqualLength;\r\n        this.mySplitMovementStepEqualLengthMinLength = other.mySplitMovementStepEqualLengthMinLength;\r\n        this.mySplitMovementStopWhenHorizontalMovementCanceled = other.mySplitMovementStopWhenHorizontalMovementCanceled;\r\n        this.mySplitMovementStopWhenVerticalMovementCanceled = other.mySplitMovementStopWhenVerticalMovementCanceled;\r\n        this.mySplitMovementStopCallback = other.mySplitMovementStopCallback;\r\n        this.mySplitMovementStopReturnPrevious = other.mySplitMovementStopReturnPrevious;\r\n\r\n        this.myRadius = other.myRadius;\r\n        this.myDistanceFromFeetToIgnore = other.myDistanceFromFeetToIgnore;\r\n        this.myDistanceFromHeadToIgnore = other.myDistanceFromHeadToIgnore;\r\n\r\n        this.myPositionOffsetLocal.vec3_copy(other.myPositionOffsetLocal);\r\n        this.myRotationOffsetLocalQuat.quat_copy(other.myRotationOffsetLocalQuat);\r\n\r\n        this.myHorizontalMovementCheckEnabled = other.myHorizontalMovementCheckEnabled;\r\n        this.myHorizontalMovementStepEnabled = other.myHorizontalMovementStepEnabled;\r\n        this.myHorizontalMovementStepMaxLength = other.myHorizontalMovementStepMaxLength;\r\n        this.myHorizontalMovementRadialStepAmount = other.myHorizontalMovementRadialStepAmount;\r\n        this.myHorizontalMovementCheckDiagonalOutward = other.myHorizontalMovementCheckDiagonalOutward;\r\n        this.myHorizontalMovementCheckDiagonalInward = other.myHorizontalMovementCheckDiagonalInward;\r\n        this.myHorizontalMovementCheckStraight = other.myHorizontalMovementCheckStraight;\r\n        this.myHorizontalMovementCheckHorizontalBorder = other.myHorizontalMovementCheckHorizontalBorder;\r\n        this.myHorizontalMovementCheckVerticalStraight = other.myHorizontalMovementCheckVerticalStraight;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = other.myHorizontalMovementCheckVerticalDiagonalUpwardOutward;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardInward = other.myHorizontalMovementCheckVerticalDiagonalUpwardInward;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = other.myHorizontalMovementCheckVerticalDiagonalDownwardOutward;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardInward = other.myHorizontalMovementCheckVerticalDiagonalDownwardInward;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalUpward = other.myHorizontalMovementCheckVerticalStraightDiagonalUpward;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalDownward = other.myHorizontalMovementCheckVerticalStraightDiagonalDownward;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = other.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = other.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward;\r\n        this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = other.myHorizontalMovementHorizontalStraightCentralCheckEnabled;\r\n        this.myHorizontalMovementVerticalStraightCentralCheckEnabled = other.myHorizontalMovementVerticalStraightCentralCheckEnabled;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled;\r\n\r\n        this.myHorizontalPositionCheckEnabled = other.myHorizontalPositionCheckEnabled;\r\n        this.myHalfConeAngle = other.myHalfConeAngle;\r\n        this.myHalfConeSliceAmount = other.myHalfConeSliceAmount;\r\n        this.myCheckConeBorder = other.myCheckConeBorder;\r\n        this.myCheckConeRay = other.myCheckConeRay;\r\n        this.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = other.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision;\r\n        this.myHorizontalPositionCheckVerticalDirectionType = other.myHorizontalPositionCheckVerticalDirectionType;\r\n\r\n        this.myVerticalMovementCheckEnabled = other.myVerticalMovementCheckEnabled;\r\n        this.myVerticalPositionCheckEnabled = other.myVerticalPositionCheckEnabled;\r\n        this.myFeetRadius = other.myFeetRadius;\r\n\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhill = other.myAdjustVerticalMovementWithGroundAngleDownhill;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphill = other.myAdjustVerticalMovementWithGroundAngleUphill;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle = other.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle = other.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle = other.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle = other.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhill = other.myAdjustHorizontalMovementWithGroundAngleDownhill;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = other.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle;\r\n\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhill = other.myAdjustVerticalMovementWithCeilingAngleDownhill;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphill = other.myAdjustVerticalMovementWithCeilingAngleUphill;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhill = other.myAdjustHorizontalMovementWithCeilingAngleDownhill;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle = other.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle;\r\n\r\n        this.myCheckVerticalFixedForwardEnabled = other.myCheckVerticalFixedForwardEnabled;\r\n        this.myCheckVerticalFixedForward.vec3_copy(other.myCheckVerticalFixedForward);\r\n        this.myCheckVerticalBothDirection = other.myCheckVerticalBothDirection;\r\n\r\n        this.mySnapOnGroundEnabled = other.mySnapOnGroundEnabled;\r\n        this.mySnapOnGroundExtraDistance = other.mySnapOnGroundExtraDistance;\r\n        this.mySnapOnCeilingEnabled = other.mySnapOnCeilingEnabled;\r\n        this.mySnapOnCeilingExtraDistance = other.mySnapOnCeilingExtraDistance;\r\n\r\n        this.myGroundPopOutEnabled = other.myGroundPopOutEnabled;\r\n        this.myGroundPopOutExtraDistance = other.myGroundPopOutExtraDistance;\r\n        this.myCeilingPopOutEnabled = other.myCeilingPopOutEnabled;\r\n        this.myCeilingPopOutExtraDistance = other.myCeilingPopOutExtraDistance;\r\n\r\n        this.myVerticalMovementReduceEnabled = other.myVerticalMovementReduceEnabled;\r\n\r\n        this.myGroundCircumferenceAddCenter = other.myGroundCircumferenceAddCenter;\r\n        this.myGroundCircumferenceSliceAmount = other.myGroundCircumferenceSliceAmount;\r\n        this.myGroundCircumferenceStepAmount = other.myGroundCircumferenceStepAmount;\r\n        this.myGroundCircumferenceRotationPerStep = other.myGroundCircumferenceRotationPerStep;\r\n        this.myVerticalAllowHitInsideCollisionIfOneOk = other.myVerticalAllowHitInsideCollisionIfOneOk;\r\n\r\n        this.myCheckHeight = other.myCheckHeight;\r\n        this.myCheckHeightVerticalMovement = other.myCheckHeightVerticalMovement;\r\n        this.myCheckHeightVerticalPosition = other.myCheckHeightVerticalPosition;\r\n        this.myCheckHeightTopMovement = other.myCheckHeightTopMovement;\r\n        this.myCheckHeightTopPosition = other.myCheckHeightTopPosition;\r\n        this.myCheckHeightConeOnCollision = other.myCheckHeightConeOnCollision;\r\n        this.myCheckHeightConeOnCollisionKeepHit = other.myCheckHeightConeOnCollisionKeepHit;\r\n        this.myHeightCheckStepAmountMovement = other.myHeightCheckStepAmountMovement;\r\n        this.myHeightCheckStepAmountPosition = other.myHeightCheckStepAmountPosition;\r\n        this.myCheckVerticalStraight = other.myCheckVerticalStraight;\r\n        this.myCheckVerticalDiagonalRayOutward = other.myCheckVerticalDiagonalRayOutward;\r\n        this.myCheckVerticalDiagonalRayInward = other.myCheckVerticalDiagonalRayInward;\r\n        this.myCheckVerticalDiagonalBorderOutward = other.myCheckVerticalDiagonalBorderOutward;\r\n        this.myCheckVerticalDiagonalBorderInward = other.myCheckVerticalDiagonalBorderInward;\r\n        this.myCheckVerticalDiagonalBorderRayOutward = other.myCheckVerticalDiagonalBorderRayOutward;\r\n        this.myCheckVerticalDiagonalBorderRayInward = other.myCheckVerticalDiagonalBorderRayInward;\r\n        this.myCheckVerticalSearchFartherVerticalHit = other.myCheckVerticalSearchFartherVerticalHit;\r\n\r\n        this.myGroundAngleToIgnore = other.myGroundAngleToIgnore;\r\n        this.myGroundAngleToIgnoreWithPerceivedAngle = other.myGroundAngleToIgnoreWithPerceivedAngle;\r\n        this.myCeilingAngleToIgnore = other.myCeilingAngleToIgnore;\r\n        this.myCeilingAngleToIgnoreWithPerceivedAngle = other.myCeilingAngleToIgnoreWithPerceivedAngle;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreHeight = other.myHorizontalMovementGroundAngleIgnoreHeight;\r\n        this.myHorizontalMovementCeilingAngleIgnoreHeight = other.myHorizontalMovementCeilingAngleIgnoreHeight;\r\n        this.myHorizontalPositionGroundAngleIgnoreHeight = other.myHorizontalPositionGroundAngleIgnoreHeight;\r\n        this.myHorizontalPositionCeilingAngleIgnoreHeight = other.myHorizontalPositionCeilingAngleIgnoreHeight;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = other.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft;\r\n        this.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft = other.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft;\r\n\r\n        this.myHeight = other.myHeight;\r\n\r\n        this.myComputeGroundInfoEnabled = other.myComputeGroundInfoEnabled;\r\n        this.myComputeCeilingInfoEnabled = other.myComputeCeilingInfoEnabled;\r\n        this.myDistanceToBeOnGround = other.myDistanceToBeOnGround;\r\n        this.myDistanceToComputeGroundInfo = other.myDistanceToComputeGroundInfo;\r\n        this.myDistanceToBeOnCeiling = other.myDistanceToBeOnCeiling;\r\n        this.myDistanceToComputeCeilingInfo = other.myDistanceToComputeCeilingInfo;\r\n        this.myVerticalFixToBeOnGround = other.myVerticalFixToBeOnGround;\r\n        this.myVerticalFixToComputeGroundInfo = other.myVerticalFixToComputeGroundInfo;\r\n        this.myVerticalFixToBeOnCeiling = other.myVerticalFixToBeOnCeiling;\r\n        this.myVerticalFixToComputeCeilingInfo = other.myVerticalFixToComputeCeilingInfo;\r\n        this.myGroundIsBaseInsideCollisionCheckEnabled = other.myGroundIsBaseInsideCollisionCheckEnabled;\r\n        this.myCeilingIsBaseInsideCollisionCheckEnabled = other.myCeilingIsBaseInsideCollisionCheckEnabled;\r\n        this.myIsOnGroundIfInsideHit = other.myIsOnGroundIfInsideHit;\r\n        this.myIsOnCeilingIfInsideHit = other.myIsOnCeilingIfInsideHit;\r\n        this.myIsOnGroundMaxSurfaceAngle = other.myIsOnGroundMaxSurfaceAngle;\r\n        this.myIsOnCeilingMaxSurfaceAngle = other.myIsOnCeilingMaxSurfaceAngle;\r\n        this.myFindGroundDistanceMaxOutsideDistance = other.myFindGroundDistanceMaxOutsideDistance;\r\n        this.myFindGroundDistanceMaxInsideDistance = other.myFindGroundDistanceMaxInsideDistance;\r\n        this.myFindCeilingDistanceMaxOutsideDistance = other.myFindCeilingDistanceMaxOutsideDistance;\r\n        this.myFindCeilingDistanceMaxInsideDistance = other.myFindCeilingDistanceMaxInsideDistance;\r\n\r\n        this.myAllowGroundSteepFix = other.myAllowGroundSteepFix;\r\n        this.myAllowCeilingSteepFix = other.myAllowCeilingSteepFix;\r\n        this.myMustStayOnGround = other.myMustStayOnGround;\r\n        this.myMustStayOnCeiling = other.myMustStayOnCeiling;\r\n        this.myMustStayOnValidGroundAngleDownhill = other.myMustStayOnValidGroundAngleDownhill;\r\n        this.myMustStayOnValidCeilingAngleDownhill = other.myMustStayOnValidCeilingAngleDownhill;\r\n        this.myRegatherGroundInfoOnSurfaceCheckFail = other.myRegatherGroundInfoOnSurfaceCheckFail;\r\n        this.myRegatherCeilingInfoOnSurfaceCheckFail = other.myRegatherCeilingInfoOnSurfaceCheckFail;\r\n        this.myMustStayBelowGroundAngleDownhill = other.myMustStayBelowGroundAngleDownhill;\r\n        this.myMustStayBelowCeilingAngleDownhill = other.myMustStayBelowCeilingAngleDownhill;\r\n        this.myMustStayBelowIgnorableGroundAngleDownhill = other.myMustStayBelowIgnorableGroundAngleDownhill;\r\n        this.myMustStayBelowIgnorableCeilingAngleDownhill = other.myMustStayBelowIgnorableCeilingAngleDownhill;\r\n        this.myMovementMustStayOnGroundHitAngle = other.myMovementMustStayOnGroundHitAngle;\r\n        this.myMovementMustStayOnCeilingHitAngle = other.myMovementMustStayOnCeilingHitAngle;\r\n\r\n        this.myTeleportMustBeOnIgnorableGroundAngle = other.myTeleportMustBeOnIgnorableGroundAngle;\r\n        this.myCheckTransformMustBeOnIgnorableGroundAngle = other.myCheckTransformMustBeOnIgnorableGroundAngle;\r\n        this.myTeleportMustBeOnIgnorableCeilingAngle = other.myTeleportMustBeOnIgnorableCeilingAngle;\r\n        this.myCheckTransformMustBeOnIgnorableCeilingAngle = other.myCheckTransformMustBeOnIgnorableCeilingAngle;\r\n\r\n        this.myTeleportMustBeOnGroundAngle = other.myTeleportMustBeOnGroundAngle;\r\n        this.myCheckTransformMustBeOnGroundAngle = other.myCheckTransformMustBeOnGroundAngle;\r\n        this.myTeleportMustBeOnCeilingAngle = other.myTeleportMustBeOnCeilingAngle;\r\n        this.myCheckTransformMustBeOnCeilingAngle = other.myCheckTransformMustBeOnCeilingAngle;\r\n\r\n        this.myTeleportMustBeOnGround = other.myTeleportMustBeOnGround;\r\n        this.myCheckTransformMustBeOnGround = other.myCheckTransformMustBeOnGround;\r\n        this.myTeleportMustBeOnCeiling = other.myTeleportMustBeOnCeiling;\r\n        this.myCheckTransformMustBeOnCeiling = other.myCheckTransformMustBeOnCeiling;\r\n\r\n        this.mySlidingEnabled = other.mySlidingEnabled;\r\n        this.mySlidingHorizontalMovementCheckBetterNormal = other.mySlidingHorizontalMovementCheckBetterNormal;\r\n        this.mySlidingMaxAttempts = other.mySlidingMaxAttempts;\r\n        this.mySlidingCheckBothDirections = other.mySlidingCheckBothDirections;\r\n        this.mySlidingFlickeringPreventionType = other.mySlidingFlickeringPreventionType;\r\n        this.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = other.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = other.mySlidingFlickerPreventionCheckAnywayCounter;\r\n\r\n        this.mySlidingAdjustSign90Degrees = other.mySlidingAdjustSign90Degrees;\r\n\r\n        this.myHorizontalBlockLayerFlags.copy(other.myHorizontalBlockLayerFlags);\r\n        this.myHorizontalObjectsToIgnore.pp_copy(other.myHorizontalObjectsToIgnore);\r\n\r\n        this.myVerticalBlockLayerFlags.copy(other.myVerticalBlockLayerFlags);\r\n        this.myVerticalObjectsToIgnore.pp_copy(other.myVerticalObjectsToIgnore);\r\n\r\n        this.myExtraMovementCheckCallback = other.myExtraMovementCheckCallback;\r\n        this.myExtraTeleportCheckCallback = other.myExtraTeleportCheckCallback;\r\n        this.myExtraCheckTransformCheckCallback = other.myExtraCheckTransformCheckCallback;\r\n\r\n        this.myDebugActive = other.myDebugActive;\r\n\r\n        this.myDebugHorizontalMovementActive = other.myDebugHorizontalMovementActive;\r\n        this.myDebugHorizontalPositionActive = other.myDebugHorizontalPositionActive;\r\n        this.myDebugVerticalMovementActive = other.myDebugVerticalMovementActive;\r\n        this.myDebugVerticalPositionActive = other.myDebugVerticalPositionActive;\r\n        this.myDebugSlidingActive = other.myDebugSlidingActive;\r\n        this.myDebugGroundInfoActive = other.myDebugGroundInfoActive;\r\n        this.myDebugCeilingInfoActive = other.myDebugCeilingInfoActive;\r\n        this.myDebugRuntimeParamsActive = other.myDebugRuntimeParamsActive;\r\n        this.myDebugMovementActive = other.myDebugMovementActive;\r\n    }\r\n};\r\n\r\nCollisionRuntimeParams = class CollisionRuntimeParams {\r\n    constructor() {\r\n        this.myOriginalPosition = PP.vec3_create();\r\n        this.myNewPosition = PP.vec3_create();\r\n\r\n        this.myOriginalHeight = 0;\r\n\r\n        this.myOriginalForward = PP.vec3_create();\r\n        this.myOriginalUp = PP.vec3_create();\r\n\r\n        this.myOriginalMovement = PP.vec3_create();\r\n        this.myFixedMovement = PP.vec3_create();\r\n\r\n        this.myLastValidOriginalHorizontalMovement = PP.vec3_create();\r\n        this.myLastValidOriginalVerticalMovement = PP.vec3_create();\r\n        this.myLastValidSurfaceAdjustedHorizontalMovement = PP.vec3_create();\r\n        this.myLastValidSurfaceAdjustedVerticalMovement = PP.vec3_create();\r\n        this.myLastValidEndHorizontalMovement = PP.vec3_create();\r\n        this.myLastValidEndVerticalMovement = PP.vec3_create();\r\n\r\n        this.myIsOnGround = false;\r\n        this.myGroundAngle = 0;\r\n        this.myGroundPerceivedAngle = 0;\r\n        this.myGroundNormal = PP.vec3_create();\r\n        this.myGroundHitMaxAngle = 0;\r\n        this.myGroundHitMaxNormal = PP.vec3_create();\r\n        this.myGroundDistance = null;\r\n        this.myGroundIsBaseInsideCollision = false;\r\n\r\n        this.myIsOnCeiling = false;\r\n        this.myCeilingAngle = 0;\r\n        this.myCeilingPerceivedAngle = 0;\r\n        this.myCeilingNormal = PP.vec3_create();\r\n        this.myCeilingHitMaxAngle = 0;\r\n        this.myCeilingHitMaxNormal = PP.vec3_create();\r\n        this.myCeilingDistance = null;\r\n        this.myCeilingIsBaseInsideCollision = false;\r\n\r\n        this.myHorizontalMovementCanceled = false; // could add HorizontalMovementCanceledReason\r\n        this.myIsCollidingHorizontally = false;\r\n        this.myHorizontalCollisionHit = new PP.RaycastHit();\r\n\r\n        this.myVerticalMovementCanceled = false;\r\n        this.myIsCollidingVertically = false;\r\n        this.myVerticalCollisionHit = new PP.RaycastHit();\r\n\r\n        this.myHasSnappedOnGround = false;\r\n        this.myHasSnappedOnCeiling = false;\r\n        this.myHasPoppedOutGround = false;\r\n        this.myHasPoppedOutCeiling = false;\r\n        this.myHasReducedVerticalMovement = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = false;\r\n\r\n        this.myIsSliding = false;\r\n        this.myIsSlidingIntoOppositeDirection = false;\r\n        this.myIsSlidingFlickerPrevented = false;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = 0;\r\n        this.mySlidingMovementAngle = 0;\r\n        this.mySlidingCollisionAngle = 0;\r\n        this.mySlidingCollisionHit = new PP.RaycastHit();\r\n        this.mySlidingWallNormal = new PP.vec3_create();\r\n        this.mySliding90DegreesSign = 0;\r\n        this.mySlidingRecompute90DegreesSign = true;\r\n        this.myLastValidIsSliding = false;\r\n        this.mySlidingPreviousHorizontalMovement = PP.vec3_create();\r\n\r\n        this.myOriginalTeleportPosition = PP.vec3_create();\r\n        this.myFixedTeleportPosition = PP.vec3_create();\r\n\r\n        this.myOriginalPositionCheckPosition = PP.vec3_create();\r\n        this.myFixedPositionCheckPosition = PP.vec3_create();\r\n\r\n        this.myTeleportCanceled = false;\r\n\r\n        this.myIsPositionOk = false;\r\n\r\n        this.myIsTeleport = false; // could be a single bool but not sure if there should be an option and don't want to create an enum for now\r\n        this.myIsMove = false;\r\n        this.myIsPositionCheck = false;\r\n        this.myIsPositionCheckAllowAdjustments = false;\r\n\r\n        this.mySplitMovementSteps = 0;\r\n        this.mySplitMovementStepsPerformed = 0;\r\n        this.mySplitMovementStop = false;\r\n        this.mySplitMovementMovementChecked = PP.vec3_create();\r\n\r\n        this.myRealIsOnGround = false;\r\n        this.myRealIsOnCeiling = false;\r\n    }\r\n\r\n    reset() {\r\n        this.myOriginalPosition.vec3_zero();\r\n        this.myNewPosition.vec3_zero();\r\n\r\n        this.myOriginalHeight = 0;\r\n\r\n        this.myOriginalForward.vec3_zero();\r\n        this.myOriginalUp.vec3_zero();\r\n\r\n        this.myOriginalMovement.vec3_zero();\r\n        this.myFixedMovement.vec3_zero();\r\n\r\n        this.myLastValidOriginalHorizontalMovement.vec3_zero();\r\n        this.myLastValidOriginalVerticalMovement.vec3_zero();\r\n        this.myLastValidSurfaceAdjustedHorizontalMovement.vec3_zero();\r\n        this.myLastValidSurfaceAdjustedVerticalMovement.vec3_zero();\r\n        this.myLastValidEndHorizontalMovement.vec3_zero();\r\n        this.myLastValidEndVerticalMovement.vec3_zero();\r\n\r\n\r\n        this.myIsOnGround = false;\r\n        this.myGroundAngle = 0;\r\n        this.myGroundPerceivedAngle = 0;\r\n        this.myGroundNormal.vec3_zero();\r\n        this.myGroundHitMaxAngle = 0;\r\n        this.myGroundHitMaxNormal.vec3_zero();\r\n        this.myGroundDistance = null;\r\n        this.myGroundIsBaseInsideCollision = false;\r\n\r\n        this.myIsOnCeiling = false;\r\n        this.myCeilingAngle = 0;\r\n        this.myCeilingPerceivedAngle = 0;\r\n        this.myCeilingNormal.vec3_zero();\r\n        this.myCeilingHitMaxAngle = 0;\r\n        this.myCeilingHitMaxNormal.vec3_zero();\r\n        this.myCeilingDistance = null;\r\n        this.myCeilingIsBaseInsideCollision = false;\r\n\r\n        this.myHorizontalMovementCanceled = false;\r\n        this.myIsCollidingHorizontally = false;\r\n        this.myHorizontalCollisionHit.reset();\r\n\r\n        this.myVerticalMovementCanceled = false;\r\n        this.myIsCollidingVertically = false;\r\n        this.myVerticalCollisionHit.reset();\r\n\r\n        this.myHasSnappedOnGround = false;\r\n        this.myHasSnappedOnCeiling = false;\r\n        this.myHasPoppedOutGround = false;\r\n        this.myHasPoppedOutCeiling = false;\r\n        this.myHasReducedVerticalMovement = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = false;\r\n\r\n        this.myIsSliding = false;\r\n        this.myIsSlidingIntoOppositeDirection = false;\r\n        this.myIsSlidingFlickerPrevented = false;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = 0;\r\n        this.mySlidingMovementAngle = 0;\r\n        this.mySlidingCollisionAngle = 0;\r\n        this.mySlidingCollisionHit.reset();\r\n        this.mySliding90DegreesSign = 0;\r\n        this.mySlidingRecompute90DegreesSign = true;\r\n        this.myLastValidIsSliding = false;\r\n        this.mySlidingPreviousHorizontalMovement.vec3_zero();\r\n        this.mySlidingWallNormal.vec3_zero();\r\n\r\n        this.myOriginalTeleportPosition.vec3_zero();\r\n        this.myFixedTeleportPosition.vec3_zero();\r\n\r\n        this.myOriginalPositionCheckPosition.vec3_zero();\r\n        this.myFixedPositionCheckPosition.vec3_zero();\r\n\r\n        this.myTeleportCanceled = false;\r\n\r\n        this.myIsPositionOk = false;\r\n\r\n        this.myIsTeleport = false;\r\n        this.myIsMove = false;\r\n        this.myIsPositionCheck = false;\r\n        this.myIsPositionCheckAllowAdjustments = false;\r\n\r\n        this.mySplitMovementSteps = 0;\r\n        this.mySplitMovementStepsPerformed = 0;\r\n        this.mySplitMovementStop = false;\r\n        this.mySplitMovementMovementChecked.vec3_zero();\r\n\r\n        this.myRealIsOnGround = false;\r\n        this.myRealIsOnCeiling = false;\r\n    }\r\n\r\n    copy(other) {\r\n        this.myOriginalPosition.vec3_copy(other.myOriginalPosition);\r\n        this.myNewPosition.vec3_copy(other.myNewPosition);\r\n\r\n        this.myOriginalHeight = other.myOriginalHeight;\r\n\r\n        this.myOriginalForward.vec3_copy(other.myOriginalForward);\r\n        this.myOriginalUp.vec3_copy(other.myOriginalUp);\r\n\r\n        this.myOriginalMovement.vec3_copy(other.myOriginalMovement);\r\n        this.myFixedMovement.vec3_copy(other.myFixedMovement);\r\n\r\n        this.myLastValidOriginalHorizontalMovement.vec3_copy(other.myLastValidOriginalHorizontalMovement);\r\n        this.myLastValidOriginalVerticalMovement.vec3_copy(other.myLastValidOriginalVerticalMovement);\r\n        this.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(other.myLastValidSurfaceAdjustedHorizontalMovement);\r\n        this.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(other.myLastValidSurfaceAdjustedVerticalMovement);\r\n        this.myLastValidEndHorizontalMovement.vec3_copy(other.myLastValidEndHorizontalMovement);\r\n        this.myLastValidEndVerticalMovement.vec3_copy(other.myLastValidEndVerticalMovement);\r\n\r\n        this.myIsOnGround = other.myIsOnGround;\r\n        this.myGroundAngle = other.myGroundAngle;\r\n        this.myGroundPerceivedAngle = other.myGroundPerceivedAngle;\r\n        this.myGroundNormal.vec3_copy(other.myGroundNormal);\r\n        this.myGroundHitMaxAngle = other.myGroundHitMaxAngle;\r\n        this.myGroundHitMaxNormal.vec3_copy(other.myGroundHitMaxNormal);\r\n        this.myGroundDistance = other.myGroundDistance;\r\n        this.myGroundIsBaseInsideCollision = other.myGroundIsBaseInsideCollision;\r\n\r\n        this.myIsOnCeiling = other.myIsOnCeiling;\r\n        this.myCeilingAngle = other.myCeilingAngle;\r\n        this.myCeilingPerceivedAngle = other.myCeilingPerceivedAngle;\r\n        this.myCeilingNormal.vec3_copy(other.myCeilingNormal);\r\n        this.myCeilingHitMaxAngle = other.myCeilingHitMaxAngle;\r\n        this.myCeilingHitMaxNormal.vec3_copy(other.myCeilingHitMaxNormal);\r\n        this.myCeilingDistance = other.myCeilingDistance;\r\n        this.myCeilingIsBaseInsideCollision = other.myCeilingIsBaseInsideCollision;\r\n\r\n        this.myHorizontalMovementCanceled = other.myHorizontalMovementCanceled;\r\n        this.myIsCollidingHorizontally = other.myIsCollidingHorizontally;\r\n        this.myHorizontalCollisionHit.copy(other.myHorizontalCollisionHit);\r\n\r\n        this.myVerticalMovementCanceled = other.myVerticalMovementCanceled;\r\n        this.myIsCollidingVertically = other.myIsCollidingVertically;\r\n        this.myVerticalCollisionHit.copy(other.myVerticalCollisionHit);\r\n\r\n        this.myHasSnappedOnGround = other.myHasSnappedOnGround;\r\n        this.myHasSnappedOnCeiling = other.myHasSnappedOnCeiling;\r\n        this.myHasPoppedOutGround = other.myHasPoppedOutGround;\r\n        this.myHasPoppedOutCeiling = other.myHasPoppedOutCeiling;\r\n        this.myHasReducedVerticalMovement = other.myHasReducedVerticalMovement;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = other.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = other.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = other.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = other.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = other.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = other.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill;\r\n\r\n        this.myIsSliding = other.myIsSliding;\r\n        this.myIsSlidingIntoOppositeDirection = other.myIsSlidingIntoOppositeDirection;\r\n        this.myIsSlidingFlickerPrevented = other.myIsSlidingFlickerPrevented;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = other.mySlidingFlickerPreventionCheckAnywayCounter;\r\n        this.mySlidingMovementAngle = other.mySlidingMovementAngle;\r\n        this.mySlidingCollisionAngle = other.mySlidingCollisionAngle;\r\n        this.mySlidingCollisionHit.copy(other.mySlidingCollisionHit);\r\n        this.mySliding90DegreesSign = other.mySliding90DegreesSign;\r\n        this.mySlidingRecompute90DegreesSign = other.mySlidingRecompute90DegreesSign;\r\n        this.myLastValidIsSliding = other.myLastValidIsSliding;\r\n        this.mySlidingPreviousHorizontalMovement.vec3_copy(other.mySlidingPreviousHorizontalMovement);\r\n        this.mySlidingWallNormal.vec3_copy(other.mySlidingWallNormal);\r\n\r\n        this.myOriginalTeleportPosition.vec3_copy(other.myOriginalTeleportPosition);\r\n        this.myFixedTeleportPosition.vec3_copy(other.myFixedTeleportPosition);\r\n        this.myTeleportCanceled = other.myTeleportCanceled;\r\n\r\n        this.myIsPositionOk = other.myIsPositionOk;\r\n\r\n        this.myOriginalPositionCheckPosition.vec3_copy(other.myOriginalPositionCheckPosition);\r\n        this.myFixedPositionCheckPosition.vec3_copy(other.myFixedPositionCheckPosition);\r\n\r\n        this.myIsTeleport = other.myIsTeleport;\r\n        this.myIsMove = other.myIsMove;\r\n        this.myIsPositionCheck = other.myIsPositionCheck;\r\n        this.myIsPositionCheckAllowAdjustments = other.myIsPositionCheckAllowAdjustments;\r\n\r\n        this.mySplitMovementSteps = other.mySplitMovementSteps;\r\n        this.mySplitMovementStepsPerformed = other.mySplitMovementStepsPerformed;\r\n        this.mySplitMovementStop = other.mySplitMovementStop;\r\n        this.mySplitMovementMovementChecked.vec3_copy(other.mySplitMovementMovementChecked);\r\n\r\n        this.myRealIsOnGround = other.myRealIsOnGround;\r\n        this.myRealIsOnCeiling = other.myRealIsOnCeiling;\r\n    }\r\n};", "_myTotalRaycasts = 0; // #TODO debug stuff, remove later\r\n_myTotalRaycastsMax = 0; // #TODO debug stuff, remove later\r\n\r\nCollisionCheckUtils = {\r\n    generate360TeleportParamsFromMovementParams: function (movementParams, outTeleportParams = new CollisionCheckParams()) {\r\n        outTeleportParams.copy(movementParams);\r\n\r\n        outTeleportParams.myHalfConeAngle = 180;\r\n        outTeleportParams.myHalfConeSliceAmount = Math.round((outTeleportParams.myHalfConeAngle / movementParams.myHalfConeAngle) * movementParams.myHalfConeSliceAmount);\r\n\r\n        outTeleportParams.myCheckHorizontalFixedForwardEnabled = true;\r\n        outTeleportParams.myCheckHorizontalFixedForward = PP.vec3_create(0, 0, 1);\r\n\r\n        return outTeleportParams;\r\n    },\r\n};\r\n\r\nCollisionCheck = class CollisionCheck {\r\n    constructor() {\r\n        this._myRaycastSetup = new PP.RaycastSetup();\r\n        this._myRaycastResult = new PP.RaycastResults();\r\n        this._myFixRaycastResult = new PP.RaycastResults();\r\n\r\n        this._myBackupRaycastHit = new PP.RaycastHit();\r\n\r\n        this._myPrevCollisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n        this._mySlidingCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myInternalSlidingCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._mySlidingFlickeringFixCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._mySlidingFlickeringFixSlidingCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._mySlidingOppositeDirectionCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._mySlidingOnVerticalCheckCollisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n        this._myDebugActive = false;\r\n\r\n        _myTotalRaycasts = 0;\r\n        _myTotalRaycastsMax = 0;\r\n\r\n        //console.error = function () { };\r\n    }\r\n\r\n    move(movement, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._move(movement, transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    //#TODO add teleport position/transform and return originalteleportransform\r\n    // instead of position old transform / new transform\r\n    teleport(position, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._teleport(position, transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    positionCheck(allowFix, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._positionCheck(allowFix, transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    updateSurfaceInfo(transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._updateSurfaceInfo(transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    _debugMovement(movement, fixedMovement, feetPosition, up, collisionCheckParams) {\r\n        let originalHorizontalMovement = movement.vec3_removeComponentAlongAxis(up);\r\n\r\n        let horizontalMovement = fixedMovement.vec3_removeComponentAlongAxis(up);\r\n        let verticalMovement = fixedMovement.vec3_componentAlongAxis(up);\r\n\r\n        let feetPositionPlusOffset = feetPosition.vec3_add(up.vec3_scale(collisionCheckParams.myDistanceFromFeetToIgnore + 0.001));\r\n\r\n        if (!originalHorizontalMovement.vec3_isZero()) {\r\n            originalHorizontalMovement.vec3_normalize(originalHorizontalMovement);\r\n\r\n            PP.myDebugVisualManager.drawArrow(0, feetPositionPlusOffset, originalHorizontalMovement, 0.2, PP.vec4_create(0.5, 0.5, 1, 1));\r\n        }\r\n\r\n        if (!horizontalMovement.vec3_isZero()) {\r\n            horizontalMovement.vec3_normalize(horizontalMovement);\r\n\r\n            PP.myDebugVisualManager.drawArrow(0, feetPositionPlusOffset, horizontalMovement, 0.2, PP.vec4_create(0, 0, 1, 1));\r\n        }\r\n\r\n        if (!verticalMovement.vec3_isZero()) {\r\n            verticalMovement.vec3_normalize(verticalMovement);\r\n\r\n            PP.myDebugVisualManager.drawArrow(0, feetPosition, verticalMovement, 0.2, PP.vec4_create(0, 0, 1, 1));\r\n        }\r\n    }\r\n\r\n    _debugRuntimeParams(collisionRuntimeParams) {\r\n        if (collisionRuntimeParams.myHorizontalCollisionHit.isValid()) {\r\n            PP.myDebugVisualManager.drawArrow(0,\r\n                collisionRuntimeParams.myHorizontalCollisionHit.myPosition,\r\n                collisionRuntimeParams.myHorizontalCollisionHit.myNormal, 0.2, PP.vec4_create(1, 0, 0, 1));\r\n        }\r\n\r\n        if (collisionRuntimeParams.mySlidingCollisionHit.isValid()) {\r\n            PP.myDebugVisualManager.drawArrow(0,\r\n                collisionRuntimeParams.mySlidingCollisionHit.myPosition,\r\n                collisionRuntimeParams.mySlidingCollisionHit.myNormal, 0.2, PP.vec4_create(1, 0, 0, 1));\r\n        }\r\n\r\n        if (collisionRuntimeParams.myVerticalCollisionHit.isValid()) {\r\n            PP.myDebugVisualManager.drawArrow(0,\r\n                collisionRuntimeParams.myVerticalCollisionHit.myPosition,\r\n                collisionRuntimeParams.myVerticalCollisionHit.myNormal, 0.2, PP.vec4_create(1, 0, 0, 1));\r\n        }\r\n    }\r\n};\r\n\r\nCollisionCheck.prototype._raycastAndDebug = function () {\r\n    return function _raycastAndDebug(origin, direction, distance, ignoreHitsInsideCollision, isHorizontal, collisionCheckParams, collisionRuntimeParams) {\r\n        this._myRaycastSetup.myOrigin.vec3_copy(origin);\r\n        this._myRaycastSetup.myDirection.vec3_copy(direction);\r\n        this._myRaycastSetup.myDistance = distance;\r\n\r\n        if (isHorizontal) {\r\n            this._myRaycastSetup.myBlockLayerFlags.copy(collisionCheckParams.myHorizontalBlockLayerFlags);\r\n            this._myRaycastSetup.myObjectsToIgnore = collisionCheckParams.myHorizontalObjectsToIgnore;\r\n        } else {\r\n            this._myRaycastSetup.myBlockLayerFlags.copy(collisionCheckParams.myVerticalBlockLayerFlags);\r\n            this._myRaycastSetup.myObjectsToIgnore = collisionCheckParams.myVerticalObjectsToIgnore;\r\n        }\r\n\r\n        this._myRaycastSetup.myIgnoreHitsInsideCollision = ignoreHitsInsideCollision;\r\n\r\n        let raycastResult = PP.PhysicsUtils.raycast(this._myRaycastSetup, this._myRaycastResult);\r\n        _myTotalRaycasts++;\r\n        //raycastResult.myHits = [];\r\n\r\n        if (this._myDebugActive) {\r\n            PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n        }\r\n\r\n        return raycastResult;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_raycastAndDebug\", { enumerable: false });\r\n\r\n", "CollisionCheck.prototype._move = function () {\r\n    let transformUp = PP.vec3_create();\r\n    let transformForward = PP.vec3_create();\r\n    let feetPosition = PP.vec3_create();\r\n\r\n    let transformOffsetLocalQuat = PP.quat2_create();\r\n    let offsetTransformQuat = PP.quat2_create();\r\n\r\n    let horizontalMovement = PP.vec3_create();\r\n    let verticalMovement = PP.vec3_create();\r\n\r\n    let movementStep = PP.vec3_create();\r\n    let currentMovementStep = PP.vec3_create();\r\n    let movementChecked = PP.vec3_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    let fixedMovementStep = PP.vec3_create();\r\n\r\n    let previousCollisionRuntimeParams = new CollisionRuntimeParams();\r\n    let previousFixedMovement = PP.vec3_create();\r\n    let previousMovementChecked = PP.vec3_create();\r\n    return function _move(movement, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        //return PP.vec3_create();\r\n        //movement = PP.vec3_create(0, 0, -1);\r\n\r\n        transformOffsetLocalQuat.quat2_setPositionRotationQuat(collisionCheckParams.myPositionOffsetLocal, collisionCheckParams.myRotationOffsetLocalQuat);\r\n        offsetTransformQuat = transformOffsetLocalQuat.quat2_toWorld(transformQuat, offsetTransformQuat);\r\n        if (transformQuat.vec_equals(offsetTransformQuat, 0.00001)) {\r\n            offsetTransformQuat.quat2_copy(transformQuat);\r\n        }\r\n\r\n        transformUp = offsetTransformQuat.quat2_getUp(transformUp);\r\n        transformForward = offsetTransformQuat.quat2_getForward(transformForward);\r\n        feetPosition = offsetTransformQuat.quat2_getPosition(feetPosition);\r\n\r\n        let height = collisionCheckParams.myHeight;\r\n        height = height - 0.00001; // this makes it easier to setup things at the same exact height of a character so that it can go under it\r\n        if (height < 0.00001) {\r\n            height = 0;\r\n        }\r\n        //height = 1.75;\r\n\r\n        horizontalMovement = movement.vec3_removeComponentAlongAxis(transformUp, horizontalMovement);\r\n        verticalMovement = movement.vec3_componentAlongAxis(transformUp, verticalMovement);\r\n        //feetPosition = feetPosition.vec3_add(horizontalMovement.vec3_normalize().vec3_scale(0.5));\r\n        //height = height / 2;\r\n        //horizontalMovement.vec3_normalize(horizontalMovement).vec3_scale(0.3, horizontalMovement); movement = horizontalMovement.vec3_add(verticalMovement);\r\n\r\n        let movementStepAmount = 1;\r\n        movementStep.vec3_copy(movement);\r\n\r\n        if (!movement.vec3_isZero(0.00001) && collisionCheckParams.mySplitMovementEnabled) {\r\n            let equalStepLength = movement.vec3_length() / collisionCheckParams.mySplitMovementMaxSteps;\r\n            if (!collisionCheckParams.mySplitMovementStepEqualLength || equalStepLength < collisionCheckParams.mySplitMovementStepEqualLengthMinLength) {\r\n                let maxLength = collisionCheckParams.mySplitMovementStepEqualLength ? collisionCheckParams.mySplitMovementStepEqualLengthMinLength : collisionCheckParams.mySplitMovementMaxLength;\r\n                movementStepAmount = Math.ceil(movement.vec3_length() / maxLength);\r\n                if (movementStepAmount > 1) {\r\n                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(maxLength, movementStep);\r\n                    movementStepAmount = (collisionCheckParams.mySplitMovementMaxStepsEnabled) ? Math.min(movementStepAmount, collisionCheckParams.mySplitMovementMaxSteps) : movementStepAmount;\r\n                }\r\n\r\n                movementStepAmount = Math.max(1, movementStepAmount);\r\n\r\n                if (movementStepAmount == 1) {\r\n                    movementStep.vec3_copy(movement);\r\n                }\r\n            } else {\r\n                movementStepAmount = collisionCheckParams.mySplitMovementMaxSteps;\r\n                if (movementStepAmount > 1) {\r\n                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(equalStepLength, movementStep);\r\n                }\r\n            }\r\n        }\r\n\r\n        fixedMovement.vec3_zero();\r\n        movementChecked.vec3_zero();\r\n\r\n        previousCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        previousFixedMovement.vec3_copy(fixedMovement);\r\n        previousMovementChecked.vec3_copy(movementChecked);\r\n\r\n        let stepsPerformed = 0;\r\n        let splitMovementStop = false;\r\n        for (let i = 0; i < movementStepAmount; i++) {\r\n            if (movementStepAmount == 1 || i != movementStepAmount - 1) {\r\n                currentMovementStep.vec3_copy(movementStep);\r\n            } else {\r\n                currentMovementStep = movement.vec3_sub(movementChecked, currentMovementStep);\r\n            }\r\n\r\n            newFeetPosition = feetPosition.vec3_add(fixedMovement, newFeetPosition);\r\n            fixedMovementStep.vec3_zero();\r\n            fixedMovementStep = this._moveStep(currentMovementStep, newFeetPosition, transformUp, transformForward, height, true, collisionCheckParams, collisionRuntimeParams, fixedMovementStep);\r\n            fixedMovement.vec3_add(fixedMovementStep, fixedMovement);\r\n\r\n            movementChecked = movementChecked.vec3_add(movementStep, movementChecked);\r\n\r\n            stepsPerformed = i + 1;\r\n\r\n            if ((collisionRuntimeParams.myHorizontalMovementCanceled && collisionRuntimeParams.myVerticalMovementCanceled) ||\r\n                (collisionRuntimeParams.myHorizontalMovementCanceled && collisionCheckParams.mySplitMovementStopWhenHorizontalMovementCanceled) ||\r\n                (collisionRuntimeParams.myVerticalMovementCanceled && collisionCheckParams.mySplitMovementStopWhenVerticalMovementCanceled) ||\r\n                (collisionCheckParams.mySplitMovementStopCallback != null && collisionCheckParams.mySplitMovementStopCallback(collisionRuntimeParams))) {\r\n                if (collisionCheckParams.mySplitMovementStopReturnPrevious) {\r\n                    collisionRuntimeParams.copy(previousCollisionRuntimeParams);\r\n                    fixedMovement.vec3_copy(previousFixedMovement);\r\n                    movementChecked.vec3_copy(previousMovementChecked);\r\n                    stepsPerformed -= 1;\r\n                }\r\n\r\n                splitMovementStop = true;\r\n                break;\r\n            }\r\n\r\n            previousCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n            previousFixedMovement.vec3_copy(fixedMovement);\r\n            previousMovementChecked.vec3_copy(movementChecked);\r\n        }\r\n\r\n        //fixedMovement.vec3_zero();\r\n\r\n        collisionRuntimeParams.mySplitMovementSteps = movementStepAmount;\r\n        collisionRuntimeParams.mySplitMovementStepsPerformed = stepsPerformed;\r\n        collisionRuntimeParams.mySplitMovementStop = splitMovementStop;\r\n        collisionRuntimeParams.mySplitMovementMovementChecked.vec3_copy(movementChecked);\r\n\r\n        collisionRuntimeParams.myOriginalUp = transformQuat.quat2_getUp(collisionRuntimeParams.myOriginalUp);\r\n        collisionRuntimeParams.myOriginalForward = transformQuat.quat2_getForward(collisionRuntimeParams.myOriginalForward);\r\n        collisionRuntimeParams.myOriginalPosition = transformQuat.quat2_getPosition(collisionRuntimeParams.myOriginalPosition);\r\n\r\n        //console.error(collisionRuntimeParams.myOriginalPosition.vec3_sub(feetPosition)[1].toFixed(3));\r\n\r\n        collisionRuntimeParams.myOriginalHeight = collisionCheckParams.myHeight;\r\n\r\n        collisionRuntimeParams.myOriginalMovement.vec3_copy(movement);\r\n        collisionRuntimeParams.myFixedMovement.vec3_copy(fixedMovement);\r\n\r\n        collisionRuntimeParams.myNewPosition = collisionRuntimeParams.myOriginalPosition.vec3_add(collisionRuntimeParams.myFixedMovement, collisionRuntimeParams.myNewPosition);\r\n\r\n        collisionRuntimeParams.myIsMove = true;\r\n\r\n\r\n        //console.error(_myTotalRaycasts );\r\n\r\n        //_myTotalRaycastsMax = Math.max(_myTotalRaycasts, _myTotalRaycastsMax);\r\n        //console.error(_myTotalRaycastsMax);\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._moveStep = function () {\r\n    let horizontalMovement = PP.vec3_create();\r\n    let verticalMovement = PP.vec3_create();\r\n    let fixedHorizontalMovement = PP.vec3_create();\r\n    let fixedVerticalMovement = PP.vec3_create();\r\n    let horizontalDirection = PP.vec3_create();\r\n    let forwardForHorizontal = PP.vec3_create();\r\n    let forwardForVertical = PP.vec3_create();\r\n    let forwardForPerceivedAngle = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    let surfaceAdjustedVerticalMovement = PP.vec3_create();\r\n    let surfaceAdjustedHorizontalMovement = PP.vec3_create();\r\n    let fixedMovement = PP.vec3_create();\r\n\r\n    let zAxis = PP.vec3_create(0, 0, 1);\r\n    let xAxis = PP.vec3_create(1, 0, 0);\r\n    return function _moveStep(movement, feetPosition, transformUp, transformForward, height, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, outFixedMovement) {\r\n        // #TODO refactor and split horizontal check and vertical check into: hMovement + vMovement + hPosition + vPosition?\r\n        // Will make the sliding heavier, if I slide repeating all the 4 steps instead of 2 as now, but would be more correct\r\n\r\n        // #TODO when on high slopes where u are not allowed to move the check does not manage to slide\r\n\r\n        // #TODO when moving upward on the edge of a slope, the edge can be detected as a wall and prevent movement, while it should just keep moving\r\n\r\n        horizontalMovement = movement.vec3_removeComponentAlongAxis(transformUp, horizontalMovement);\r\n        if (horizontalMovement.vec3_isZero(0.000001)) {\r\n            horizontalMovement.vec3_zero();\r\n        }\r\n\r\n        verticalMovement = movement.vec3_componentAlongAxis(transformUp, verticalMovement);\r\n        if (verticalMovement.vec3_isZero(0.000001)) {\r\n            verticalMovement.vec3_zero();\r\n        }\r\n\r\n        if (horizontalMovement.vec3_isZero()) {\r\n            //return PP.vec3_create();\r\n        }\r\n\r\n        //_myTotalRaycasts = 0;\r\n        //collisionCheckParams.myDebugActive = true;\r\n\r\n        this._myPrevCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        collisionRuntimeParams.reset();\r\n\r\n        surfaceAdjustedHorizontalMovement = this._adjustHorizontalMovementWithSurface(horizontalMovement, verticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, surfaceAdjustedHorizontalMovement);\r\n        if (surfaceAdjustedHorizontalMovement.vec3_isZero(0.00001)) {\r\n            surfaceAdjustedHorizontalMovement.vec3_zero();\r\n        }\r\n\r\n        this._syncCollisionRuntimeParamsWithPrevious(surfaceAdjustedHorizontalMovement, verticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams);\r\n\r\n        {\r\n            forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n            if (!collisionCheckParams.myCheckHorizontalFixedForwardEnabled) {\r\n                if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                    forwardForHorizontal = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForHorizontal);\r\n                } else if (!horizontalMovement.vec3_isZero()) {\r\n                    forwardForHorizontal = horizontalMovement.vec3_normalize(forwardForHorizontal);\r\n                } else {\r\n                    forwardForHorizontal.vec3_copy(transformForward);\r\n                }\r\n            } else {\r\n                if (collisionCheckParams.myCheckHorizontalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                    if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                        forwardForHorizontal.vec3_copy(xAxis);\r\n                    } else {\r\n                        forwardForHorizontal.vec3_copy(zAxis);\r\n                    }\r\n                }\r\n\r\n                forwardForHorizontal = forwardForHorizontal.vec3_removeComponentAlongAxis(transformUp, forwardForHorizontal);\r\n                forwardForHorizontal = forwardForHorizontal.vec3_normalize(forwardForHorizontal);\r\n\r\n                if (forwardForHorizontal.vec_equals(collisionCheckParams.myCheckHorizontalFixedForward, 0.00001)) {\r\n                    forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n                }\r\n            }\r\n\r\n            fixedHorizontalMovement.vec3_zero();\r\n\r\n            if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                fixedHorizontalMovement = this._horizontalCheck(surfaceAdjustedHorizontalMovement, feetPosition, height, transformUp, forwardForHorizontal, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, false, fixedHorizontalMovement);\r\n                //console.error(_myTotalRaycasts );\r\n                //collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                //collisionRuntimeParams.myHorizontalCollisionHit.myNormal = PP.vec3_create(0, 0, 1);\r\n                if (collisionCheckParams.mySlidingEnabled && collisionRuntimeParams.myIsCollidingHorizontally && this._isSlidingNormalValid(surfaceAdjustedHorizontalMovement, transformUp, collisionRuntimeParams)) {\r\n                    fixedHorizontalMovement = this._horizontalSlide(surfaceAdjustedHorizontalMovement, feetPosition, height, transformUp, forwardForHorizontal, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, fixedHorizontalMovement);\r\n                } else {\r\n                    //console.error(\"no slide\");\r\n                }\r\n            }\r\n\r\n            if (fixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n                fixedHorizontalMovement.vec3_zero();\r\n            }\r\n\r\n            if (!surfaceAdjustedHorizontalMovement.vec3_isZero() && fixedHorizontalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myHorizontalMovementCanceled = true;\r\n            }\r\n        }\r\n\r\n        {\r\n            forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n            if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n                if (fixedHorizontalMovement.vec3_isZero()) {\r\n                    if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                        forwardForVertical = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForVertical);\r\n                    } else if (!horizontalMovement.vec3_isZero()) {\r\n                        forwardForVertical = horizontalMovement.vec3_normalize(forwardForVertical);\r\n                    } else {\r\n                        forwardForVertical.vec3_copy(transformForward);\r\n                    }\r\n                } else {\r\n                    forwardForVertical = fixedHorizontalMovement.vec3_normalize(forwardForVertical);\r\n                }\r\n            } else {\r\n                if (collisionCheckParams.myCheckVerticalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                    if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                        forwardForVertical.vec3_copy(xAxis);\r\n                    } else {\r\n                        forwardForVertical.vec3_copy(zAxis);\r\n                    }\r\n                }\r\n\r\n                forwardForVertical = forwardForVertical.vec3_removeComponentAlongAxis(transformUp, forwardForVertical);\r\n                forwardForVertical = forwardForVertical.vec3_normalize(forwardForVertical);\r\n\r\n                if (forwardForVertical.vec_equals(collisionCheckParams.myCheckVerticalFixedForward, 0.00001)) {\r\n                    forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n                }\r\n            }\r\n\r\n            //console.error(_myTotalRaycasts );\r\n            // collisionCheckParams.myDebugActive = false;\r\n\r\n            surfaceAdjustedVerticalMovement = this._adjustVerticalMovementWithSurface(fixedHorizontalMovement, verticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, surfaceAdjustedVerticalMovement);\r\n\r\n            newFeetPosition = feetPosition.vec3_add(fixedHorizontalMovement, newFeetPosition);\r\n            let originalMovementSign = Math.pp_sign(verticalMovement.vec3_lengthSigned(transformUp), 0);\r\n\r\n            fixedVerticalMovement.vec3_zero();\r\n            fixedVerticalMovement = this._verticalCheck(surfaceAdjustedVerticalMovement, originalMovementSign, newFeetPosition, height, transformUp, forwardForVertical, collisionCheckParams, collisionRuntimeParams, fixedVerticalMovement);\r\n\r\n            if (fixedVerticalMovement.vec3_isZero(0.000001)) {\r\n                fixedVerticalMovement.vec3_zero();\r\n            }\r\n        }\r\n\r\n        //console.error(_myTotalRaycasts );\r\n        outFixedMovement.vec3_zero();\r\n        if (!collisionRuntimeParams.myIsCollidingVertically) {\r\n            outFixedMovement = fixedHorizontalMovement.vec3_add(fixedVerticalMovement, outFixedMovement);\r\n        } else {\r\n            collisionRuntimeParams.myHorizontalMovementCanceled = true;\r\n            collisionRuntimeParams.myVerticalMovementCanceled = true;\r\n            fixedHorizontalMovement.vec3_zero();\r\n            fixedVerticalMovement.vec3_zero();\r\n\r\n            if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n                if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                    forwardForVertical = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForVertical);\r\n                } else if (!horizontalMovement.vec3_isZero()) {\r\n                    forwardForVertical = horizontalMovement.vec3_normalize(forwardForVertical);\r\n                } else {\r\n                    forwardForVertical.vec3_copy(transformForward);\r\n                }\r\n            }\r\n        }\r\n\r\n        newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n\r\n        forwardForPerceivedAngle.vec3_copy(transformForward);\r\n\r\n        if (!fixedHorizontalMovement.vec3_isZero()) {\r\n            forwardForPerceivedAngle = fixedHorizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n        } else if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n            forwardForPerceivedAngle = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n        } else if (!horizontalMovement.vec3_isZero()) {\r\n            forwardForPerceivedAngle = horizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeGroundInfoEnabled) {\r\n            this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeCeilingInfoEnabled) {\r\n            this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (!surfaceAdjustedHorizontalMovement.vec3_isZero() && !collisionRuntimeParams.myHorizontalMovementCanceled) {\r\n            let surfaceCheckOk = this._postSurfaceCheck(fixedHorizontalMovement, fixedVerticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams);\r\n\r\n            if (!surfaceCheckOk) {\r\n                collisionRuntimeParams.myHorizontalMovementCanceled = true;\r\n                collisionRuntimeParams.myVerticalMovementCanceled = true;\r\n                fixedHorizontalMovement.vec3_zero();\r\n                fixedVerticalMovement.vec3_zero();\r\n                outFixedMovement.vec3_zero();\r\n                newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n\r\n                if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                    forwardForPerceivedAngle = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n                } else if (!horizontalMovement.vec3_isZero()) {\r\n                    forwardForPerceivedAngle = horizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n                } else {\r\n                    forwardForPerceivedAngle.vec3_copy(transformForward);\r\n                }\r\n\r\n                if (collisionCheckParams.myComputeGroundInfoEnabled && collisionCheckParams.myRegatherGroundInfoOnSurfaceCheckFail) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n                } else {\r\n                    collisionRuntimeParams.myIsOnGround = this._myPrevCollisionRuntimeParams.myIsOnGround;\r\n                    collisionRuntimeParams.myGroundAngle = this._myPrevCollisionRuntimeParams.myGroundAngle;\r\n                    collisionRuntimeParams.myGroundPerceivedAngle = this._myPrevCollisionRuntimeParams.myGroundPerceivedAngle;\r\n                    collisionRuntimeParams.myGroundNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myGroundNormal);\r\n                }\r\n\r\n                if (collisionCheckParams.myComputeCeilingInfoEnabled && collisionCheckParams.myRegatherCeilingInfoOnSurfaceCheckFail) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n                } else {\r\n                    collisionRuntimeParams.myIsOnCeiling = this._myPrevCollisionRuntimeParams.myIsOnCeiling;\r\n                    collisionRuntimeParams.myCeilingAngle = this._myPrevCollisionRuntimeParams.myCeilingAngle;\r\n                    collisionRuntimeParams.myCeilingPerceivedAngle = this._myPrevCollisionRuntimeParams.myCeilingPerceivedAngle;\r\n                    collisionRuntimeParams.myCeilingNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myCeilingNormal);\r\n                }\r\n            }\r\n        }\r\n\r\n        //return outFixedMovement.vec3_zero();        \r\n\r\n        if (collisionCheckParams.myExtraMovementCheckCallback != null) {\r\n            fixedMovement.vec3_copy(outFixedMovement);\r\n            outFixedMovement = collisionCheckParams.myExtraMovementCheckCallback(\r\n                movement, fixedMovement, feetPosition, transformUp, transformForward, height,\r\n                collisionCheckParams, this._myPrevCollisionRuntimeParams, collisionRuntimeParams, outFixedMovement);\r\n\r\n            fixedHorizontalMovement = outFixedMovement.vec3_removeComponentAlongAxis(transformUp, fixedHorizontalMovement);\r\n            fixedVerticalMovement = outFixedMovement.vec3_componentAlongAxis(transformUp, fixedVerticalMovement);\r\n        }\r\n\r\n        {\r\n            if (collisionCheckParams.mySlidingAdjustSign90Degrees) {\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myIsSliding && !fixedHorizontalMovement.vec3_isZero()) {\r\n                    /* let angleWithPreviousThreshold = 0.5;\r\n                    check use surfaceAdjustedHorizontalMovement instead of horizontalMovement if reenable this\r\n                    if (!this._myPrevCollisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_isZero() && !horizontalMovement.vec3_isZero() &&\r\n                        horizontalMovement.vec3_angle(this._myPrevCollisionRuntimeParams.myLastValidOriginalHorizontalMovement) > angleWithPreviousThreshold) {\r\n                        collisionRuntimeParams.mySliding90DegreesSign = horizontalMovement.vec3_signTo(this._myPrevCollisionRuntimeParams.myLastValidOriginalHorizontalMovement, transformUp);\r\n                        console.error(\"sp\", collisionRuntimeParams.mySliding90DegreesSign, collisionRuntimeParams.myIsSliding);\r\n                    } */\r\n                    collisionRuntimeParams.mySlidingRecompute90DegreesSign = true;\r\n                    //console.error(\"empty renew\");\r\n                }\r\n            }\r\n\r\n            if (!horizontalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_copy(horizontalMovement);\r\n            }\r\n\r\n            if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(surfaceAdjustedHorizontalMovement);\r\n            }\r\n\r\n            if (!verticalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidOriginalVerticalMovement.vec3_copy(verticalMovement);\r\n            }\r\n\r\n            if (!surfaceAdjustedVerticalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(surfaceAdjustedVerticalMovement);\r\n            }\r\n\r\n            if (!fixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n                collisionRuntimeParams.myLastValidIsSliding = collisionRuntimeParams.myIsSliding;\r\n                collisionRuntimeParams.myIsSlidingFlickerPrevented = false;\r\n                collisionRuntimeParams.myLastValidEndHorizontalMovement.vec3_copy(fixedHorizontalMovement);\r\n                //fixedHorizontalMovement.vec3_error();\r\n\r\n                if (!collisionRuntimeParams.myIsSliding) {\r\n                    //console.error(\"not sliding\");\r\n                } else {\r\n                    //console.error(\"sliding\", collisionRuntimeParams.myIsSlidingFlickerPrevented, collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter);\r\n                }\r\n            } else {\r\n                //console.error(\"still\", collisionRuntimeParams.myIsSlidingFlickerPrevented, collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter);\r\n            }\r\n\r\n            if (!fixedVerticalMovement.vec3_isZero(0.000001)) {\r\n                collisionRuntimeParams.myLastValidEndVerticalMovement.vec3_copy(fixedVerticalMovement);\r\n            }\r\n        }\r\n\r\n        let moveStepFixed = false;\r\n        if (!collisionRuntimeParams.myHorizontalMovementCanceled && !fixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n            horizontalDirection = fixedHorizontalMovement.vec3_normalize(horizontalDirection);\r\n            let surfaceTooSteepResults = this._surfaceTooSteep(transformUp, horizontalDirection, collisionCheckParams, this._myPrevCollisionRuntimeParams);\r\n            if (surfaceTooSteepResults[0] || surfaceTooSteepResults[1]) {\r\n                horizontalDirection = fixedHorizontalMovement.vec3_normalize(horizontalDirection);\r\n                let newSurfaceTooSteepResults = this._surfaceTooSteep(transformUp, horizontalDirection, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if ((surfaceTooSteepResults[0] && newSurfaceTooSteepResults[0]) ||\r\n                    (surfaceTooSteepResults[1] && newSurfaceTooSteepResults[1]) ||\r\n                    !allowSurfaceSteepFix ||\r\n                    (surfaceTooSteepResults[0] && !collisionCheckParams.myAllowGroundSteepFix) ||\r\n                    (surfaceTooSteepResults[1] && !collisionCheckParams.myAllowCeilingSteepFix)) {\r\n                    outFixedMovement.vec3_zero();\r\n                    collisionRuntimeParams.copy(this._myPrevCollisionRuntimeParams);\r\n                    this._moveStep(movement, feetPosition, transformUp, transformForward, height, false, collisionCheckParams, collisionRuntimeParams, outFixedMovement);\r\n                    moveStepFixed = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!moveStepFixed) {\r\n            if (collisionCheckParams.myDebugActive && collisionCheckParams.myDebugMovementActive) {\r\n                this._debugMovement(movement, outFixedMovement, newFeetPosition, transformUp, collisionCheckParams);\r\n            }\r\n\r\n            if (collisionCheckParams.myDebugActive && collisionCheckParams.myDebugRuntimeParamsActive) {\r\n                this._debugRuntimeParams(collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._syncCollisionRuntimeParamsWithPrevious = function () {\r\n    let previousFixedHorizontalMovement = PP.vec3_create();\r\n    return function _syncCollisionRuntimeParamsWithPrevious(surfaceAdjustedHorizontalMovement, verticalMovement, up, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams) {\r\n        collisionRuntimeParams.myIsSlidingFlickerPrevented = previousCollisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n        //console.error(\"prevented\", collisionRuntimeParams.myIsSlidingFlickerPrevented);\r\n\r\n        collisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidOriginalHorizontalMovement);\r\n        collisionRuntimeParams.myLastValidOriginalVerticalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidOriginalVerticalMovement);\r\n        collisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement);\r\n        collisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement);\r\n        collisionRuntimeParams.myLastValidIsSliding = previousCollisionRuntimeParams.myLastValidIsSliding;\r\n\r\n        collisionRuntimeParams.mySliding90DegreesSign = previousCollisionRuntimeParams.mySliding90DegreesSign;\r\n        collisionRuntimeParams.mySlidingRecompute90DegreesSign = previousCollisionRuntimeParams.mySlidingRecompute90DegreesSign;\r\n        if (collisionCheckParams.mySlidingAdjustSign90Degrees) {\r\n            let angleWithPreviousThreshold = 0.5;\r\n            if (!previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_isZero() && !surfaceAdjustedHorizontalMovement.vec3_isZero() &&\r\n                surfaceAdjustedHorizontalMovement.vec3_angle(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement) > angleWithPreviousThreshold) {\r\n                //previousFixedHorizontalMovement = previousCollisionRuntimeParams.myFixedMovement.vec3_removeComponentAlongAxis(up, previousFixedHorizontalMovement);\r\n                if (!previousCollisionRuntimeParams.myLastValidIsSliding) {\r\n                    let angleSigned = surfaceAdjustedHorizontalMovement.vec3_angleSigned(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement, up);\r\n                    let angleSignedThreshold = 10;\r\n                    if (Math.abs(angleSigned) < 180 - angleSignedThreshold) {\r\n                        collisionRuntimeParams.mySliding90DegreesSign = Math.pp_sign(angleSigned);\r\n                        //console.error(\"special sign\");\r\n                    }\r\n                }\r\n                collisionRuntimeParams.mySlidingRecompute90DegreesSign = true;\r\n                //console.error(\"direction new\");\r\n            }\r\n        }\r\n\r\n        previousFixedHorizontalMovement = previousCollisionRuntimeParams.myFixedMovement.vec3_removeComponentAlongAxis(up, previousFixedHorizontalMovement);\r\n        if (previousFixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n            collisionRuntimeParams.mySlidingPreviousHorizontalMovement.vec3_copy(previousCollisionRuntimeParams.mySlidingPreviousHorizontalMovement);\r\n        } else {\r\n            collisionRuntimeParams.mySlidingPreviousHorizontalMovement.vec3_copy(previousFixedHorizontalMovement);\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_move\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_moveStep\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_syncCollisionRuntimeParamsWithPrevious\", { enumerable: false });", "CollisionCheck.prototype._teleport = function () {\r\n    let transformUp = PP.vec3_create();\r\n    let transformForward = PP.vec3_create();\r\n    let feetPosition = PP.vec3_create();\r\n    let originalFeetPosition = PP.vec3_create();\r\n\r\n    let transformOffsetLocalQuat = PP.quat2_create();\r\n    let offsetTransformQuat = PP.quat2_create();\r\n\r\n    let feetPositionOffsetToOriginal = PP.vec3_create();\r\n    let offsetTeleportPosition = PP.vec3_create();\r\n\r\n    let zero = PP.vec3_create();\r\n    let forwardForHorizontal = PP.vec3_create();\r\n    let forwardForVertical = PP.vec3_create();\r\n    let forwardForPerceivedAngle = PP.vec3_create();\r\n    let fixedHorizontalMovement = PP.vec3_create();\r\n    let fixedVerticalMovement = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    let endPosition = PP.vec3_create();\r\n\r\n    let zAxis = PP.vec3_create(0, 0, 1);\r\n    let xAxis = PP.vec3_create(1, 0, 0);\r\n    return function _teleport(teleportPosition, transformQuat, collisionCheckParams, collisionRuntimeParams, isPositionCheck = false) {\r\n        transformOffsetLocalQuat.quat2_setPositionRotationQuat(collisionCheckParams.myPositionOffsetLocal, collisionCheckParams.myRotationOffsetLocalQuat);\r\n        offsetTransformQuat = transformOffsetLocalQuat.quat2_toWorld(transformQuat, offsetTransformQuat);\r\n        if (transformQuat.vec_equals(offsetTransformQuat, 0.00001)) {\r\n            offsetTransformQuat.quat2_copy(transformQuat);\r\n        }\r\n\r\n        transformUp = offsetTransformQuat.quat2_getUp(transformUp);\r\n        transformForward = offsetTransformQuat.quat2_getForward(transformForward);\r\n        feetPosition = offsetTransformQuat.quat2_getPosition(feetPosition);\r\n\r\n        offsetTeleportPosition.vec3_copy(teleportPosition);\r\n        originalFeetPosition = transformQuat.quat2_getPosition(originalFeetPosition);\r\n        feetPositionOffsetToOriginal = originalFeetPosition.vec3_sub(feetPosition, feetPositionOffsetToOriginal);\r\n        if (feetPositionOffsetToOriginal.vec3_isZero(0.00001)) {\r\n            feetPositionOffsetToOriginal.vec3_zero();\r\n        } else {\r\n            offsetTeleportPosition = offsetTeleportPosition.vec3_sub(feetPositionOffsetToOriginal, offsetTeleportPosition);\r\n        }\r\n\r\n\r\n        let height = collisionCheckParams.myHeight;\r\n        height = height - 0.00001; // this makes it easier to setup things at the same exact height of a character so that it can go under it\r\n        if (height < 0.00001) {\r\n            height = 0;\r\n        }\r\n        //height = 1.75;\r\n\r\n        this._myPrevCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        collisionRuntimeParams.reset();\r\n\r\n        forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n        if (!collisionCheckParams.myCheckHorizontalFixedForwardEnabled) {\r\n            forwardForHorizontal.vec3_copy(transformForward);\r\n        } else {\r\n            if (collisionCheckParams.myCheckHorizontalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                    forwardForHorizontal.vec3_copy(xAxis);\r\n                } else {\r\n                    forwardForHorizontal.vec3_copy(zAxis);\r\n                }\r\n            }\r\n\r\n            forwardForHorizontal = forwardForHorizontal.vec3_removeComponentAlongAxis(transformUp, forwardForHorizontal);\r\n            forwardForHorizontal = forwardForHorizontal.vec3_normalize(forwardForHorizontal);\r\n\r\n            if (forwardForHorizontal.vec_equals(collisionCheckParams.myCheckHorizontalFixedForward, 0.00001)) {\r\n                forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n            }\r\n        }\r\n\r\n        fixedHorizontalMovement = this._horizontalCheck(zero, offsetTeleportPosition, height, transformUp, forwardForHorizontal, false, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, false, fixedHorizontalMovement);\r\n        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n            newFeetPosition = offsetTeleportPosition.vec3_add(fixedHorizontalMovement, newFeetPosition);\r\n\r\n            forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n            if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n                forwardForVertical.vec3_copy(transformForward);\r\n            } else {\r\n                if (collisionCheckParams.myCheckVerticalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                    if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                        forwardForVertical.vec3_copy(xAxis);\r\n                    } else {\r\n                        forwardForVertical.vec3_copy(zAxis);\r\n                    }\r\n                }\r\n\r\n                forwardForVertical = forwardForVertical.vec3_removeComponentAlongAxis(transformUp, forwardForVertical);\r\n                forwardForVertical = forwardForVertical.vec3_normalize(forwardForVertical);\r\n\r\n                if (forwardForVertical.vec_equals(collisionCheckParams.myCheckVerticalFixedForward, 0.00001)) {\r\n                    forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n                }\r\n            }\r\n\r\n            let downward = -1;\r\n            fixedVerticalMovement = this._verticalCheck(zero, downward, newFeetPosition, height, transformUp, forwardForVertical, collisionCheckParams, collisionRuntimeParams, fixedVerticalMovement);\r\n            if (!collisionRuntimeParams.myIsCollidingVertically) {\r\n                newFeetPosition = newFeetPosition.vec3_add(fixedVerticalMovement, newFeetPosition);\r\n\r\n                forwardForPerceivedAngle.vec3_copy(transformForward);\r\n\r\n                if (collisionCheckParams.myComputeGroundInfoEnabled) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n                }\r\n\r\n                if (collisionCheckParams.myComputeCeilingInfoEnabled) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n                }\r\n\r\n                if (!collisionRuntimeParams.myIsOnGround) {\r\n                    if ((collisionCheckParams.myTeleportMustBeOnGround && !isPositionCheck)\r\n                        || (collisionCheckParams.myCheckTransformMustBeOnGround && isPositionCheck)) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (!collisionRuntimeParams.myIsOnCeiling) {\r\n                    if ((collisionCheckParams.myTeleportMustBeOnCeiling && !isPositionCheck)\r\n                        || (collisionCheckParams.myCheckTransformMustBeOnCeiling && isPositionCheck)) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (collisionRuntimeParams.myIsOnGround) {\r\n                    let minAngle = null;\r\n                    if (!isPositionCheck) {\r\n                        if (collisionCheckParams.myTeleportMustBeOnIgnorableGroundAngle) {\r\n                            minAngle = collisionCheckParams.myGroundAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myTeleportMustBeOnGroundAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myTeleportMustBeOnGroundAngle);\r\n                        }\r\n                    } else {\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnIgnorableGroundAngle) {\r\n                            minAngle = collisionCheckParams.myGroundAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnGroundAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myCheckTransformMustBeOnGroundAngle);\r\n                        }\r\n                    }\r\n\r\n                    if (minAngle != null && collisionRuntimeParams.myGroundAngle > minAngle + 0.0001) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (collisionRuntimeParams.myIsOnCeiling) {\r\n                    let minAngle = null;\r\n                    if (!isPositionCheck) {\r\n                        if (collisionCheckParams.myTeleportMustBeOnIgnorableCeilingAngle) {\r\n                            minAngle = collisionCheckParams.myCeilingAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myTeleportMustBeOnCeilingAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myTeleportMustBeOnCeilingAngle);\r\n                        }\r\n                    } else {\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnIgnorableCeilingAngle) {\r\n                            minAngle = collisionCheckParams.myCeilingAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnCeilingAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myCheckTransformMustBeOnCeilingAngle);\r\n                        }\r\n                    }\r\n\r\n                    if (minAngle != null && collisionRuntimeParams.myCeilingAngle > minAngle + 0.0001) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (collisionRuntimeParams.myTeleportCanceled) {\r\n                    if (collisionCheckParams.myComputeGroundInfoEnabled && collisionCheckParams.myRegatherGroundInfoOnSurfaceCheckFail) {\r\n                        this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n                    } else {\r\n                        collisionRuntimeParams.myIsOnGround = this._myPrevCollisionRuntimeParams.myIsOnGround;\r\n                        collisionRuntimeParams.myGroundAngle = this._myPrevCollisionRuntimeParams.myGroundAngle;\r\n                        collisionRuntimeParams.myGroundPerceivedAngle = this._myPrevCollisionRuntimeParams.myGroundPerceivedAngle;\r\n                        collisionRuntimeParams.myGroundNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myGroundNormal);\r\n                    }\r\n\r\n                    if (collisionCheckParams.myComputeCeilingInfoEnabled && collisionCheckParams.myRegatherCeilingInfoOnSurfaceCheckFail) {\r\n                        this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n                    } else {\r\n                        collisionRuntimeParams.myIsOnCeiling = this._myPrevCollisionRuntimeParams.myIsOnCeiling;\r\n                        collisionRuntimeParams.myCeilingAngle = this._myPrevCollisionRuntimeParams.myCeilingAngle;\r\n                        collisionRuntimeParams.myCeilingPerceivedAngle = this._myPrevCollisionRuntimeParams.myCeilingPerceivedAngle;\r\n                        collisionRuntimeParams.myCeilingNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myCeilingNormal);\r\n                    }\r\n                }\r\n\r\n                //regather surface if invalid else use before\r\n            } else {\r\n                collisionRuntimeParams.myTeleportCanceled = true;\r\n            }\r\n        } else {\r\n            collisionRuntimeParams.myTeleportCanceled = true;\r\n        }\r\n\r\n        if (!isPositionCheck) {\r\n            if (collisionCheckParams.myExtraTeleportCheckCallback != null) {\r\n                endPosition.vec3_copy(newFeetPosition);\r\n                newFeetPosition = collisionCheckParams.myExtraTeleportCheckCallback(\r\n                    offsetTeleportPosition, endPosition, feetPosition, transformUp, transformForward, height,\r\n                    collisionCheckParams, this._myPrevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition);\r\n            }\r\n        } else {\r\n            if (collisionCheckParams.myExtraCheckTransformCheckCallback != null) {\r\n                endPosition.vec3_copy(newFeetPosition);\r\n                newFeetPosition = collisionCheckParams.myExtraCheckTransformCheckCallback(\r\n                    endPosition, feetPosition, transformUp, transformForward, height,\r\n                    collisionCheckParams, this._myPrevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition);\r\n            }\r\n        }\r\n\r\n        collisionRuntimeParams.myOriginalUp = transformQuat.quat2_getUp(collisionRuntimeParams.myOriginalUp);\r\n        collisionRuntimeParams.myOriginalForward = transformQuat.quat2_getForward(collisionRuntimeParams.myOriginalForward);\r\n        collisionRuntimeParams.myOriginalPosition = transformQuat.quat2_getPosition(collisionRuntimeParams.myOriginalPosition);\r\n\r\n        collisionRuntimeParams.myOriginalHeight = collisionCheckParams.myHeight;\r\n\r\n        collisionRuntimeParams.myOriginalTeleportPosition.vec3_copy(teleportPosition);\r\n\r\n        if (!collisionRuntimeParams.myTeleportCanceled) {\r\n            collisionRuntimeParams.myFixedTeleportPosition.vec3_copy(newFeetPosition);\r\n            if (!feetPositionOffsetToOriginal.vec3_isZero(0.00001)) {\r\n                collisionRuntimeParams.myFixedTeleportPosition = collisionRuntimeParams.myFixedTeleportPosition.vec3_add(feetPositionOffsetToOriginal, collisionRuntimeParams.myFixedTeleportPosition);\r\n            }\r\n\r\n            collisionRuntimeParams.myNewPosition.vec3_copy(collisionRuntimeParams.myFixedTeleportPosition);\r\n        } else {\r\n            collisionRuntimeParams.myNewPosition.vec3_copy(collisionRuntimeParams.myOriginalPosition);\r\n        }\r\n\r\n        collisionRuntimeParams.myIsTeleport = true;\r\n\r\n        if (collisionCheckParams.myDebugActive && collisionCheckParams.myDebugRuntimeParamsActive) {\r\n            this._debugRuntimeParams(collisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_teleport\", { enumerable: false });\r\n", "CollisionCheck.prototype._positionCheck = function () {\r\n    let feetPosition = PP.vec3_create();\r\n    return function _positionCheck(allowAdjustments, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        feetPosition = transformQuat.quat2_getPosition(feetPosition);\r\n\r\n        this._teleport(feetPosition, transformQuat, collisionCheckParams, collisionRuntimeParams, true);\r\n\r\n        collisionRuntimeParams.myIsPositionOk = !collisionRuntimeParams.myTeleportCanceled;\r\n        collisionRuntimeParams.myIsPositionCheck = true;\r\n        collisionRuntimeParams.myOriginalPositionCheckPosition.vec3_copy(collisionRuntimeParams.myOriginalTeleportPosition);\r\n        collisionRuntimeParams.myFixedPositionCheckPosition.vec3_copy(collisionRuntimeParams.myFixedTeleportPosition);\r\n        collisionRuntimeParams.myIsPositionCheckAllowAdjustments = allowAdjustments;\r\n\r\n        if (!allowAdjustments) {\r\n            collisionRuntimeParams.myIsPositionOk = collisionRuntimeParams.myIsPositionOk &&\r\n                collisionRuntimeParams.myOriginalPositionCheckPosition.vec_equals(collisionRuntimeParams.myFixedPositionCheckPosition, 0.00001);\r\n        }\r\n\r\n        collisionRuntimeParams.myOriginalTeleportPosition.vec3_zero();\r\n        collisionRuntimeParams.myFixedTeleportPosition.vec3_zero();\r\n        collisionRuntimeParams.myTeleportCanceled = false;\r\n        collisionRuntimeParams.myIsTeleport = false;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_positionCheck\", { enumerable: false });\r\n", "CollisionCheck.prototype._horizontalCheck = function () {\r\n    let fixedFeetPosition = PP.vec3_create();\r\n    let newFixedFeetPosition = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    let horizontalDirection = PP.vec3_create();\r\n    return function _horizontalCheck(movement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, avoidSlidingExtraCheck, outFixedMovement) {\r\n        collisionRuntimeParams.myIsCollidingHorizontally = false;\r\n        collisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n        outFixedMovement.vec3_zero();\r\n\r\n        horizontalDirection = movement.vec3_normalize(horizontalDirection);\r\n        let surfaceTooSteepResults = this._surfaceTooSteep(up, horizontalDirection, collisionCheckParams, previousCollisionRuntimeParams);\r\n        if (movement.vec3_isZero(0.000001) ||\r\n            ((!surfaceTooSteepResults[0] || (allowSurfaceSteepFix && collisionCheckParams.myAllowGroundSteepFix)) &&\r\n                (!surfaceTooSteepResults[1] || (allowSurfaceSteepFix && collisionCheckParams.myAllowCeilingSteepFix)))) {\r\n            fixedFeetPosition = feetPosition.vec3_add(up.vec3_scale(collisionCheckParams.myDistanceFromFeetToIgnore + 0.0001, fixedFeetPosition), fixedFeetPosition);\r\n            let fixedHeight = Math.max(0, height - collisionCheckParams.myDistanceFromFeetToIgnore - collisionCheckParams.myDistanceFromHeadToIgnore - 0.0001 * 2);\r\n\r\n            let canMove = true;\r\n            if (collisionCheckParams.myHorizontalMovementCheckEnabled && !movement.vec3_isZero(0.000001)) {\r\n                canMove = this._horizontalMovementCheck(movement, feetPosition, height, fixedFeetPosition, fixedHeight, up, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n\r\n            if (canMove) {\r\n                if (collisionCheckParams.myHorizontalPositionCheckEnabled) {\r\n                    newFixedFeetPosition = fixedFeetPosition.vec3_add(movement, newFixedFeetPosition);\r\n                    newFeetPosition = feetPosition.vec3_add(movement, newFeetPosition);\r\n                    let canStay = this._horizontalPositionCheck(newFeetPosition, height, newFixedFeetPosition, fixedHeight, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n                    if (canStay) {\r\n                        outFixedMovement.vec3_copy(movement);\r\n                    }\r\n\r\n                    if (outFixedMovement.vec3_isZero(0.000001)) {\r\n                        outFixedMovement.vec3_zero();\r\n                    }\r\n                } else {\r\n                    outFixedMovement.vec3_copy(movement);\r\n                }\r\n            } else if (!avoidSlidingExtraCheck && collisionCheckParams.mySlidingEnabled && collisionCheckParams.mySlidingHorizontalMovementCheckBetterNormal) {\r\n                this._horizontalCheckBetterSlideNormal(movement, feetPosition, height, fixedFeetPosition, fixedHeight, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalCheckRaycast = function () {\r\n    let direction = PP.vec3_create();\r\n    let fixedFeetPosition = PP.vec3_create();\r\n    let fixedHitPosition = PP.vec3_create();\r\n    return function _horizontalCheckRaycast(startPosition, endPosition, movementDirection, up,\r\n        ignoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n        feetPosition, fixHitOnCollision,\r\n        collisionCheckParams, collisionRuntimeParams, checkAllHits = false, ignoreHitsInsideCollisionIfObjectToIgnore = false) {\r\n\r\n        let origin = startPosition;\r\n        direction = endPosition.vec3_sub(origin, direction);\r\n\r\n        if (movementDirection != null && !direction.vec3_isConcordant(movementDirection)) {\r\n            direction.vec3_negate(direction);\r\n            origin = endPosition;\r\n        }\r\n\r\n        let distance = direction.vec3_length();\r\n        direction.vec3_normalize(direction);\r\n        let raycastResult = this._raycastAndDebug(origin, direction, distance, ignoreHitsInsideCollision, true, collisionCheckParams, collisionRuntimeParams);\r\n\r\n        let isOk = true;\r\n\r\n        if (raycastResult.isColliding()) {\r\n            let hitsToControl = checkAllHits ? raycastResult.myHits.length : 1;\r\n            let validHitIndex = 0;\r\n            for (let i = 0; i < hitsToControl; i++) {\r\n                let hit = raycastResult.myHits[i];\r\n                if ((ignoreGroundAngleCallback == null || !ignoreGroundAngleCallback(hit, ignoreHitsInsideCollisionIfObjectToIgnore)) &&\r\n                    (ignoreCeilingAngleCallback == null || !ignoreCeilingAngleCallback(hit, ignoreHitsInsideCollisionIfObjectToIgnore))) {\r\n                    isOk = false;\r\n                    validHitIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!isOk && validHitIndex > 0) {\r\n                for (let i = 0; i < validHitIndex; i++) {\r\n                    raycastResult.removeHit(0);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!isOk && fixHitOnCollision) {\r\n            let hitPosition = raycastResult.myHits[0].myPosition;\r\n\r\n            fixedFeetPosition = feetPosition.vec3_copyComponentAlongAxis(hitPosition, up, fixedFeetPosition);\r\n            fixedHitPosition.vec3_copy(hitPosition);\r\n\r\n            let directionOffsetEpsilonValue = 0.0001;\r\n            direction = direction.vec3_componentAlongAxis(up, direction);\r\n            if (!direction.vec3_isZero(0.000001)) {\r\n                // if the check has an up part move the hit a bit on the that direction\r\n                direction.vec3_normalize(direction);\r\n                direction.vec3_scale(directionOffsetEpsilonValue, direction);\r\n\r\n                // this offset is a workaround for objects that in the editor are aligned but due to clamp get a bit tilted when in the game\r\n                // and therefore trying an horizontal cast on the vertical hit position could result in hitting the bottom which in theory should be parallel and therefore not possible\r\n                fixedFeetPosition.vec3_add(direction, fixedFeetPosition);\r\n                fixedHitPosition.vec3_add(direction, fixedHitPosition);\r\n            }\r\n\r\n            // move the hit a bit further to prevent miss\r\n            direction = fixedHitPosition.vec3_sub(fixedFeetPosition, direction);\r\n            direction.vec3_normalize(direction);\r\n            direction.vec3_scale(directionOffsetEpsilonValue, direction);\r\n            fixedHitPosition = fixedHitPosition.vec3_add(direction, fixedHitPosition);\r\n\r\n            let swapRaycastResult = this._myRaycastResult;\r\n            this._myRaycastResult = this._myFixRaycastResult;\r\n\r\n            isOk = this._horizontalCheckRaycast(fixedFeetPosition, fixedHitPosition, null, up,\r\n                false, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                feetPosition, false,\r\n                collisionCheckParams, collisionRuntimeParams);\r\n\r\n            if (this._myRaycastResult.isColliding()) {\r\n                this._myFixRaycastResult = swapRaycastResult;\r\n            } else {\r\n                isOk = false;\r\n                this._myRaycastResult = swapRaycastResult;\r\n            }\r\n        }\r\n\r\n        return isOk;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._ignoreSurfaceAngle = function () {\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n\r\n    let movementDirection = PP.vec3_create();\r\n    let hitDirection = PP.vec3_create();\r\n    let hitMovement = PP.vec3_create();\r\n    let projectAlongAxis = PP.vec3_create();\r\n    return function _ignoreSurfaceAngle(feetPosition, height, movementOrForward, objectsToIgnore, outIgnoredObjects, isGround, isMovementCheck, up, collisionCheckParams, hit, ignoreHitsInsideCollisionIfObjectToIgnore) {\r\n        let isIgnorable = false;\r\n\r\n        let surfaceIgnoreHeight = null;\r\n        let groundIgnoreHeight = isMovementCheck ? collisionCheckParams.myHorizontalMovementGroundAngleIgnoreHeight : collisionCheckParams.myHorizontalPositionGroundAngleIgnoreHeight;\r\n        let ceilingIgnoreHeight = isMovementCheck ? collisionCheckParams.myHorizontalMovementCeilingAngleIgnoreHeight : collisionCheckParams.myHorizontalPositionCeilingAngleIgnoreHeight;\r\n        if (isGround && groundIgnoreHeight != null) {\r\n            surfaceIgnoreHeight = Math.pp_clamp(groundIgnoreHeight + 0.0002, 0, height);\r\n        } else if (!isGround && ceilingIgnoreHeight != null) {\r\n            surfaceIgnoreHeight = Math.pp_clamp(height - ceilingIgnoreHeight - 0.0002, 0, height);\r\n        }\r\n\r\n        let surfaceIgnoreMaxMovementLeft = null;\r\n        if (isMovementCheck) {\r\n            if (isGround && collisionCheckParams.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft != null) {\r\n                surfaceIgnoreMaxMovementLeft = collisionCheckParams.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft;\r\n            } else if (!isGround && collisionCheckParams.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft != null) {\r\n                surfaceIgnoreMaxMovementLeft = collisionCheckParams.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft;\r\n            }\r\n        }\r\n\r\n        if (!hit.myIsInsideCollision) {\r\n            movementDirection = movementOrForward.vec3_normalize(movementDirection);\r\n\r\n            let surfaceAngle = hit.myNormal.vec3_angle(up);\r\n            if (!isGround) {\r\n                surfaceAngle = 180 - surfaceAngle;\r\n            }\r\n\r\n            if (isGround && collisionCheckParams.myGroundAngleToIgnore > 0 && (surfaceAngle > collisionCheckParams.myGroundAngleToIgnore + 0.0001)) {\r\n                if (collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle != null &&\r\n                    surfaceAngle <= collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                    let perceivedAngle = this.computeSurfacePerceivedAngle(\r\n                        hit.myNormal,\r\n                        movementDirection, up, true);\r\n                    surfaceAngle = Math.abs(perceivedAngle);\r\n                }\r\n            } else if (!isGround && collisionCheckParams.myCeilingAngleToIgnore > 0 && surfaceAngle > collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n                if (collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle != null &&\r\n                    surfaceAngle <= collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                    let perceivedAngle = this.computeSurfacePerceivedAngle(\r\n                        hit.myNormal,\r\n                        movementDirection, up, false);\r\n                    surfaceAngle = Math.abs(perceivedAngle);\r\n                }\r\n            }\r\n\r\n            if ((isGround && (collisionCheckParams.myGroundAngleToIgnore > 0 && surfaceAngle <= collisionCheckParams.myGroundAngleToIgnore + 0.0001)) ||\r\n                (!isGround && (collisionCheckParams.myCeilingAngleToIgnore > 0 && surfaceAngle <= collisionCheckParams.myCeilingAngleToIgnore + 0.0001))) {\r\n                if (objectsToIgnore == null || objectsToIgnore.pp_hasEqual(hit.myObject, objectsEqualCallback)) {\r\n                    let surfaceHeightCheckOk = true;\r\n                    let maxMovementLeftCheckOk = true;\r\n\r\n                    if (surfaceIgnoreHeight != null) {\r\n                        surfaceHeightCheckOk = false;\r\n\r\n                        let feetPositionUp = feetPosition.vec3_valueAlongAxis(up);\r\n                        let hitUp = hit.myPosition.vec3_valueAlongAxis(up);\r\n                        let hitHeight = hitUp - feetPositionUp;\r\n                        if ((isGround && hitHeight <= surfaceIgnoreHeight) || (!isGround && hitHeight >= surfaceIgnoreHeight)) {\r\n                            surfaceHeightCheckOk = true;\r\n                        } else {\r\n                            //console.error(hitHeight.toFixed(6));\r\n                        }\r\n                    }\r\n\r\n                    if (surfaceHeightCheckOk && isMovementCheck) {\r\n                        if (surfaceIgnoreMaxMovementLeft != null) {\r\n                            let movementLength = movementOrForward.vec3_length();\r\n                            if (movementLength > surfaceIgnoreMaxMovementLeft) {\r\n                                maxMovementLeftCheckOk = false;\r\n\r\n                                let hitPosition = hit.myPosition;\r\n                                let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 90);\r\n                                hitDirection = hitPosition.vec3_sub(feetPosition, hitDirection);\r\n\r\n                                if (hitDirection.vec3_isToTheRight(movementDirection, up)) {\r\n                                    projectAlongAxis = movementDirection.vec3_rotateAxis(-halfConeAngle, up, projectAlongAxis);\r\n                                } else {\r\n                                    projectAlongAxis = movementDirection.vec3_rotateAxis(halfConeAngle, up, projectAlongAxis);\r\n                                }\r\n\r\n                                hitMovement = hitDirection.vec3_projectOnAxisAlongAxis(movementDirection, projectAlongAxis, hitMovement);\r\n\r\n                                let hitMovementLength = hitMovement.vec3_length();\r\n                                let movementLeft = movementLength - hitMovementLength;\r\n\r\n                                if (movementLeft <= surfaceIgnoreMaxMovementLeft) {\r\n                                    maxMovementLeftCheckOk = true;\r\n                                } else {\r\n                                    //console.error(movementLeft.toFixed(3));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (surfaceHeightCheckOk && maxMovementLeftCheckOk) {\r\n                        isIgnorable = true;\r\n                    }\r\n                }\r\n            }\r\n        } else if (ignoreHitsInsideCollisionIfObjectToIgnore) {\r\n            // #TODO when raycast pierce will work, if it gives the normal even when inside check if the angle is ok and only ignore if that's the case\r\n            if (objectsToIgnore == null || objectsToIgnore.pp_hasEqual(hit.myObject, objectsEqualCallback)) {\r\n                isIgnorable = true;\r\n            }\r\n        }\r\n\r\n        if (isIgnorable) {\r\n            if (outIgnoredObjects != null) {\r\n                outIgnoredObjects.pp_pushUnique(hit.myObject, objectsEqualCallback);\r\n            }\r\n        }\r\n\r\n\r\n        return isIgnorable;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalCheckRaycast\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_ignoreSurfaceAngle\", { enumerable: false });\r\n\r\n", "CollisionCheck.prototype._horizontalSlide = function () {\r\n    let previousHorizontalMovement = PP.vec3_create();\r\n    let horizontalDirection = PP.vec3_create();\r\n    return function _horizontalSlide(movement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, outSlideMovement) {\r\n        if (movement.vec3_isZero(0.00001)) {\r\n            return outSlideMovement.vec3_zero();\r\n        }\r\n\r\n        this._mySlidingCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n\r\n        previousHorizontalMovement.vec3_copy(collisionRuntimeParams.mySlidingPreviousHorizontalMovement);\r\n        outSlideMovement = this._internalHorizontalSlide(movement, feetPosition, height, up, forward, previousHorizontalMovement, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingCollisionRuntimeParams, previousCollisionRuntimeParams, false, outSlideMovement);\r\n\r\n        if (collisionCheckParams.mySlidingCheckBothDirections) {\r\n            this._horizontalSlideCheckOpposite(movement, feetPosition, height, up, forward, previousHorizontalMovement, this._myPrevCollisionRuntimeParams.myIsSliding, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, this._mySlidingCollisionRuntimeParams, previousCollisionRuntimeParams, outSlideMovement);\r\n\r\n            //console.error(\"post oppo:\", outSlideMovement.vec_toString());\r\n        }\r\n\r\n        //console.error(\" \");\r\n\r\n        if (this._mySlidingCollisionRuntimeParams.myIsSliding && collisionCheckParams.mySlidingFlickeringPreventionType > 0) {\r\n            let isFlickering = this._horizontalSlideFlickerCheck(movement, outSlideMovement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingCollisionRuntimeParams, previousCollisionRuntimeParams);\r\n            this._mySlidingCollisionRuntimeParams.myIsSliding = !isFlickering;\r\n        }\r\n\r\n        if (this._mySlidingCollisionRuntimeParams.myIsSliding) {\r\n            let backupFlickerPrevented = collisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n            collisionRuntimeParams.copy(this._mySlidingCollisionRuntimeParams);\r\n            collisionRuntimeParams.myIsSlidingFlickerPrevented = backupFlickerPrevented || this._mySlidingCollisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n        } else {\r\n            collisionRuntimeParams.myIsSlidingFlickerPrevented = collisionRuntimeParams.myIsSlidingFlickerPrevented || this._mySlidingCollisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n            //console.error(\"slide cancel\");\r\n            outSlideMovement.vec3_zero();\r\n        }\r\n\r\n        return outSlideMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalSlideCheckOpposite = function () {\r\n    let horizontalCollisionNormal = PP.vec3_create();\r\n    let oppositeSlideMovement = PP.vec3_create();\r\n    let hitNormal = PP.vec3_create();\r\n    return function _horizontalSlideCheckOpposite(movement, feetPosition, height, up, forward, previousHorizontalMovement, previousIsSliding, allowSurfaceSteepFix, collisionCheckParams, preSlideCollisionRuntimeParams, postSlideCollisionRuntimeParams, previousCollisionRuntimeParams, outSlideMovement) {\r\n        horizontalCollisionNormal = preSlideCollisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, horizontalCollisionNormal);\r\n        horizontalCollisionNormal.vec3_normalize(horizontalCollisionNormal);\r\n\r\n        //console.error(\"oppo\", outSlideMovement.vec_toString(), movement.vec_toString(15));\r\n        let angleNormalWithMovementThreshold = 20;\r\n        if (horizontalCollisionNormal.vec3_angle(movement) > 180 - angleNormalWithMovementThreshold) {\r\n            //console.error(\"opposite normal ok\");\r\n            return;\r\n        } else if (previousIsSliding && postSlideCollisionRuntimeParams.myIsSliding && outSlideMovement.vec3_isConcordant(previousHorizontalMovement)) {\r\n            //console.error(\"previous direction ok\");\r\n            //console.error(postSlideCollisionRuntimeParams.myIsSliding, outSlideMovement.vec3_isConcordant(previousHorizontalMovement), outSlideMovement.vec_toString(), previousHorizontalMovement.vec_toString());\r\n            return;\r\n        } else {\r\n            //console.error(\"no fast exit\");\r\n        }\r\n\r\n        //console.error(horizontalCollisionNormal.vec3_angle(movement));\r\n\r\n        this._mySlidingOppositeDirectionCollisionRuntimeParams.copy(preSlideCollisionRuntimeParams);\r\n\r\n        oppositeSlideMovement = this._internalHorizontalSlide(movement, feetPosition, height, up, forward, previousHorizontalMovement, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingOppositeDirectionCollisionRuntimeParams, previousCollisionRuntimeParams, true, oppositeSlideMovement);\r\n\r\n        //console.error(previousHorizontalMovement.vec_toString(), outSlideMovement.vec_toString(), oppositeSlideMovement.vec_toString());\r\n        if (this._mySlidingOppositeDirectionCollisionRuntimeParams.myIsSliding) {\r\n\r\n            let isOppositeBetter = false;\r\n            if (postSlideCollisionRuntimeParams.myIsSliding) {\r\n                if (movement.vec3_angle(oppositeSlideMovement) < movement.vec3_angle(outSlideMovement) - 0.0001) {\r\n                    //console.error(\"oppo minor\");\r\n                    isOppositeBetter = true;\r\n                } else {\r\n                    if (Math.abs(movement.vec3_angle(oppositeSlideMovement) - movement.vec3_angle(outSlideMovement)) <= 0.0001) {\r\n                        if (previousHorizontalMovement.vec3_angle(oppositeSlideMovement) < previousHorizontalMovement.vec3_angle(outSlideMovement) - 0.0001) {\r\n                            let angleNormalWithMovementThreshold = 5;\r\n                            if (horizontalCollisionNormal.vec3_angle(movement) < 90 + angleNormalWithMovementThreshold) {\r\n                                //console.error(\"oppo equal\");\r\n                                isOppositeBetter = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                //console.error(movement.vec3_angle(outSlideMovement), movement.vec3_angle(oppositeSlideMovement));\r\n\r\n            } else {\r\n                let angleEpsilon = 0.001;\r\n                if (movement.vec3_isConcordant(oppositeSlideMovement) && movement.vec3_angle(oppositeSlideMovement) < 90 - angleEpsilon) {\r\n                    //console.error(\"oppo not\");\r\n                    isOppositeBetter = true;\r\n                } else {\r\n                    //console.error(\"oppo not prevention\");\r\n                }\r\n            }\r\n\r\n            if (isOppositeBetter) {\r\n                /* {\r\n                    hitNormal.vec3_copy(preSlideCollisionRuntimeParams.myHorizontalCollisionHit.myNormal);\r\n \r\n                    let visualParams = new PP.VisualArrowParams();\r\n                    visualParams.myStart = feetPosition;\r\n                    visualParams.myDirection = slideMovement.vec3_normalize();\r\n                    visualParams.myLength = 0.2;\r\n                    visualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                    visualParams.myMaterial.color =  PP.vec4_create(0, 0, 1, 1);\r\n                    PP.myDebugVisualManager.draw(visualParams, 1);\r\n                }\r\n \r\n                {\r\n                    let visualParams = new PP.VisualArrowParams();\r\n                    visualParams.myStart = feetPosition;\r\n                    visualParams.myDirection = oppositeSlideMovement.vec3_normalize();\r\n                    visualParams.myLength = 0.2;\r\n                    visualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                    visualParams.myMaterial.color =  PP.vec4_create(1, 0, 1, 1);\r\n                    PP.myDebugVisualManager.draw(visualParams, 1);\r\n                }\r\n \r\n                {\r\n                    let visualParams = new PP.VisualArrowParams();\r\n                    visualParams.myStart = feetPosition;\r\n                    visualParams.myDirection = hitNormal.vec3_normalize();\r\n                    visualParams.myLength = 0.2;\r\n                    visualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                    visualParams.myMaterial.color =  PP.vec4_create(1, 1, 1, 1);\r\n                    PP.myDebugVisualManager.draw(visualParams, 1);\r\n                } */\r\n\r\n                outSlideMovement.vec3_copy(oppositeSlideMovement);\r\n                postSlideCollisionRuntimeParams.copy(this._mySlidingOppositeDirectionCollisionRuntimeParams);\r\n            } else {\r\n                //console.error(\"normal\", previousHorizontalMovement.vec_toString(), outSlideMovement.vec_toString(), oppositeSlideMovement.vec_toString());\r\n            }\r\n        } else {\r\n            //console.error(\"oppo not sliding\");\r\n        }\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalSlideFlickerCheck = function () {\r\n    let previousHorizontalMovement = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    let flickerFixSlideMovement = PP.vec3_create();\r\n    return function _horizontalSlideFlickerCheck(movement, slideMovement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams) {\r\n        let isFlickering = false;\r\n\r\n        previousHorizontalMovement.vec3_copy(collisionRuntimeParams.mySlidingPreviousHorizontalMovement);\r\n        let shouldCheckFlicker =\r\n            this._myPrevCollisionRuntimeParams.myIsSlidingFlickerPrevented ||\r\n            previousHorizontalMovement.vec3_isZero(0.00001);\r\n\r\n        if (!shouldCheckFlicker) {\r\n            if (this._myPrevCollisionRuntimeParams.myIsSliding || !collisionCheckParams.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding) {\r\n                let flickerCollisionAngle = 90;\r\n                let flickerMovementAngle = 85;\r\n                switch (collisionCheckParams.mySlidingFlickeringPreventionType) {\r\n                    case 1:\r\n                        shouldCheckFlicker = previousHorizontalMovement.vec3_signTo(movement, up, 0) != slideMovement.vec3_signTo(movement, up, 0);\r\n                        break;\r\n                    case 2:\r\n                        shouldCheckFlicker = collisionCheckParams.mySlidingCheckBothDirections && collisionRuntimeParams.myIsSlidingIntoOppositeDirection;\r\n                        shouldCheckFlicker = shouldCheckFlicker || Math.abs(collisionRuntimeParams.mySlidingCollisionAngle) > flickerCollisionAngle + 0.00001;\r\n                        break;\r\n                    case 3:\r\n                        shouldCheckFlicker = collisionCheckParams.mySlidingCheckBothDirections && collisionRuntimeParams.myIsSlidingIntoOppositeDirection;\r\n                        shouldCheckFlicker = shouldCheckFlicker || Math.abs(collisionRuntimeParams.mySlidingCollisionAngle) > flickerCollisionAngle + 0.00001;\r\n\r\n                        shouldCheckFlicker = shouldCheckFlicker || (\r\n                            Math.abs(Math.abs(collisionRuntimeParams.mySlidingCollisionAngle) - flickerCollisionAngle) < 0.00001 &&\r\n                            Math.abs(collisionRuntimeParams.mySlidingMovementAngle) > flickerMovementAngle + 0.00001);\r\n                        break;\r\n                    case 4:\r\n                        shouldCheckFlicker = true;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        //console.error(this._myPrevCollisionRuntimeParams.myIsSlidingFlickerPrevented);\r\n        if (shouldCheckFlicker || this._myPrevCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter > 0) {\r\n            if (shouldCheckFlicker) {\r\n                collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter = collisionCheckParams.mySlidingFlickerPreventionCheckAnywayCounter;\r\n            } else {\r\n                collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter = Math.max(0, this._myPrevCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter - 1);\r\n                //console.error(collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter);\r\n            }\r\n\r\n            //console.error(previousHorizontalMovement.vec3_signTo(movement, up, 0), slideMovement.vec3_signTo(movement, up, 0));\r\n            if ((collisionCheckParams.mySlidingFlickeringPreventionType != 1 || collisionRuntimeParams.myIsSlidingFlickerPrevented || this._myPrevCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter > 0) &&\r\n                (this._myPrevCollisionRuntimeParams.myIsSliding && previousHorizontalMovement.vec3_signTo(movement, up, 0) != slideMovement.vec3_signTo(movement, up, 0))) {\r\n                isFlickering = true;\r\n                collisionRuntimeParams.myIsSlidingFlickerPrevented = true;\r\n                //console.error(\"quick flicker fix\");\r\n            } else {\r\n                this._mySlidingFlickeringFixCollisionRuntimeParams.reset();\r\n                this._mySlidingFlickeringFixCollisionRuntimeParams.mySliding90DegreesSign = collisionRuntimeParams.mySliding90DegreesSign;\r\n                this._mySlidingFlickeringFixCollisionRuntimeParams.mySlidingRecompute90DegreesSign = false;\r\n\r\n                //console.error(\"slide movement\", slideMovement.vec_toString(), feetPosition.vec_toString());\r\n                newFeetPosition = feetPosition.vec3_add(slideMovement, newFeetPosition);\r\n\r\n                let backupDebugActive = collisionCheckParams.myDebugActive;\r\n                collisionCheckParams.myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugSlidingActive;\r\n\r\n                fixedMovement.vec3_zero();\r\n                fixedMovement = this._horizontalCheck(movement, newFeetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingFlickeringFixCollisionRuntimeParams, previousCollisionRuntimeParams, false, fixedMovement);\r\n                collisionCheckParams.myDebugActive = backupDebugActive;\r\n\r\n                if (fixedMovement.vec3_isZero(0.00001)) {\r\n                    this._mySlidingFlickeringFixSlidingCollisionRuntimeParams.copy(this._mySlidingFlickeringFixCollisionRuntimeParams);\r\n\r\n                    flickerFixSlideMovement = this._internalHorizontalSlide(movement, newFeetPosition, height, up, forward, slideMovement, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingFlickeringFixSlidingCollisionRuntimeParams, previousCollisionRuntimeParams, false, flickerFixSlideMovement);\r\n\r\n                    if (collisionCheckParams.mySlidingCheckBothDirections) {\r\n                        this._horizontalSlideCheckOpposite(movement, newFeetPosition, height, up, forward, slideMovement, true, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingFlickeringFixCollisionRuntimeParams, this._mySlidingFlickeringFixSlidingCollisionRuntimeParams, previousCollisionRuntimeParams, flickerFixSlideMovement);\r\n                    }\r\n\r\n                    if (this._mySlidingFlickeringFixSlidingCollisionRuntimeParams.myIsSliding) {\r\n                        if (slideMovement.vec3_signTo(movement, up, 0) != flickerFixSlideMovement.vec3_signTo(movement, up, 0)) {\r\n\r\n                            /* {\r\n                                hitNormal.vec3_copy(collisionRuntimeParams.mySlidingCollisionHit.myNormal);\r\n    \r\n                                let visualParams = new PP.VisualArrowParams();\r\n                                visualParams.myStart = feetPosition;\r\n                                visualParams.myDirection = slideMovement.vec3_normalize();\r\n                                visualParams.myLength = 0.2;\r\n                                visualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                                visualParams.myMaterial.color = PP.vec4_create(0.5, 0.5, 0.5, 1);\r\n                                PP.myDebugVisualManager.draw(visualParams, 2);\r\n                            }\r\n    \r\n                            {\r\n                                let visualParams = new PP.VisualArrowParams();\r\n                                visualParams.myStart = feetPosition;\r\n                                visualParams.myDirection = flickerFixSlideMovement.vec3_normalize();\r\n                                visualParams.myLength = 0.2;\r\n                                visualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                                visualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\n                                PP.myDebugVisualManager.draw(visualParams, 2);\r\n                            }\r\n    \r\n                            {\r\n                                let visualParams = new PP.VisualArrowParams();\r\n                                visualParams.myStart = feetPosition;\r\n                                visualParams.myDirection = hitNormal.vec3_normalize();\r\n                                visualParams.myLength = 0.2;\r\n                                visualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                                visualParams.myMaterial.color = PP.vec4_create(1, 0, 0.5, 1);\r\n                                PP.myDebugVisualManager.draw(visualParams, 2);\r\n                            } */\r\n\r\n                            isFlickering = true;\r\n                            collisionRuntimeParams.myIsSlidingFlickerPrevented = true;\r\n                            //console.error(\"expensive flicker fix\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            //console.error(\"no flicker check\");\r\n        }\r\n\r\n        if (isFlickering) {\r\n            //console.error(\"flicker\", shouldCheckFlicker, slideMovement.vec_toString(), \"\\n\");\r\n        } else {\r\n            //console.error(\"no flicker\", shouldCheckFlicker, slideMovement.vec_toString(), \"\\n\");\r\n        }\r\n\r\n        return isFlickering;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._internalHorizontalSlide = function () {\r\n    let invertedNormal = PP.vec3_create();\r\n    let slidingMovement = PP.vec3_create();\r\n    let movement90 = PP.vec3_create();\r\n    let currentMovement = PP.vec3_create();\r\n    let slideMovementForward = PP.vec3_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    return function _internalHorizontalSlide(movement, feetPosition, height, up, forward, previousHorizontalMovement, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, checkOppositeDirection, outSlideMovement) {\r\n        if (movement.vec3_isZero(0.00001)) {\r\n            return outSlideMovement.vec3_zero();\r\n        }\r\n\r\n        //let copiedNormal = collisionRuntimeParams.myHorizontalCollisionHit.myNormal.pp_clone();\r\n        invertedNormal = collisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_negate(invertedNormal);\r\n        invertedNormal.vec3_removeComponentAlongAxis(up, invertedNormal);\r\n        invertedNormal[0] = Math.abs(invertedNormal[0]) < 0.01 ? 0 : invertedNormal[0];\r\n        invertedNormal[2] = Math.abs(invertedNormal[2]) < 0.01 ? 0 : invertedNormal[2];\r\n        invertedNormal.vec3_normalize(invertedNormal);\r\n\r\n        collisionRuntimeParams.mySlidingCollisionHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n        collisionRuntimeParams.mySlidingWallNormal.vec3_copy(collisionRuntimeParams.myHorizontalCollisionHit.myNormal);\r\n\r\n        outSlideMovement.vec3_zero();\r\n\r\n        slidingMovement.vec3_copy(invertedNormal);\r\n        if (checkOppositeDirection) {\r\n            slidingMovement.vec3_copy(movement);\r\n            slidingMovement.vec3_normalize(slidingMovement);\r\n        }\r\n\r\n        if (!slidingMovement.vec3_isZero(0.00001)) {\r\n\r\n            slidingMovement.vec3_scale(movement.vec3_length(), slidingMovement);\r\n\r\n            let slidingSign = invertedNormal.vec3_signTo(movement, up);\r\n\r\n            if (collisionCheckParams.mySlidingAdjustSign90Degrees) {\r\n                let angleThreshold = 0.1;\r\n                if (invertedNormal.vec3_angle(movement) < angleThreshold && collisionRuntimeParams.mySliding90DegreesSign != 0) {\r\n                    //console.error(slidingSign, collisionRuntimeParams.mySliding90DegreesSign);\r\n                    slidingSign = collisionRuntimeParams.mySliding90DegreesSign;\r\n                } else if (collisionRuntimeParams.mySliding90DegreesSign == 0 || collisionRuntimeParams.mySlidingRecompute90DegreesSign) {\r\n                    collisionRuntimeParams.mySliding90DegreesSign = slidingSign;\r\n                } else {\r\n                    //console.error(\"no fix\");\r\n                }\r\n\r\n                collisionRuntimeParams.mySlidingRecompute90DegreesSign = false;\r\n            }\r\n\r\n            if (checkOppositeDirection) {\r\n                slidingSign *= -1;\r\n            }\r\n\r\n            let currentAngle = 90 * slidingSign;\r\n            let maxAngle = Math.pp_angleClamp(slidingMovement.vec3_angleSigned(movement.vec3_rotateAxis(90 * slidingSign, up, movement90), up) * slidingSign, true) * slidingSign;\r\n            let minAngle = Math.pp_angleClamp(slidingMovement.vec3_angleSigned(movement, up) * slidingSign, true) * slidingSign;\r\n\r\n            if (checkOppositeDirection) {\r\n                maxAngle = currentAngle;\r\n                minAngle = 0;\r\n            } else {\r\n                if (Math.abs(maxAngle) < Math.abs(minAngle)) {\r\n                    // this should only happens because of the 90 degrees adjustment\r\n                    //console.error(\"90 adjust\");\r\n                    minAngle = 0;\r\n                }\r\n\r\n                if (Math.abs(Math.abs(maxAngle) - Math.abs(minAngle)) < 0.0001) {\r\n                    minAngle = maxAngle;\r\n                }\r\n\r\n                if (Math.abs(maxAngle) < Math.abs(currentAngle) || Math.abs(Math.abs(maxAngle) - Math.abs(currentAngle)) < 0.0001) {\r\n                    //console.error(\"max\", currentAngle.toFixed(15), maxAngle.toFixed(15));\r\n                    currentAngle = maxAngle;\r\n                }\r\n\r\n                if (Math.abs(currentAngle) < Math.abs(minAngle) || Math.abs(Math.abs(minAngle) - Math.abs(currentAngle)) < 0.0001) {\r\n                    //console.error(\"min\", currentAngle.toFixed(3), minAngle.toFixed(3));\r\n                    currentAngle = minAngle;\r\n                }\r\n\r\n                //console.error(maxAngle.toFixed(3), minAngle.toFixed(3));\r\n            }\r\n\r\n            if (checkOppositeDirection && !previousHorizontalMovement.vec3_isZero(0.000001)) {\r\n                let angleWithPrevious = movement.vec3_angleSigned(previousHorizontalMovement, up);\r\n                if (Math.pp_sign(angleWithPrevious) == Math.pp_sign(maxAngle) && Math.abs(maxAngle) > Math.abs(angleWithPrevious)) {\r\n                    currentAngle = angleWithPrevious;\r\n                    //console.error(\"better angle\", currentAngle, previousHorizontalMovement.vec_toString(10), movement.vec_toString(10));\r\n                }\r\n            }\r\n\r\n            currentMovement.vec3_zero();\r\n\r\n            let backupDebugActive = collisionCheckParams.myDebugActive;\r\n            collisionCheckParams.myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugSlidingActive;\r\n\r\n            let originalCurrentAngle = currentAngle;\r\n            for (let i = 0; i < collisionCheckParams.mySlidingMaxAttempts; i++) {\r\n                this._myInternalSlidingCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n\r\n                currentMovement = slidingMovement.vec3_rotateAxis(currentAngle, up, currentMovement);\r\n\r\n                slideMovementForward.vec3_copy(forward);\r\n                if (!collisionCheckParams.myCheckHorizontalFixedForwardEnabled) {\r\n                    if (!currentMovement.vec3_isZero()) {\r\n                        slideMovementForward = currentMovement.vec3_normalize(slideMovementForward);\r\n                    }\r\n                }\r\n\r\n                fixedMovement.vec3_zero();\r\n                fixedMovement = this._horizontalCheck(currentMovement, feetPosition, height, up, slideMovementForward, allowSurfaceSteepFix, collisionCheckParams, this._myInternalSlidingCollisionRuntimeParams, previousCollisionRuntimeParams, true, fixedMovement);\r\n                if (!fixedMovement.vec3_isZero(0.00001)) {\r\n                    outSlideMovement.vec3_copy(currentMovement);\r\n                    collisionRuntimeParams.copy(this._myInternalSlidingCollisionRuntimeParams);\r\n                    collisionRuntimeParams.myIsSliding = true;\r\n                    collisionRuntimeParams.myIsSlidingIntoOppositeDirection = checkOppositeDirection;\r\n                    collisionRuntimeParams.mySlidingMovementAngle = movement.vec3_angleSigned(currentMovement, up);\r\n                    collisionRuntimeParams.mySlidingCollisionAngle = invertedNormal.vec3_angleSigned(currentMovement, up);\r\n\r\n                    maxAngle = currentAngle;\r\n                    currentAngle = (maxAngle + minAngle) / 2;\r\n                } else {\r\n                    if (currentAngle != maxAngle) {\r\n                        minAngle = currentAngle;\r\n                    }\r\n\r\n                    if (i == 0 && currentAngle != maxAngle) {\r\n                        currentAngle = maxAngle;\r\n                    } else {\r\n                        currentAngle = (minAngle + maxAngle) / 2;\r\n                    }\r\n                }\r\n\r\n                if (Math.abs(Math.abs(maxAngle) - Math.abs(minAngle)) < 0.0001) {\r\n                    //console.error(\"fast slide exit\", maxAngle, minAngle, originalCurrentAngle, collisionRuntimeParams.myIsSliding, checkOppositeDirection);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            collisionCheckParams.myDebugActive = backupDebugActive;\r\n        }\r\n\r\n        if (!collisionRuntimeParams.myIsSliding) {\r\n            collisionRuntimeParams.mySlidingCollisionHit.reset();\r\n        } else {\r\n            //console.error(\"slide angle\", movement.vec3_angleSigned(invertedNormal, up), invertedNormal.vec_toString(), copiedNormal.vec_toString());\r\n        }\r\n\r\n        return outSlideMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalCheckBetterSlideNormal = function () {\r\n    let movementDirection = PP.vec3_create();\r\n    let hitDirection = PP.vec3_create();\r\n    let projectAlongAxis = PP.vec3_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    let newFixedFeetPosition = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    return function _horizontalCheckBetterSlideNormal(movement, originalFeetPosition, originalHeight, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        //check for a better slide hit position and normal\r\n\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        let hitPosition = collisionRuntimeParams.myHorizontalCollisionHit.myPosition;\r\n        let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 90);\r\n        hitDirection = hitPosition.vec3_sub(feetPosition, hitDirection);\r\n        if (hitDirection.vec3_isToTheRight(movementDirection, up)) {\r\n            projectAlongAxis = movementDirection.vec3_rotateAxis(-halfConeAngle, up, projectAlongAxis);\r\n        } else {\r\n            projectAlongAxis = movementDirection.vec3_rotateAxis(halfConeAngle, up, projectAlongAxis);\r\n        }\r\n\r\n        fixedMovement = hitDirection.vec3_projectOnAxisAlongAxis(movementDirection, projectAlongAxis, fixedMovement);\r\n        /* if (fixedMovement.vec3_angle(movementDirection) >= 0.00001 || fixedMovement.vec3_length() > movement.vec3_length() + 0.00001) {\r\n            console.error(\"ERROR, project function should return a smaller movement in the same direction\",\r\n                fixedMovement.vec3_angle(movementDirection), fixedMovement.vec3_length(), movement.vec3_length());\r\n            //maybe epsilon could be 0.0001? is higher but still 10 times less then a millimiter\r\n        } */\r\n\r\n        if (fixedMovement.vec3_isConcordant(movementDirection)) {\r\n            fixedMovement = movementDirection.vec3_scale(Math.min(fixedMovement.vec3_length(), movement.vec3_length()), fixedMovement);\r\n        } else {\r\n            fixedMovement.vec3_zero();\r\n        }\r\n\r\n        if (collisionCheckParams.myDebugActive && collisionCheckParams.myDebugHorizontalMovementActive) {\r\n            PP.myDebugVisualManager.drawArrow(0, feetPosition, movementDirection, fixedMovement.vec3_length(), PP.vec4_create(1, 0, 1, 1));\r\n        }\r\n\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams.myIsCollidingHorizontally = false;\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n\r\n        newFixedFeetPosition = feetPosition.vec3_add(fixedMovement, newFixedFeetPosition);\r\n        newFeetPosition = feetPosition.vec3_add(fixedMovement, newFeetPosition);\r\n\r\n        let backupDebugActive = collisionCheckParams.myDebugActive;\r\n        collisionCheckParams.myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugSlidingActive;\r\n\r\n        if (collisionCheckParams.myHorizontalPositionCheckEnabled) {\r\n            this._horizontalPositionCheck(originalFeetPosition, originalHeight, newFixedFeetPosition, height, up, forward, collisionCheckParams, this._myCheckBetterSlidingNormalCollisionRuntimeParams);\r\n        }\r\n\r\n        collisionCheckParams.myDebugActive = backupDebugActive;\r\n\r\n        if (this._myCheckBetterSlidingNormalCollisionRuntimeParams.myIsCollidingHorizontally &&\r\n            !this._myCheckBetterSlidingNormalCollisionRuntimeParams.myHorizontalCollisionHit.myIsInsideCollision) {\r\n            collisionRuntimeParams.copy(this._myCheckBetterSlidingNormalCollisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._isSlidingNormalValid = function () {\r\n    let flatNormal = PP.vec3_create();\r\n    return function _isSlidingNormalValid(movement, up, collisionRuntimeParams) {\r\n        let isValid = false;\r\n\r\n        flatNormal = collisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, flatNormal);\r\n        flatNormal.vec3_normalize(flatNormal);\r\n\r\n        if (!flatNormal.vec3_isZero(0.000001)) {\r\n            isValid = true;\r\n        }\r\n\r\n        // I wanted to check if the normal angle was not concordant and thought that in that case it shouldn't slide but it turns out it makes sense\r\n        // even for back hits which either can't resolve or at least makes me slide out of collision\r\n        // at least a check for the normal to be not up is ok\r\n\r\n        return isValid;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalSlide\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalSlideCheckOpposite\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalSlideFlickerCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_internalHorizontalSlide\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalCheckBetterSlideNormal\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_isSlidingNormalValid\", { enumerable: false });", "CollisionCheck.prototype._horizontalMovementCheck = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(PP.vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let _localGroundObjectsToIgnore = [];\r\n    let _localCeilingObjectsToIgnore = [];\r\n    let _localGroundCeilingObjectsToIgnore = [];\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n\r\n    let movementDirection = PP.vec3_create();\r\n    let heightOffset = PP.vec3_create();\r\n    let heightStep = PP.vec3_create();\r\n    let currentHeightOffset = PP.vec3_create();\r\n    let leftRadialDirection = PP.vec3_create();\r\n    let rightRadialDirection = PP.vec3_create();\r\n    return function _horizontalMovementCheck(movement, originalFeetPosition, originalHeight, feetPosition, height, up, collisionCheckParams, collisionRuntimeParams) {\r\n        // #TODO add a flag in the params to specify if u want to allow movement inside collision (to hope that it will end up in a non collision position)\r\n        // also vertical check should check all hits like the position check\r\n        // for now is ok as it is, the movement check is not as important and could also be disabled it the movement per frame is very small\r\n\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugHorizontalMovementActive;\r\n\r\n        let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 90);\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        let steplength = collisionCheckParams.myRadius / collisionCheckParams.myHorizontalMovementRadialStepAmount;\r\n\r\n        {\r\n            let tempCheckPosition = _localGetCachedCheckPosition();\r\n            tempCheckPosition.vec3_copy(feetPosition);\r\n            checkPositions.push(tempCheckPosition);\r\n        }\r\n\r\n        {\r\n            leftRadialDirection = movementDirection.vec3_rotateAxis(halfConeAngle, up, leftRadialDirection);\r\n            rightRadialDirection = movementDirection.vec3_rotateAxis(-halfConeAngle, up, rightRadialDirection);\r\n            for (let i = 1; i <= collisionCheckParams.myHorizontalMovementRadialStepAmount; i++) {\r\n                // left\r\n                {\r\n                    let currentStep = i * steplength;\r\n                    let tempCheckPosition = _localGetCachedCheckPosition();\r\n                    let currentRadialPosition = leftRadialDirection.vec3_scale(currentStep, tempCheckPosition);\r\n                    let currentCheckPosition = currentRadialPosition.vec3_add(feetPosition, currentRadialPosition);\r\n                    checkPositions.push(currentCheckPosition);\r\n                }\r\n\r\n                // right\r\n                {\r\n                    let currentStep = i * steplength;\r\n                    let tempCheckPosition = _localGetCachedCheckPosition();\r\n                    let currentRadialPosition = rightRadialDirection.vec3_scale(currentStep, tempCheckPosition);\r\n                    let currentCheckPosition = currentRadialPosition.vec3_add(feetPosition, currentRadialPosition);\r\n                    checkPositions.push(currentCheckPosition);\r\n                }\r\n            }\r\n        }\r\n\r\n        // if result is inside a collision it's ignored, so that at least you can exit it before seeing if the new position works now\r\n\r\n        let groundObjectsToIgnore = null;\r\n        let ceilingObjectsToIgnore = null;\r\n        let groundCeilingObjectsToIgnore = null;\r\n\r\n        if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n            // gather ground objects to ignore\r\n            groundObjectsToIgnore = _localGroundObjectsToIgnore;\r\n            groundObjectsToIgnore.length = 0;\r\n            groundCeilingObjectsToIgnore = _localGroundCeilingObjectsToIgnore;\r\n            groundCeilingObjectsToIgnore.length = 0;\r\n\r\n            let ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, null, groundObjectsToIgnore, true, true, up, collisionCheckParams);\r\n\r\n            let ignoreCeilingAngleCallback = null;\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, null, groundCeilingObjectsToIgnore, false, true, up, collisionCheckParams);\r\n            }\r\n\r\n            heightOffset.vec3_zero();\r\n            this._horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, heightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n            // gather ceiling objects to ignore\r\n            if (!collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeight) {\r\n                ceilingObjectsToIgnore = _localCeilingObjectsToIgnore;\r\n                ceilingObjectsToIgnore.length = 0;\r\n\r\n                let ignoreGroundAngleCallback = null;\r\n                if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                    ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, groundObjectsToIgnore, null, true, true, up, collisionCheckParams);\r\n                }\r\n\r\n                let ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, null, ceilingObjectsToIgnore, false, true, up, collisionCheckParams);\r\n\r\n                heightOffset = up.vec3_scale(height, heightOffset);\r\n                this._horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, heightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n\r\n            let groundCeilingCheckIsFine = true;\r\n\r\n            if (groundCeilingObjectsToIgnore != null) {\r\n                // check that the ceiling objects ignored by the ground are the correct ones, that is the one ignored by the upper check\r\n                for (let object of groundCeilingObjectsToIgnore) {\r\n                    if (!ceilingObjectsToIgnore.pp_hasEqual(object, objectsEqualCallback)) {\r\n                        groundCeilingCheckIsFine = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let ignoreGroundAngleCallback = null;\r\n            let ignoreCeilingAngleCallback = null;\r\n\r\n            if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, groundObjectsToIgnore, null, true, true, up, collisionCheckParams);\r\n            }\r\n\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, ceilingObjectsToIgnore, null, false, true, up, collisionCheckParams);\r\n            }\r\n\r\n            let heightStepAmount = 0;\r\n            if (collisionCheckParams.myCheckHeight && collisionCheckParams.myHeightCheckStepAmountMovement > 0 && height > 0.000001) {\r\n                heightStepAmount = collisionCheckParams.myHeightCheckStepAmountMovement;\r\n                heightStep = up.vec3_scale(height / heightStepAmount, heightStep);\r\n            }\r\n\r\n            for (let i = 0; i <= heightStepAmount; i++) {\r\n                currentHeightOffset = heightStep.vec3_scale(i, currentHeightOffset);\r\n\r\n                // we can skip the ground check since we have already done that, but if there was an error do it again with the proper set of objects to ignore\r\n                // the ceiling check can always be ignored, it used the proper ground objects already\r\n                if (collisionCheckParams.myCheckHeightTopMovement || i == 0) {\r\n                    if ((i != 0 && i != heightStepAmount) ||\r\n                        (i == 0 && !groundCeilingCheckIsFine) ||\r\n                        (i == 0 && collisionCheckParams.myGroundAngleToIgnore == 0) ||\r\n                        (i == heightStepAmount && collisionCheckParams.myCeilingAngleToIgnore == 0)) {\r\n                        this._horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, currentHeightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (i > 0) {\r\n                    if (collisionCheckParams.myCheckHeightVerticalMovement) {\r\n                        this._horizontalMovementVerticalCheck(movement, feetPosition, checkPositions, currentHeightOffset, heightStep, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n                    }\r\n\r\n                    if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return !collisionRuntimeParams.myIsCollidingHorizontally;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalMovementVerticalCheck = function () {\r\n    let movementStep = PP.vec3_create();\r\n    let movementDirection = PP.vec3_create();\r\n    let firstPosition = PP.vec3_create();\r\n    let secondPosition = PP.vec3_create();\r\n    let firstMovementPosition = PP.vec3_create();\r\n    let secondMovementPosition = PP.vec3_create();\r\n    let firstHeightPosition = PP.vec3_create();\r\n    let secondHeightPosition = PP.vec3_create();\r\n    let firstHeightMovementPosition = PP.vec3_create();\r\n    let secondHeightMovementPosition = PP.vec3_create();\r\n    return function _horizontalMovementVerticalCheck(movement, feetPosition, checkPositions, heightOffset, heightStep, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        let movementStepAmount = 1;\r\n        movementStep.vec3_copy(movement);\r\n\r\n        if (collisionCheckParams.myHorizontalMovementStepEnabled) {\r\n            movementStepAmount = Math.max(1, Math.ceil(movement.vec3_length() / collisionCheckParams.myHorizontalMovementStepMaxLength));\r\n            movement.vec3_scale(1 / movementStepAmount, movementStep);\r\n        }\r\n\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        for (let m = 0; m < movementStepAmount; m++) {\r\n            for (let j = 0; j < checkPositions.length; j++) {\r\n                firstPosition = checkPositions[j].vec3_add(movementStep.vec3_scale(m, firstPosition), firstPosition).vec3_add(heightOffset, firstPosition);\r\n\r\n                if (j > 0) {\r\n                    let secondIndex = Math.max(0, j - 2);\r\n                    secondPosition = checkPositions[secondIndex].vec3_add(movementStep.vec3_scale(m, secondPosition), secondPosition).vec3_add(heightOffset, secondPosition);\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardOutward) {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                        secondHeightPosition = secondPosition.vec3_sub(heightStep, secondHeightPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondHeightPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardInward) {\r\n                        secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n                        firstHeightPosition = firstPosition.vec3_sub(heightStep, firstHeightPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, secondMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardOutward) {\r\n                        firstHeightMovementPosition = firstPosition.vec3_add(movementStep, firstHeightMovementPosition);\r\n                        firstHeightMovementPosition = firstHeightMovementPosition.vec3_sub(heightStep, firstHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondPosition, firstHeightMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardInward) {\r\n                        secondHeightMovementPosition = secondPosition.vec3_add(movementStep, secondHeightMovementPosition);\r\n                        secondHeightMovementPosition = secondHeightMovementPosition.vec3_sub(heightStep, secondHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, secondHeightMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (m == 0) {\r\n                        if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward) {\r\n                            secondHeightPosition = secondPosition.vec3_sub(heightStep, secondHeightPosition);\r\n\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(secondHeightPosition, firstPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward) {\r\n                            let firstHeightPosition = firstPosition.vec3_sub(heightStep);\r\n\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, secondPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward) {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                        secondHeightMovementPosition = secondPosition.vec3_sub(heightStep, secondHeightMovementPosition).vec3_add(movementStep, secondHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondHeightMovementPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward) {\r\n                        secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n                        firstHeightMovementPosition = firstPosition.vec3_sub(heightStep, firstHeightMovementPosition).vec3_add(movementStep, firstHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightMovementPosition, secondMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckVerticalStraight ||\r\n                    (collisionCheckParams.myHorizontalMovementHorizontalStraightCentralCheckEnabled && j == 0)) {\r\n                    if (m == 0) {\r\n                        firstHeightPosition = firstPosition.vec3_sub(heightStep, firstHeightPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, firstPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                        firstHeightMovementPosition = firstMovementPosition.vec3_sub(heightStep, firstHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightMovementPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalUpward ||\r\n                    (collisionCheckParams.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled && j == 0)) {\r\n                    firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                    firstHeightPosition = firstPosition.vec3_sub(heightStep, firstHeightPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, firstMovementPosition, movementDirection, up,\r\n                        true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalDownward ||\r\n                    (collisionCheckParams.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled && j == 0)) {\r\n                    firstHeightMovementPosition = firstPosition.vec3_sub(heightStep, firstHeightMovementPosition).vec3_add(movementStep, firstHeightMovementPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, firstHeightMovementPosition, movementDirection, up,\r\n                        true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n\r\n                if (!isHorizontalCheckOk) {\r\n                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                    collisionRuntimeParams.myHorizontalCollisionHit.copy(raycastResult.myHits[0]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isHorizontalCheckOk;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalMovementHorizontalCheck = function () {\r\n    let movementStep = PP.vec3_create();\r\n    let movementDirection = PP.vec3_create();\r\n    let firstPosition = PP.vec3_create();\r\n    let secondPosition = PP.vec3_create();\r\n    let firstMovementPosition = PP.vec3_create();\r\n    let secondMovementPosition = PP.vec3_create();\r\n    return function _horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, heightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        let movementStepAmount = 1;\r\n        movementStep.vec3_copy(movement);\r\n\r\n        if (collisionCheckParams.myHorizontalMovementStepEnabled) {\r\n            movementStepAmount = Math.max(1, Math.ceil(movement.vec3_length() / collisionCheckParams.myHorizontalMovementStepMaxLength));\r\n            movement.vec3_scale(1 / movementStepAmount, movementStep);\r\n        }\r\n\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        for (let m = 0; m < movementStepAmount; m++) {\r\n            for (let j = 0; j < checkPositions.length; j++) {\r\n                firstPosition = checkPositions[j].vec3_add(movementStep.vec3_scale(m, firstPosition), firstPosition).vec3_add(heightOffset, firstPosition);\r\n\r\n                if (j > 0) {\r\n                    let secondIndex = Math.max(0, j - 2);\r\n                    secondPosition = checkPositions[secondIndex].vec3_add(movementStep.vec3_scale(m, secondPosition), secondPosition).vec3_add(heightOffset, secondPosition);\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckDiagonalOutward) {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n\r\n                        //#TODO ignore hits if inside could be a paramter, so you can specify if u want to be able to exit from a collision\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckDiagonalInward) {\r\n                        secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, secondMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckHorizontalBorder) {\r\n                        if (m == 0) {\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(secondPosition, firstPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n\r\n                        {\r\n                            firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                            secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(secondMovementPosition, firstMovementPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckStraight ||\r\n                    (collisionCheckParams.myHorizontalMovementVerticalStraightCentralCheckEnabled && j == 0)) {\r\n                    firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, firstMovementPosition, null, up,\r\n                        true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n            }\r\n\r\n            if (!isHorizontalCheckOk) {\r\n                collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isHorizontalCheckOk;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalMovementCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalMovementVerticalCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalMovementHorizontalCheck\", { enumerable: false });", "CollisionCheck.prototype._horizontalPositionCheck = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(PP.vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let _localGroundObjectsToIgnore = [];\r\n    let _localCeilingObjectsToIgnore = [];\r\n    let _localGroundCeilingObjectsToIgnore = [];\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n\r\n    let heightOffset = PP.vec3_create();\r\n    let heightStep = PP.vec3_create();\r\n    let currentHeightOffset = PP.vec3_create();\r\n    let hitHeightOffset = PP.vec3_create();\r\n    let hitHeightOffsetEpsilon = PP.vec3_create();\r\n    let downwardHeightOffset = PP.vec3_create();\r\n    let downwardHeightStep = PP.vec3_create();\r\n\r\n    let verticalDirection = PP.vec3_create();\r\n\r\n    let vertilCheckHit = new PP.RaycastHit();\r\n\r\n    return function _horizontalPositionCheck(originalFeetPosition, originalHeight, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugHorizontalPositionActive;\r\n\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 180);\r\n        let sliceAngle = halfConeAngle / collisionCheckParams.myHalfConeSliceAmount;\r\n        let tempCheckPosition = _localGetCachedCheckPosition();\r\n        checkPositions.push(feetPosition.vec3_add(forward.vec3_scale(collisionCheckParams.myRadius, tempCheckPosition), tempCheckPosition));\r\n        for (let i = 1; i <= collisionCheckParams.myHalfConeSliceAmount; i++) {\r\n            let currentAngle = i * sliceAngle;\r\n\r\n            tempCheckPosition = _localGetCachedCheckPosition();\r\n            let radialDirection = forward.vec3_rotateAxis(-currentAngle, up, tempCheckPosition);\r\n            checkPositions.push(feetPosition.vec3_add(radialDirection.vec3_scale(collisionCheckParams.myRadius, radialDirection), radialDirection));\r\n\r\n            tempCheckPosition = _localGetCachedCheckPosition();\r\n            radialDirection = forward.vec3_rotateAxis(currentAngle, up, tempCheckPosition);\r\n            checkPositions.push(feetPosition.vec3_add(radialDirection.vec3_scale(collisionCheckParams.myRadius, radialDirection), radialDirection));\r\n        }\r\n\r\n        let groundObjectsToIgnore = null;\r\n        let ceilingObjectsToIgnore = null;\r\n        let groundCeilingObjectsToIgnore = null;\r\n\r\n        if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n            // gather ground objects to ignore\r\n            groundObjectsToIgnore = _localGroundObjectsToIgnore;\r\n            groundObjectsToIgnore.length = 0;\r\n            groundCeilingObjectsToIgnore = _localGroundCeilingObjectsToIgnore;\r\n            groundCeilingObjectsToIgnore.length = 0;\r\n\r\n            let ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, null, groundObjectsToIgnore, true, false, up, collisionCheckParams);\r\n\r\n            let ignoreCeilingAngleCallback = null;\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, null, groundCeilingObjectsToIgnore, false, false, up, collisionCheckParams);\r\n            }\r\n\r\n            heightOffset.vec3_zero();\r\n            this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, heightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n            // gather ceiling objects to ignore\r\n            if (!collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeight) {\r\n                ceilingObjectsToIgnore = _localCeilingObjectsToIgnore;\r\n                ceilingObjectsToIgnore.length = 0;\r\n\r\n                let ignoreGroundAngleCallback = null;\r\n                if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                    ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, groundObjectsToIgnore, null, true, false, up, collisionCheckParams);\r\n                }\r\n\r\n                let ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, null, ceilingObjectsToIgnore, false, false, up, collisionCheckParams);\r\n\r\n                heightOffset = up.vec3_scale(height, heightOffset);\r\n                this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, heightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n\r\n            let groundCeilingCheckIsFine = true;\r\n\r\n            if (groundCeilingObjectsToIgnore != null) {\r\n                // check that the ceiling objects ignored by the ground are the correct ones, that is the one ignored by the upper check\r\n                for (let object of groundCeilingObjectsToIgnore) {\r\n                    if (!ceilingObjectsToIgnore.pp_hasEqual(object, objectsEqualCallback)) {\r\n                        groundCeilingCheckIsFine = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let ignoreGroundAngleCallback = null;\r\n            let ignoreCeilingAngleCallback = null;\r\n\r\n            if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, groundObjectsToIgnore, null, true, false, up, collisionCheckParams);\r\n            }\r\n\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, ceilingObjectsToIgnore, null, false, false, up, collisionCheckParams);\r\n            }\r\n\r\n            let heightStepAmount = 0;\r\n            if (collisionCheckParams.myCheckHeight && collisionCheckParams.myHeightCheckStepAmountPosition > 0 && height > 0) {\r\n                heightStepAmount = collisionCheckParams.myHeightCheckStepAmountPosition;\r\n                up.vec3_scale(height / heightStepAmount, heightStep);\r\n            }\r\n\r\n            for (let i = 0; i <= heightStepAmount; i++) {\r\n                currentHeightOffset = heightStep.vec3_scale(i, currentHeightOffset);\r\n\r\n                // we can skip the ground check since we have already done that, but if there was an error do it again with the proper set of objects to ignore\r\n                // the ceiling check can always be ignored, it used the proper ground objects already\r\n                if (collisionCheckParams.myCheckHeightTopPosition || i == 0) {\r\n                    if ((i != 0 && i != heightStepAmount) ||\r\n                        (i == 0 && !groundCeilingCheckIsFine) ||\r\n                        (i == 0 && collisionCheckParams.myGroundAngleToIgnore == 0) ||\r\n                        (i != 0 && i == heightStepAmount && collisionCheckParams.myCeilingAngleToIgnore == 0)) {\r\n                        this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, currentHeightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (i > 0) {\r\n                    if (collisionCheckParams.myCheckHeightVerticalPosition) {\r\n                        // this offset is a workaround for objects that in the editor are aligned but due to clamp get a bit tilted when in the game\r\n                        // and therefore trying an horizontal cast on the vertical hit position could result in hitting the bottom which in theory should be parallel and therefore not possible\r\n                        let hitHeightOffsetEpsilonValue = 0.0001;\r\n\r\n                        if (collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 0 || collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 2) {\r\n                            verticalDirection.vec3_copy(up);\r\n                            this._horizontalPositionVerticalCheck(feetPosition, checkPositions, currentHeightOffset, heightStep, verticalDirection, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeightConeOnCollision) {\r\n                                hitHeightOffset = collisionRuntimeParams.myHorizontalCollisionHit.myPosition.vec3_sub(feetPosition, hitHeightOffset).vec3_componentAlongAxis(up, hitHeightOffset);\r\n                                hitHeightOffset.vec3_add(verticalDirection.vec3_scale(hitHeightOffsetEpsilonValue, hitHeightOffsetEpsilon), hitHeightOffset);\r\n\r\n                                collisionRuntimeParams.myIsCollidingHorizontally = false;\r\n                                if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    vertilCheckHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n                                }\r\n                                collisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n                                this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, hitHeightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                                if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    break;\r\n                                } else if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(vertilCheckHit);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            if (collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 1 || collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 2) {\r\n                                verticalDirection = up.vec3_negate(verticalDirection);\r\n                                downwardHeightOffset = currentHeightOffset.vec3_sub(heightStep, downwardHeightOffset);\r\n                                downwardHeightStep = heightStep.vec3_negate(downwardHeightStep);\r\n                                this._horizontalPositionVerticalCheck(feetPosition, checkPositions, downwardHeightOffset, downwardHeightStep, verticalDirection, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n                            }\r\n\r\n                            if (collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeightConeOnCollision) {\r\n                                hitHeightOffset = collisionRuntimeParams.myHorizontalCollisionHit.myPosition.vec3_sub(feetPosition, hitHeightOffset).vec3_componentAlongAxis(up, hitHeightOffset);\r\n                                hitHeightOffset.vec3_add(verticalDirection.vec3_scale(hitHeightOffsetEpsilonValue, hitHeightOffsetEpsilon), hitHeightOffset);\r\n\r\n                                collisionRuntimeParams.myIsCollidingHorizontally = false;\r\n                                if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    vertilCheckHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n                                }\r\n                                collisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n                                this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, hitHeightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                                if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    break;\r\n                                } else if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(vertilCheckHit);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return !collisionRuntimeParams.myIsCollidingHorizontally;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalPositionHorizontalCheck = function () {\r\n    let basePosition = PP.vec3_create();\r\n    let forwardNegate = PP.vec3_create();\r\n    let currentRadialPosition = PP.vec3_create();\r\n    let previousRadialPosition = PP.vec3_create();\r\n    return function _horizontalPositionHorizontalCheck(feetPosition, checkPositions, heightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        basePosition = feetPosition.vec3_add(heightOffset, basePosition);\r\n\r\n        let halfRadialPositions = Math.floor(checkPositions.length / 2) + 1;\r\n        for (let j = 0; j < halfRadialPositions; j++) {\r\n            if (j > 0) {\r\n                let leftIndex = Math.max(0, j * 2);\r\n                let rightIndex = Math.max(0, (j * 2 - 1));\r\n                let leftAndRightEqual = checkPositions[leftIndex].vec_equals(checkPositions[rightIndex], 0.000001);\r\n\r\n                if (collisionCheckParams.myCheckConeBorder) {\r\n                    for (let r = 0; r < 2; r++) {\r\n                        let currentIndex = r == 0 ? leftIndex : rightIndex;\r\n\r\n                        currentRadialPosition = checkPositions[currentIndex].vec3_add(heightOffset, currentRadialPosition);\r\n\r\n                        let previousIndex = Math.max(0, currentIndex - 2);\r\n                        previousRadialPosition = checkPositions[previousIndex].vec3_add(heightOffset, previousRadialPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, currentRadialPosition, forward.vec3_negate(forwardNegate), up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myCheckConeRay && isHorizontalCheckOk) {\r\n                    for (let r = 0; r < 2; r++) {\r\n                        if (r == 1 && leftAndRightEqual) {\r\n                            break;\r\n                        }\r\n\r\n                        let currentIndex = r == 0 ? leftIndex : rightIndex;\r\n\r\n                        currentRadialPosition = checkPositions[currentIndex].vec3_add(heightOffset, currentRadialPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(basePosition, currentRadialPosition, null, up,\r\n                            false, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, false,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n            } else {\r\n                if (collisionCheckParams.myCheckConeRay) {\r\n                    currentRadialPosition = checkPositions[j].vec3_add(heightOffset, currentRadialPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(basePosition, currentRadialPosition, null, up,\r\n                        false, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, false,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n            }\r\n\r\n            if (!isHorizontalCheckOk) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!isHorizontalCheckOk) {\r\n            collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n        }\r\n\r\n        return isHorizontalCheckOk;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalPositionVerticalCheck = function () {\r\n    let basePosition = PP.vec3_create();\r\n    let previousBasePosition = PP.vec3_create();\r\n    let currentRadialPosition = PP.vec3_create();\r\n    let previousRadialPosition = PP.vec3_create();\r\n    let previousCurrentRadialPosition = PP.vec3_create();\r\n    let previousPreviousRadialPosition = PP.vec3_create();\r\n    return function _horizontalPositionVerticalCheck(feetPosition, checkPositions, heightOffset, heightStep, verticalDirection, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        basePosition = feetPosition.vec3_add(heightOffset, basePosition);\r\n        previousBasePosition = basePosition.vec3_sub(heightStep, previousBasePosition);\r\n\r\n        for (let j = 0; j <= checkPositions.length; j++) {\r\n            let previousCheckPositionIsEqual = false;\r\n\r\n            if (j == checkPositions.length) {\r\n                currentRadialPosition.vec3_copy(basePosition);\r\n                previousRadialPosition.vec3_copy(previousBasePosition);\r\n            } else {\r\n                currentRadialPosition = checkPositions[j].vec3_add(heightOffset, currentRadialPosition);\r\n                previousRadialPosition = currentRadialPosition.vec3_sub(heightStep, previousRadialPosition);\r\n\r\n                if (j > 0) {\r\n                    previousCheckPositionIsEqual = checkPositions[j].vec_equals(checkPositions[j - 1], 0.000001);\r\n                }\r\n            }\r\n\r\n            if (collisionCheckParams.myCheckVerticalStraight && !previousCheckPositionIsEqual) {\r\n                isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, currentRadialPosition, null, up,\r\n                    collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                    feetPosition, true,\r\n                    collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                if (!isHorizontalCheckOk) {\r\n                    if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                        collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                        collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                    } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                        collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                    }\r\n\r\n                    if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (j < checkPositions.length) {\r\n                if ((collisionCheckParams.myCheckVerticalDiagonalRayOutward ||\r\n                    (collisionCheckParams.myCheckVerticalDiagonalBorderRayOutward && (j == checkPositions.length - 2 || j == checkPositions.length - 1))) &&\r\n                    !previousCheckPositionIsEqual) {\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(previousBasePosition, currentRadialPosition, null, up,\r\n                        collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                    if (!isHorizontalCheckOk) {\r\n                        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        }\r\n\r\n                        if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if ((collisionCheckParams.myCheckVerticalDiagonalRayInward ||\r\n                    (collisionCheckParams.myCheckVerticalDiagonalBorderRayInward && (j == checkPositions.length - 2 || j == checkPositions.length - 1))) &&\r\n                    !previousCheckPositionIsEqual) {\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, basePosition, null, up,\r\n                        collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                    if (!isHorizontalCheckOk) {\r\n                        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        }\r\n\r\n                        if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (j > 0) {\r\n                    if (collisionCheckParams.myCheckVerticalDiagonalBorderOutward || collisionCheckParams.myCheckVerticalDiagonalBorderInward) {\r\n                        let previousIndex = Math.max(0, j - 2);\r\n                        previousCurrentRadialPosition = checkPositions[previousIndex].vec3_add(heightOffset, previousCurrentRadialPosition);\r\n                        previousPreviousRadialPosition = previousCurrentRadialPosition.vec3_sub(heightStep, previousPreviousRadialPosition);\r\n\r\n                        if (collisionCheckParams.myCheckVerticalDiagonalBorderOutward) {\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(previousPreviousRadialPosition, currentRadialPosition, null, up,\r\n                                collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                            if (!isHorizontalCheckOk) {\r\n                                if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                }\r\n\r\n                                if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (collisionCheckParams.myCheckVerticalDiagonalBorderInward) {\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, previousCurrentRadialPosition, null, up,\r\n                                collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                            if (!isHorizontalCheckOk) {\r\n                                if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                }\r\n\r\n                                if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return !collisionRuntimeParams.myIsCollidingHorizontally;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalPositionCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalPositionHorizontalCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalPositionVerticalCheck\", { enumerable: false });\r\n", "CollisionCheck.prototype._verticalCheck = function () {\r\n    let newFeetPosition = PP.vec3_create();\r\n    let additionalFixedMovement = PP.vec3_create();\r\n    let zero = PP.vec3_create();\r\n    zero.vec3_zero();\r\n    return function _verticalCheck(verticalMovement, originalMovementSign, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, outFixedMovement) {\r\n        collisionRuntimeParams.myIsCollidingVertically = false;\r\n        collisionRuntimeParams.myVerticalCollisionHit.reset();\r\n\r\n        let movementSign = Math.pp_sign(verticalMovement.vec3_lengthSigned(up), -1);\r\n        let isMovementDownward = movementSign < 0;\r\n\r\n        outFixedMovement.vec3_copy(verticalMovement);\r\n        if (collisionCheckParams.myVerticalMovementCheckEnabled) {\r\n            outFixedMovement = this._verticalMovementAdjustment(verticalMovement, isMovementDownward, originalMovementSign, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, outFixedMovement);\r\n\r\n            if (collisionCheckParams.myCheckVerticalBothDirection &&\r\n                (outFixedMovement.vec_equals(verticalMovement, 0.00001) || originalMovementSign == 0 || (movementSign != originalMovementSign))) {\r\n                newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n                let isOppositeMovementDownward = !isMovementDownward;\r\n                additionalFixedMovement = this._verticalMovementAdjustment(zero, isOppositeMovementDownward, originalMovementSign, newFeetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, additionalFixedMovement);\r\n\r\n                outFixedMovement.vec3_add(additionalFixedMovement, outFixedMovement);\r\n                isMovementDownward = !isMovementDownward;\r\n            }\r\n        }\r\n\r\n        if (collisionCheckParams.myVerticalPositionCheckEnabled) {\r\n            newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n            let canStay = this._verticalPositionCheck(newFeetPosition, isMovementDownward, height, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n            if (!canStay) {\r\n                outFixedMovement.vec3_zero();\r\n\r\n                // #TODO probably this should not be reset, you should be required to check if the movement was ok to be sure this values have a meaning\r\n                collisionRuntimeParams.myHasSnappedOnGround = false;\r\n                collisionRuntimeParams.myHasSnappedOnCeiling = false;\r\n                collisionRuntimeParams.myHasPoppedOutGround = false;\r\n                collisionRuntimeParams.myHasPoppedOutCeiling = false;\r\n                collisionRuntimeParams.myHasReducedVerticalMovement = false;\r\n            }\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._verticalMovementAdjustment = function () {\r\n    let startOffset = PP.vec3_create();\r\n    let endOffset = PP.vec3_create();\r\n    let tempVector = PP.vec3_create();\r\n    let furtherDirection = PP.vec3_create();\r\n    let furtherDirectionPosition = PP.vec3_create();\r\n    let upNegate = PP.vec3_create();\r\n    let origin = PP.vec3_create();\r\n    let direction = PP.vec3_create();\r\n    return function _verticalMovementAdjustment(verticalMovement, isMovementDownward, originalMovementSign, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, outFixedMovement) {\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugVerticalMovementActive;\r\n\r\n        startOffset.vec3_zero();\r\n        endOffset.vec3_zero();\r\n\r\n        let popOutEnabled = false;\r\n        let snapEnabled = false;\r\n\r\n        if (isMovementDownward) {\r\n            startOffset.vec3_zero();\r\n            endOffset.vec3_copy(verticalMovement);\r\n\r\n            if (collisionCheckParams.myGroundPopOutExtraDistance > 0 && collisionCheckParams.myGroundPopOutEnabled) {\r\n                startOffset.vec3_add(up.vec3_scale(collisionCheckParams.myGroundPopOutExtraDistance + 0.00001, tempVector), startOffset);\r\n                popOutEnabled = true;\r\n            }\r\n        } else {\r\n            startOffset = up.vec3_scale(height, startOffset);\r\n            endOffset = up.vec3_scale(height, endOffset).vec3_add(verticalMovement, endOffset);\r\n\r\n            if (collisionCheckParams.myCeilingPopOutExtraDistance > 0 && collisionCheckParams.myCeilingPopOutEnabled) {\r\n                startOffset.vec3_add(up.vec3_scale(-collisionCheckParams.myCeilingPopOutExtraDistance - 0.00001, tempVector), startOffset);\r\n                popOutEnabled = true;\r\n            }\r\n        }\r\n\r\n        if (isMovementDownward && originalMovementSign <= 0 && this._myPrevCollisionRuntimeParams.myIsOnGround && collisionCheckParams.mySnapOnGroundEnabled && collisionCheckParams.mySnapOnGroundExtraDistance > 0) {\r\n            endOffset.vec3_add(up.vec3_scale(-collisionCheckParams.mySnapOnGroundExtraDistance - 0.00001, tempVector), endOffset);\r\n            snapEnabled = true;\r\n        } else if (!isMovementDownward && this._myPrevCollisionRuntimeParams.myIsOnCeiling && collisionCheckParams.mySnapOnCeilingEnabled && collisionCheckParams.mySnapOnCeilingExtraDistance > 0 &&\r\n            (originalMovementSign > 0 || (originalMovementSign == 0 && (!this._myPrevCollisionRuntimeParams.myIsOnGround || !collisionCheckParams.mySnapOnGroundEnabled)))) {\r\n            endOffset.vec3_add(up.vec3_scale(collisionCheckParams.mySnapOnCeilingExtraDistance + 0.00001, tempVector), endOffset);\r\n            snapEnabled = true;\r\n        }\r\n\r\n        outFixedMovement.vec3_zero();\r\n        if (startOffset.vec3_distance(endOffset) > 0.00001) {\r\n            let checkPositions = this._getVerticalCheckPositions(feetPosition, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n\r\n            furtherDirection.vec3_copy(up);\r\n            if (!isMovementDownward) {\r\n                furtherDirection.vec3_negate(furtherDirection);\r\n            }\r\n\r\n            let furtherDirectionPositionSet = false;\r\n\r\n            for (let i = 0; i < checkPositions.length; i++) {\r\n                let currentPosition = checkPositions[i];\r\n\r\n                origin = currentPosition.vec3_add(startOffset, origin);\r\n                direction = currentPosition.vec3_add(endOffset, direction).vec3_sub(origin, direction);\r\n                let distance = direction.vec3_length();\r\n                direction.vec3_normalize(direction);\r\n\r\n                let raycastResult = this._raycastAndDebug(origin, direction, distance, true, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (raycastResult.myHits.length > 0) {\r\n                    if (furtherDirectionPositionSet) {\r\n                        if (raycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(furtherDirectionPosition, furtherDirection)) {\r\n                            furtherDirectionPosition.vec3_copy(raycastResult.myHits[0].myPosition);\r\n                        }\r\n                    } else {\r\n                        furtherDirectionPositionSet = true;\r\n                        furtherDirectionPosition.vec3_copy(raycastResult.myHits[0].myPosition);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (furtherDirectionPositionSet) {\r\n                upNegate = up.vec3_negate(upNegate);\r\n                if (isMovementDownward) {\r\n                    outFixedMovement = furtherDirectionPosition.vec3_sub(feetPosition, outFixedMovement).vec3_componentAlongAxis(up, outFixedMovement);\r\n\r\n                    if (snapEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, upNegate)) {\r\n                        collisionRuntimeParams.myHasSnappedOnGround = true;\r\n                    } else if (popOutEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, up)) {\r\n                        if (!outFixedMovement.vec3_isZero(0.00001) &&\r\n                            (verticalMovement.vec3_isZero(0.00001) || !outFixedMovement.vec3_isConcordant(verticalMovement))) {\r\n                            collisionRuntimeParams.myHasPoppedOutGround = true;\r\n                        } else {\r\n                            collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                        }\r\n                    } else {\r\n                        collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                    }\r\n                } else {\r\n                    outFixedMovement = furtherDirectionPosition.vec3_sub(feetPosition.vec3_add(up.vec3_scale(height, outFixedMovement), outFixedMovement), outFixedMovement).\r\n                        vec3_componentAlongAxis(up, outFixedMovement);\r\n\r\n                    if (snapEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, up)) {\r\n                        collisionRuntimeParams.myHasSnappedOnCeiling = true;\r\n                    } else if (popOutEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, upNegate)) {\r\n                        if (!outFixedMovement.vec3_isZero(0.00001) &&\r\n                            (verticalMovement.vec3_isZero(0.00001) || !outFixedMovement.vec3_isConcordant(verticalMovement))) {\r\n                            collisionRuntimeParams.myHasPoppedOutCeiling = true;\r\n                        } else {\r\n                            collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                        }\r\n                    } else {\r\n                        collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                    }\r\n                }\r\n\r\n                if (!popOutEnabled && !outFixedMovement.vec3_isConcordant(verticalMovement)) {\r\n                    outFixedMovement.vec3_zero();\r\n                }\r\n\r\n                if (!collisionCheckParams.myVerticalMovementReduceEnabled && collisionRuntimeParams.myHasReducedVerticalMovement) {\r\n                    outFixedMovement.vec3_copy(verticalMovement);\r\n                    collisionRuntimeParams.myHasReducedVerticalMovement = false;\r\n                }\r\n            } else {\r\n                outFixedMovement.vec3_copy(verticalMovement);\r\n            }\r\n        } else {\r\n            outFixedMovement.vec3_copy(verticalMovement);\r\n        }\r\n\r\n        if (outFixedMovement.vec3_length() < 0.00001) {\r\n            outFixedMovement.vec3_zero();\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._verticalPositionCheck = function () {\r\n    let smallHeightFixOffset = PP.vec3_create();\r\n    let heightOffset = PP.vec3_create();\r\n    let startPosition = PP.vec3_create();\r\n    let endPosition = PP.vec3_create();\r\n    let direction = PP.vec3_create();\r\n    return function _verticalPositionCheck(feetPosition, checkUpward, height, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        if (height < 0.00001) {\r\n            return true;\r\n        }\r\n\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugVerticalPositionActive;\r\n\r\n        let checkPositions = this._getVerticalCheckPositions(feetPosition, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n\r\n        let isVerticalPositionOk = true;\r\n        let atLeastOneIsOk = false;\r\n\r\n        let adjustmentEpsilon = 0.00001;\r\n        smallHeightFixOffset = up.vec3_scale(adjustmentEpsilon, smallHeightFixOffset);\r\n        heightOffset = up.vec3_scale(height - adjustmentEpsilon, heightOffset);\r\n        if (height - adjustmentEpsilon < adjustmentEpsilon * 10) {\r\n            heightOffset = up.vec3_scale(adjustmentEpsilon * 10, heightOffset);\r\n        }\r\n\r\n        let insideHitSet = false;\r\n        for (let i = 0; i < checkPositions.length; i++) {\r\n            let currentPosition = checkPositions[i];\r\n\r\n            if (checkUpward) {\r\n                startPosition = currentPosition.vec3_add(smallHeightFixOffset, startPosition);\r\n                endPosition = currentPosition.vec3_add(heightOffset, endPosition);\r\n            } else {\r\n                startPosition = currentPosition.vec3_add(heightOffset, startPosition);\r\n                endPosition = currentPosition.vec3_add(smallHeightFixOffset, endPosition);\r\n            }\r\n\r\n            let origin = startPosition;\r\n            direction = endPosition.vec3_sub(origin, direction);\r\n            let distance = direction.vec3_length();\r\n            direction.vec3_normalize(direction);\r\n\r\n            let raycastResult = this._raycastAndDebug(origin, direction, distance, false, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n            if (raycastResult.isColliding()) {\r\n                let firstHitOutsideCollision = raycastResult.getFirstHitOutsideCollision();\r\n                if (firstHitOutsideCollision != null) {\r\n                    isVerticalPositionOk = false;\r\n                    collisionRuntimeParams.myVerticalCollisionHit.copy(firstHitOutsideCollision);\r\n                    break;\r\n                } else if (!insideHitSet) {\r\n                    insideHitSet = true;\r\n                    collisionRuntimeParams.myVerticalCollisionHit.copy(raycastResult.myHits[0]);\r\n                    if (!collisionCheckParams.myVerticalAllowHitInsideCollisionIfOneOk) {\r\n                        isVerticalPositionOk = false;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                atLeastOneIsOk = true;\r\n            }\r\n        }\r\n\r\n        collisionRuntimeParams.myIsCollidingVertically = !isVerticalPositionOk || !atLeastOneIsOk;\r\n\r\n        return !collisionRuntimeParams.myIsCollidingVertically;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._getVerticalCheckPositions = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(PP.vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let currentDirection = PP.vec3_create();\r\n    return function _getVerticalCheckPositions(feetPosition, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        if (collisionCheckParams.myGroundCircumferenceAddCenter) {\r\n            let tempCheckPosition = _localGetCachedCheckPosition();\r\n            tempCheckPosition.vec3_copy(feetPosition);\r\n            checkPositions.push(tempCheckPosition);\r\n        }\r\n\r\n        let radiusStep = collisionCheckParams.myFeetRadius / collisionCheckParams.myGroundCircumferenceStepAmount;\r\n        let sliceAngle = 360 / collisionCheckParams.myGroundCircumferenceSliceAmount;\r\n        let currentStepRotation = 0;\r\n        for (let i = 0; i < collisionCheckParams.myGroundCircumferenceStepAmount; i++) {\r\n            let currentRadius = radiusStep * (i + 1);\r\n\r\n            currentDirection = forward.vec3_rotateAxis(currentStepRotation, up, currentDirection);\r\n            for (let j = 0; j < collisionCheckParams.myGroundCircumferenceSliceAmount; j++) {\r\n                let tempCheckPosition = _localGetCachedCheckPosition();\r\n                let sliceDirection = currentDirection.vec3_rotateAxis(sliceAngle * j, up, tempCheckPosition);\r\n                checkPositions.push(feetPosition.vec3_add(sliceDirection.vec3_scale(currentRadius, sliceDirection), sliceDirection));\r\n            }\r\n\r\n            currentStepRotation += collisionCheckParams.myGroundCircumferenceRotationPerStep;\r\n        }\r\n\r\n        return checkPositions;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_verticalCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_verticalMovementAdjustment\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_verticalPositionCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_getVerticalCheckPositions\", { enumerable: false });", "CollisionCheck.prototype._updateSurfaceInfo = function () {\r\n    let transformUp = PP.vec3_create();\r\n    let transformForward = PP.vec3_create();\r\n    let feetPosition = PP.vec3_create();\r\n\r\n    let transformOffsetLocalQuat = PP.quat2_create();\r\n    let offsetTransformQuat = PP.quat2_create();\r\n\r\n    let forwardForPerceivedAngle = PP.vec3_create();\r\n    let forwardForVertical = PP.vec3_create();\r\n\r\n    let zAxis = PP.vec3_create(0, 0, 1);\r\n    let xAxis = PP.vec3_create(1, 0, 0);\r\n    return function _updateSurfaceInfo(transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        transformOffsetLocalQuat.quat2_setPositionRotationQuat(collisionCheckParams.myPositionOffsetLocal, collisionCheckParams.myRotationOffsetLocalQuat);\r\n        offsetTransformQuat = transformOffsetLocalQuat.quat2_toWorld(transformQuat, offsetTransformQuat);\r\n        if (transformQuat.vec_equals(offsetTransformQuat, 0.00001)) {\r\n            offsetTransformQuat.quat2_copy(transformQuat);\r\n        }\r\n\r\n        transformUp = offsetTransformQuat.quat2_getUp(transformUp);\r\n        transformForward = offsetTransformQuat.quat2_getForward(transformForward);\r\n        feetPosition = offsetTransformQuat.quat2_getPosition(feetPosition);\r\n\r\n        let height = collisionCheckParams.myHeight;\r\n        height = height - 0.00001; // this makes it easier to setup things at the same exact height of a character so that it can go under it\r\n        if (height < 0.00001) {\r\n            height = 0;\r\n        }\r\n\r\n        forwardForPerceivedAngle.vec3_copy(transformForward);\r\n\r\n        forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n        if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n            forwardForVertical.vec3_copy(transformForward);\r\n        } else {\r\n            if (collisionCheckParams.myCheckVerticalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                    forwardForVertical.vec3_copy(xAxis);\r\n                } else {\r\n                    forwardForVertical.vec3_copy(zAxis);\r\n                }\r\n            }\r\n\r\n            forwardForVertical = forwardForVertical.vec3_removeComponentAlongAxis(transformUp, forwardForVertical);\r\n            forwardForVertical = forwardForVertical.vec3_normalize(forwardForVertical);\r\n\r\n            if (forwardForVertical.vec_equals(collisionCheckParams.myCheckVerticalFixedForward, 0.00001)) {\r\n                forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n            }\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeGroundInfoEnabled) {\r\n            this._gatherSurfaceInfo(feetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeCeilingInfoEnabled) {\r\n            this._gatherSurfaceInfo(feetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._postSurfaceCheck = function () {\r\n    let horizontalDirection = PP.vec3_create();\r\n    return function _postSurfaceCheck(fixedHorizontalMovement, originalVerticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams) {\r\n\r\n        let isVerticalMovementZero = originalVerticalMovement.vec3_isZero(0.00001);\r\n        let isVerticalMovemenDownward = Math.pp_sign(originalVerticalMovement.vec3_lengthSigned(transformUp), -1) < 0;\r\n\r\n        let horizontalMovementIsZero = fixedHorizontalMovement.vec3_isZero(0.00001);\r\n        horizontalDirection = fixedHorizontalMovement.vec3_normalize(horizontalDirection);\r\n\r\n        let groundPerceivedAngle = this.computeSurfacePerceivedAngle(collisionRuntimeParams.myGroundNormal, horizontalDirection, transformUp, true);\r\n        let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(collisionRuntimeParams.myCeilingNormal, horizontalDirection, transformUp, false);\r\n\r\n        let mustRemainOnGroundOk = true;\r\n        if (collisionCheckParams.myMustStayOnGround) {\r\n            if (previousCollisionRuntimeParams.myIsOnGround && !collisionRuntimeParams.myIsOnGround && (isVerticalMovementZero || isVerticalMovemenDownward)) {\r\n                mustRemainOnGroundOk = false;\r\n            }\r\n        }\r\n\r\n        let mustRemainOnCeilingOk = true;\r\n        if (collisionCheckParams.myMustStayOnCeiling) {\r\n            if (previousCollisionRuntimeParams.myIsOnCeiling && !collisionRuntimeParams.myIsOnCeiling && (isVerticalMovementZero || isVerticalMovemenDownward)) {\r\n                mustRemainOnCeilingOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayBelowGroundAngleOk = true;\r\n        if (collisionCheckParams.myMustStayBelowGroundAngleDownhill != null || collisionCheckParams.myMustStayBelowIgnorableGroundAngleDownhill) {\r\n            let minAngle = null;\r\n            if (!collisionCheckParams.myMustStayBelowIgnorableGroundAngleDownhill) {\r\n                minAngle = collisionCheckParams.myMustStayBelowGroundAngleDownhill;\r\n            } else if (collisionCheckParams.myMustStayBelowGroundAngleDownhill == null) {\r\n                minAngle = collisionCheckParams.myGroundAngleToIgnore;\r\n            } else {\r\n                minAngle = Math.min(collisionCheckParams.myMustStayBelowGroundAngleDownhill, collisionCheckParams.myGroundAngleToIgnore);\r\n            }\r\n\r\n            if (!horizontalMovementIsZero && groundPerceivedAngle < 0 && previousCollisionRuntimeParams.myIsOnGround &&\r\n                previousCollisionRuntimeParams.myGroundAngle <= minAngle &&\r\n                collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle > minAngle + 0.0001) {\r\n                mustStayBelowGroundAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayBelowCeilingAngleOk = true;\r\n        if (collisionCheckParams.myMustStayBelowCeilingAngleDownhill != null || collisionCheckParams.myMustStayBelowIgnorableCeilingAngleDownhill) {\r\n            let minAngle = null;\r\n            if (!collisionCheckParams.myMustStayBelowIgnorableCeilingAngleDownhill) {\r\n                minAngle = collisionCheckParams.myMustStayBelowCeilingAngleDownhill;\r\n            } else if (collisionCheckParams.myMustStayBelowCeilingAngleDownhill == null) {\r\n                minAngle = collisionCheckParams.myCeilingAngleToIgnore;\r\n            } else {\r\n                minAngle = Math.min(collisionCheckParams.myMustStayBelowCeilingAngleDownhill, collisionCheckParams.myCeilingAngleToIgnore);\r\n            }\r\n\r\n            if (!horizontalMovementIsZero && groundPerceivedAngle < 0 && previousCollisionRuntimeParams.myIsOnCeiling &&\r\n                previousCollisionRuntimeParams.myCeilingAngle <= minAngle &&\r\n                collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle > minAngle + 0.0001) {\r\n                mustStayBelowCeilingAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayOnGroundHitAngleOk = true;\r\n        if (collisionCheckParams.myMovementMustStayOnGroundHitAngle != null) {\r\n            if (!horizontalMovementIsZero && previousCollisionRuntimeParams.myIsOnGround &&\r\n                previousCollisionRuntimeParams.myGroundHitMaxAngle <= collisionCheckParams.myMovementMustStayOnGroundHitAngle &&\r\n                collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundHitMaxAngle > collisionCheckParams.myMovementMustStayOnGroundHitAngle + 0.0001) {\r\n                mustStayOnGroundHitAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayOnCeilingHitAngleOk = true;\r\n        if (collisionCheckParams.myMovementMustStayOnCeilingHitAngle != null) {\r\n            if (!horizontalMovementIsZero && previousCollisionRuntimeParams.myIsOnCeiling &&\r\n                previousCollisionRuntimeParams.myCeilingHitMaxAngle <= collisionCheckParams.myMovementMustStayOnCeilingHitAngle &&\r\n                collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingHitMaxAngle > collisionCheckParams.myMovementMustStayOnCeilingHitAngle + 0.0001) {\r\n                mustStayOnCeilingHitAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let isOnValidGroundAngleUphill = true;\r\n        let isOnValidGroundAngleDownhill = true;\r\n        if (collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle > collisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n            if (previousCollisionRuntimeParams.myIsOnGround && !horizontalMovementIsZero) {\r\n                if (groundPerceivedAngle > 0) {\r\n                    isOnValidGroundAngleUphill = false;\r\n                    if (collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle != null &&\r\n                        collisionRuntimeParams.myGroundAngle <= collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                        isOnValidGroundAngleUphill = Math.abs(groundPerceivedAngle) <= collisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n                    }\r\n                } else if (groundPerceivedAngle < 0) {\r\n                    if (previousCollisionRuntimeParams.myGroundAngle <= collisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n                        if (collisionCheckParams.myMustStayOnValidGroundAngleDownhill) {\r\n                            isOnValidGroundAngleDownhill = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let isOnValidCeilingAngleUphill = true;\r\n        let isOnValidCeilingAngleDownhill = true;\r\n        if (collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle > collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n            if (previousCollisionRuntimeParams.myIsOnCeiling && !horizontalMovementIsZero) {\r\n                if (ceilingPerceivedAngle > 0) {\r\n                    isOnValidCeilingAngleUphill = false;\r\n                    if (collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle != null &&\r\n                        collisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                        isOnValidCeilingAngleUphill = Math.abs(ceilingPerceivedAngle) <= collisionCheckParams.myCeilingAngleToIgnore + 0.0001;\r\n                    }\r\n                } else if (ceilingPerceivedAngle < 0) {\r\n                    if (previousCollisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n                        if (collisionCheckParams.myMustStayOnValidCeilingAngleDownhill) {\r\n                            isOnValidCeilingAngleDownhill = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return mustRemainOnGroundOk && mustRemainOnCeilingOk && mustStayBelowGroundAngleOk && mustStayBelowCeilingAngleOk && mustStayOnGroundHitAngleOk && mustStayOnCeilingHitAngleOk && isOnValidGroundAngleUphill && isOnValidGroundAngleDownhill && isOnValidCeilingAngleUphill && isOnValidCeilingAngleDownhill;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._surfaceTooSteep = function () {\r\n    let surfaceSteepResults = [false, false];\r\n    return function _surfaceTooSteep(up, direction, collisionCheckParams, collisionRuntimeParams) {\r\n        let groundTooSteep = false;\r\n        let ceilingTooSteep = false;\r\n\r\n        if (collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle > collisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n            let groundPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                collisionRuntimeParams.myGroundNormal,\r\n                direction, up, true);\r\n\r\n            groundTooSteep = groundPerceivedAngle > 0;\r\n            if (groundTooSteep &&\r\n                collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle != null &&\r\n                collisionRuntimeParams.myGroundAngle <= collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                groundTooSteep = Math.abs(groundPerceivedAngle) > collisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n            }\r\n        }\r\n\r\n        if (!groundTooSteep) {\r\n            if (collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle > collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n                let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                    collisionRuntimeParams.myCeilingNormal,\r\n                    direction, up, false);\r\n\r\n                ceilingTooSteep = ceilingPerceivedAngle > 0;\r\n                if (ceilingTooSteep &&\r\n                    collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle != null &&\r\n                    collisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                    ceilingTooSteep = Math.abs(ceilingPerceivedAngle) > collisionCheckParams.myCeilingAngleToIgnore + 0.0001;\r\n                }\r\n            }\r\n        }\r\n\r\n        surfaceSteepResults[0] = groundTooSteep;\r\n        surfaceSteepResults[1] = ceilingTooSteep;\r\n        return surfaceSteepResults;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._adjustVerticalMovementWithSurface = function () {\r\n    let horizontalDirection = PP.vec3_create();\r\n    let extraVerticalMovement = PP.vec3_create();\r\n    return function _adjustVerticalMovementWithSurface(horizontalMovement, verticalMovement, up, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, outAdjustedVerticalMovement) {\r\n        outAdjustedVerticalMovement.vec3_copy(verticalMovement);\r\n\r\n        if (horizontalMovement.vec3_isZero(0.00001)) {\r\n            return outAdjustedVerticalMovement;\r\n        }\r\n\r\n        let extraVerticalLength = 0;\r\n        horizontalDirection = horizontalMovement.vec3_normalize(horizontalDirection);\r\n        if (previousCollisionRuntimeParams.myIsOnGround) {\r\n            let groundPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                previousCollisionRuntimeParams.myGroundNormal,\r\n                horizontalDirection, up, true);\r\n\r\n            let groundExtraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(groundPerceivedAngle)));\r\n            groundExtraVerticalLength *= Math.pp_sign(groundPerceivedAngle);\r\n\r\n            if (Math.abs(groundExtraVerticalLength) > 0.00001) {\r\n                if (groundPerceivedAngle > 0) {\r\n                    if (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphill &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle == null || Math.abs(groundPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle) &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle == null || previousCollisionRuntimeParams.myGroundAngle <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle)) {\r\n                        extraVerticalLength = groundExtraVerticalLength;\r\n                        collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = true;\r\n                    }\r\n                } else if (groundPerceivedAngle < 0) {\r\n                    if (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhill &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle == null || Math.abs(groundPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle) &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle == null || previousCollisionRuntimeParams.myGroundAngle <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle)) {\r\n                        extraVerticalLength = groundExtraVerticalLength;\r\n                        collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (previousCollisionRuntimeParams.myIsOnCeiling) {\r\n            let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                previousCollisionRuntimeParams.myCeilingNormal,\r\n                horizontalDirection, up, false);\r\n\r\n            let ceilingExtraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(ceilingPerceivedAngle)));\r\n            ceilingExtraVerticalLength *= Math.pp_sign(ceilingPerceivedAngle);\r\n\r\n            if (Math.abs(ceilingExtraVerticalLength) > 0.00001) {\r\n                let sameSignThanGround = Math.pp_sign(extraVerticalLength) == Math.pp_sign(ceilingExtraVerticalLength);\r\n                if (extraVerticalLength == 0 || (sameSignThanGround && Math.abs(ceilingExtraVerticalLength) > Math.abs(extraVerticalLength))) {\r\n                    if (ceilingPerceivedAngle > 0) {\r\n                        if (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphill &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxPerceivedAngle == null || Math.abs(ceilingPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxPerceivedAngle) &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle == null || previousCollisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle)) {\r\n                            extraVerticalLength = ceilingExtraVerticalLength;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = true;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = false;\r\n                        }\r\n                    } else if (ceilingPerceivedAngle < 0) {\r\n                        if (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhill &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxPerceivedAngle == null || Math.abs(ceilingPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxPerceivedAngle) &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle == null || previousCollisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle)) {\r\n                            extraVerticalLength = ceilingExtraVerticalLength;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = true;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (Math.abs(extraVerticalLength) > 0.00001) {\r\n            let verticalMovementLength = verticalMovement.vec3_lengthSigned(up);\r\n            let sameSignThanExtra = Math.pp_sign(extraVerticalLength) == Math.pp_sign(verticalMovementLength);\r\n            extraVerticalMovement = up.vec3_scale(extraVerticalLength, extraVerticalMovement);\r\n            if (verticalMovement.vec3_isZero(0.00001)) {\r\n                outAdjustedVerticalMovement.vec3_copy(extraVerticalMovement);\r\n            } else if (sameSignThanExtra) {\r\n                outAdjustedVerticalMovement = verticalMovement.vec3_add(extraVerticalMovement, outAdjustedVerticalMovement);\r\n            } else if (!sameSignThanExtra && (\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill ||\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill)) {\r\n                // do not add for downhill, since it means the vertical movement was about to go away from surface and u should not cancel that\r\n                outAdjustedVerticalMovement = verticalMovement.vec3_add(extraVerticalMovement, outAdjustedVerticalMovement);\r\n            } else {\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = false;\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = false;\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = false;\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = false;\r\n            }\r\n        }\r\n\r\n        if (outAdjustedVerticalMovement.vec3_isZero(0.000001)) {\r\n            outAdjustedVerticalMovement.vec3_zero();\r\n        }\r\n\r\n        return outAdjustedVerticalMovement;\r\n    }\r\n}();\r\n\r\nCollisionCheck.prototype._adjustHorizontalMovementWithSurface = function () {\r\n    let extraHorizontalMovement = PP.vec3_create();\r\n    let groundHorizontalDirection = PP.vec3_create();\r\n    let ceilingHorizontalDirection = PP.vec3_create();\r\n    let scaledCeilingHorizontalDirection = PP.vec3_create();\r\n    let scaledCeilingHorizontalDirectionAlongGroundHorizontalDirection = PP.vec3_create();\r\n    let scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection = PP.vec3_create();\r\n    return function _adjustHorizontalMovementWithSurface(horizontalMovement, verticalMovement, up, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, outAdjustedHorizontalMovement) {\r\n        outAdjustedHorizontalMovement.vec3_copy(horizontalMovement);\r\n\r\n        if (verticalMovement.vec3_isZero(0.00001)) {\r\n            return outAdjustedHorizontalMovement;\r\n        }\r\n\r\n        let isMovementDownward = !verticalMovement.vec3_isConcordant(up);\r\n\r\n        extraHorizontalMovement.vec3_zero();\r\n        groundHorizontalDirection.vec3_zero();\r\n\r\n        if (previousCollisionRuntimeParams.myIsOnGround) {\r\n            groundHorizontalDirection = previousCollisionRuntimeParams.myGroundNormal.vec3_removeComponentAlongAxis(up, groundHorizontalDirection);\r\n            if (!groundHorizontalDirection.vec3_isZero(0.00001)) {\r\n                groundHorizontalDirection.vec3_normalize(groundHorizontalDirection);\r\n\r\n                let groundExtraHorizontalLength = verticalMovement.vec3_length() / Math.tan(Math.pp_toRadians(previousCollisionRuntimeParams.myGroundAngle));\r\n                groundExtraHorizontalLength *= (isMovementDownward) ? 1 : -1;\r\n\r\n                if (Math.abs(groundExtraHorizontalLength) > 0.00001) {\r\n                    if (isMovementDownward) {\r\n                        if (collisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhill &&\r\n                            (collisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle == null || previousCollisionRuntimeParams.myGroundAngle >= collisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle)) {\r\n                            extraHorizontalMovement = groundHorizontalDirection.vec3_scale(groundExtraHorizontalLength, extraHorizontalMovement);\r\n                            collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (previousCollisionRuntimeParams.myIsOnCeiling) {\r\n            ceilingHorizontalDirection = previousCollisionRuntimeParams.myCeilingNormal.vec3_removeComponentAlongAxis(up, ceilingHorizontalDirection);\r\n            if (!ceilingHorizontalDirection.vec3_isZero(0.00001)) {\r\n                ceilingHorizontalDirection.vec3_normalize(ceilingHorizontalDirection);\r\n\r\n                let ceilingExtraHorizontalLength = verticalMovement.vec3_length() / Math.tan(Math.pp_toRadians(previousCollisionRuntimeParams.myCeilingAngle));\r\n                ceilingExtraHorizontalLength *= (isMovementDownward) ? -1 : 1;\r\n\r\n                if (Math.abs(ceilingExtraHorizontalLength) > 0.00001) {\r\n                    let sameDirectionAsGround = ceilingHorizontalDirection.vec3_isConcordant(groundHorizontalDirection);\r\n                    if (extraHorizontalMovement.vec3_isZero() || sameDirectionAsGround) {\r\n                        if (!isMovementDownward) {\r\n                            if (collisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhill &&\r\n                                (collisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle == null || previousCollisionRuntimeParams.myCeilingAngle >= collisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle)) {\r\n                                scaledCeilingHorizontalDirection = ceilingHorizontalDirection.vec3_scale(ceilingExtraHorizontalLength, scaledCeilingHorizontalDirection);\r\n                                if (!groundHorizontalDirection.vec3_isZero()) {\r\n                                    scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection = scaledCeilingHorizontalDirection.vec3_removeComponentAlongAxis(scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection);\r\n                                    scaledCeilingHorizontalDirectionAlongGroundHorizontalDirection = scaledCeilingHorizontalDirection.vec3_componentAlongAxis(scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection);\r\n\r\n                                    if (scaledCeilingHorizontalDirectionAlongGroundHorizontalDirection.vec3_isFartherAlongAxis(extraHorizontalMovement, groundHorizontalDirection)) {\r\n                                        collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = false;\r\n                                        extraHorizontalMovement.vec3_copy(scaledCeilingHorizontalDirection);\r\n                                        collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = true;\r\n                                    } else if (!scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection.vec3_isZero(0.00001)) {\r\n                                        extraHorizontalMovement = extraHorizontalMovement.vec3_add(scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection, extraHorizontalMovement);\r\n                                        collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = true;\r\n                                    }\r\n                                } else {\r\n                                    extraHorizontalMovement.vec3_copy(scaledCeilingHorizontalDirection);\r\n                                    collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!extraHorizontalMovement.vec3_isZero()) {\r\n            if (horizontalMovement.vec3_isZero(0.00001)) {\r\n                outAdjustedHorizontalMovement.vec3_copy(extraHorizontalMovement);\r\n            } else if (extraHorizontalMovement.vec3_isConcordant(horizontalMovement)) {\r\n                outAdjustedHorizontalMovement = horizontalMovement.vec3_add(extraHorizontalMovement, outAdjustedHorizontalMovement);\r\n            } else {\r\n                outAdjustedHorizontalMovement = horizontalMovement.vec3_add(extraHorizontalMovement, outAdjustedHorizontalMovement);\r\n            }\r\n        }\r\n\r\n        if (outAdjustedHorizontalMovement.vec3_isZero(0.000001)) {\r\n            outAdjustedHorizontalMovement.vec3_zero();\r\n        }\r\n\r\n        return outAdjustedHorizontalMovement;\r\n    }\r\n}();\r\n\r\n// useless now\r\nCollisionCheck.prototype._computeExtraSurfaceVerticalMovement = function () {\r\n    let direction = PP.vec3_create();\r\n    let tempVector = PP.vec3_create();\r\n    return function _computeExtraSurfaceVerticalMovement(horizontalMovement, up, collisionCheckParams, collisionRuntimeParams, outExtraSurfaceVerticalMovement) {\r\n        outExtraSurfaceVerticalMovement.vec3_zero();\r\n\r\n        if (!horizontalMovement.vec3_isZero()) {\r\n            if (collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle != 0) {\r\n                direction = horizontalMovement.vec3_normalize(direction);\r\n                let groundPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                    collisionRuntimeParams.myGroundNormal,\r\n                    direction, up, true);\r\n\r\n                let extraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(groundPerceivedAngle)));\r\n                extraVerticalLength *= Math.pp_sign(groundPerceivedAngle);\r\n\r\n                if (Math.abs(extraVerticalLength) > 0.00001 && (collisionCheckParams.mySnapOnGroundEnabled || extraVerticalLength > 0)) {\r\n                    outExtraSurfaceVerticalMovement.vec3_add(up.vec3_scale(extraVerticalLength, tempVector), outExtraSurfaceVerticalMovement);\r\n                }\r\n            } else if (collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle != 0) {\r\n                direction = horizontalMovement.vec3_normalize(direction);\r\n                let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                    collisionRuntimeParams.myCeilingNormal,\r\n                    direction, up, false);\r\n\r\n                let extraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(ceilingPerceivedAngle)));\r\n                extraVerticalLength *= Math.pp_sign(ceilingPerceivedAngle);\r\n                extraVerticalLength *= -1;\r\n\r\n                if (Math.abs(extraVerticalLength) > 0.00001 && (collisionCheckParams.mySnapOnCeilingEnabled || extraVerticalLength < 0)) {\r\n                    outExtraSurfaceVerticalMovement.vec3_add(up.vec3_scale(extraVerticalLength, tempVector), outExtraSurfaceVerticalMovement);\r\n                }\r\n            }\r\n        }\r\n\r\n        return outExtraSurfaceVerticalMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._gatherSurfaceInfo = function () {\r\n    let verticalDirection = PP.vec3_create();\r\n    let startOffset = PP.vec3_create();\r\n    let endOffset = PP.vec3_create();\r\n    let heightOffset = PP.vec3_create();\r\n    let smallOffset = PP.vec3_create();\r\n    let smallStartPosition = PP.vec3_create();\r\n    let smallEndPosition = PP.vec3_create();\r\n    let surfaceNormal = PP.vec3_create();\r\n    let surfaceHitMaxNormal = PP.vec3_create();\r\n    let hitFromCurrentPosition = PP.vec3_create();\r\n    let startPosition = PP.vec3_create();\r\n    let endPosition = PP.vec3_create();\r\n    let direction = PP.vec3_create();\r\n    return function _gatherSurfaceInfo(feetPosition, height, up, forwardForPerceivedAngle, forwardForVertical, isGround, collisionCheckParams, collisionRuntimeParams) {\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && ((isGround && collisionCheckParams.myDebugGroundInfoActive) || (!isGround && collisionCheckParams.myDebugCeilingInfoActive));\r\n\r\n        let checkPositions = this._getVerticalCheckPositions(feetPosition, up, forwardForVertical, collisionCheckParams, collisionRuntimeParams);\r\n\r\n        verticalDirection.vec3_copy(up);\r\n        let distanceToBeOnSurface = collisionCheckParams.myDistanceToBeOnGround;\r\n        let distanceToComputeSurfaceInfo = collisionCheckParams.myDistanceToComputeGroundInfo;\r\n        let distanceToFindSurfaceDistance = collisionCheckParams.myFindGroundDistanceMaxOutsideDistance;\r\n        let verticalFixToBeOnSurface = collisionCheckParams.myVerticalFixToBeOnGround;\r\n        let verticalFixToComputeSurfaceInfo = collisionCheckParams.myVerticalFixToComputeGroundInfo;\r\n        let verticalFixToFindSurfaceDistance = collisionCheckParams.myFindGroundDistanceMaxInsideDistance;\r\n        let isOnSurfaceIfInsideHit = collisionCheckParams.myIsOnGroundIfInsideHit;\r\n        let isBaseInsideCollisionCheckEnabled = collisionCheckParams.myGroundIsBaseInsideCollisionCheckEnabled;\r\n        if (!isGround) {\r\n            verticalDirection.vec3_negate(verticalDirection);\r\n            distanceToBeOnSurface = collisionCheckParams.myDistanceToBeOnCeiling;\r\n            distanceToComputeSurfaceInfo = collisionCheckParams.myDistanceToComputeCeilingInfo;\r\n            distanceToFindSurfaceDistance = collisionCheckParams.myFindCeilingDistanceMaxOutsideDistance;\r\n            verticalFixToBeOnSurface = collisionCheckParams.myVerticalFixToBeOnCeiling;\r\n            verticalFixToComputeSurfaceInfo = collisionCheckParams.myVerticalFixToComputeCeilingInfo;\r\n            verticalFixToFindSurfaceDistance = collisionCheckParams.myFindCeilingDistanceMaxInsideDistance;\r\n            isOnSurfaceIfInsideHit = collisionCheckParams.myIsOnCeilingIfInsideHit;\r\n            isBaseInsideCollisionCheckEnabled = collisionCheckParams.myCeilingIsBaseInsideCollisionCheckEnabled;\r\n        }\r\n\r\n        startOffset = verticalDirection.vec3_scale(Math.max(verticalFixToBeOnSurface, verticalFixToComputeSurfaceInfo, verticalFixToFindSurfaceDistance, 0.00001), startOffset);\r\n        endOffset = verticalDirection.vec3_negate(endOffset).vec3_scale(Math.max(distanceToBeOnSurface, distanceToComputeSurfaceInfo, distanceToFindSurfaceDistance, 0.00001), endOffset);\r\n\r\n        heightOffset.vec3_zero();\r\n        if (!isGround) {\r\n            heightOffset = up.vec3_scale(height, heightOffset);\r\n        }\r\n\r\n        smallOffset = verticalDirection.vec3_scale(0.0001, smallOffset);\r\n\r\n        let isOnSurface = false;\r\n        let surfaceAngle = 0;\r\n        let surfacePerceivedAngle = 0;\r\n        surfaceNormal.vec3_zero();\r\n\r\n        let surfaceHitMaxAngle = 0;\r\n        surfaceHitMaxNormal.vec3_zero();\r\n\r\n        let surfaceDistance = null;\r\n        let isBaseInsideCollision = checkPositions.length > 0;\r\n\r\n        for (let i = 0; i < checkPositions.length; i++) {\r\n            let currentPosition = checkPositions[i];\r\n            currentPosition.vec3_add(heightOffset, currentPosition);\r\n\r\n            let baseHitIsInsideCollision = false;\r\n            if (isBaseInsideCollisionCheckEnabled) {\r\n                smallStartPosition = currentPosition.vec3_add(smallOffset, smallStartPosition);\r\n                smallEndPosition = currentPosition.vec3_sub(smallOffset, smallEndPosition);\r\n\r\n                let origin = smallStartPosition;\r\n                direction = smallEndPosition.vec3_sub(origin, direction);\r\n                let distance = direction.vec3_length();\r\n                direction.vec3_normalize(direction);\r\n                let raycastResult = this._raycastAndDebug(origin, direction, distance, false, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (raycastResult.isColliding()) {\r\n                    baseHitIsInsideCollision = raycastResult.myHits[0].myIsInsideCollision;\r\n                }\r\n            }\r\n\r\n            isBaseInsideCollision &&= baseHitIsInsideCollision;\r\n\r\n            if (!baseHitIsInsideCollision) {\r\n                startPosition = currentPosition.vec3_add(startOffset, startPosition);\r\n                endPosition = currentPosition.vec3_add(endOffset, endPosition);\r\n\r\n                let origin = startPosition;\r\n                direction = endPosition.vec3_sub(origin, direction);\r\n                let distance = direction.vec3_length();\r\n                direction.vec3_normalize(direction);\r\n                let raycastResult = this._raycastAndDebug(origin, direction, distance, true, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (raycastResult.isColliding()) {\r\n                    hitFromCurrentPosition = raycastResult.myHits[0].myPosition.vec3_sub(currentPosition, hitFromCurrentPosition);\r\n                    let hitFromCurrentPositionLength = hitFromCurrentPosition.vec3_lengthSigned(verticalDirection);\r\n\r\n                    if ((hitFromCurrentPositionLength >= 0 && hitFromCurrentPositionLength <= verticalFixToBeOnSurface + 0.00001) ||\r\n                        (hitFromCurrentPositionLength < 0 && Math.abs(hitFromCurrentPositionLength) <= distanceToBeOnSurface + 0.00001)) {\r\n                        isOnSurface = true;\r\n                    }\r\n\r\n                    if ((hitFromCurrentPositionLength >= 0 && hitFromCurrentPositionLength <= verticalFixToComputeSurfaceInfo + 0.00001) ||\r\n                        (hitFromCurrentPositionLength < 0 && Math.abs(hitFromCurrentPositionLength) <= distanceToComputeSurfaceInfo + 0.00001)) {\r\n                        let currentSurfaceNormal = raycastResult.myHits[0].myNormal;\r\n                        surfaceNormal.vec3_add(currentSurfaceNormal, surfaceNormal);\r\n\r\n                        let surfaceHitAngle = currentSurfaceNormal.vec3_angle(verticalDirection);\r\n                        if (surfaceHitAngle > surfaceHitMaxAngle) {\r\n                            surfaceHitMaxAngle = surfaceHitAngle;\r\n                            surfaceHitMaxNormal.vec3_copy(currentSurfaceNormal);\r\n                        }\r\n                    }\r\n\r\n                    if ((hitFromCurrentPositionLength >= 0 && hitFromCurrentPositionLength <= verticalFixToFindSurfaceDistance + 0.00001) ||\r\n                        (hitFromCurrentPositionLength < 0 && Math.abs(hitFromCurrentPositionLength) <= distanceToFindSurfaceDistance + 0.00001)) {\r\n                        if (surfaceDistance == null) {\r\n                            surfaceDistance = -hitFromCurrentPositionLength;\r\n                        } else {\r\n                            if (Math.abs(hitFromCurrentPositionLength) < Math.abs(surfaceDistance)) {\r\n                                surfaceDistance = -hitFromCurrentPositionLength;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else if (isOnSurfaceIfInsideHit) {\r\n                isOnSurface = true;\r\n            }\r\n        }\r\n\r\n        if (!surfaceNormal.vec3_isZero()) {\r\n            surfaceNormal.vec3_normalize(surfaceNormal);\r\n            surfaceAngle = surfaceNormal.vec3_angle(verticalDirection);\r\n\r\n            if (surfaceAngle <= 0.0001) {\r\n                surfaceAngle = 0;\r\n                surfaceNormal.vec3_copy(verticalDirection);\r\n            } else if (surfaceAngle >= 180 - 0.0001) {\r\n                surfaceAngle = 180;\r\n                surfaceNormal = verticalDirection.vec3_negate(surfaceNormal);\r\n            }\r\n\r\n            surfacePerceivedAngle = this.computeSurfacePerceivedAngle(surfaceNormal, forwardForPerceivedAngle, up, isGround);\r\n        }\r\n\r\n        if (isGround) {\r\n            collisionRuntimeParams.myRealIsOnGround = isOnSurface;\r\n\r\n            collisionRuntimeParams.myGroundAngle = surfaceAngle;\r\n            collisionRuntimeParams.myGroundPerceivedAngle = surfacePerceivedAngle;\r\n            collisionRuntimeParams.myGroundNormal.vec3_copy(surfaceNormal);\r\n\r\n            collisionRuntimeParams.myGroundHitMaxAngle = surfaceHitMaxAngle;\r\n            collisionRuntimeParams.myGroundHitMaxNormal.vec3_copy(surfaceHitMaxNormal);\r\n\r\n            collisionRuntimeParams.myGroundDistance = surfaceDistance;\r\n\r\n            collisionRuntimeParams.myGroundIsBaseInsideCollision = isBaseInsideCollision;\r\n\r\n            if (isOnSurface && (collisionCheckParams.myIsOnGroundMaxSurfaceAngle == null || collisionRuntimeParams.myGroundAngle <= collisionCheckParams.myIsOnGroundMaxSurfaceAngle)) {\r\n                collisionRuntimeParams.myIsOnGround = isOnSurface;\r\n            }\r\n        } else {\r\n            collisionRuntimeParams.myRealIsOnCeiling = isOnSurface;\r\n\r\n            collisionRuntimeParams.myCeilingAngle = surfaceAngle;\r\n            collisionRuntimeParams.myCeilingPerceivedAngle = surfacePerceivedAngle;\r\n            collisionRuntimeParams.myCeilingNormal.vec3_copy(surfaceNormal);\r\n\r\n            collisionRuntimeParams.myCeilingHitMaxAngle = surfaceHitMaxAngle;\r\n            collisionRuntimeParams.myCeilingHitMaxNormal.vec3_copy(surfaceHitMaxNormal);\r\n\r\n            collisionRuntimeParams.myCeilingDistance = surfaceDistance;\r\n\r\n            collisionRuntimeParams.myCeilingIsBaseInsideCollision = isBaseInsideCollision;\r\n\r\n            if (isOnSurface && (collisionCheckParams.myIsOnCeilingMaxSurfaceAngle == null || collisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myIsOnCeilingMaxSurfaceAngle)) {\r\n                collisionRuntimeParams.myIsOnCeiling = isOnSurface;\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype.computeSurfacePerceivedAngle = function () {\r\n    let forwardOnSurface = PP.vec3_create();\r\n    let verticalDirection = PP.vec3_create();\r\n    return function computeSurfacePerceivedAngle(surfaceNormal, forward, up, isGround = true) {\r\n        let surfacePerceivedAngle = 0;\r\n\r\n        verticalDirection.vec3_copy(up);\r\n        if (!isGround) {\r\n            verticalDirection.vec3_negate(verticalDirection);\r\n        }\r\n\r\n        let surfaceAngle = surfaceNormal.vec3_angle(verticalDirection);\r\n        if (surfaceAngle <= Math.PP_EPSILON_DEGREES) {\r\n            surfaceAngle = 0;\r\n        } else if (surfaceAngle >= 180 - Math.PP_EPSILON_DEGREES) {\r\n            surfaceAngle = 180;\r\n        }\r\n\r\n        forwardOnSurface = forward.vec3_projectOnPlaneAlongAxis(surfaceNormal, up, forwardOnSurface);\r\n        surfacePerceivedAngle = forwardOnSurface.vec3_angle(forward);\r\n\r\n        let isFartherOnUp = forwardOnSurface.vec3_isFartherAlongAxis(forward, up);\r\n        if ((!isFartherOnUp && isGround) || (isFartherOnUp && !isGround)) {\r\n            surfacePerceivedAngle *= -1;\r\n        }\r\n\r\n        if (Math.abs(surfacePerceivedAngle) >= surfaceAngle) {\r\n            if (surfaceAngle != 0 && surfaceAngle != 180) {\r\n                surfacePerceivedAngle = surfaceAngle * Math.pp_sign(surfacePerceivedAngle);\r\n            } else {\r\n                surfacePerceivedAngle = surfaceAngle;\r\n            }\r\n        }\r\n\r\n        return surfacePerceivedAngle;\r\n    };\r\n}();\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_surfaceTooSteep\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_computeExtraSurfaceVerticalMovement\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_gatherSurfaceInfo\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_updateSurfaceInfo\", { enumerable: false });", "PP.CollisionCheckBridge = {\r\n    _myCollisionCheck: new CollisionCheck(),\r\n\r\n    checkMovement: function () {\r\n        let collisionCheckParams = new CollisionCheckParams();\r\n        let collisionRuntimeParams = new CollisionRuntimeParams();\r\n        return function checkMovement(movement, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n            this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n            this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n            this._myCollisionCheck.move(movement, currentTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n            this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n        }\r\n    }(),\r\n    checkTeleportToTransform: function () {\r\n        let teleportPosition = PP.vec3_create();\r\n        let collisionCheckParams = new CollisionCheckParams();\r\n        let collisionRuntimeParams = new CollisionRuntimeParams();\r\n        return function checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n            this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n            this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n            teleportPosition = teleportTransformQuat.quat2_getPosition(teleportPosition);\r\n            this._myCollisionCheck.teleport(teleportPosition, teleportTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n            this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n        }\r\n    }(),\r\n    checkTransform: function () {\r\n        let collisionCheckParams = new CollisionCheckParams();\r\n        let collisionRuntimeParams = new CollisionRuntimeParams();\r\n        return function checkTransform(checkTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n            this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n            this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n            this._myCollisionCheck.positionCheck(true, checkTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n            this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n        }\r\n    }(),\r\n    updateGroundInfo: function () {\r\n        let collisionCheckParams = new CollisionCheckParams();\r\n        let collisionRuntimeParams = new CollisionRuntimeParams();\r\n        return function updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n            this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n            this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n            collisionCheckParams.myComputeCeilingInfoEnabled = false;\r\n            this._myCollisionCheck.updateSurfaceInfo(currentTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n            this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n        }\r\n    }(),\r\n    updateCeilingInfo: function () {\r\n        let collisionCheckParams = new CollisionCheckParams();\r\n        let collisionRuntimeParams = new CollisionRuntimeParams();\r\n        return function updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n            this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n            this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n            collisionCheckParams.myComputeGroundInfoEnabled = false;\r\n            this._myCollisionCheck.updateSurfaceInfo(currentTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n            this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n        }\r\n    }(),\r\n    convertCharacterCollisionResultsToCollisionRuntimeParams: function (characterCollisionResults, outCollisionRuntimeParams) {\r\n        outCollisionRuntimeParams.reset();\r\n\r\n        characterCollisionResults.myTransformResults.myStartTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myOriginalPosition);\r\n        characterCollisionResults.myTransformResults.myEndTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myNewPosition);\r\n\r\n        characterCollisionResults.myTransformResults.myStartTransformQuat.quat2_getForward(outCollisionRuntimeParams.myOriginalForward);\r\n        characterCollisionResults.myTransformResults.myStartTransformQuat.quat2_getUp(outCollisionRuntimeParams.myOriginalUp);\r\n\r\n        //ok: outCollisionRuntimeParams.myOriginalHeight = characterCollisionResults.myOriginalHeight;\r\n\r\n        outCollisionRuntimeParams.myOriginalMovement.vec3_copy(characterCollisionResults.myMovementResults.myStartMovement);\r\n        outCollisionRuntimeParams.myFixedMovement.vec3_copy(characterCollisionResults.myMovementResults.myEndMovement);\r\n\r\n        outCollisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantStartHorizontalMovement);\r\n        outCollisionRuntimeParams.myLastValidOriginalVerticalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantStartVerticalMovement);\r\n\r\n        outCollisionRuntimeParams.myLastValidEndHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantEndHorizontalMovement);\r\n        outCollisionRuntimeParams.myLastValidEndVerticalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantEndVerticalMovement);\r\n\r\n        outCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantAdjustedStartHorizontalMovement);\r\n        outCollisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantAdjustedStartVerticalMovement);\r\n\r\n        outCollisionRuntimeParams.myIsOnGround = characterCollisionResults.myGroundInfo.myIsOnSurface;\r\n        outCollisionRuntimeParams.myGroundAngle = characterCollisionResults.myGroundInfo.mySurfaceAngle;\r\n        outCollisionRuntimeParams.myGroundPerceivedAngle = characterCollisionResults.myGroundInfo.mySurfacePerceivedAngle;\r\n        outCollisionRuntimeParams.myGroundNormal.vec3_copy(characterCollisionResults.myGroundInfo.mySurfaceNormal);\r\n        outCollisionRuntimeParams.myGroundHitMaxAngle = characterCollisionResults.myGroundInfo.mySurfaceHitMaxAngle;\r\n        outCollisionRuntimeParams.myGroundHitMaxNormal.vec3_copy(characterCollisionResults.myGroundInfo.mySurfaceHitMaxNormal);\r\n        outCollisionRuntimeParams.myGroundDistance = characterCollisionResults.myGroundInfo.mySurfaceDistance;\r\n        outCollisionRuntimeParams.myGroundIsBaseInsideCollision = characterCollisionResults.myGroundInfo.myIsBaseInsideCollision;\r\n\r\n        outCollisionRuntimeParams.myIsOnCeiling = characterCollisionResults.myCeilingInfo.myIsOnSurface;\r\n        outCollisionRuntimeParams.myCeilingAngle = characterCollisionResults.myCeilingInfo.mySurfaceAngle;\r\n        outCollisionRuntimeParams.myCeilingPerceivedAngle = characterCollisionResults.myCeilingInfo.mySurfacePerceivedAngle;\r\n        outCollisionRuntimeParams.myCeilingNormal.vec3_copy(characterCollisionResults.myCeilingInfo.mySurfaceNormal);\r\n        outCollisionRuntimeParams.myCeilingHitMaxAngle = characterCollisionResults.myCeilingInfo.mySurfaceHitMaxAngle;\r\n        outCollisionRuntimeParams.myCeilingHitMaxNormal.vec3_copy(characterCollisionResults.myCeilingInfo.mySurfaceHitMaxNormal);\r\n        outCollisionRuntimeParams.myCeilingDistance = characterCollisionResults.myCeilingInfo.mySurfaceDistance;\r\n        outCollisionRuntimeParams.myCeilingIsBaseInsideCollision = characterCollisionResults.myCeilingInfo.myIsBaseInsideCollision;\r\n\r\n        outCollisionRuntimeParams.myHorizontalMovementCanceled = characterCollisionResults.myHorizontalMovementResults.myMovementFailed;\r\n        outCollisionRuntimeParams.myIsCollidingHorizontally = characterCollisionResults.myHorizontalMovementResults.myIsColliding;\r\n        outCollisionRuntimeParams.myHorizontalCollisionHit.copy(characterCollisionResults.myHorizontalMovementResults.myReferenceCollisionHit);\r\n\r\n        outCollisionRuntimeParams.myVerticalMovementCanceled = characterCollisionResults.myVerticalMovementResults.myMovementFailed;\r\n        outCollisionRuntimeParams.myIsCollidingVertically = characterCollisionResults.myVerticalMovementResults.myIsColliding;\r\n        outCollisionRuntimeParams.myVerticalCollisionHit.copy(characterCollisionResults.myVerticalMovementResults.myReferenceCollisionHit);\r\n\r\n        outCollisionRuntimeParams.myHasSnappedOnGround = characterCollisionResults.myGroundResults.myHasSnappedOnSurface;\r\n        outCollisionRuntimeParams.myHasSnappedOnCeiling = characterCollisionResults.myCeilingResults.myHasSnappedOnSurface;\r\n        outCollisionRuntimeParams.myHasPoppedOutGround = characterCollisionResults.myGroundResults.myHasPoppedOutSurface;\r\n        outCollisionRuntimeParams.myHasPoppedOutCeiling = characterCollisionResults.myCeilingResults.myHasPoppedOutSurface;\r\n\r\n        outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = characterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n        outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = characterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n        outCollisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = characterCollisionResults.myGroundResults.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n\r\n        outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = characterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n        outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = characterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n        outCollisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = characterCollisionResults.myCeilingResults.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n\r\n        //ok: outCollisionRuntimeParams.myHasReducedVerticalMovement = characterCollisionResults.myVerticalMovementResults.myHasMovementBeenReduced;\r\n\r\n        outCollisionRuntimeParams.myIsSliding = characterCollisionResults.myWallSlideResults.myHasSlid;\r\n        outCollisionRuntimeParams.mySlidingMovementAngle = characterCollisionResults.myWallSlideResults.mySlideMovementAngle;\r\n        outCollisionRuntimeParams.mySlidingCollisionAngle = characterCollisionResults.myWallSlideResults.mySlideMovementWallAngle;\r\n        outCollisionRuntimeParams.mySlidingWallNormal.vec3_copy(characterCollisionResults.myWallSlideResults.myWallNormal);\r\n\r\n        outCollisionRuntimeParams.myIsSlidingIntoOppositeDirection = characterCollisionResults.myInternalResults.myHasWallSlidTowardOppositeDirection;\r\n        outCollisionRuntimeParams.myIsSlidingFlickerPrevented = characterCollisionResults.myInternalResults.myLastRelevantWallSlideFlickerPrevented;\r\n        outCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter = characterCollisionResults.myInternalResults.myWallSlideFlickerPreventionForceCheckCounter;\r\n        outCollisionRuntimeParams.mySliding90DegreesSign = characterCollisionResults.myInternalResults.myWallSlide90DegreesDirectionSign;\r\n        outCollisionRuntimeParams.mySlidingRecompute90DegreesSign = characterCollisionResults.myInternalResults.myWallSlide90DegreesRecomputeDirectionSign;\r\n        outCollisionRuntimeParams.myLastValidIsSliding = characterCollisionResults.myInternalResults.myLastRelevantHasWallSlid;\r\n        outCollisionRuntimeParams.mySlidingPreviousHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantEndHorizontalMovement);\r\n\r\n        outCollisionRuntimeParams.myOriginalTeleportPosition.vec3_copy(characterCollisionResults.myTeleportResults.myStartTeleportTransformQuat);\r\n        outCollisionRuntimeParams.myFixedTeleportPosition.vec3_copy(characterCollisionResults.myTeleportResults.myEndTeleportTransformQuat);\r\n        outCollisionRuntimeParams.myTeleportCanceled = characterCollisionResults.myTeleportResults.myTeleportFailed;\r\n\r\n        outCollisionRuntimeParams.myIsPositionOk = characterCollisionResults.myCheckTransformResults.myCheckTransformFailed;\r\n        characterCollisionResults.myCheckTransformResults.myStartCheckTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myOriginalPositionCheckPosition);\r\n        characterCollisionResults.myCheckTransformResults.myEndCheckTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myFixedPositionCheckPosition);\r\n\r\n        outCollisionRuntimeParams.myIsTeleport = characterCollisionResults.myCheckType == PP.CharacterCollisionCheckType.CHECK_TELEPORT;\r\n        outCollisionRuntimeParams.myIsMove = characterCollisionResults.myCheckType == PP.CharacterCollisionCheckType.CHECK_MOVEMENT;\r\n        outCollisionRuntimeParams.myIsPositionCheck = characterCollisionResults.myCheckType == PP.CharacterCollisionCheckType.CHECK_TRANSFORM;\r\n\r\n        outCollisionRuntimeParams.mySplitMovementSteps = characterCollisionResults.mySplitMovementResults.myStepsToPerform;\r\n        outCollisionRuntimeParams.mySplitMovementStepsPerformed = characterCollisionResults.mySplitMovementResults.myStepsPerformed;\r\n        outCollisionRuntimeParams.mySplitMovementStop = characterCollisionResults.mySplitMovementResults.myMovementInterrupted;\r\n        outCollisionRuntimeParams.mySplitMovementMovementChecked.vec3_copy(characterCollisionResults.mySplitMovementResults.myMovementChecked);\r\n\r\n        return outCollisionRuntimeParams;\r\n    },\r\n    convertCollisionRuntimeParamsToCharacterCollisionResults: function () {\r\n        let rotationQuat = PP.quat_create();\r\n        return function convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults) {\r\n            outCharacterCollisionResults.reset();\r\n\r\n            if (collisionRuntimeParams.myIsMove) {\r\n                outCharacterCollisionResults.myCheckType = PP.CharacterCollisionCheckType.CHECK_MOVEMENT;\r\n            } else if (collisionRuntimeParams.myIsTeleport) {\r\n                outCharacterCollisionResults.myCheckType = PP.CharacterCollisionCheckType.CHECK_TELEPORT;\r\n            } else if (collisionRuntimeParams.myIsPositionCheck) {\r\n                outCharacterCollisionResults.myCheckType = PP.CharacterCollisionCheckType.CHECK_TRANSFORM;\r\n            }\r\n\r\n            rotationQuat.quat_setForward(collisionRuntimeParams.myOriginalForward, collisionRuntimeParams.myOriginalUp);\r\n            outCharacterCollisionResults.myTransformResults.myStartTransformQuat.quat2_setPositionRotationQuat(collisionRuntimeParams.myOriginalPosition, rotationQuat);\r\n            outCharacterCollisionResults.myTransformResults.myEndTransformQuat.quat2_setPositionRotationQuat(collisionRuntimeParams.myNewPosition, rotationQuat);\r\n\r\n            outCharacterCollisionResults.myMovementResults.myStartMovement.vec3_copy(collisionRuntimeParams.myOriginalMovement);\r\n            outCharacterCollisionResults.myMovementResults.myEndMovement.vec3_copy(collisionRuntimeParams.myFixedMovement);\r\n            outCharacterCollisionResults.myMovementResults.myMovementFailed = collisionRuntimeParams.myHorizontalMovementCanceled && collisionRuntimeParams.myVerticalMovementCanceled;\r\n            outCharacterCollisionResults.myMovementResults.myIsColliding = collisionRuntimeParams.myIsCollidingHorizontally || collisionRuntimeParams.myIsCollidingVertically;\r\n            if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                outCharacterCollisionResults.myMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n            } else if (collisionRuntimeParams.myIsCollidingVertically) {\r\n                outCharacterCollisionResults.myMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myVerticalCollisionHit);\r\n            }\r\n\r\n            outCharacterCollisionResults.myHorizontalMovementResults.myMovementFailed = collisionRuntimeParams.myHorizontalMovementCanceled;\r\n            outCharacterCollisionResults.myHorizontalMovementResults.myIsColliding = collisionRuntimeParams.myIsCollidingHorizontally;\r\n            outCharacterCollisionResults.myHorizontalMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n\r\n            outCharacterCollisionResults.myVerticalMovementResults.myMovementFailed = collisionRuntimeParams.myVerticalMovementCanceled;\r\n            outCharacterCollisionResults.myVerticalMovementResults.myIsColliding = collisionRuntimeParams.myIsCollidingVertically;\r\n            outCharacterCollisionResults.myVerticalMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myVerticalCollisionHit);\r\n\r\n            outCharacterCollisionResults.myTeleportResults.myStartTeleportTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myStartTransformQuat);\r\n            outCharacterCollisionResults.myTeleportResults.myStartTeleportTransformQuat.quat2_setPosition(collisionRuntimeParams.myOriginalTeleportPosition);\r\n            outCharacterCollisionResults.myTeleportResults.myEndTeleportTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myEndTransformQuat);\r\n            outCharacterCollisionResults.myTeleportResults.myEndTeleportTransformQuat.quat2_setPosition(collisionRuntimeParams.myFixedTeleportPosition);\r\n            outCharacterCollisionResults.myTeleportResults.myTeleportFailed = collisionRuntimeParams.myTeleportCanceled;\r\n\r\n            outCharacterCollisionResults.myCheckTransformResults.myStartCheckTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myStartTransformQuat);\r\n            outCharacterCollisionResults.myCheckTransformResults.myStartCheckTransformQuat.quat2_setPosition(collisionRuntimeParams.myOriginalPositionCheckPosition);\r\n            outCharacterCollisionResults.myCheckTransformResults.myEndCheckTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myEndTransformQuat);\r\n            outCharacterCollisionResults.myCheckTransformResults.myEndCheckTransformQuat.quat2_setPosition(collisionRuntimeParams.myFixedPositionCheckPosition);\r\n            outCharacterCollisionResults.myCheckTransformResults.myCheckTransformFailed = !collisionRuntimeParams.myIsPositionOk;\r\n\r\n            outCharacterCollisionResults.myWallSlideResults.myHasSlid = collisionRuntimeParams.myIsSliding;\r\n            outCharacterCollisionResults.myWallSlideResults.mySlideMovementAngle = collisionRuntimeParams.mySlidingMovementAngle;\r\n            outCharacterCollisionResults.myWallSlideResults.mySlideMovementWallAngle = collisionRuntimeParams.mySlidingCollisionAngle;\r\n            outCharacterCollisionResults.myWallSlideResults.myWallNormal.vec3_copy(ollisionRuntimeParams.mySlidingWallNormal);\r\n\r\n            outCharacterCollisionResults.myGroundInfo.myIsOnSurface = collisionRuntimeParams.myIsOnGround;\r\n            outCharacterCollisionResults.myGroundInfo.mySurfaceAngle = collisionRuntimeParams.myGroundAngle;\r\n            outCharacterCollisionResults.myGroundInfo.mySurfacePerceivedAngle = collisionRuntimeParams.myGroundPerceivedAngle;\r\n            outCharacterCollisionResults.myGroundInfo.mySurfaceNormal.vec3_copy(collisionRuntimeParams.myGroundNormal);\r\n            outCharacterCollisionResults.myGroundInfo.mySurfaceHitMaxAngle = collisionRuntimeParams.myGroundHitMaxAngle;\r\n            outCharacterCollisionResults.myGroundInfo.mySurfaceHitMaxNormal.vec3_copy(collisionRuntimeParams.myGroundHitMaxNormal);\r\n            outCharacterCollisionResults.myGroundInfo.mySurfaceDistance = collisionRuntimeParams.myGroundDistance;\r\n            outCharacterCollisionResults.myGroundInfo.myIsBaseInsideCollision = collisionRuntimeParams.myGroundIsBaseInsideCollision;\r\n\r\n            outCharacterCollisionResults.myCeilingInfo.myIsOnSurface = collisionRuntimeParams.myIsOnCeiling;\r\n            outCharacterCollisionResults.myCeilingInfo.mySurfaceAngle = collisionRuntimeParams.myCeilingAngle;\r\n            outCharacterCollisionResults.myCeilingInfo.mySurfacePerceivedAngle = collisionRuntimeParams.myCeilingPerceivedAngle;\r\n            outCharacterCollisionResults.myCeilingInfo.mySurfaceNormal.vec3_copy(collisionRuntimeParams.myCeilingNormal);\r\n            outCharacterCollisionResults.myCeilingInfo.mySurfaceHitMaxAngle = collisionRuntimeParams.myCeilingHitMaxAngle;\r\n            outCharacterCollisionResults.myCeilingInfo.mySurfaceHitMaxNormal.vec3_copy(collisionRuntimeParams.myCeilingHitMaxNormal);\r\n            outCharacterCollisionResults.myCeilingInfo.mySurfaceDistance = collisionRuntimeParams.myCeilingDistance;\r\n            outCharacterCollisionResults.myCeilingInfo.myIsBaseInsideCollision = collisionRuntimeParams.myCeilingIsBaseInsideCollision;\r\n\r\n            outCharacterCollisionResults.myGroundResults.myHasSnappedOnSurface = collisionRuntimeParams.myHasSnappedOnGround;\r\n            outCharacterCollisionResults.myGroundResults.myHasPoppedOutSurface = collisionRuntimeParams.myHasPoppedOutGround;\r\n            outCharacterCollisionResults.myCeilingResults.myHasSnappedOnSurface = collisionRuntimeParams.myHasSnappedOnCeiling;\r\n            outCharacterCollisionResults.myCeilingResults.myHasPoppedOutSurface = collisionRuntimeParams.myHasPoppedOutCeiling;\r\n\r\n            outCharacterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill;\r\n            outCharacterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill;\r\n            outCharacterCollisionResults.myGroundResults.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill;\r\n\r\n            outCharacterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill;\r\n            outCharacterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill;\r\n            outCharacterCollisionResults.myCeilingResults.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill;\r\n\r\n            outCharacterCollisionResults.mySplitMovementResults.myStepsToPerform = collisionRuntimeParams.mySplitMovementSteps;\r\n            outCharacterCollisionResults.mySplitMovementResults.myStepsPerformed = collisionRuntimeParams.mySplitMovementStepsPerformed;\r\n            outCharacterCollisionResults.mySplitMovementResults.myMovementInterrupted = collisionRuntimeParams.mySplitMovementStop;\r\n            outCharacterCollisionResults.mySplitMovementResults.myMovementChecked.vec3_copy(collisionRuntimeParams.mySplitMovementMovementChecked);\r\n\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantStartHorizontalMovement.vec3_copy(collisionRuntimeParams.myLastValidOriginalHorizontalMovement);\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantEndHorizontalMovement.vec3_copy(collisionRuntimeParams.myLastValidEndHorizontalMovement);\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantStartVerticalMovement.vec3_copy(collisionRuntimeParams.myLastValidOriginalVerticalMovement);\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantEndVerticalMovement.vec3_copy(collisionRuntimeParams.myLastValidEndVerticalMovement);\r\n\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantAdjustedStartHorizontalMovement.vec3_copy(collisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement);\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantAdjustedStartVerticalMovement.vec3_copy(collisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement);\r\n\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantHasWallSlid = collisionRuntimeParams.myLastValidIsSliding;\r\n            outCharacterCollisionResults.myInternalResults.myHasWallSlidTowardOppositeDirection = collisionRuntimeParams.myIsSlidingIntoOppositeDirection;\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantWallSlideFlickerPrevented = collisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n            outCharacterCollisionResults.myInternalResults.myWallSlideFlickerPreventionForceCheckCounter = collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter;\r\n            outCharacterCollisionResults.myInternalResults.myWallSlide90DegreesDirectionSign = collisionRuntimeParams.mySliding90DegreesSign;\r\n            outCharacterCollisionResults.myInternalResults.myWallSlide90DegreesRecomputeDirectionSign = collisionRuntimeParams.mySlidingRecompute90DegreesSign;\r\n\r\n            outCharacterCollisionResults.myTransformResults.myStartTransformQuat.quat2_copy(currentTransformQuat);\r\n\r\n            return outCharacterCollisionResults;\r\n        }\r\n    }(),\r\n\r\n    convertCharacterColliderSetupToCollisionCheckParams: function () {\r\n        return function convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, outCollisionCheckParams) {\r\n            outCollisionCheckParams.myHeight = characterColliderSetup.myHeight;\r\n\r\n            outCollisionCheckParams.myRadius = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeRadius;\r\n            outCollisionCheckParams.myDistanceFromFeetToIgnore = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFeetDistanceToIgnore;\r\n            outCollisionCheckParams.myDistanceFromHeadToIgnore = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckHeadDistanceToIgnore;\r\n\r\n            outCollisionCheckParams.myHorizontalMovementCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckEnabled;\r\n\r\n            outCollisionCheckParams.myHorizontalMovementStepEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckSplitMovementEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementStepMaxLength = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckSplitMovementMaxStepLength;\r\n\r\n            outCollisionCheckParams.myHorizontalMovementRadialStepAmount = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckRadialSteps;\r\n\r\n            outCollisionCheckParams.myHorizontalMovementCheckDiagonalOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckDiagonalInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckStraight = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckHorizontalBorder = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalRadialCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalStraight = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalUpward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalDownward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled;\r\n\r\n            outCollisionCheckParams.myHorizontalMovementHorizontalStraightCentralCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCentralCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementVerticalStraightCentralCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightCentralCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled;\r\n\r\n            outCollisionCheckParams.myHorizontalPositionCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckEnabled;\r\n\r\n            outCollisionCheckParams.myHalfConeAngle = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle;\r\n            outCollisionCheckParams.myHalfConeSliceAmount = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices;\r\n            outCollisionCheckParams.myCheckConeBorder = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHorizontalBorderCheckEnabled;\r\n            outCollisionCheckParams.myCheckConeRay = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHorizontalRadialCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision;\r\n            outCollisionCheckParams.myHorizontalPositionCheckVerticalDirectionType = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckDirection;\r\n\r\n            outCollisionCheckParams.myCheckHeight = characterColliderSetup.myHorizontalCheckSetup.myHorizontalHeightCheckEnabled;\r\n\r\n            outCollisionCheckParams.myCheckHeightVerticalMovement = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightVerticalCheckEnabled;\r\n            outCollisionCheckParams.myCheckHeightVerticalPosition = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightVerticalCheckEnabled;\r\n            outCollisionCheckParams.myCheckHeightTopMovement = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightHorizontalCheckEnabled;\r\n            outCollisionCheckParams.myCheckHeightTopPosition = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightHorizontalCheckEnabled;\r\n            outCollisionCheckParams.myCheckHeightConeOnCollision = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit;\r\n            outCollisionCheckParams.myCheckHeightConeOnCollisionKeepHit = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit;\r\n\r\n            outCollisionCheckParams.myHeightCheckStepAmountMovement = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightCheckSteps;\r\n            outCollisionCheckParams.myHeightCheckStepAmountPosition = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightCheckSteps;\r\n            outCollisionCheckParams.myCheckVerticalStraight = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalStraightCheckEnabled;\r\n            outCollisionCheckParams.myCheckVerticalDiagonalRayOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled;\r\n            outCollisionCheckParams.myCheckVerticalDiagonalRayInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled;\r\n            outCollisionCheckParams.myCheckVerticalDiagonalBorderOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled;\r\n            outCollisionCheckParams.myCheckVerticalDiagonalBorderInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled;\r\n            outCollisionCheckParams.myCheckVerticalDiagonalBorderRayOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled;\r\n            outCollisionCheckParams.myCheckVerticalDiagonalBorderRayInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled;\r\n            outCollisionCheckParams.myCheckVerticalSearchFartherVerticalHit = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckGetFarthestHit;\r\n\r\n            outCollisionCheckParams.myCheckHorizontalFixedForwardEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFixedForwardEnabled;\r\n            outCollisionCheckParams.myCheckHorizontalFixedForward.vec3_copy(characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFixedForward);\r\n\r\n            outCollisionCheckParams.myVerticalMovementCheckEnabled = characterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckEnabled;\r\n            outCollisionCheckParams.myVerticalPositionCheckEnabled = characterColliderSetup.myVerticalCheckSetup.myVerticalPositionCheckEnabled;\r\n            outCollisionCheckParams.myFeetRadius = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadius;\r\n\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhill = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphill = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle;\r\n            outCollisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhill = characterColliderSetup.myGroundSetup.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n            outCollisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = characterColliderSetup.myGroundSetup.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle;\r\n\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhill = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphill = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxPerceivedAngle = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxPerceivedAngle = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle;\r\n            outCollisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhill = characterColliderSetup.myCeilingSetup.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n            outCollisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle = characterColliderSetup.myCeilingSetup.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle;\r\n\r\n            outCollisionCheckParams.myCheckVerticalFixedForwardEnabled = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckFixedForwardEnabled;\r\n            outCollisionCheckParams.myCheckVerticalFixedForward.vec3_copy(characterColliderSetup.myVerticalCheckSetup.myVerticalCheckFixedForward);\r\n            outCollisionCheckParams.myCheckVerticalBothDirection = characterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckPerformCheckOnBothSides;\r\n\r\n            outCollisionCheckParams.myVerticalMovementReduceEnabled = characterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckReductionEnabled;\r\n\r\n            outCollisionCheckParams.myGroundCircumferenceAddCenter = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceCentralCheckEnabled;\r\n            outCollisionCheckParams.myGroundCircumferenceSliceAmount = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices;\r\n            outCollisionCheckParams.myGroundCircumferenceStepAmount = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps;\r\n            outCollisionCheckParams.myGroundCircumferenceRotationPerStep = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRotationPerRadialStep;\r\n            outCollisionCheckParams.myVerticalAllowHitInsideCollisionIfOneOk = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckAllowHitsInsideCollisionIfOneValid;\r\n\r\n            outCollisionCheckParams.myHorizontalBlockLayerFlags.copy(characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckBlockLayerFlags);\r\n            outCollisionCheckParams.myVerticalBlockLayerFlags.copy(characterColliderSetup.myVerticalCheckSetup.myVerticalCheckBlockLayerFlags);\r\n            outCollisionCheckParams.myHorizontalObjectsToIgnore.pp_copy(characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckObjectsToIgnore);\r\n            outCollisionCheckParams.myVerticalObjectsToIgnore.pp_copy(characterColliderSetup.myVerticalCheckSetup.myVerticalCheckObjectsToIgnore);\r\n\r\n            outCollisionCheckParams.mySnapOnGroundEnabled = characterColliderSetup.myGroundSetup.mySurfaceSnapEnabled;\r\n            outCollisionCheckParams.mySnapOnGroundExtraDistance = characterColliderSetup.myGroundSetup.mySurfaceSnapMaxDistance;\r\n            outCollisionCheckParams.mySnapOnCeilingEnabled = characterColliderSetup.myCeilingSetup.mySurfaceSnapEnabled;\r\n            outCollisionCheckParams.mySnapOnCeilingExtraDistance = characterColliderSetup.myCeilingSetup.mySurfaceSnapMaxDistance;\r\n\r\n            outCollisionCheckParams.myGroundPopOutEnabled = characterColliderSetup.myGroundSetup.mySurfacePopOutEnabled;\r\n            outCollisionCheckParams.myGroundPopOutExtraDistance = characterColliderSetup.myGroundSetup.mySurfacePopOutMaxDistance;\r\n            outCollisionCheckParams.myCeilingPopOutEnabled = characterColliderSetup.myCeilingSetup.mySurfacePopOutEnabled;\r\n            outCollisionCheckParams.myCeilingPopOutExtraDistance = characterColliderSetup.myCeilingSetup.mySurfacePopOutMaxDistance;\r\n\r\n            outCollisionCheckParams.myGroundAngleToIgnore = characterColliderSetup.myGroundSetup.mySurfaceAngleToIgnore;\r\n            outCollisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle = characterColliderSetup.myGroundSetup.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle;\r\n            outCollisionCheckParams.myCeilingAngleToIgnore = characterColliderSetup.myCeilingSetup.mySurfaceAngleToIgnore;\r\n            outCollisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle = characterColliderSetup.myCeilingSetup.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle;\r\n\r\n            outCollisionCheckParams.myHorizontalMovementGroundAngleIgnoreHeight = characterColliderSetup.myGroundSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance;\r\n            outCollisionCheckParams.myHorizontalMovementCeilingAngleIgnoreHeight = characterColliderSetup.myCeilingSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance;\r\n            outCollisionCheckParams.myHorizontalPositionGroundAngleIgnoreHeight = characterColliderSetup.myGroundSetup.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance;\r\n            outCollisionCheckParams.myHorizontalPositionCeilingAngleIgnoreHeight = characterColliderSetup.myCeilingSetup.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance;\r\n\r\n            outCollisionCheckParams.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = characterColliderSetup.myGroundSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n            outCollisionCheckParams.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft = characterColliderSetup.myCeilingSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n\r\n            outCollisionCheckParams.myComputeGroundInfoEnabled = characterColliderSetup.myGroundSetup.myCollectSurfaceInfo;\r\n            outCollisionCheckParams.myComputeCeilingInfoEnabled = characterColliderSetup.myCeilingSetup.myCollectSurfaceInfo;\r\n            outCollisionCheckParams.myDistanceToBeOnGround = characterColliderSetup.myGroundSetup.myIsOnSurfaceMaxOutsideDistance;\r\n            outCollisionCheckParams.myDistanceToComputeGroundInfo = characterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxOutsideDistance;\r\n            outCollisionCheckParams.myDistanceToBeOnCeiling = characterColliderSetup.myCeilingSetup.myIsOnSurfaceMaxOutsideDistance;\r\n            outCollisionCheckParams.myDistanceToComputeCeilingInfo = characterColliderSetup.myCeilingSetup.myCollectSurfaceNormalMaxOutsideDistance;\r\n            outCollisionCheckParams.myVerticalFixToBeOnGround = characterColliderSetup.myGroundSetup.myIsOnSurfaceMaxInsideDistance;\r\n            outCollisionCheckParams.myVerticalFixToComputeGroundInfo = characterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxInsideDistance;\r\n            outCollisionCheckParams.myVerticalFixToBeOnCeiling = characterColliderSetup.myCeilingSetup.myIsOnSurfaceMaxInsideDistance;\r\n            outCollisionCheckParams.myVerticalFixToComputeCeilingInfo = characterColliderSetup.myCeilingSetup.myCollectSurfaceNormalMaxInsideDistance;\r\n\r\n            outCollisionCheckParams.myGroundIsBaseInsideCollisionCheckEnabled = characterColliderSetup.myGroundSetup.myIsBaseInsideCollisionCheckEnabled;\r\n            outCollisionCheckParams.myCeilingIsBaseInsideCollisionCheckEnabled = characterColliderSetup.myCeilingSetup.myIsBaseInsideCollisionCheckEnabled;\r\n            outCollisionCheckParams.myIsOnGroundIfInsideHit = characterColliderSetup.myGroundSetup.myIsOnSurfaceIfBaseInsideCollision;\r\n            outCollisionCheckParams.myIsOnCeilingIfInsideHit = characterColliderSetup.myCeilingSetup.myIsOnSurfaceIfBaseInsideCollision;\r\n\r\n            outCollisionCheckParams.myFindGroundDistanceMaxOutsideDistance = characterColliderSetup.myGroundSetup.myFindSurfaceDistanceMaxOutsideDistance;\r\n            outCollisionCheckParams.myFindGroundDistanceMaxInsideDistance = characterColliderSetup.myGroundSetup.myFindSurfaceDistanceMaxInsideDistance;\r\n            outCollisionCheckParams.myFindCeilingDistanceMaxOutsideDistance = characterColliderSetup.myCeilingSetup.myFindSurfaceDistanceMaxOutsideDistance;\r\n            outCollisionCheckParams.myFindCeilingDistanceMaxInsideDistance = characterColliderSetup.myCeilingSetup.myFindSurfaceDistanceMaxInsideDistance;\r\n\r\n            outCollisionCheckParams.myAllowGroundSteepFix = characterColliderSetup.myGroundSetup.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle;\r\n            outCollisionCheckParams.myAllowCeilingSteepFix = characterColliderSetup.myCeilingSetup.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle;\r\n\r\n            outCollisionCheckParams.myMustStayOnGround = characterColliderSetup.myGroundSetup.myMovementMustStayOnSurface;\r\n            outCollisionCheckParams.myMustStayOnCeiling = characterColliderSetup.myCeilingSetup.myMovementMustStayOnSurface;\r\n            outCollisionCheckParams.myRegatherGroundInfoOnSurfaceCheckFail = characterColliderSetup.myGroundSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n            outCollisionCheckParams.myRegatherCeilingInfoOnSurfaceCheckFail = characterColliderSetup.myCeilingSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n            outCollisionCheckParams.myMustStayBelowIgnorableGroundAngleDownhill = characterColliderSetup.myGroundSetup.myMovementMustStayOnIgnorableSurfaceAngleDownhill;\r\n            outCollisionCheckParams.myMustStayBelowIgnorableCeilingAngleDownhill = characterColliderSetup.myCeilingSetup.myMovementMustStayOnIgnorableSurfaceAngleDownhill;\r\n            outCollisionCheckParams.myMustStayBelowGroundAngleDownhill = characterColliderSetup.myGroundSetup.myMovementMustStayOnSurfaceAngleDownhill;\r\n            outCollisionCheckParams.myMustStayBelowCeilingAngleDownhill = characterColliderSetup.myCeilingSetup.myMovementMustStayOnSurfaceAngleDownhill;\r\n            outCollisionCheckParams.myMovementMustStayOnGroundHitAngle = characterColliderSetup.myGroundSetup.myMovementMustStayOnSurfaceHitMaxAngle;\r\n            outCollisionCheckParams.myMovementMustStayOnCeilingHitAngle = characterColliderSetup.myCeilingSetup.myMovementMustStayOnSurfaceHitMaxAngle;\r\n\r\n            outCollisionCheckParams.myTeleportMustBeOnIgnorableGroundAngle = characterColliderSetup.myGroundSetup.myTeleportMustBeOnIgnorableSurfaceAngle;\r\n            outCollisionCheckParams.myCheckTransformMustBeOnIgnorableGroundAngle = characterColliderSetup.myGroundSetup.myCheckTransformMustBeOnIgnorableSurfaceAngle;\r\n            outCollisionCheckParams.myTeleportMustBeOnIgnorableCeilingAngle = characterColliderSetup.myCeilingSetup.myTeleportMustBeOnIgnorableSurfaceAngle;\r\n            outCollisionCheckParams.myCheckTransformMustBeOnIgnorableCeilingAngle = characterColliderSetup.myCeilingSetup.myCheckTransformMustBeOnIgnorableSurfaceAngle;\r\n\r\n            outCollisionCheckParams.myTeleportMustBeOnGroundAngle = characterColliderSetup.myGroundSetup.myTeleportMustBeOnSurfaceAngle;\r\n            outCollisionCheckParams.myCheckTransformMustBeOnGroundAngle = characterColliderSetup.myGroundSetup.myCheckTransformMustBeOnSurfaceAngle;\r\n            outCollisionCheckParams.myTeleportMustBeOnCeilingAngle = characterColliderSetup.myCeilingSetup.myTeleportMustBeOnSurfaceAngle;\r\n            outCollisionCheckParams.myCheckTransformMustBeOnCeilingAngle = characterColliderSetup.myCeilingSetup.myCheckTransformMustBeOnSurfaceAngle;\r\n\r\n            outCollisionCheckParams.myTeleportMustBeOnGround = characterColliderSetup.myGroundSetup.myTeleportMustBeOnSurface;\r\n            outCollisionCheckParams.myCheckTransformMustBeOnGround = characterColliderSetup.myGroundSetup.myCheckTransformMustBeOnSurface;\r\n            outCollisionCheckParams.myTeleportMustBeOnCeiling = characterColliderSetup.myCeilingSetup.myTeleportMustBeOnSurface;\r\n            outCollisionCheckParams.myCheckTransformMustBeOnCeiling = characterColliderSetup.myCeilingSetup.myCheckTransformMustBeOnSurface;\r\n\r\n            outCollisionCheckParams.mySlidingEnabled = characterColliderSetup.myWallSlideSetup.myWallSlideEnabled;\r\n            outCollisionCheckParams.mySlidingHorizontalMovementCheckBetterNormal = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckGetBetterReferenceHit;\r\n            outCollisionCheckParams.mySlidingMaxAttempts = characterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts;\r\n            outCollisionCheckParams.mySlidingCheckBothDirections = characterColliderSetup.myWallSlideSetup.myCheckBothWallSlideDirections;\r\n            outCollisionCheckParams.mySlidingFlickeringPreventionType = characterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionMode;\r\n            outCollisionCheckParams.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = characterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding;\r\n            outCollisionCheckParams.mySlidingFlickerPreventionCheckAnywayCounter = characterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionForceCheckCounter;\r\n            outCollisionCheckParams.mySlidingAdjustSign90Degrees = characterColliderSetup.myWallSlideSetup.my90DegreesWallSlideAdjustDirectionSign;\r\n\r\n            outCollisionCheckParams.mySplitMovementEnabled = characterColliderSetup.mySplitMovementSetup.mySplitMovementEnabled;\r\n            outCollisionCheckParams.mySplitMovementMaxLength = characterColliderSetup.mySplitMovementSetup.mySplitMovementMaxStepLength;\r\n            outCollisionCheckParams.mySplitMovementMaxStepsEnabled = characterColliderSetup.mySplitMovementSetup.mySplitMovementMaxSteps != null;\r\n            outCollisionCheckParams.mySplitMovementMaxSteps = characterColliderSetup.mySplitMovementSetup.mySplitMovementMaxSteps;\r\n            outCollisionCheckParams.mySplitMovementStepEqualLength = characterColliderSetup.mySplitMovementSetup.mySplitMovementMaxStepLength == null;\r\n            outCollisionCheckParams.mySplitMovementStepEqualLengthMinLength = characterColliderSetup.mySplitMovementSetup.mySplitMovementMinStepLength;\r\n            outCollisionCheckParams.mySplitMovementStopWhenHorizontalMovementCanceled = characterColliderSetup.mySplitMovementSetup.mySplitMovementStopOnHorizontalMovementFailed;\r\n            outCollisionCheckParams.mySplitMovementStopWhenVerticalMovementCanceled = characterColliderSetup.mySplitMovementSetup.mySplitMovementStopOnVerticalMovementFailed;\r\n            outCollisionCheckParams.mySplitMovementStopCallback = characterColliderSetup.mySplitMovementSetup.mySplitMovementStopOnCallback;\r\n            outCollisionCheckParams.mySplitMovementStopReturnPrevious = characterColliderSetup.mySplitMovementSetup.mySplitMovementStopReturnPreviousResults;\r\n\r\n            outCollisionCheckParams.myPositionOffsetLocal.vec3_copy(characterColliderSetup.myAdditionalSetup.myPositionOffsetLocal);\r\n            outCollisionCheckParams.myRotationOffsetLocalQuat.quat_copy(characterColliderSetup.myAdditionalSetup.myRotationOffsetLocalQuat);\r\n\r\n            outCollisionCheckParams.myDebugActive = characterColliderSetup.myDebugSetup.myVisualDebugActive;\r\n\r\n            outCollisionCheckParams.myDebugHorizontalMovementActive = characterColliderSetup.myDebugSetup.myVisualDebugHorizontalMovementCheckActive;\r\n            outCollisionCheckParams.myDebugHorizontalPositionActive = characterColliderSetup.myDebugSetup.myVisualDebugHorizontalPositionCheckActive;\r\n            outCollisionCheckParams.myDebugVerticalMovementActive = characterColliderSetup.myDebugSetup.myVisualDebugVerticalMovementCheckActive;\r\n            outCollisionCheckParams.myDebugVerticalPositionActive = characterColliderSetup.myDebugSetup.myVisualDebugVerticalPositionCheckActive;\r\n            outCollisionCheckParams.myDebugSlidingActive = characterColliderSetup.myDebugSetup.myVisualDebugSlideActive;\r\n\r\n            outCollisionCheckParams.myDebugGroundInfoActive = characterColliderSetup.myDebugSetup.myVisualDebugGroundInfoActive;\r\n            outCollisionCheckParams.myDebugCeilingInfoActive = characterColliderSetup.myDebugSetup.myVisualDebugGroundInfoActive;\r\n            outCollisionCheckParams.myDebugRuntimeParamsActive = characterColliderSetup.myDebugSetup.myVisualDebugResultsActive;\r\n            outCollisionCheckParams.myDebugMovementActive = characterColliderSetup.myDebugSetup.myVisualDebugMovementActive;\r\n\r\n            return outCollisionCheckParams;\r\n        }\r\n    }()\r\n};", "PP.CharacterColliderSetup = class CharacterColliderSetup {\r\n    constructor() {\r\n        this.myHeight = 0;\r\n\r\n        this.myHorizontalCheckSetup = new PP.CharacterColliderHorizontalCheckSetup();\r\n        this.myVerticalCheckSetup = new PP.CharacterColliderVerticalCheckSetup();\r\n\r\n        this.myWallSlideSetup = new PP.CharacterColliderWallSlideSetup();\r\n\r\n        this.myGroundSetup = new PP.CharacterColliderSurfaceSetup();\r\n        this.myCeilingSetup = new PP.CharacterColliderSurfaceSetup();\r\n\r\n        this.mySplitMovementSetup = new PP.CharacterColliderSplitMovementSetup();\r\n\r\n        this.myAdditionalSetup = new PP.CharacterColliderAdditionalSetup();\r\n\r\n        this.myDebugSetup = new PP.CharacterColliderDebugSetup();\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterColliderHorizontalPositionVerticalCheckDirection = {\r\n    UPWARD: 0,      // gives less issues with a ground based movement, but may also collide a bit more, resulting in less sliding\r\n    DOWNWARD: 1,    // gives less issues with a ceiling based movement (unusual), but may also collide a bit more, resulting in less sliding and more stuck in front of a wall\r\n    BOTH: 2         // check both directions, more expensive (2x checks) and better prevent collisions, sliding more, but is more expensive and gives more issues           \r\n\r\n    //                                                                                                                                                  _\r\n    // the issues means that a small step at the end of a slope, maybe due to 2 rectangles, one for the floor and the other for the slope like this -> /   \r\n    // can create a small step if the floor rectangle is a bit above the end of the slope, this will make the character get stuck thinking it's a wall\r\n    // BOTH do a more \"aggressive\" vertical check that makes the character get less stuck in other situations, but can get stuck in this one\r\n    // the better solution is to properly create the level, and if possible combine the 2 rectangles by having the floor a little below the end of the slope (like this -> /-)\r\n    // the step that is created \"on the other side\" in fact can easily be ignored thanks to the myHorizontalCheckFeetDistanceToIgnore param\r\n    // if the level is properly created the best solution should be UPWARD\r\n    // and also myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision = false\r\n}\r\n\r\nPP.CharacterColliderHorizontalCheckSetup = class CharacterColliderHorizontalCheckSetup {\r\n    constructor() {\r\n        this.myHorizontalCheckConeRadius = 0;\r\n        this.myHorizontalCheckConeHalfAngle = 0;\r\n\r\n        this.myHorizontalHeightCheckEnabled = false;\r\n\r\n        this.myHorizontalCheckFeetDistanceToIgnore = 0;\r\n        this.myHorizontalCheckHeadDistanceToIgnore = 0;\r\n        // these distances can be used to make the character ignore small steps (like a stair step) so they can move on it\r\n        // it also needs the surface pop out to be enabeld to then snap on the step\r\n\r\n        this.myHorizontalCheckFixedForwardEnabled = false; // this is basically only useful if the cone angle is 180 degrees\r\n        this.myHorizontalCheckFixedForward = PP.vec3_create();\r\n\r\n        this.myHorizontalMovementCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementCheckRadialSteps = 0;\r\n\r\n        this.myHorizontalMovementCheckSplitMovementEnabled = false;\r\n        this.myHorizontalMovementCheckSplitMovementMaxSteps = null;\r\n        this.myHorizontalMovementCheckSplitMovementMaxStepLength = null;\r\n        this.myHorizontalMovementCheckSplitMovementMinStepLength = null;\r\n\r\n        this.myHorizontalMovementCheckGetBetterReferenceHit = false;\r\n        // if the horizontal movement finds a hit it stops looking, but could end up having a bad reference collision hit\r\n        // this makes it so it will check a better hit to use later for the slide\r\n\r\n        this.myHorizontalMovementHorizontalRadialCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalStraightCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementHeightCheckSteps = 0;\r\n        this.myHorizontalMovementHeightHorizontalCheckEnabled = false;\r\n        this.myHorizontalMovementHeightVerticalCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementVerticalStraightCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionCheckEnabled = false;\r\n        this.myHorizontalPositionCheckConeHalfSlices = 0;\r\n        this.myHorizontalPositionHorizontalBorderCheckEnabled = false;\r\n        this.myHorizontalPositionHorizontalRadialCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionHeightCheckSteps = 0;\r\n        this.myHorizontalPositionHeightHorizontalCheckEnabled = false;\r\n        this.myHorizontalPositionHeightVerticalCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionVerticalStraightCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionVerticalCheckGetFarthestHit = false; // not very useful but already implemented so\r\n\r\n        this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = false;\r\n        this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = false;\r\n        // if the horizontal check does not hit the vertical hit will be restored\r\n        // the fact that the horizontal does not hit could be due to the fact that it thinks that the collision can be ignored\r\n        // so restoring the vertical hit can be a bit safer (since u are actually colliding) but also can lead to false positive\r\n\r\n        this.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision = false; // true gives less issues, but may also collide a bit more, resulting in less sliding\r\n        this.myHorizontalPositionVerticalCheckDirection = PP.CharacterColliderHorizontalPositionVerticalCheckDirection.UPWARD;\r\n\r\n        this.myHorizontalCheckBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myHorizontalCheckObjectsToIgnore = [];\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterColliderVerticalCheckSetup = class CharacterColliderVerticalCheckSetup {\r\n    constructor() {\r\n        this.myVerticalCheckCircumferenceRadius = 0;\r\n\r\n        this.myVerticalCheckCircumferenceSlices = 0;\r\n        this.myVerticalCheckCircumferenceCentralCheckEnabled = false;\r\n        this.myVerticalCheckCircumferenceRadialSteps = 0;\r\n        this.myVerticalCheckCircumferenceRotationPerRadialStep = 0;\r\n\r\n        this.myVerticalCheckFixedForwardEnabled = false;\r\n        this.myVerticalCheckFixedForward = PP.vec3_create();\r\n\r\n        this.myVerticalMovementCheckEnabled = false;\r\n        this.myVerticalMovementCheckReductionEnabled = false;\r\n        this.myVerticalMovementCheckPerformCheckOnBothSides = false;\r\n\r\n        this.myVerticalPositionCheckEnabled = false;\r\n\r\n        this.myVerticalCheckAllowHitsInsideCollisionIfOneValid = false;\r\n        // if at least one vertical raycast is valid (no hit, outside collision) is it ok if the other checks are completely inside a collision\r\n        // let you keep moving vertically if only partially inside a wall\r\n\r\n        this.myVerticalCheckBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myVerticalCheckObjectsToIgnore = [];\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterColliderSlideFlickerPreventionMode = {\r\n    NONE: 0,\r\n    USE_PREVIOUS_RESULTS: 1,                // allow some flicker before stabilizing but avoid stopping for a 1 frame flicker only (false positive), is also less expensive\r\n    COLLISION_ANGLE_ABOVE_90_DEGREES: 2,    // prevents most flicker apart those on almost flat surface, can have some false positive, always check when sliding into opposite direction\r\n    COLLISION_ANGLE_ABOVE_90_DEGREES_OR_MOVEMENT_ANGLE_ABOVE_85_DEGREES: 3, // less flicker than COLLISION_ANGLE_ABOVE_90_DEGREES but more false positive, always check when sliding into opposite direction\r\n    ALWAYS: 4,                              // less flicker than COLLISION_ANGLE_ABOVE_90_DEGREES_OR_MOVEMENT_ANGLE_ABOVE_85_DEGREES but more false positive\r\n};\r\n\r\nPP.CharacterColliderWallSlideSetup = class CharacterColliderWallSlideSetup {\r\n    constructor() {\r\n        this.myWallSlideEnabled = false;\r\n\r\n        this.myWallSlideMaxAttempts = 0;\r\n\r\n        this.myCheckBothWallSlideDirections = false;\r\n        // expensive, 2 times the checks since it basically check again on the other slide direction\r\n        // this can fix some edge cases in which u can get stuck instead of sliding\r\n        // it basically require that u also add flicker prevention\r\n\r\n        this.myWallSlideFlickerPreventionMode = PP.CharacterColliderSlideFlickerPreventionMode.NONE;\r\n\r\n        this.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = false;\r\n        // this flag make it so the prevention is done only if it was already sliding\r\n        // this can lead to a few frames of flicker if u go toward a corner directly, but allow the movement to be more fluid, avoiding getting stuck and false positive\r\n\r\n        this.myWallSlideFlickerPreventionForceCheckCounter = 0;\r\n        // if the collision think it needs to check for flicker, it will keep checking for the next X frames based on this value even if the condition are not met anymore\r\n        // this help in catching the flicker when the direction is not changing every frame but every 2-3 for example\r\n        // it's especially useful if combo-ed with CharacterColliderSlideFlickerPreventionMode.USE_PREVIOUS_RESULTS, making it a bit less fluid but also less flickering\r\n\r\n        this.my90DegreesWallSlideAdjustDirectionSign = false;\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterColliderSurfaceSetup = class CharacterColliderSurfaceSetup {\r\n    constructor() {\r\n        this.mySurfaceSnapEnabled = false;\r\n        this.mySurfaceSnapMaxDistance = 0;\r\n\r\n        this.mySurfacePopOutEnabled = false;\r\n        this.mySurfacePopOutMaxDistance = 0;\r\n\r\n        this.mySurfaceAngleToIgnore = 0;\r\n\r\n        this.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle = null;\r\n        // between this value and mySurfaceAngleToIgnore, use the perceived angle to see if u can actually ignore the surface\r\n        // this basically means that on steep surface u could still go up by moving diagonally\r\n\r\n        this.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance = null;\r\n        this.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance = null;\r\n        // if the collision with the surface is above this max value, even if the surface angle is ignorable do not ignore it\r\n\r\n        this.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = null;\r\n        // if the collision with the surface happens during the horizontal movement check, if the horizontal movement left (total movement to perform minus hit distance)\r\n        // is above this value do not ignore it otherwise you would ignore a surface but are actually going too much inside it\r\n\r\n        this.myCollectSurfaceInfo = false;\r\n\r\n        this.myIsOnSurfaceMaxOutsideDistance = 0;\r\n        this.myIsOnSurfaceMaxInsideDistance = 0;\r\n\r\n        this.myIsBaseInsideCollisionCheckEnabled = false;\r\n        this.myIsOnSurfaceIfBaseInsideCollision = false;\r\n\r\n        this.myCollectSurfaceNormalMaxOutsideDistance = 0;\r\n        this.myCollectSurfaceNormalMaxInsideDistance = 0;\r\n\r\n        this.myFindSurfaceDistanceMaxOutsideDistance = 0;\r\n        this.myFindSurfaceDistanceMaxInsideDistance = 0;\r\n\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill = false;\r\n        // this make it so when a character moves horizontally on a slope it also add a vertical movement so that the movement is actually on the slope plane\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle = null;\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle = null;\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle = null;\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle = null;\r\n        // this can be used to limit the adjustment so that on steep slopes u can bounce off, or anyway don't add a huge vertical movement due to a very steep slope\r\n\r\n        this.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill = false;\r\n        // this make it so when a character moves vertically on a slope (sort of sliding down the slope) it also add a horizontal movement so that the movement is actually on the slope plane\r\n        this.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle = null;\r\n        // this can be used to make it so the movement (and therefore the slide) only happens above a certain angle, like u want to slide down only on steep surfaces\r\n\r\n        this.myMovementMustStayOnSurface = false;\r\n        this.myMovementMustStayOnSurfaceHitMaxAngle = null;\r\n        this.myMovementMustStayOnIgnorableSurfaceAngleDownhill = false;\r\n        this.myMovementMustStayOnSurfaceAngleDownhill = null;\r\n\r\n        this.myTeleportMustBeOnSurface = false;\r\n        this.myTeleportMustBeOnIgnorableSurfaceAngle = false;\r\n        this.myTeleportMustBeOnSurfaceAngle = null;\r\n\r\n        this.myCheckTransformMustBeOnSurface = false;\r\n        this.myCheckTransformMustBeOnIgnorableSurfaceAngle = false;\r\n        this.myCheckTransformMustBeOnSurfaceAngle = null;\r\n\r\n        this.myRecollectSurfaceInfoOnSurfaceCheckFailed = false;\r\n        // instead of copying the previous surface info on fail, regather them\r\n\r\n        this.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle = false;\r\n        // if u start on a not ignorable perceived angle (above angle to ignore) u normally can't even try to move uphill, this will let you try and see if with that movement\r\n        // you could end up in a ignorable perceived angle position\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterColliderSplitMovementSetup = class CharacterColliderSplitMovementSetup {\r\n    constructor() {\r\n        this.mySplitMovementEnabled = false;\r\n\r\n        this.mySplitMovementMaxSteps = null;\r\n        this.mySplitMovementMaxStepLength = null;\r\n        this.mySplitMovementMinStepLength = null;\r\n\r\n        this.mySplitMovementStopOnHorizontalMovementFailed = false;\r\n        this.mySplitMovementStopOnVerticalMovementFailed = false;\r\n\r\n        /*\r\n        this will not be available until the bridge is removed with a new implementation that directly use the collider and results\r\n        this.mySplitMovementStopOnCallback = null;              // Signature: callback(paramsToBeDefined)\r\n        */\r\n\r\n        this.mySplitMovementStopReturnPreviousResults = false;\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterColliderAdditionalSetup = class CharacterColliderAdditionalSetup {\r\n    constructor() {\r\n        this.myPositionOffsetLocal = PP.vec3_create();\r\n        this.myRotationOffsetLocalQuat = PP.quat_create();\r\n\r\n        /*\r\n        these will not be available until the bridge is removed with a new implementation that directly use the collider and results\r\n        this.myExtraMovementCheckCallback = null;              // Signature: callback(paramsToBeDefined)\r\n        this.myExtraTeleportCheckCallback = null;              // Signature: callback(paramsToBeDefined)\r\n        this.myExtraCheckTransformCheckCallback = null;        // Signature: callback(paramsToBeDefined)\r\n        */\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterColliderDebugSetup = class CharacterColliderDebugSetup {\r\n    constructor() {\r\n        this.myVisualDebugActive = false;\r\n\r\n        this.myVisualDebugMovementActive = false;\r\n\r\n        this.myVisualDebugHorizontalMovementCheckActive = false;\r\n        this.myVisualDebugHorizontalPositionCheckActive = false;\r\n\r\n        this.myVisualDebugVerticalMovementCheckActive = false;\r\n        this.myVisualDebugVerticalPositionCheckActive = false;\r\n\r\n        this.myVisualDebugSlideActive = false;\r\n\r\n        this.myVisualDebugGroundInfoActive = false;\r\n        this.myVisualDebugCeilingInfoActive = false;\r\n\r\n        this.myVisualDebugResultsActive = false;\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPP.CharacterColliderSetup.prototype.copy = function (other) {\r\n    this.myHeight = other.myHeight;\r\n\r\n    this.myHorizontalCheckSetup.copy(other.myHorizontalCheckSetup);\r\n    this.myVerticalCheckSetup.copy(other.myVerticalCheckSetup);\r\n\r\n    this.myWallSlideSetup.copy(other.myWallSlideSetup);\r\n\r\n    this.myGroundSetup.copy(other.myGroundSetup);\r\n    this.myCeilingSetup.copy(other.myCeilingSetup);\r\n\r\n    this.mySplitMovementSetup.copy(other.mySplitMovementSetup);\r\n\r\n    this.myAdditionalSetup.copy(other.myAdditionalSetup);\r\n\r\n    this.myDebugSetup.copy(other.myDebugSetup);\r\n};\r\n\r\nPP.CharacterColliderHorizontalCheckSetup.prototype.copy = function (other) {\r\n    this.myHorizontalCheckConeRadius = other.myHorizontalCheckConeRadius;\r\n    this.myHorizontalCheckConeHalfAngle = other.myHorizontalCheckConeHalfAngle;\r\n\r\n    this.myHorizontalHeightCheckEnabled = other.myHorizontalHeightCheckEnabled;\r\n\r\n    this.myHorizontalCheckFeetDistanceToIgnore = other.myHorizontalCheckFeetDistanceToIgnore;\r\n    this.myHorizontalCheckHeadDistanceToIgnore = other.myHorizontalCheckHeadDistanceToIgnore;\r\n\r\n    this.myHorizontalCheckFixedForwardEnabled = other.myHorizontalCheckFixedForwardEnabled;\r\n    this.myHorizontalCheckFixedForward.vec3_copy(other.myHorizontalCheckFixedForward);\r\n\r\n    this.myHorizontalMovementCheckEnabled = other.myHorizontalMovementCheckEnabled;\r\n\r\n    this.myHorizontalMovementCheckRadialSteps = other.myHorizontalMovementCheckRadialSteps;\r\n\r\n    this.myHorizontalMovementCheckSplitMovementEnabled = other.myHorizontalMovementCheckSplitMovementEnabled;\r\n    this.myHorizontalMovementCheckSplitMovementMaxSteps = other.myHorizontalMovementCheckSplitMovementMaxSteps;\r\n    this.myHorizontalMovementCheckSplitMovementMaxStepLength = other.myHorizontalMovementCheckSplitMovementMaxStepLength;\r\n    this.myHorizontalMovementCheckSplitMovementMinStepLength = other.myHorizontalMovementCheckSplitMovementMinStepLength;\r\n\r\n    this.myHorizontalMovementCheckGetBetterReferenceHit = other.myHorizontalMovementCheckGetBetterReferenceHit;\r\n\r\n    this.myHorizontalMovementHorizontalRadialCheckEnabled = other.myHorizontalMovementHorizontalRadialCheckEnabled;\r\n    this.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled = other.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled = other.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled;\r\n    this.myHorizontalMovementHorizontalStraightCheckEnabled = other.myHorizontalMovementHorizontalStraightCheckEnabled;\r\n    this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = other.myHorizontalMovementHorizontalStraightCentralCheckEnabled;\r\n\r\n    this.myHorizontalMovementHeightCheckSteps = other.myHorizontalMovementHeightCheckSteps;\r\n    this.myHorizontalMovementHeightVerticalCheckEnabled = other.myHorizontalMovementHeightVerticalCheckEnabled;\r\n    this.myHorizontalMovementHeightHorizontalCheckEnabled = other.myHorizontalMovementHeightHorizontalCheckEnabled;\r\n\r\n    this.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled = other.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled = other.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled;\r\n\r\n    this.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled;\r\n\r\n    this.myHorizontalMovementVerticalStraightCheckEnabled = other.myHorizontalMovementVerticalStraightCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightCentralCheckEnabled = other.myHorizontalMovementVerticalStraightCentralCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled;\r\n\r\n    this.myHorizontalPositionCheckEnabled = other.myHorizontalPositionCheckEnabled;\r\n    this.myHorizontalPositionCheckConeHalfSlices = other.myHorizontalPositionCheckConeHalfSlices;\r\n    this.myHorizontalPositionHorizontalBorderCheckEnabled = other.myHorizontalPositionHorizontalBorderCheckEnabled;\r\n    this.myHorizontalPositionHorizontalRadialCheckEnabled = other.myHorizontalPositionHorizontalRadialCheckEnabled;\r\n\r\n    this.myHorizontalPositionHeightCheckSteps = other.myHorizontalPositionHeightCheckSteps;\r\n    this.myHorizontalPositionHeightHorizontalCheckEnabled = other.myHorizontalPositionHeightHorizontalCheckEnabled;\r\n    this.myHorizontalPositionHeightVerticalCheckEnabled = other.myHorizontalPositionHeightVerticalCheckEnabled;\r\n\r\n    this.myHorizontalPositionVerticalStraightCheckEnabled = other.myHorizontalPositionVerticalStraightCheckEnabled;\r\n    this.myHorizontalPositionVerticalStraightCentralCheckEnabled = other.myHorizontalPositionVerticalStraightCentralCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled = other.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled = other.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled = other.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled = other.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled = other.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled = other.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled;\r\n\r\n    this.myHorizontalPositionVerticalCheckGetFarthestHit = other.myHorizontalPositionVerticalCheckGetFarthestHit;\r\n\r\n    this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = other.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit;\r\n    this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = other.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit;\r\n\r\n    this.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision = other.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision;\r\n    this.myHorizontalPositionVerticalCheckDirection = other.myHorizontalPositionVerticalCheckDirection;\r\n\r\n    this.myHorizontalCheckBlockLayerFlags.setMask(other.myHorizontalCheckBlockLayerFlags.getMask());\r\n    this.myHorizontalCheckObjectsToIgnore.pp_copy(other.myHorizontalCheckObjectsToIgnore);\r\n};\r\n\r\nPP.CharacterColliderVerticalCheckSetup.prototype.copy = function (other) {\r\n    this.myVerticalCheckCircumferenceRadius = other.myVerticalCheckCircumferenceRadius;\r\n\r\n    this.myVerticalCheckCircumferenceSlices = other.myVerticalCheckCircumferenceSlices;\r\n    this.myVerticalCheckCircumferenceCentralCheckEnabled = other.myVerticalCheckCircumferenceCentralCheckEnabled;\r\n    this.myVerticalCheckCircumferenceRadialSteps = other.myVerticalCheckCircumferenceRadialSteps;\r\n    this.myVerticalCheckCircumferenceRotationPerRadialStep = other.myVerticalCheckCircumferenceRotationPerRadialStep;\r\n\r\n    this.myVerticalCheckFixedForwardEnabled = other.myVerticalCheckFixedForwardEnabled;\r\n    this.myVerticalCheckFixedForward.vec3_copy(other.myVerticalCheckFixedForward);\r\n\r\n    this.myVerticalMovementCheckEnabled = other.myVerticalMovementCheckEnabled;\r\n    this.myVerticalMovementCheckReductionEnabled = other.myVerticalMovementCheckReductionEnabled;\r\n    this.myVerticalMovementCheckPerformCheckOnBothSides = other.myVerticalMovementCheckPerformCheckOnBothSides;\r\n\r\n    this.myVerticalPositionCheckEnabled = other.myVerticalPositionCheckEnabled;\r\n\r\n    this.myVerticalCheckAllowHitsInsideCollisionIfOneValid = other.myVerticalCheckAllowHitsInsideCollisionIfOneValid;\r\n\r\n    this.myVerticalCheckBlockLayerFlags.setMask(other.myVerticalCheckBlockLayerFlags.getMask());\r\n    this.myVerticalCheckObjectsToIgnore.pp_copy(other.myVerticalCheckObjectsToIgnore);\r\n};\r\n\r\nPP.CharacterColliderWallSlideSetup.prototype.copy = function (other) {\r\n    this.myWallSlideEnabled = other.myWallSlideEnabled;\r\n\r\n    this.myWallSlideMaxAttempts = other.myWallSlideMaxAttempts;\r\n\r\n    this.myCheckBothWallSlideDirections = other.myCheckBothWallSlideDirections;\r\n\r\n    this.myWallSlideFlickerPreventionMode = other.myWallSlideFlickerPreventionMode;\r\n\r\n    this.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = other.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding;\r\n\r\n    this.myWallSlideFlickerPreventionForceCheckCounter = other.myWallSlideFlickerPreventionForceCheckCounter;\r\n\r\n    this.my90DegreesWallSlideAdjustDirectionSign = other.my90DegreesWallSlideAdjustDirectionSign;\r\n};\r\n\r\nPP.CharacterColliderSurfaceSetup.prototype.copy = function (other) {\r\n    this.mySurfaceSnapEnabled = other.mySurfaceSnapEnabled;\r\n    this.mySurfaceSnapMaxDistance = other.mySurfaceSnapMaxDistance;\r\n\r\n    this.mySurfacePopOutEnabled = other.mySurfacePopOutEnabled;\r\n    this.mySurfacePopOutMaxDistance = other.mySurfacePopOutMaxDistance;\r\n\r\n    this.mySurfaceAngleToIgnore = other.mySurfaceAngleToIgnore;\r\n    this.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle = other.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle;\r\n\r\n    this.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance = other.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance;\r\n    this.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance = other.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance;\r\n\r\n    this.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = other.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n\r\n    this.myCollectSurfaceInfo = other.myCollectSurfaceInfo;\r\n\r\n    this.myIsOnSurfaceMaxOutsideDistance = other.myIsOnSurfaceMaxOutsideDistance;\r\n    this.myIsOnSurfaceMaxInsideDistance = other.myIsOnSurfaceMaxInsideDistance;\r\n\r\n    this.myIsBaseInsideCollisionCheckEnabled = other.myIsBaseInsideCollisionCheckEnabled;\r\n    this.myIsOnSurfaceIfBaseInsideCollision = other.myIsOnSurfaceIfBaseInsideCollision;\r\n\r\n    this.myCollectSurfaceNormalMaxOutsideDistance = other.myCollectSurfaceNormalMaxOutsideDistance;\r\n    this.myCollectSurfaceNormalMaxInsideDistance = other.myCollectSurfaceNormalMaxInsideDistance;\r\n\r\n    this.myFindSurfaceDistanceMaxOutsideDistance = other.myFindSurfaceDistanceMaxOutsideDistance;\r\n    this.myFindSurfaceDistanceMaxInsideDistance = other.myFindSurfaceDistanceMaxInsideDistance;\r\n\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle;\r\n\r\n    this.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill = other.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n    this.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle = other.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle;\r\n\r\n    this.myMovementMustStayOnSurface = other.myMovementMustStayOnSurface;\r\n    this.myMovementMustStayOnSurfaceHitMaxAngle = other.myMovementMustStayOnSurfaceHitMaxAngle;\r\n    this.myMovementMustStayOnIgnorableSurfaceAngleDownhill = other.myMovementMustStayOnIgnorableSurfaceAngleDownhill;\r\n    this.myMovementMustStayOnSurfaceAngleDownhill = other.myMovementMustStayOnSurfaceAngleDownhill;\r\n\r\n    this.myTeleportMustBeOnSurface = other.myTeleportMustBeOnSurface;\r\n    this.myTeleportMustBeOnIgnorableSurfaceAngle = other.myTeleportMustBeOnIgnorableSurfaceAngle;\r\n    this.myTeleportMustBeOnSurfaceAngle = other.myTeleportMustBeOnSurfaceAngle;\r\n\r\n    this.myCheckTransformMustBeOnSurface = other.myCheckTransformMustBeOnSurface;\r\n    this.myCheckTransformMustBeOnIgnorableSurfaceAngle = other.myCheckTransformMustBeOnIgnorableSurfaceAngle;\r\n    this.myCheckTransformMustBeOnSurfaceAngle = other.myCheckTransformMustBeOnSurfaceAngle;\r\n\r\n    this.myRecollectSurfaceInfoOnSurfaceCheckFailed = other.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n\r\n    this.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle = other.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle;\r\n};\r\n\r\nPP.CharacterColliderSplitMovementSetup.prototype.copy = function (other) {\r\n    this.mySplitMovementEnabled = other.mySplitMovementEnabled;\r\n\r\n    this.mySplitMovementMaxSteps = other.mySplitMovementMaxSteps;\r\n    this.mySplitMovementMaxStepLength = other.mySplitMovementMaxStepLength;\r\n    this.mySplitMovementMinStepLength = other.mySplitMovementMinStepLength;\r\n\r\n    this.mySplitMovementStopOnHorizontalMovementFailed = other.mySplitMovementStopOnHorizontalMovementFailed;\r\n    this.mySplitMovementStopOnVerticalMovementFailed = other.mySplitMovementStopOnVerticalMovementFailed;\r\n\r\n    /*\r\n    this.mySplitMovementStopOnCallback = other.mySplitMovementStopOnCallback;\r\n    */\r\n\r\n    this.mySplitMovementStopReturnPreviousResults = other.mySplitMovementStopReturnPreviousResults;\r\n};\r\n\r\nPP.CharacterColliderAdditionalSetup.prototype.copy = function (other) {\r\n    this.myPositionOffsetLocal.vec3_copy(other.myPositionOffsetLocal);\r\n    this.myRotationOffsetLocalQuat.quat_copy(other.myRotationOffsetLocalQuat);\r\n\r\n    /*\r\n    this.myExtraMovementCheckCallback = other.myExtraMovementCheckCallback;\r\n    this.myExtraTeleportCheckCallback = other.myExtraTeleportCheckCallback;\r\n    this.myExtraCheckTransformCheckCallback = other.myExtraCheckTransformCheckCallback;\r\n    */\r\n};\r\n\r\nPP.CharacterColliderDebugSetup.prototype.copy = function (other) {\r\n    this.myVisualDebugActive = other.myVisualDebugActive;\r\n\r\n    this.myVisualDebugMovementActive = other.myVisualDebugMovementActive;\r\n\r\n    this.myVisualDebugHorizontalMovementCheckActive = other.myVisualDebugHorizontalMovementCheckActive;\r\n    this.myVisualDebugHorizontalPositionCheckActive = other.myVisualDebugHorizontalPositionCheckActive;\r\n\r\n    this.myVisualDebugVerticalMovementCheckActive = other.myVisualDebugVerticalMovementCheckActive;\r\n    this.myVisualDebugVerticalPositionCheckActive = other.myVisualDebugVerticalPositionCheckActive;\r\n\r\n    this.myVisualDebugSlideActive = other.myVisualDebugSlideActive;\r\n\r\n    this.myVisualDebugGroundInfoActive = other.myVisualDebugGroundInfoActive;\r\n    this.myVisualDebugCeilingInfoActive = other.myVisualDebugCeilingInfoActive;\r\n\r\n    this.myVisualDebugResultsActive = other.myVisualDebugResultsActive;\r\n};\r\n\r\n\r\nObject.defineProperty(PP.CharacterColliderSetup.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterColliderHorizontalCheckSetup.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterColliderVerticalCheckSetup.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterColliderWallSlideSetup.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterColliderSurfaceSetup.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterColliderSplitMovementSetup.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterColliderAdditionalSetup.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterColliderDebugSetup.prototype, \"copy\", { enumerable: false });", "PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel = {\r\n    VERY_LOW: 0,\r\n    LOW: 1,\r\n    MEDIUM: 2,\r\n    HIGH: 3,\r\n    VERY_HIGH: 4,\r\n};\r\n\r\nPP.CharacterColliderSetupSimplifiedCreationParams = class CharacterColliderSetupSimplifiedCreationParams {\r\n    constructor() {\r\n        this.myHeight = 0;\r\n        this.myRadius = 0;\r\n\r\n        this.myAccuracyLevel = PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel.VERY_LOW;\r\n\r\n        this.myIsPlayer = false;\r\n\r\n        this.myCheckOnlyFeet = false;\r\n\r\n        this.myAverageSpeed = 0;\r\n\r\n        this.myCanFly = false;\r\n\r\n        this.myShouldSlideAgainstWall = false;\r\n\r\n        this.myCollectGroundInfo = false;\r\n        this.myShouldSnapOnGround = false;\r\n        this.myMaxDistanceToSnapOnGround = 0;\r\n        this.myMaxWalkableGroundAngle = 0;\r\n        this.myMaxWalkableGroundStepHeight = 0;\r\n        this.myShouldNotFallFromEdges = false;\r\n\r\n        this.myHorizontalCheckBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myHorizontalCheckObjectsToIgnore = [];\r\n\r\n        this.myVerticalCheckBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myVerticalCheckObjectsToIgnore = [];\r\n\r\n        this.myHorizontalCheckDebugActive = false;\r\n        this.myVerticalCheckDebugActive = false;\r\n    }\r\n};\r\n\r\nPP.CharacterColliderUtils = {\r\n    createCharacterColliderSetupSimplified: function (simplifiedCreationParams, outCharacterColliderSetup = new PP.CharacterColliderSetup()) {\r\n        // implemented outside class definition\r\n    },\r\n    createTeleportColliderFromMovementCollider: function (movementColliderSetup, outTeleportColliderSetup = new PP.CharacterColliderSetup()) {\r\n        outTeleportColliderSetup.copy(movementColliderSetup);\r\n\r\n        outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle = 180;\r\n        outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices =\r\n            Math.round((outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle / movementColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle)\r\n                * movementColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices);\r\n\r\n        outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFixedForwardEnabled = true;\r\n        outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFixedForward.vec3_set(0, 0, 1);\r\n\r\n        return outTeleportColliderSetup;\r\n    },\r\n};\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPP.CharacterColliderUtils.createCharacterColliderSetupSimplified = function (simplifiedCreationParams, outCharacterColliderSetup = new PP.CharacterColliderSetup()) {\r\n    outCharacterColliderSetup.myHeight = simplifiedCreationParams.myHeight;\r\n    outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeRadius = simplifiedCreationParams.myRadius;\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadius = simplifiedCreationParams.myRadius / 2;\r\n\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckFixedForwardEnabled = true;\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckFixedForward.vec3_set(0, 0, 1);\r\n\r\n    if (!simplifiedCreationParams.myCheckOnlyFeet || simplifiedCreationParams.myCanFly) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalHeightCheckEnabled = true;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalPositionCheckEnabled = true;\r\n    }\r\n\r\n    outCharacterColliderSetup.myWallSlideSetup.myWallSlideEnabled = simplifiedCreationParams.myShouldSlideAgainstWall;\r\n\r\n    outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFeetDistanceToIgnore = simplifiedCreationParams.myMaxWalkableGroundStepHeight;\r\n\r\n\r\n\r\n    outCharacterColliderSetup.myGroundSetup.mySurfaceSnapMaxDistance = simplifiedCreationParams.myMaxDistanceToSnapOnGround;\r\n    outCharacterColliderSetup.myGroundSetup.mySurfacePopOutMaxDistance = simplifiedCreationParams.myMaxDistanceToSnapOnGround > 0 ?\r\n        simplifiedCreationParams.myMaxDistanceToSnapOnGround : (simplifiedCreationParams.myRadius > 0.1) ? 0.1 : 0.01;\r\n    outCharacterColliderSetup.myGroundSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = simplifiedCreationParams.myRadius;\r\n\r\n    outCharacterColliderSetup.myGroundSetup.myCollectSurfaceInfo = simplifiedCreationParams.myCollectGroundInfo || simplifiedCreationParams.myMaxWalkableGroundAngle > 0;\r\n    outCharacterColliderSetup.myGroundSetup.mySurfaceSnapEnabled = simplifiedCreationParams.myShouldSnapOnGround;\r\n    outCharacterColliderSetup.myGroundSetup.mySurfacePopOutEnabled = true;\r\n    outCharacterColliderSetup.myGroundSetup.mySurfaceAngleToIgnore = simplifiedCreationParams.myMaxWalkableGroundAngle;\r\n    outCharacterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngle = true;\r\n\r\n    outCharacterColliderSetup.myGroundSetup.myIsOnSurfaceMaxOutsideDistance = 0.001;\r\n    outCharacterColliderSetup.myGroundSetup.myIsOnSurfaceMaxInsideDistance = 0.001;\r\n\r\n    outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxOutsideDistance = (simplifiedCreationParams.myRadius > 0.1) ? 0.1 : 0.01;\r\n    outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxInsideDistance = outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxOutsideDistance;\r\n\r\n\r\n\r\n    if (simplifiedCreationParams.myCanFly) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckHeadDistanceToIgnore = outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFeetDistanceToIgnore;\r\n\r\n        outCharacterColliderSetup.myCeilingSetup.myCollectSurfaceInfo = outCharacterColliderSetup.myGroundSetup.myCollectSurfaceInfo;\r\n        outCharacterColliderSetup.myCeilingSetup.mySurfacePopOutEnabled = outCharacterColliderSetup.myGroundSetup.mySurfacePopOutEnabled;\r\n        outCharacterColliderSetup.myCeilingSetup.mySurfaceAngleToIgnore = outCharacterColliderSetup.myGroundSetup.mySurfaceAngleToIgnore;\r\n\r\n        outCharacterColliderSetup.myCeilingSetup.mySurfaceSnapMaxDistance = outCharacterColliderSetup.myGroundSetup.mySurfaceSnapMaxDistance;\r\n        outCharacterColliderSetup.myCeilingSetup.mySurfacePopOutMaxDistance = outCharacterColliderSetup.myGroundSetup.mySurfacePopOutMaxDistance;\r\n        outCharacterColliderSetup.myCeilingSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = outCharacterColliderSetup.myGroundSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n        outCharacterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngle = outCharacterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngle;\r\n\r\n        outCharacterColliderSetup.myCeilingSetup.myIsOnSurfaceMaxOutsideDistance = outCharacterColliderSetup.myGroundSetup.myIsOnSurfaceMaxOutsideDistance;\r\n        outCharacterColliderSetup.myCeilingSetup.myIsOnSurfaceMaxInsideDistance = outCharacterColliderSetup.myGroundSetup.myIsOnSurfaceMaxInsideDistance;\r\n\r\n        outCharacterColliderSetup.myCeilingSetup.myCollectSurfaceNormalMaxOutsideDistance = outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxOutsideDistance;\r\n        outCharacterColliderSetup.myCeilingSetup.myCollectSurfaceNormalMaxInsideDistance = outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxInsideDistance;\r\n\r\n    }\r\n\r\n    if (simplifiedCreationParams.myShouldNotFallFromEdges) {\r\n        outCharacterColliderSetup.myGroundSetup.myMovementMustStayOnSurface = true;\r\n        outCharacterColliderSetup.myGroundSetup.myMovementMustStayOnSurfaceAngleDownhill = Math.max(60, outCharacterColliderSetup.myGroundSetup.mySurfaceAngleToIgnore);\r\n    }\r\n\r\n\r\n\r\n    outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckBlockLayerFlags.copy(simplifiedCreationParams.myHorizontalCheckBlockLayerFlags);\r\n    outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckObjectsToIgnore.pp_copy(simplifiedCreationParams.myHorizontalCheckObjectsToIgnore);\r\n\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckBlockLayerFlags.copy(simplifiedCreationParams.myVerticalCheckBlockLayerFlags);\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckObjectsToIgnore.pp_copy(simplifiedCreationParams.myVerticalCheckObjectsToIgnore);\r\n\r\n\r\n\r\n    if (simplifiedCreationParams.myHorizontalCheckDebugActive) {\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugActive = true;\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugHorizontalMovementCheckActive = true;\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugHorizontalPositionCheckActive = true;\r\n    }\r\n\r\n    if (simplifiedCreationParams.myVerticalCheckDebugActive) {\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugActive = true;\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugVerticalMovementCheckActive = true;\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugVerticalPositionCheckActive = true;\r\n    }\r\n\r\n\r\n\r\n    // ACCURACY\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel.VERY_LOW) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle = 60;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightVerticalCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightVerticalCheckEnabled = true;\r\n\r\n        // activate based on speed?\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckEnabled = false;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightCheckSteps = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHorizontalRadialCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalStraightCheckEnabled = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices = 4;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceCentralCheckEnabled = true;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps = 1;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckEnabled = true;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckReductionEnabled = true;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalPositionCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckAllowHitsInsideCollisionIfOneValid = true;\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel.LOW) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckRadialSteps = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightCheckSteps = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCentralCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps = 2;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRotationPerRadialStep = 180 / outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts = 1;\r\n        outCharacterColliderSetup.myWallSlideSetup.myCheckBothWallSlideDirections = false;\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionMode = PP.CharacterColliderSlideFlickerPreventionMode.NONE;\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = false;\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionForceCheckCounter = 0;\r\n        outCharacterColliderSetup.myWallSlideSetup.my90DegreesWallSlideAdjustDirectionSign = false;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts = 2;\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel.MEDIUM) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightHorizontalCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices = 2;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightHorizontalCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHorizontalBorderCheckEnabled = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckPerformCheckOnBothSides = true;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices = 6;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps = 2;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRotationPerRadialStep = 180 / outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts = 3;\r\n        outCharacterColliderSetup.myWallSlideSetup.my90DegreesWallSlideAdjustDirectionSign = true;\r\n\r\n        if (simplifiedCreationParams.myIsPlayer) {\r\n            outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionMode = PP.CharacterColliderSlideFlickerPreventionMode.USE_PREVIOUS_RESULTS;\r\n            outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = true;\r\n            outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionForceCheckCounter = 4;\r\n        }\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel.HIGH) {\r\n        if (outCharacterColliderSetup.myWallSlideSetup.myWallSlideEnabled) {\r\n            outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckGetBetterReferenceHit = true;\r\n\r\n            outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = true;\r\n            outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = true;\r\n        }\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCentralCheckEnabled = false;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = false;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices = 8;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps = 2;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRotationPerRadialStep = 180 / outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts = 4;\r\n\r\n        if (simplifiedCreationParams.myIsPlayer) {\r\n            outCharacterColliderSetup.myWallSlideSetup.myCheckBothWallSlideDirections = true;\r\n            outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionMode = PP.CharacterColliderSlideFlickerPreventionMode.USE_PREVIOUS_RESULTS;\r\n            outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = true;\r\n            outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionForceCheckCounter = 4;\r\n        }\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myGroundSetup.myIsBaseInsideCollisionCheckEnabled = true;\r\n        outCharacterColliderSetup.myCeilingSetup.myIsBaseInsideCollisionCheckEnabled = true;\r\n\r\n\r\n\r\n        let fps = 90;\r\n        if (simplifiedCreationParams.myAverageSpeed / fps > simplifiedCreationParams.myRadius) {\r\n            outCharacterColliderSetup.mySplitMovementSetup.mySplitMovementEnabled = other.mySplitMovementEnabled;\r\n\r\n            outCharacterColliderSetup.mySplitMovementSetup.mySplitMovementMaxSteps = Math.ceil((simplifiedCreationParams.myAverageSpeed / fps) / simplifiedCreationParams.myRadius);\r\n            outCharacterColliderSetup.mySplitMovementSetup.mySplitMovementMinStepLength = simplifiedCreationParams.myRadius;\r\n        }\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel.VERY_HIGH) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightCheckSteps = 2;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalRadialCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightCentralCheckEnabled = false;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = false;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightCheckSteps = 2;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myGroundSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed = true;\r\n        outCharacterColliderSetup.myCeilingSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed = outCharacterColliderSetup.myGroundSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n    }\r\n\r\n    return outCharacterColliderSetup;\r\n};\r\n", "PP.CharacterCollisionResults = class CharacterCollisionResults {\r\n    constructor() {\r\n        this.myCheckType = PP.CharacterCollisionCheckType.NONE;\r\n\r\n        this.myTransformResults = new PP.CharacterCollisionTransformResults();\r\n\r\n        this.myMovementResults = new PP.CharacterCollisionMovementResults();\r\n        this.myHorizontalMovementResults = new PP.CharacterCollisionMovementResults();\r\n        this.myVerticalMovementResults = new PP.CharacterCollisionMovementResults();\r\n\r\n        this.myTeleportResults = new PP.CharacterCollisionTeleportResults();\r\n\r\n        this.myCheckTransformResults = new PP.CharacterCollisionCheckTransformResults();\r\n\r\n        this.myWallSlideResults = new PP.CharacterCollisionWallSlideResults();\r\n\r\n        this.myGroundInfo = new PP.CharacterCollisionSurfaceInfo();\r\n        this.myCeilingInfo = new PP.CharacterCollisionSurfaceInfo();\r\n\r\n        this.myGroundResults = new PP.CharacterCollisionSurfaceResults();\r\n        this.myCeilingResults = new PP.CharacterCollisionSurfaceResults();\r\n\r\n        this.mySplitMovementResults = new PP.CharacterCollisionSplitMovementResults();\r\n\r\n        this.myDebugResults = new PP.CharacterCollisionDebugResults();\r\n\r\n        this.myInternalResults = new PP.CharacterCollisionInternalResults();\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionCheckType = {\r\n    NONE: 0,\r\n    CHECK_MOVEMENT: 1,\r\n    CHECK_TELEPORT: 2,\r\n    CHECK_TRANSFORM: 3,\r\n    UPDATE_SURFACE_INFO: 4,\r\n    UPDATE_GROUND_INFO: 5,\r\n    UPDATE_CEILING_INFO: 6\r\n};\r\n\r\nPP.CharacterCollisionSurfaceInfo = class CharacterCollisionSurfaceInfo {\r\n    constructor() {\r\n        this.myIsOnSurface = false;\r\n\r\n        this.mySurfaceAngle = 0;\r\n        this.mySurfacePerceivedAngle = 0;\r\n        this.mySurfaceNormal = PP.vec3_create();\r\n\r\n        this.mySurfaceHitMaxAngle = 0;\r\n        this.mySurfaceHitMaxNormal = PP.vec3_create();\r\n\r\n        this.mySurfaceDistance = null;\r\n\r\n        this.myIsBaseInsideCollision = false;\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionWallSlideResults = class CharacterCollisionWallSlideResults {\r\n    constructor() {\r\n        this.myHasSlid = false;\r\n        this.mySlideMovementAngle = 0;          // signed angle between the start movement and the wall slide movement, basically telling you how much u had to change direction to slide\r\n        this.mySlideMovementWallAngle = 0;      // signed angle between the inverted surface normal and the wall slide movement\r\n        this.myWallNormal = PP.vec3_create();\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionTransformResults = class CharacterCollisionMovementResults {\r\n    constructor() {\r\n        this.myStartTransformQuat = PP.quat2_create();\r\n        this.myEndTransformQuat = PP.quat2_create();\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionMovementResults = class CharacterCollisionMovementResults {\r\n    constructor() {\r\n        this.myStartMovement = PP.vec3_create();\r\n        this.myEndMovement = PP.vec3_create();\r\n        this.myMovementFailed = false;\r\n        this.myIsColliding = false;\r\n        this.myReferenceCollisionHit = new PP.RaycastHit();\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionTeleportResults = class CharacterCollisionTeleportResults {\r\n    constructor() {\r\n        this.myStartTeleportTransformQuat = PP.quat2_create();\r\n        this.myEndTeleportTransformQuat = PP.quat2_create();\r\n        this.myTeleportFailed = false;\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionCheckTransformResults = class CharacterCollisionCheckTransformResults {\r\n    constructor() {\r\n        this.myStartCheckTransformQuat = PP.quat2_create();\r\n        this.myEndCheckTransformQuat = PP.quat2_create();\r\n        this.myCheckTransformFailed = false;\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionSurfaceResults = class CharacterCollisionCheckTransformResults {\r\n    constructor() {\r\n        this.myHasSnappedOnSurface = false;\r\n        this.myHasPoppedOutSurface = false;\r\n        this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = false;\r\n        this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = false;\r\n        this.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = false;\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionSplitMovementResults = class CharacterCollisionSplitMovementResults {\r\n    constructor() {\r\n        this.myStepsToPerform = 0;\r\n        this.myStepsPerformed = 0;\r\n        this.myMovementInterrupted = false;\r\n        this.myMovementChecked = PP.vec3_create();\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionDebugResults = class CharacterCollisionDebugResults {\r\n    constructor() {\r\n        this._myRaycastsPerformed = 0;\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionInternalResults = class CharacterCollisionSplitMovementResults {\r\n    constructor() {\r\n        this.myLastRelevantStartHorizontalMovement = PP.vec3_create();\r\n        this.myLastRelevantAdjustedStartHorizontalMovement = PP.vec3_create();\r\n        this.myLastRelevantEndHorizontalMovement = PP.vec3_create();\r\n\r\n        this.myLastRelevantStartVerticalMovement = PP.vec3_create();\r\n        this.myLastRelevantAdjustedStartVerticalMovement = PP.vec3_create();\r\n        this.myLastRelevantEndVerticalMovement = PP.vec3_create();\r\n\r\n        this.myLastRelevantHasWallSlid = false;\r\n        this.myHasWallSlidTowardOppositeDirection = false;\r\n        this.myLastRelevantWallSlideFlickerPrevented = false;\r\n        this.myWallSlideFlickerPreventionForceCheckCounter = 0;\r\n        this.myWallSlide90DegreesDirectionSign = 0;\r\n        this.myWallSlide90DegreesRecomputeDirectionSign = true;\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPP.CharacterCollisionResults.prototype.reset = function () {\r\n    this.myCheckType = PP.CharacterCollisionCheckType.NONE;\r\n\r\n    this.myTransformResults.reset();\r\n\r\n    this.myMovementResults.reset();\r\n    this.myHorizontalMovementResults.reset();\r\n    this.myVerticalMovementResults.reset();\r\n\r\n    this.myTeleportResults.reset();\r\n\r\n    this.myCheckTransformResults.reset();\r\n\r\n    this.myWallSlideResults.reset();\r\n\r\n    this.myGroundInfo.reset();\r\n    this.myCeilingInfo.reset();\r\n\r\n    this.myGroundResults.reset();\r\n    this.myCeilingResults.reset();\r\n\r\n    this.mySplitMovementResults.reset();\r\n\r\n    this.myInternalResults.reset();\r\n};\r\n\r\nPP.CharacterCollisionResults.prototype.copy = function (other) {\r\n    this.myCheckType = other.myCheckType;\r\n\r\n    this.myTransformResults.copy(other.myTransformResults);\r\n\r\n    this.myMovementResults.copy(other.myMovementResults);\r\n    this.myHorizontalMovementResults.copy(other.myHorizontalMovementResults);\r\n    this.myVerticalMovementResults.copy(other.myVerticalMovementResults);\r\n\r\n    this.myTeleportResults.copy(other.myTeleportResults);\r\n\r\n    this.myCheckTransformResults.copy(other.myCheckTransformResults);\r\n\r\n    this.myWallSlideResults.copy(other.myWallSlideResults);\r\n\r\n    this.myGroundInfo.copy(other.myGroundInfo);\r\n    this.myCeilingInfo.copy(other.myCeilingInfo);\r\n\r\n    this.myGroundResults.copy(other.myGroundResults);\r\n    this.myCeilingResults.copy(other.myCeilingResults);\r\n\r\n    this.mySplitMovementResults.copy(other.mySplitMovementResults);\r\n\r\n    this.myInternalResults.copy(other.myInternalResults);\r\n};\r\n\r\nPP.CharacterCollisionSurfaceInfo.prototype.reset = function () {\r\n    this.myIsOnSurface = false;\r\n\r\n    this.mySurfaceAngle = 0;\r\n    this.mySurfacePerceivedAngle = 0;\r\n    this.mySurfaceNormal.vec3_zero();\r\n\r\n    this.mySurfaceHitMaxAngle = 0;\r\n    this.mySurfaceHitMaxNormal.vec3_zero();\r\n\r\n    this.mySurfaceDistance = null;\r\n\r\n    this.myIsBaseInsideCollision = false;\r\n};\r\n\r\nPP.CharacterCollisionSurfaceInfo.prototype.copy = function (other) {\r\n    this.myIsOnSurface = other.myIsOnSurface;\r\n\r\n    this.mySurfaceAngle = other.mySurfaceAngle;\r\n    this.mySurfacePerceivedAngle = other.mySurfacePerceivedAngle;\r\n    this.mySurfaceNormal.vec3_copy(other.mySurfaceNormal);\r\n\r\n    this.mySurfaceHitMaxAngle = other.mySurfaceHitMaxAngle;\r\n    this.mySurfaceHitMaxNormal.vec3_copy(other.mySurfaceHitMaxNormal);\r\n\r\n    this.mySurfaceDistance = other.mySurfaceDistance;\r\n\r\n    this.myIsBaseInsideCollision = other.myIsBaseInsideCollision;\r\n};\r\n\r\nPP.CharacterCollisionWallSlideResults.prototype.reset = function () {\r\n    this.myHasSlid = false;\r\n    this.mySlideMovementAngle = 0;\r\n    this.mySlideMovementWallAngle = 0;\r\n    this.myWallNormal.vec3_zero();\r\n};\r\n\r\nPP.CharacterCollisionWallSlideResults.prototype.copy = function (other) {\r\n    this.myHasSlid = other.myHasSlid;\r\n    this.mySlideMovementAngle = other.mySlideMovementAngle;\r\n    this.mySlideMovementWallAngle = other.mySlideMovementWallAngle;\r\n    this.myWallNormal.vec3_copy(other.myWallNormal);\r\n};\r\n\r\nPP.CharacterCollisionTransformResults.prototype.reset = function () {\r\n    this.myStartTransformQuat.quat2_identity();\r\n    this.myEndTransformQuat.quat2_identity();\r\n};\r\n\r\nPP.CharacterCollisionTransformResults.prototype.copy = function (other) {\r\n    this.myStartTransformQuat.quat2_copy(other.myStartTransformQuat);\r\n    this.myEndTransformQuat.quat2_copy(other.myEndTransformQuat);\r\n};\r\n\r\nPP.CharacterCollisionMovementResults.prototype.reset = function () {\r\n    this.myStartMovement.vec3_zero();\r\n    this.myEndMovement.vec3_zero();\r\n    this.myMovementFailed = false;\r\n    this.myIsColliding = false;\r\n    this.myReferenceCollisionHit.reset();\r\n};\r\n\r\nPP.CharacterCollisionMovementResults.prototype.copy = function (other) {\r\n    this.myStartMovement.vec3_copy(other.myStartMovement);\r\n    this.myEndMovement.vec3_copy(other.myEndMovement);\r\n    this.myMovementFailed = other.myMovementFailed;\r\n    this.myIsColliding = other.myIsColliding;\r\n    this.myReferenceCollisionHit.copy(other.myReferenceCollisionHit);\r\n};\r\n\r\nPP.CharacterCollisionTeleportResults.prototype.reset = function () {\r\n    this.myStartTeleportTransformQuat.quat2_identity();\r\n    this.myEndTeleportTransformQuat.quat2_identity();\r\n    this.myTeleportFailed = false;\r\n};\r\n\r\nPP.CharacterCollisionTeleportResults.prototype.copy = function (other) {\r\n    this.myStartTeleportTransformQuat.quat2_copy(other.myStartTeleportTransformQuat);\r\n    this.myEndTeleportTransformQuat.quat2_copy(other.myEndTeleportTransformQuat);\r\n    this.myTeleportFailed = other.myTeleportFailed;\r\n};\r\n\r\nPP.CharacterCollisionCheckTransformResults.prototype.reset = function () {\r\n    this.myStartCheckTransformQuat.quat2_identity();\r\n    this.myEndCheckTransformQuat.quat2_identity();\r\n    this.myCheckTransformFailed = false;\r\n};\r\n\r\nPP.CharacterCollisionCheckTransformResults.prototype.copy = function (other) {\r\n    this.myStartCheckTransformQuat.quat2_copy(other.myStartCheckTransformQuat);\r\n    this.myEndCheckTransformQuat.quat2_copy(other.myEndCheckTransformQuat);\r\n    this.myCheckTransformFailed = other.myCheckTransformFailed;\r\n};\r\n\r\nPP.CharacterCollisionSurfaceResults.prototype.reset = function () {\r\n    this.myHasSnappedOnSurface = false;\r\n    this.myHasPoppedOutSurface = false;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = false;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = false;\r\n    this.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = false;\r\n};\r\n\r\nPP.CharacterCollisionSurfaceResults.prototype.copy = function (other) {\r\n    this.myHasSnappedOnSurface = other.myHasSnappedOnSurface;\r\n    this.myHasPoppedOutSurface = other.myHasPoppedOutSurface;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = other.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = other.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n    this.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = other.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n};\r\n\r\nPP.CharacterCollisionSplitMovementResults.prototype.reset = function () {\r\n    this.myStepsToPerform = 0;\r\n    this.myStepsPerformed = 0;\r\n    this.myMovementInterrupted = false;\r\n    this.myMovementChecked.vec3_zero();\r\n};\r\n\r\nPP.CharacterCollisionSplitMovementResults.prototype.copy = function (other) {\r\n    this.myStepsToPerform = other.myStepsToPerform;\r\n    this.myStepsPerformed = other.myStepsPerformed;\r\n    this.myMovementInterrupted = other.myMovementInterrupted;\r\n    this.myMovementChecked.vec3_copy(other.myMovementChecked);\r\n};\r\n\r\nPP.CharacterCollisionDebugResults.prototype.reset = function () {\r\n    this._myRaycastsPerformed = 0;\r\n};\r\n\r\nPP.CharacterCollisionDebugResults.prototype.copy = function (other) {\r\n    this._myRaycastsPerformed = other._myRaycastsPerformed;\r\n};\r\n\r\nPP.CharacterCollisionInternalResults.prototype.reset = function () {\r\n};\r\n\r\nPP.CharacterCollisionInternalResults.prototype.copy = function (other) {\r\n    this.myLastRelevantStartHorizontalMovement.vec3_copy(other.myLastRelevantStartHorizontalMovement);\r\n    this.myLastRelevantAdjustedStartHorizontalMovement.vec3_copy(other.myLastRelevantAdjustedStartHorizontalMovement);\r\n    this.myLastRelevantEndHorizontalMovement.vec3_copy(other.myLastRelevantEndHorizontalMovement);\r\n\r\n    this.myLastRelevantStartVerticalMovement.vec3_copy(other.myLastRelevantStartVerticalMovement);\r\n    this.myLastRelevantAdjustedStartVerticalMovement.vec3_copy(other.myLastRelevantAdjustedStartVerticalMovement);\r\n    this.myLastRelevantEndVerticalMovement.vec3_copy(other.myLastRelevantEndVerticalMovement);\r\n\r\n    this.myLastRelevantHasWallSlid = other.myLastRelevantHasWallSlid;\r\n    this.myHasWallSlidTowardOppositeDirection = other.myHasWallSlidTowardOppositeDirection;\r\n    this.myLastRelevantWallSlideFlickerPrevented = other.myLastRelevantWallSlideFlickerPrevented;\r\n    this.myWallSlideFlickerPreventionForceCheckCounter = other.myWallSlideFlickerPreventionForceCheckCounter;\r\n    this.myWallSlide90DegreesDirectionSign = other.myWallSlide90DegreesDirectionSign;\r\n    this.myWallSlide90DegreesRecomputeDirectionSign = other.myWallSlide90DegreesRecomputeDirectionSign;\r\n};\r\n\r\n\r\n\r\nObject.defineProperty(PP.CharacterCollisionResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionTransformResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionMovementResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionTeleportResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionCheckTransformResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionWallSlideResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionSurfaceInfo.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionSurfaceResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionSplitMovementResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionInternalResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionTransformResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionMovementResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionTeleportResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionCheckTransformResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionWallSlideResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionSurfaceInfo.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionSurfaceResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionSplitMovementResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionInternalResults.prototype, \"copy\", { enumerable: false });", "PP.CharacterCollisionSystem = class CharacterCollisionSystem {\r\n    constructor() {\r\n        this._myLastCheckRaycastsPerformed = 0;\r\n        this._myCurrentFrameRaycastsPerformed = 0;\r\n        this._myMaxFrameRaycastsPerformed = 0;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        this._myCurrentFrameRaycastsPerformed = 0;\r\n        PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts = 0;\r\n    }\r\n\r\n    checkMovement(movement, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n        PP.CollisionCheckBridge.checkMovement(movement, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n\r\n        this._myLastCheckRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    checkTeleportToPosition(teleportPosition, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n        PP.CollisionCheckBridge.checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n\r\n        this._myLastCheckRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    checkTransform(checkTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n        PP.CollisionCheckBridge.checkTransform(checkTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n\r\n        this._myLastCheckRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    updateSurfaceInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n        let currentFramePerformedRaycasts = this._myCurrentFrameRaycastsPerformed;\r\n\r\n        this.updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n        this.updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n\r\n        this._myLastCheckRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts - currentFramePerformedRaycasts;\r\n        this._myCurrentFrameRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n        PP.CollisionCheckBridge.updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n\r\n        this._myLastCheckRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n        PP.CollisionCheckBridge.updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n\r\n        this._myLastCheckRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n};\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPP.CharacterCollisionSystem.prototype.checkTeleportToPosition = function () {\r\n    let teleportTransformQuat = PP.quat2_create();\r\n    return function checkTeleportToPosition(teleportPosition, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults) {\r\n        teleportTransformQuat.quat2_copy(currentTransformQuat);\r\n        teleportTransformQuat.quat2_setPosition(teleportPosition);\r\n        this.checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.CharacterCollisionSystem.prototype, \"checkTeleportToPosition\", { enumerable: false });", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.CharacterCollisionSystemComponent = class CharacterCollisionSystemComponent extends Component {\r\n    static TypeName = 'pp-character-collision-system';\r\n    static Properties = {};\r\n\r\n    init() {\r\n        PP.myCharacterCollisionSystem = new PP.CharacterCollisionSystem();\r\n    }\r\n\r\n    start() {\r\n    }\r\n\r\n    update(dt) {\r\n        PP.myCharacterCollisionSystem.update(dt);\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.CharacterCollisionSystemComponent);\r\n\r\nPP.myCharacterCollisionSystem = null;", "PP.CharacterController = class CharacterController {\r\n    constructor() {\r\n    }\r\n};\r\n", "PP.SyncedCharacterController = class SyncedCharacterController extends PP.CharacterController {\r\n    constructor() {\r\n        super();\r\n    }\r\n};", "PP.CharacterControllerUtils = {\r\n    computeGroundPerceivedAngle: function (surfaceNormal, direction, up) {\r\n        return this.computeSurfacePerceivedAngle(surfaceNormal, direction, up, true);\r\n    },\r\n    computeCeilingPerceivedAngle: function (surfaceNormal, direction, up) {\r\n        return this.computeSurfacePerceivedAngle(surfaceNormal, direction, up, false);\r\n    },\r\n    computeSurfacePerceivedAngle: function () {\r\n        let directionOnSurface = PP.vec3_create();\r\n        let verticalDirection = PP.vec3_create();\r\n        return function computeSurfacePerceivedAngle(surfaceNormal, direction, up, isGround) {\r\n            let surfacePerceivedAngle = 0;\r\n\r\n            verticalDirection.vec3_copy(up);\r\n            if (!isGround) {\r\n                verticalDirection.vec3_negate(verticalDirection);\r\n            }\r\n\r\n            let surfaceAngle = surfaceNormal.vec3_angle(verticalDirection);\r\n            if (surfaceAngle <= Math.PP_EPSILON_DEGREES) {\r\n                surfaceAngle = 0;\r\n            } else if (surfaceAngle >= 180 - Math.PP_EPSILON_DEGREES) {\r\n                surfaceAngle = 180;\r\n            }\r\n\r\n            directionOnSurface = direction.vec3_projectOnPlaneAlongAxis(surfaceNormal, up, directionOnSurface);\r\n            surfacePerceivedAngle = directionOnSurface.vec3_angle(direction);\r\n\r\n            let isFartherOnUp = directionOnSurface.vec3_isFartherAlongAxis(direction, up);\r\n            if ((!isFartherOnUp && isGround) || (isFartherOnUp && !isGround)) {\r\n                surfacePerceivedAngle *= -1;\r\n            }\r\n\r\n            if (Math.abs(surfacePerceivedAngle) >= surfaceAngle) {\r\n                if (surfaceAngle != 0 && surfaceAngle != 180) {\r\n                    surfacePerceivedAngle = surfaceAngle * Math.pp_sign(surfacePerceivedAngle);\r\n                } else {\r\n                    surfacePerceivedAngle = surfaceAngle;\r\n                }\r\n            }\r\n\r\n            return surfacePerceivedAngle;\r\n        };\r\n    }()\r\n};", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.CharacterControllerComponent = class CharacterControllerComponent extends Component {\r\n    static TypeName = 'pp-character-controller';\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myCharacterController = new PP.CharacterController();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myCharacterController.update(dt);\r\n    }\r\n\r\n    getCharacterController() {\r\n        return this._myCharacterController;\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.CharacterControllerComponent);", "PP.PlayerCharacterController = class PlayerCharacterController extends PP.SyncedCharacterController {\r\n    constructor() {\r\n        super();\r\n    }\r\n};", "PP.PlayerHeadCharacterController = class PlayerHeadCharacterController extends PP.SyncedCharacterController {\r\n    constructor() {\r\n        super();\r\n    }\r\n};", "PP.PlayerHandCharacterController = class PlayerHandCharacterController extends PP.SyncedCharacterController {\r\n    constructor() {\r\n        super();\r\n    }\r\n};", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.PlayerCharacterControllerComponent = class PlayerCharacterControllerComponent extends Component {\r\n    static TypeName = 'pp-player-character-controller';\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerCharacterController = new PP.PlayerCharacterController();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerCharacterController.update(dt);\r\n    }\r\n\r\n    getPlayerCharacterController() {\r\n        return this._myPlayerCharacterController;\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.PlayerCharacterControllerComponent);", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.PlayerHeadCharacterControllerComponent = class PlayerHeadCharacterControllerComponent extends Component {\r\n    static TypeName = 'pp-player-head-character-controller';\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerHeadCharacterController = new PP.PlayerHeadCharacterController();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerHeadCharacterController.update(dt);\r\n    }\r\n\r\n    getPlayerHeadCharacterController() {\r\n        return this._myPlayerHeadCharacterController;\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.PlayerHeadCharacterControllerComponent);", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.PlayerHandCharacterControllerComponent = class PlayerHandCharacterControllerComponent extends Component {\r\n    static TypeName = 'pp-player-hand-character-controller';\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerHandCharacterController = new PP.PlayerHandCharacterController();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerHandCharacterController.update(dt);\r\n    }\r\n\r\n    getPlayerHandCharacterController() {\r\n        return this._myPlayerHandCharacterController;\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.PlayerHandCharacterControllerComponent);", "WL.registerComponent('pp-grabbable', {\r\n    _myThrowLinearVelocityMultiplier: { type: WL.Type.Float, default: 1 },\r\n    _myThrowAngularVelocityMultiplier: { type: WL.Type.Float, default: 1 },\r\n    _myKinematicValueOnRelease: { type: WL.Type.Enum, values: ['true', 'false', 'keep'], default: 'false' },\r\n}, {\r\n    init: function () {\r\n        this._myIsGrabbed = false;\r\n\r\n        this._myGrabber = null;\r\n\r\n        this._myGrabCallbacks = new Map();      // Signature: callback(grabber, grabbable)\r\n        this._myThrowCallbacks = new Map();     // Signature: callback(grabber, grabbable)\r\n        this._myReleaseCallbacks = new Map();   // Signature: callback(grabber, grabbable, isThrow)\r\n    },\r\n    start: function () {\r\n        this._myOldParent = null;\r\n        this._myPhysX = this.object.pp_getComponent('physx');\r\n        this._myOldKinematicValue = null;\r\n    },\r\n    update(dt) {\r\n        if (!this._myPhysX) {\r\n            this._myPhysX = this.object.pp_getComponent('physx');\r\n        }\r\n\r\n    },\r\n    onDeactivate: function () {\r\n        this.release();\r\n    },\r\n    grab: function (grabber) {\r\n        if (!this.isGrabbed()) {\r\n            this._myOldKinematicValue = this._myPhysX.kinematic;\r\n        }\r\n\r\n        this.release();\r\n\r\n        this._myPhysX.kinematic = true;\r\n\r\n        this._myOldParent = null;\r\n        this.object.pp_setParent(grabber);\r\n\r\n        this._myIsGrabbed = true;\r\n\r\n        this._myGrabber = grabber;\r\n\r\n        this._myGrabCallbacks.forEach(function (callback) { callback(grabber, this); }.bind(this));\r\n    },\r\n    throw: function (linearVelocity, angularVelocity) {\r\n        if (this._myIsGrabbed) {\r\n            let grabber = this._myGrabber;\r\n\r\n            this._release();\r\n\r\n            //#TODO for now kinematic is not updated instantly, add the if as soon as it is\r\n            //if (!this._myPhysX.kinematic) {\r\n            this._myPhysX.linearVelocity = linearVelocity.vec3_scale(this._myThrowLinearVelocityMultiplier);\r\n            this._myPhysX.angularVelocity = angularVelocity.vec3_scale(this._myThrowAngularVelocityMultiplier);\r\n            //}\r\n\r\n            this._myThrowCallbacks.forEach(function (callback) { callback(grabber, this); }.bind(this));\r\n            this._myReleaseCallbacks.forEach(function (callback) { callback(grabber, this, true); }.bind(this));\r\n        }\r\n    },\r\n    release() {\r\n        if (this._myIsGrabbed) {\r\n            let grabber = this._myGrabber;\r\n\r\n            this._release();\r\n\r\n            this._myReleaseCallbacks.forEach(function (callback) { callback(grabber, this, false); }.bind(this));\r\n        }\r\n    },\r\n    getLinearVelocity() {\r\n        let linearVelocity = PP.vec3_create();\r\n\r\n        this._myPhysX.linearVelocity.vec3_clone(linearVelocity);\r\n\r\n        return linearVelocity;\r\n    },\r\n    getAngularVelocity() {\r\n        return this.getAngularVelocityDegrees();\r\n    },\r\n    getAngularVelocityDegrees() {\r\n        let angularVelocityDegrees = PP.vec3_create();\r\n\r\n        this._myPhysX.angularVelocity.vec3_toDegrees(angularVelocityDegrees);\r\n\r\n        return angularVelocityDegrees;\r\n    },\r\n    getAngularVelocityRadians() {\r\n        let angularVelocityRadians = PP.vec3_create();\r\n\r\n        this._myPhysX.angularVelocity.vec3_clone(angularVelocityRadians);\r\n\r\n        return angularVelocityRadians;\r\n    },\r\n    isGrabbed() {\r\n        return this._myIsGrabbed;\r\n    },\r\n    getGrabber() {\r\n        return this._myGrabber;\r\n    },\r\n    registerGrabEventListener(id, callback) {\r\n        this._myGrabCallbacks.set(id, callback);\r\n    },\r\n    unregisterGrabEventListener(id) {\r\n        this._myGrabCallbacks.delete(id);\r\n    },\r\n    registerThrowEventListener(id, callback) {\r\n        this._myThrowCallbacks.set(id, callback);\r\n    },\r\n    unregisterThrowEventListener(id) {\r\n        this._myThrowCallbacks.delete(id);\r\n    },\r\n    registerReleaseEventListener(id, callback) {\r\n        this._myReleaseCallbacks.set(id, callback);\r\n    },\r\n    unregisterReleaseEventListener(id) {\r\n        this._myReleaseCallbacks.delete(id);\r\n    },\r\n    _release() {\r\n        this.object.pp_setParent(this._myOldParent);\r\n        this._myIsGrabbed = false;\r\n        this._myGrabber = null;\r\n\r\n        if (this._myKinematicValueOnRelease == 0) {\r\n            this._myPhysX.kinematic = true;\r\n        } else if (this._myKinematicValueOnRelease == 1) {\r\n            this._myPhysX.kinematic = false;\r\n        } else if (this._myOldKinematicValue != null) {\r\n            this._myPhysX.kinematic = this._myOldKinematicValue;\r\n        }\r\n\r\n        if (this._myPhysX.kinematic) {\r\n            this._myPhysX.linearVelocity = PP.vec3_create();\r\n            this._myPhysX.angularVelocity = PP.vec3_create();\r\n        }\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        clonedComponent._myThrowLinearVelocityMultiplier = this._myThrowLinearVelocityMultiplier;\r\n        clonedComponent._myThrowAngularVelocityMultiplier = this._myThrowAngularVelocityMultiplier;\r\n        clonedComponent._myKinematicValueOnRelease = this._myKinematicValueOnRelease;\r\n\r\n        return clonedComponent;\r\n    },\r\n    pp_clonePostProcess(clonedComponent) {\r\n        clonedComponent.start();\r\n    }\r\n});", "WL.registerComponent('pp-grabber-hand', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myGrabButton: { type: WL.Type.Enum, values: ['select', 'squeeze', 'both', 'both_exclusive'], default: 'squeeze' }, // both_exclusive means u can use both buttons but you have to use the same button you grabbed with to throw\r\n    _mySnapOnPivot: { type: WL.Type.Bool, default: false },\r\n    _myMaxNumberOfObjects: { type: WL.Type.Int, default: 1 }, // how many objects you can grab at the same time\r\n    // ADVANCED SETTINGS\r\n    _myThrowVelocitySource: { type: WL.Type.Enum, values: ['hand', 'grabbable'], default: 'hand' },\r\n    _myThrowLinearVelocityMultiplier: { type: WL.Type.Float, default: 1 }, // multiply the overall throw speed, so slow throws will be multiplied too\r\n    _myThrowMaxLinearSpeed: { type: WL.Type.Float, default: 15 },\r\n    _myThrowAngularVelocityMultiplier: { type: WL.Type.Float, default: 0.5 },\r\n    _myThrowMaxAngularSpeed: { type: WL.Type.Float, default: 1080 }, // degrees\r\n    _myThrowLinearVelocityBoost: { type: WL.Type.Float, default: 1.75 },   // this boost is applied from 0% to 100% based on how fast you throw, so slow throws are not affected\r\n    _myThrowLinearVelocityBoostMinSpeedThreshold: { type: WL.Type.Float, default: 0.6 },   // 0% boost is applied if plain throw speed is under this value\r\n    _myThrowLinearVelocityBoostMaxSpeedThreshold: { type: WL.Type.Float, default: 2.5 },   // 100% boost is applied if plain throw speed is over this value\r\n}, {\r\n    init: function () {\r\n        this._myGrabbables = [];\r\n\r\n        this._myGamepad = null;\r\n\r\n        this._myActiveGrabButton = null;\r\n\r\n        this._myLinearVelocityHistorySize = 5;\r\n        this._myLinearVelocityHistorySpeedAverageSamplesFromStart = 1;\r\n        this._myLinearVelocityHistoryDirectionAverageSamplesFromStart = 3;\r\n        this._myLinearVelocityHistoryDirectionAverageSkipFromStart = 0;\r\n\r\n        this._myHandLinearVelocityHistory = new Array(this._myLinearVelocityHistorySize);\r\n        this._myHandLinearVelocityHistory.fill(PP.vec3_create());\r\n\r\n        this._myAngularVelocityHistorySize = 1;\r\n        this._myHandAngularVelocityHistory = new Array(this._myAngularVelocityHistorySize);\r\n        this._myHandAngularVelocityHistory.fill(PP.vec3_create());\r\n\r\n        this._myThrowMaxAngularSpeedRadians = Math.pp_toRadians(this._myThrowMaxAngularSpeed);\r\n\r\n        this._myGrabCallbacks = new Map();      // Signature: callback(grabber, grabbable)\r\n        this._myThrowCallbacks = new Map();     // Signature: callback(grabber, grabbable)\r\n\r\n        this._myDebugActive = false;\r\n    },\r\n    start: function () {\r\n        if (this._myHandedness == PP.HandednessIndex.LEFT) {\r\n            this._myGamepad = PP.myLeftGamepad;\r\n        } else {\r\n            this._myGamepad = PP.myRightGamepad;\r\n        }\r\n\r\n        this._myPhysX = this.object.pp_getComponent('physx');\r\n        this._myCollisionsCollector = new PP.PhysicsCollisionCollector(this._myPhysX, true);\r\n\r\n        this._myAudioPrendi = null;\r\n    },\r\n    update: function (dt) {\r\n        if (Global.myReady) {\r\n            if (this._myAudioPrendi == null) {\r\n                this._myAudioPrendi = PP.myAudioManager.createAudioPlayer(AudioID.PRENDI_FRUTTO);\r\n            }\r\n        }\r\n\r\n        this._myCollisionsCollector.update(dt);\r\n\r\n        if (this._myGrabbables.length > 0) {\r\n            this._updateLinearVelocityHistory();\r\n            this._updateAngularVelocityHistory();\r\n        }\r\n    },\r\n    grab: function (grabButton = null) {\r\n        this._grab(grabButton);\r\n    },\r\n    throw: function (throwButton = null) {\r\n        this._throw(throwButton);\r\n    },\r\n    registerGrabEventListener(id, callback) {\r\n        this._myGrabCallbacks.set(id, callback);\r\n    },\r\n    unregisterGrabEventListener(id) {\r\n        this._myGrabCallbacks.delete(id);\r\n    },\r\n    registerThrowEventListener(id, callback) {\r\n        this._myThrowCallbacks.set(id, callback);\r\n    },\r\n    unregisterThrowEventListener(id) {\r\n        this._myThrowCallbacks.delete(id);\r\n    },\r\n    onActivate() {\r\n        if (this._myGamepad == null) {\r\n            return;\r\n        }\r\n\r\n        if (this._myGrabButton == 0) {\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, PP.GamepadButtonID.SELECT));\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, PP.GamepadButtonID.SELECT));\r\n        } else if (this._myGrabButton == 1) {\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, PP.GamepadButtonID.SQUEEZE));\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, PP.GamepadButtonID.SQUEEZE));\r\n        } else {\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, PP.GamepadButtonID.SQUEEZE));\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, PP.GamepadButtonID.SQUEEZE));\r\n\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, PP.GamepadButtonID.SELECT));\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, PP.GamepadButtonID.SELECT));\r\n        }\r\n    },\r\n    onDeactivate() {\r\n        if (this._myGamepad == null) {\r\n            return;\r\n        }\r\n\r\n        if (this._myGrabButton == 0) {\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_END, this);\r\n        } else if (this._myGrabButton == 1) {\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_END, this);\r\n        } else {\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_END, this);\r\n\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_END, this);\r\n        }\r\n    },\r\n    _grab: function (grabButton) {\r\n        if (this._myGrabbables.length >= this._myMaxNumberOfObjects) {\r\n            return;\r\n        }\r\n\r\n        if (this._myGrabButton == 2 || this._myActiveGrabButton == null || this._myActiveGrabButton == grabButton || grabButton == null) {\r\n            let grabbablesToGrab = [];\r\n\r\n            let collisions = this._myCollisionsCollector.getCollisions();\r\n            for (let i = 0; i < collisions.length; i++) {\r\n                let grabbable = collisions[i].getComponent(\"pp-grabbable\");\r\n                if (grabbable && grabbable.active) {\r\n                    grabbablesToGrab.push(grabbable);\r\n                }\r\n            }\r\n\r\n            let grabberPosition = this.object.pp_getPosition();\r\n            grabbablesToGrab.sort(function (first, second) {\r\n                let firstPosition = first.object.pp_getPosition();\r\n                let secondPosition = second.object.pp_getPosition();\r\n\r\n                let firstDistance = firstPosition.vec3_distance(grabberPosition);\r\n                let secondDistance = secondPosition.vec3_distance(grabberPosition);\r\n\r\n                return Math.pp_sign(firstDistance - secondDistance, 0);\r\n            });\r\n\r\n            for (let grabbableToGrab of grabbablesToGrab) {\r\n                if (!this._isAlreadyGrabbed(grabbableToGrab)) {\r\n                    let grabbableData = new PP.GrabberHandGrabbableData(grabbableToGrab, this._myThrowVelocitySource == 1, this._myLinearVelocityHistorySize, this._myAngularVelocityHistorySize);\r\n                    this._myGrabbables.push(grabbableData);\r\n                    grabbableToGrab.grab(this.object);\r\n                    grabbableToGrab.registerReleaseEventListener(this, this._onRelease.bind(this));\r\n\r\n                    if (this._mySnapOnPivot) {\r\n                        grabbableToGrab.object.resetTranslation();\r\n                    }\r\n\r\n                    this._myGrabCallbacks.forEach(function (callback) { callback(this, grabbableToGrab); }.bind(this));\r\n                }\r\n\r\n                if (this._myGrabbables.length >= this._myMaxNumberOfObjects) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (this._myGrabbables.length > 0) {\r\n                if (this._myActiveGrabButton == null) {\r\n                    this._myActiveGrabButton = grabButton;\r\n                }\r\n\r\n                let intensity = 0.35;\r\n                let pulseInfo = this._myGamepad.getPulseInfo();\r\n                if (pulseInfo.myIntensity <= intensity) {\r\n                    this._myGamepad.pulse(intensity, 0.1);\r\n                }\r\n                this._myAudioPrendi.setPosition(this.object.pp_getPosition());\r\n                this._myAudioPrendi.setPitch(Math.pp_random(1.25 - 0.15, 1.25 + 0.05));\r\n                this._myAudioPrendi.play();\r\n            }\r\n        }\r\n    },\r\n    _throw: function (throwButton) {\r\n        if (this._myGrabButton == 2 || this._myActiveGrabButton == null || this._myActiveGrabButton == throwButton || throwButton == null) {\r\n            if (this._myGrabbables.length > 0) {\r\n                let linearVelocity = null;\r\n                let angularVelocity = null;\r\n\r\n                if (this._myThrowVelocitySource == 0) {\r\n                    linearVelocity = this._computeReleaseLinearVelocity(this._myHandLinearVelocityHistory);\r\n                    angularVelocity = this._computeReleaseAngularVelocity(this._myHandAngularVelocityHistory);\r\n                }\r\n\r\n                for (let grabbableData of this._myGrabbables) {\r\n                    let grabbable = grabbableData.getGrabbable();\r\n\r\n                    grabbable.unregisterReleaseEventListener(this);\r\n\r\n                    if (this._myThrowVelocitySource == 1) {\r\n                        linearVelocity = this._computeReleaseLinearVelocity(grabbableData.getLinearVelocityHistory());\r\n                        angularVelocity = this._computeReleaseAngularVelocity(grabbableData.getAngularVelocityHistory());\r\n                    }\r\n\r\n                    grabbable.throw(linearVelocity, angularVelocity);\r\n\r\n                    this._myThrowCallbacks.forEach(function (callback) { callback(this, grabbable); }.bind(this));\r\n                }\r\n\r\n                this._myGrabbables = [];\r\n            }\r\n\r\n            this._myActiveGrabButton = null;\r\n        }\r\n    },\r\n    _onRelease(grabber, grabbable) {\r\n        grabbable.unregisterReleaseEventListener(this);\r\n        this._myGrabbables.pp_remove(element => element.getGrabbable() == grabbable);\r\n\r\n        if (this._myGrabbables.length <= 0) {\r\n            this._myActiveGrabButton = null;\r\n        }\r\n    },\r\n    _updateLinearVelocityHistory() {\r\n        let handPose = this._myGamepad.getHandPose();\r\n        this._myHandLinearVelocityHistory.unshift(handPose.getLinearVelocity().pp_clone());\r\n        this._myHandLinearVelocityHistory.pop();\r\n\r\n        for (let grabbable of this._myGrabbables) {\r\n            grabbable.updateLinearVelocityHistory();\r\n        }\r\n    },\r\n    _updateAngularVelocityHistory() {\r\n        let handPose = this._myGamepad.getHandPose();\r\n        this._myHandAngularVelocityHistory.unshift(handPose.getAngularVelocityRadians().pp_clone());\r\n        this._myHandAngularVelocityHistory.pop();\r\n\r\n        for (let grabbable of this._myGrabbables) {\r\n            grabbable.updateAngularVelocityHistory();\r\n        }\r\n    },\r\n    _computeReleaseLinearVelocity(linearVelocityHistory) {\r\n        //speed\r\n        let speed = linearVelocityHistory[0].vec3_length();\r\n        for (let i = 1; i < this._myLinearVelocityHistorySpeedAverageSamplesFromStart; i++) {\r\n            speed += linearVelocityHistory[i].vec3_length();\r\n        }\r\n        speed /= this._myLinearVelocityHistorySpeedAverageSamplesFromStart;\r\n\r\n        // This way I give an increasing and smooth boost to the throw so that when u want to perform a weak throw, the value is not changed, but if u put more speed\r\n        // it will be boosted to make it easier and still feel good and natural (value does not increase suddenly)\r\n        let speedEaseMultiplier = Math.pp_mapToRange(speed, this._myThrowLinearVelocityBoostMinSpeedThreshold, this._myThrowLinearVelocityBoostMaxSpeedThreshold, 0, 1);\r\n        speedEaseMultiplier = PP.EasingFunction.easeIn(speedEaseMultiplier);\r\n\r\n        // Add the boost to the speed\r\n        let extraSpeed = speed * (speedEaseMultiplier * this._myThrowLinearVelocityBoost);\r\n        speed += extraSpeed;\r\n        speed *= this._myThrowLinearVelocityMultiplier;\r\n        speed = Math.pp_clamp(speed, 0, this._myThrowMaxLinearSpeed);\r\n\r\n        if (this._myDebugActive) {\r\n            this._debugDirectionLines(linearVelocityHistory);\r\n        }\r\n\r\n        //direction\r\n        let directionCurrentWeight = this._myLinearVelocityHistoryDirectionAverageSamplesFromStart;\r\n        let lastDirectionIndex = this._myLinearVelocityHistoryDirectionAverageSkipFromStart + this._myLinearVelocityHistoryDirectionAverageSamplesFromStart;\r\n        let direction = PP.vec3_create();\r\n        for (let i = this._myLinearVelocityHistoryDirectionAverageSkipFromStart; i < lastDirectionIndex; i++) {\r\n            let currentDirection = linearVelocityHistory[i];\r\n            currentDirection.vec3_scale(directionCurrentWeight, currentDirection);\r\n            direction.vec3_add(currentDirection, direction);\r\n\r\n            directionCurrentWeight--;\r\n        }\r\n        direction.vec3_normalize(direction);\r\n\r\n        direction.vec3_scale(speed, direction);\r\n\r\n        return direction;\r\n    },\r\n    _computeReleaseAngularVelocity(angularVelocityHistory) {\r\n        let angularVelocity = angularVelocityHistory[0];\r\n\r\n        //speed\r\n        let speed = angularVelocity.vec3_length();\r\n\r\n        speed = Math.pp_clamp(speed * this._myThrowAngularVelocityMultiplier, 0, this._myThrowMaxAngularSpeedRadians);\r\n\r\n        //direction\r\n        let direction = angularVelocity;\r\n        direction.vec3_normalize(direction);\r\n\r\n        direction.vec3_scale(speed, direction);\r\n\r\n        return direction;\r\n    },\r\n    _debugDirectionLines(linearVelocityHistory) {\r\n        for (let j = this._myLinearVelocityHistoryDirectionAverageSkipFromStart + this._myLinearVelocityHistoryDirectionAverageSamplesFromStart; j > this._myLinearVelocityHistoryDirectionAverageSkipFromStart; j--) {\r\n\r\n            let directionCurrentWeight = j - this._myLinearVelocityHistoryDirectionAverageSkipFromStart;\r\n            let lastDirectionIndex = j - this._myLinearVelocityHistoryDirectionAverageSkipFromStart;\r\n            let direction = PP.vec3_create();\r\n            for (let i = this._myLinearVelocityHistoryDirectionAverageSkipFromStart; i < lastDirectionIndex; i++) {\r\n                let currentDirection = linearVelocityHistory[i].pp_clone();\r\n                currentDirection.vec3_scale(directionCurrentWeight, currentDirection);\r\n                direction.vec3_add(currentDirection, direction);\r\n\r\n                directionCurrentWeight--;\r\n            }\r\n            direction.vec3_normalize(direction);\r\n\r\n            let color = 1 / j;\r\n\r\n            PP.myDebugVisualManager.drawLine(5, this.object.pp_getPosition(), direction, 0.2, PP.vec4_create(olor, color, color, 1));\r\n        }\r\n    },\r\n    _isAlreadyGrabbed(grabbable) {\r\n        let found = this._myGrabbables.pp_find(element => element.getGrabbable() == grabbable);\r\n        return found != null;\r\n    }\r\n});\r\n\r\nPP.GrabberHandGrabbableData = class GrabberHandGrabbableData {\r\n    constructor(grabbable, useGrabbableAsVelocitySource, linearVelocityHistorySize, angularVelocityHistorySize) {\r\n        this._myGrabbable = grabbable;\r\n        this._myUseGrabbableAsVelocitySource = useGrabbableAsVelocitySource;\r\n\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myLinearVelocityHistory = new Array(linearVelocityHistorySize);\r\n            this._myLinearVelocityHistory.fill(PP.vec3_create());\r\n\r\n            this._myAngularVelocityHistory = new Array(angularVelocityHistorySize);\r\n            this._myAngularVelocityHistory.fill(PP.vec3_create());\r\n        }\r\n    }\r\n\r\n    getGrabbable() {\r\n        return this._myGrabbable;\r\n    }\r\n\r\n    getLinearVelocityHistory() {\r\n        return this._myLinearVelocityHistory;\r\n    }\r\n\r\n    getAngularVelocityHistory() {\r\n        return this._myAngularVelocityHistory;\r\n    }\r\n\r\n    updateLinearVelocityHistory() {\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myLinearVelocityHistory.unshift(this._myGrabbable.getLinearVelocity());\r\n            this._myLinearVelocityHistory.pop();\r\n        }\r\n    }\r\n\r\n    updateAngularVelocityHistory() {\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myAngularVelocityHistory.unshift(this._myGrabbable.getAngularVelocityRadians());\r\n            this._myAngularVelocityHistory.pop();\r\n        }\r\n    }\r\n};", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.GlobalGravityComponent = class GlobalGravityComponent extends Component {\r\n    static TypeName = 'pp-global-gravity';\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.GlobalGravityComponent);\r\n\r\nPP.myGravityAcceleration = 0;\r\nPP.myGravityDirection = PP.vec3_create();", "PP.PlayerLocomotionSmooth = class PlayerLocomotionSmooth {\r\n    constructor() {\r\n    }\r\n};\r\n", "PP.PlayerLocomotionRotate = class PlayerLocomotionRotate {\r\n    constructor() {\r\n    }\r\n};\r\n", "PP.PlayerLocomotionGravity = class PlayerLocomotionGravity {\r\n    constructor() {\r\n    }\r\n};\r\n", "PP.PlayerLocomotionTeleport = class PlayerLocomotionTeleport {\r\n    constructor() {\r\n    }\r\n};\r\n", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.PlayerLocomotionTeleportComponent = class PlayerLocomotionTeleportComponent extends Component {\r\n    static TypeName = 'pp-player-locomotion-teleport';\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerLocomotionTeleport = new PP.PlayerLocomotionTeleport();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerLocomotionTeleport.update(dt);\r\n    }\r\n\r\n    getPlayerLocomotionTeleport() {\r\n        return this._myPlayerLocomotionTeleport;\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.PlayerLocomotionTeleportComponent);", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.PlayerLocomotionSmoothComponent = class PlayerLocomotionSmoothComponent extends Component {\r\n    static TypeName = 'pp-player-locomotion-smooth';\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerLocomotionSmooth = new PP.PlayerLocomotionSmooth();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerLocomotionSmooth.update(dt);\r\n    }\r\n\r\n    getPlayerLocomotionSmooth() {\r\n        return this._myPlayerLocomotionSmooth;\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.PlayerLocomotionSmoothComponent);", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.PlayerLocomotionRotateComponent = class PlayerLocomotionRotateComponent extends Component {\r\n    static TypeName = 'pp-player-locomotion-rotate';\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerLocomotionRotate = new PP.PlayerLocomotionRotate();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerLocomotionRotate.update(dt);\r\n    }\r\n\r\n    getPlayerLocomotionRotate() {\r\n        return this._myPlayerLocomotionRotate;\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.PlayerLocomotionRotateComponent);", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.PlayerLocomotionGravityComponent = class PlayerLocomotionGravityComponent extends Component {\r\n    static TypeName = 'pp-player-locomotion-gravity';\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerLocomotionGravity = new PP.PlayerLocomotionGravity();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerLocomotionGravity.update(dt);\r\n    }\r\n\r\n    getPlayerLocomotionGravity() {\r\n        return this._myPlayerLocomotionGravity;\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.PlayerLocomotionGravityComponent);", "PP.CAUtils = {\r\n    _myDummyServer: null,\r\n    _myUseDummyServerOnSDKMissing: false,\r\n    _myUseDummyServerOnError: false,\r\n    setUseDummyServerOnSDKMissing: function (useDummyServer) {\r\n        PP.CAUtils._myUseDummyServerOnSDKMissing = useDummyServer;\r\n    },\r\n    setUseDummyServerOnError: function (useDummyServer) {\r\n        PP.CAUtils._myUseDummyServerOnError = useDummyServer;\r\n    },\r\n    setDummyServer: function (dummyServer) {\r\n        PP.CAUtils._myDummyServer = dummyServer;\r\n    },\r\n    isUseDummyServerOnSDKMissing: function () {\r\n        return PP.CAUtils._myUseDummyServerOnSDKMissing;\r\n    },\r\n    isUseDummyServerOnError: function () {\r\n        return PP.CAUtils._myUseDummyServerOnError;\r\n    },\r\n    getDummyServer: function () {\r\n        return PP.CAUtils._myDummyServer;\r\n    },\r\n    isSDKAvailable: function () {\r\n        return \"casdk\" in window;\r\n    },\r\n    getLeaderboard: function (leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError, overrideUseDummyServer = null) {\r\n        if (PP.CAUtils.isSDKAvailable()) {\r\n            if (!isAroundPlayer) {\r\n                casdk.getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount).then(function (result) {\r\n                    if (result.leaderboard) {\r\n                        if (callbackOnDone) {\r\n                            callbackOnDone(result.leaderboard);\r\n                        }\r\n                    } else {\r\n                        if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                            (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                            PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                        } else if (callbackOnError) {\r\n                            let error = {};\r\n                            error.reason = \"Get leaderboard failed\";\r\n                            error.type = PP.CAUtils.ErrorType.GET_LEADERBOARD_FAILED;\r\n                            callbackOnError(error, result);\r\n                        }\r\n                    }\r\n                }).catch(function (result) {\r\n                    if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                        (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                        PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                    } else if (callbackOnError) {\r\n                        let error = {};\r\n                        error.reason = \"Get leaderboard failed\";\r\n                        error.type = PP.CAUtils.ErrorType.GET_LEADERBOARD_FAILED;\r\n                        callbackOnError(error, result);\r\n                    }\r\n                });\r\n            } else {\r\n                PP.CAUtils.getUser(\r\n                    function (user) {\r\n                        let userName = user.displayName;\r\n                        casdk.getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount).then(function (result) {\r\n                            if (result.leaderboard) {\r\n                                let userValid = false;\r\n                                for (let value of result.leaderboard) {\r\n                                    if (value.displayName == userName && value.score != 0) {\r\n                                        userValid = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (userValid) {\r\n                                    if (callbackOnDone) {\r\n                                        callbackOnDone(result.leaderboard);\r\n                                    }\r\n                                } else {\r\n                                    if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                                        (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                                        PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                                    } else if (callbackOnError) {\r\n                                        let error = {};\r\n                                        error.reason = \"Searching for around player but the user has not submitted a score yet\";\r\n                                        error.type = PP.CAUtils.ErrorType.USER_HAS_NO_SCORE;\r\n                                        callbackOnError(error, result);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                                    (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                                    PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                                } else if (callbackOnError) {\r\n                                    let error = {};\r\n                                    error.reason = \"Get leaderboard failed\";\r\n                                    error.type = PP.CAUtils.ErrorType.GET_LEADERBOARD_FAILED;\r\n                                    callbackOnError(error, result);\r\n                                }\r\n                            }\r\n                        }).catch(function (result) {\r\n                            if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                                (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                                PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                            } else if (callbackOnError) {\r\n                                let error = {};\r\n                                error.reason = \"Get leaderboard failed\";\r\n                                error.type = PP.CAUtils.ErrorType.GET_LEADERBOARD_FAILED;\r\n                                callbackOnError(error, result);\r\n                            }\r\n                        });\r\n\r\n                    },\r\n                    function () {\r\n                        if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                            (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                            PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                        } else if (callbackOnError) {\r\n                            let error = {};\r\n                            error.reason = \"Searching for around player but the user can't be retrieved\";\r\n                            error.type = PP.CAUtils.ErrorType.GET_USER_FAILED;\r\n                            callbackOnError(error, result);\r\n                        }\r\n                    },\r\n                    false);\r\n            }\r\n        } else {\r\n            if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                (PP.CAUtils._myUseDummyServerOnSDKMissing && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n            } else if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Construct Arcade SDK missing\";\r\n                error.type = PP.CAUtils.ErrorType.CA_SDK_MISSING;\r\n                callbackOnError(error, null);\r\n            }\r\n        }\r\n    },\r\n    getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError) {\r\n        if (PP.CAUtils._myDummyServer) {\r\n            PP.CAUtils._myDummyServer.getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n        } else {\r\n            if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Dummy server not initialized\";\r\n                error.type = PP.CAUtils.ErrorType.DUMMY_NOT_INITIALIZED;\r\n                callbackOnError(error);\r\n            }\r\n        }\r\n    },\r\n    submitScore: function (leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError, overrideUseDummyServer = null) {\r\n        if (PP.CAUtils.isSDKAvailable()) {\r\n            casdk.submitScore(leaderboardID, scoreToSubmit).then(function (result) {\r\n                if (result.error) {\r\n                    if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.submitScore != null &&\r\n                        (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                        PP.CAUtils.submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n                    } else if (callbackOnError) {\r\n                        let error = {};\r\n                        error.reason = \"Submit score failed\";\r\n                        error.type = PP.CAUtils.ErrorType.SUBMIT_SCORE_FAILED;\r\n                        callbackOnError(error, result);\r\n                    }\r\n                } else {\r\n                    callbackOnDone();\r\n                }\r\n            }).catch(function (result) {\r\n                if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.submitScore != null &&\r\n                    (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                    PP.CAUtils.submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n                } else if (callbackOnError) {\r\n                    let error = {};\r\n                    error.reason = \"Submit score failed\";\r\n                    error.type = PP.CAUtils.ErrorType.SUBMIT_SCORE_FAILED;\r\n                    callbackOnError(error, result);\r\n                }\r\n            });\r\n        } else {\r\n            if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.submitScore != null &&\r\n                (PP.CAUtils._myUseDummyServerOnSDKMissing && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                PP.CAUtils.submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n            } else if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Construct Arcade SDK missing\";\r\n                error.type = PP.CAUtils.ErrorType.CA_SDK_MISSING;\r\n                callbackOnError(error, null);\r\n            }\r\n        }\r\n    },\r\n    submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError) {\r\n        if (PP.CAUtils._myDummyServer) {\r\n            PP.CAUtils._myDummyServer.submitScore(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n        } else {\r\n            if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Dummy server not initialized\";\r\n                error.type = PP.CAUtils.ErrorType.DUMMY_NOT_INITIALIZED;\r\n                callbackOnError(error);\r\n            }\r\n        }\r\n    },\r\n    getUser: function (callbackOnDone, callbackOnError, overrideUseDummyServer = null) {\r\n        if (PP.CAUtils.isSDKAvailable()) {\r\n            casdk.getUser().then(function (result) {\r\n                if (result.user) {\r\n                    if (callbackOnDone) {\r\n                        callbackOnDone(result.user);\r\n                    }\r\n                } else {\r\n                    if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getUser != null &&\r\n                        (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                        PP.CAUtils.getUserDummy(callbackOnDone, callbackOnError);\r\n                    } else if (callbackOnError) {\r\n                        let error = {};\r\n                        error.reason = \"Get user failed\";\r\n                        error.type = PP.CAUtils.ErrorType.GET_USER_FAILED;\r\n                        callbackOnError(error, result);\r\n                    }\r\n                }\r\n            }).catch(function (result) {\r\n                if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getUser != null &&\r\n                    (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                    PP.CAUtils.getUserDummy(callbackOnDone, callbackOnError);\r\n                } else if (callbackOnError) {\r\n                    let error = {};\r\n                    error.reason = \"Get user failed\";\r\n                    error.type = PP.CAUtils.ErrorType.GET_USER_FAILED;\r\n                    callbackOnError(error, result);\r\n                }\r\n            });\r\n        } else {\r\n            if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getUser != null &&\r\n                (PP.CAUtils._myUseDummyServerOnSDKMissing && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                PP.CAUtils.getUserDummy(callbackOnDone, callbackOnError);\r\n            } else if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Construct Arcade SDK missing\";\r\n                error.type = PP.CAUtils.ErrorType.CA_SDK_MISSING;\r\n                callbackOnError(error, null);\r\n            }\r\n        }\r\n    },\r\n    getUserDummy(callbackOnDone, callbackOnError) {\r\n        if (PP.CAUtils._myDummyServer) {\r\n            PP.CAUtils._myDummyServer.getUser(callbackOnDone, callbackOnError);\r\n        } else {\r\n            if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Dummy server not initialized\";\r\n                error.type = PP.CAUtils.ErrorType.DUMMY_NOT_INITIALIZED;\r\n                callbackOnError(error);\r\n            }\r\n        }\r\n    },\r\n    ErrorType: {\r\n        DUMMY_NOT_INITIALIZED: 0,\r\n        CA_SDK_MISSING: 1,\r\n        SUBMIT_SCORE_FAILED: 2,\r\n        GET_LEADERBOARD_FAILED: 3,\r\n        GET_USER_FAILED: 4,\r\n        USER_HAS_NO_SCORE: 5\r\n    }\r\n};\r\n\r\nPP.CADummyServer = class CADummyServer {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError) {\r\n        let leaderboard = null;\r\n\r\n        if (PP.CAUtils.isSDKAvailable()) {\r\n            leaderboard = [\r\n                { rank: 0, displayName: \"An\", score: 0 },\r\n                { rank: 1, displayName: \"Error\", score: 0 },\r\n                { rank: 2, displayName: \"Has\", score: 0 },\r\n                { rank: 3, displayName: \"Occurred\", score: 0 },\r\n                { rank: 4, displayName: \"While\", score: 0 },\r\n                { rank: 5, displayName: \"Trying\", score: 0 },\r\n                { rank: 6, displayName: \"To\", score: 0 },\r\n                { rank: 7, displayName: \"Retrieve\", score: 0 },\r\n                { rank: 8, displayName: \"The\", score: 0 },\r\n                { rank: 9, displayName: \"Leaderboard\", score: 0 }\r\n            ];\r\n        } else {\r\n            if (isAroundPlayer) {\r\n                leaderboard = [\r\n                    { rank: 0, displayName: \"Sign In\", score: 0 },\r\n                    { rank: 1, displayName: \"And\", score: 0 },\r\n                    { rank: 2, displayName: \"Play\", score: 0 },\r\n                    { rank: 3, displayName: \"On\", score: 0 },\r\n                    { rank: 4, displayName: \"HeyVR\", score: 0 },\r\n                    { rank: 5, displayName: \"To\", score: 0 },\r\n                    { rank: 6, displayName: \"Submit\", score: 0 },\r\n                    { rank: 7, displayName: \"Your\", score: 0 },\r\n                    { rank: 8, displayName: \"Own\", score: 0 },\r\n                    { rank: 9, displayName: \"Score\", score: 0 }\r\n                ];\r\n            } else {\r\n                leaderboard = [\r\n                    { rank: 0, displayName: \"The\", score: 0 },\r\n                    { rank: 1, displayName: \"Top 10\", score: 0 },\r\n                    { rank: 2, displayName: \"Leaderboard\", score: 0 },\r\n                    { rank: 3, displayName: \"Is\", score: 0 },\r\n                    { rank: 4, displayName: \"Available\", score: 0 },\r\n                    { rank: 5, displayName: \"Only\", score: 0 },\r\n                    { rank: 5, displayName: \"When\", score: 0 },\r\n                    { rank: 7, displayName: \"Playing\", score: 0 },\r\n                    { rank: 8, displayName: \"On\", score: 0 },\r\n                    { rank: 9, displayName: \"HeyVR\", score: 0 },\r\n                ];\r\n            }\r\n        }\r\n\r\n        while (leaderboard.length > scoresAmount) {\r\n            leaderboard.pop();\r\n        }\r\n\r\n        if (callbackOnDone) {\r\n            callbackOnDone(leaderboard);\r\n        }\r\n    }\r\n\r\n    submitScore(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError) {\r\n        if (callbackOnDone) {\r\n            callbackOnDone();\r\n        }\r\n    }\r\n\r\n    getUser(callbackOnDone, callbackOnError) {\r\n        let user = {};\r\n        user.displayName = \"Jonathan\";\r\n\r\n        if (callbackOnDone) {\r\n            callbackOnDone(user);\r\n        }\r\n    }\r\n};", "WL.registerComponent('pp-finger-cursor', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myEnableMultipleClicks: { type: WL.Type.Bool, default: true },\r\n    _myCollisionGroup: { type: WL.Type.Int, default: 1 },\r\n    _myCollisionSize: { type: WL.Type.Float, default: 0.0125 },\r\n    _myCursorObject: { type: WL.Type.Object, default: null }\r\n}, {\r\n    init: function () {\r\n        this._myLastTarget = null;\r\n        this._myReferenceSpace = null;\r\n        this._myHandInputSource = null;\r\n        this._myHandednessString = ['left', 'right'][this._myHandedness];\r\n\r\n        this._myDoubleClickTimer = 0;\r\n        this._myTripleClickTimer = 0;\r\n        this._myMultipleClickObject = null;\r\n        this._myMultipleClickDelay = 0.3;\r\n    },\r\n    start: function () {\r\n        this._myCursorObjectRoot = WL.scene.addObject(this.object);\r\n\r\n        if (this._myCursorObject == null) {\r\n            this._myCursorObject = this._myCursorObjectRoot.pp_addObject();\r\n        } else {\r\n            this._myCursorObject.pp_setParent(this._myCursorObjectRoot);\r\n        }\r\n\r\n        this._myCollisionComponent = this._myCursorObject.addComponent('collision');\r\n        this._myCollisionComponent.collider = WL.Collider.Sphere;\r\n        this._myCollisionComponent.group = 1 << this._myCollisionGroup;\r\n        this._myCollisionComponent.extents = PP.vec3_create(this._myCollisionSize, this._myCollisionSize, this._myCollisionSize);\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    },\r\n    update: function (dt) {\r\n        if (this._myDoubleClickTimer > 0) {\r\n            this._myDoubleClickTimer -= dt;\r\n        }\r\n\r\n        if (this._myTripleClickTimer > 0) {\r\n            this._myTripleClickTimer -= dt;\r\n        }\r\n\r\n        this._myCursorObjectRoot.pp_setTransformQuat(PP.myPlayerObjects.myPlayerPivot.pp_getTransformQuat());\r\n        this._updateHand();\r\n\r\n        if (this._myHandInputSource) {\r\n            let overlaps = this._myCollisionComponent.queryOverlaps();\r\n            let overlapTarget = null;\r\n            for (let i = 0; i < overlaps.length; ++i) {\r\n                let object = overlaps[i].object;\r\n                let target = object.getComponent('cursor-target');\r\n                if (target && (overlapTarget == null || !target.isSurface)) {\r\n                    overlapTarget = target;\r\n                    if (!target.isSurface) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!overlapTarget) {\r\n                this._targetTouchEnd();\r\n            } else if (!overlapTarget.equals(this._myLastTarget)) {\r\n                this._targetTouchEnd();\r\n\r\n                this._myLastTarget = overlapTarget;\r\n\r\n                this._targetTouchStart();\r\n            }\r\n        } else {\r\n            this._targetTouchEnd();\r\n        }\r\n    },\r\n    _targetTouchStart: function () {\r\n        this._myLastTarget.onHover(this._myLastTarget.object, this);\r\n        this._myLastTarget.onDown(this._myLastTarget.object, this);\r\n    },\r\n    _targetTouchEnd: function () {\r\n        if (this._myLastTarget) {\r\n            if (this._myEnableMultipleClicks && this._myTripleClickTimer > 0 && this._myMultipleClickObject && this._myMultipleClickObject.equals(this._myLastTarget.object)) {\r\n                this._myLastTarget.onTripleClick(this._myLastTarget.object, this);\r\n\r\n                this._myTripleClickTimer = 0;\r\n            } else if (this._myEnableMultipleClicks && this._myDoubleClickTimer > 0 && this._myMultipleClickObject && this._myMultipleClickObject.equals(this._myLastTarget.object)) {\r\n                this._myLastTarget.onDoubleClick(this._myLastTarget.object, this);\r\n\r\n                this._myTripleClickTimer = this._myMultipleClickDelay;\r\n                this._myDoubleClickTimer = 0;\r\n            } else {\r\n                this._myLastTarget.onClick(this._myLastTarget.object, this);\r\n\r\n                this._myTripleClickTimer = 0;\r\n                this._myDoubleClickTimer = this._myMultipleClickDelay;\r\n                this._myMultipleClickObject = this._myLastTarget.object;\r\n            }\r\n\r\n            this._myLastTarget.onUp(this._myLastTarget.object, this);\r\n            this._myLastTarget.onUnhover(this._myLastTarget.object, this);\r\n\r\n            this._myLastTarget = null;\r\n        }\r\n    },\r\n    onActivate: function () {\r\n        this._myCursorObjectRoot.pp_setActive(true);\r\n    },\r\n    onDeactivate: function () {\r\n        this._myCursorObjectRoot.pp_setActive(false);\r\n    },\r\n    _updateHand() {\r\n        this._myHandInputSource = PP.InputUtils.getInputSource(this._myHandednessString, PP.InputSourceType.TRACKED_HAND);\r\n\r\n        if (this._myHandInputSource) {\r\n            let tip = Module['webxr_frame'].getJointPose(this._myHandInputSource.hand.get(\"index-finger-tip\"), this._myReferenceSpace);\r\n\r\n            if (tip) {\r\n                this._myCursorObject.pp_setRotationLocalQuat([\r\n                    tip.transform.orientation.x,\r\n                    tip.transform.orientation.y,\r\n                    tip.transform.orientation.z,\r\n                    tip.transform.orientation.w]);\r\n\r\n                this._myCursorObject.pp_setPositionLocal([\r\n                    tip.transform.position.x,\r\n                    tip.transform.position.y,\r\n                    tip.transform.position.z]);\r\n            }\r\n        }\r\n    },\r\n    _onXRSessionStart: function (session) {\r\n        session.requestReferenceSpace(WebXR.refSpace).then(function (referenceSpace) { this._myReferenceSpace = referenceSpace; }.bind(this));\r\n    },\r\n    _onXRSessionEnd: function (session) {\r\n        this._myReferenceSpace = null;\r\n    }\r\n});", "\r\nPP.Handedness = {\r\n    LEFT: \"left\",\r\n    RIGHT: \"right\"\r\n};\r\n\r\nPP.HandednessIndex = {\r\n    LEFT: 0,\r\n    RIGHT: 1\r\n};\r\n\r\nPP.InputSourceType = {\r\n    GAMEPAD: 0,\r\n    TRACKED_HAND: 1\r\n};\r\n\r\nPP.TrackedHandJointID = {\r\n    WRIST: \"wrist\",\r\n\r\n    THUMB_METACARPAL: \"thumb-metacarpal\",\r\n    THUMB_PHALANX_PROXIMAL: \"thumb-phalanx-proximal\",\r\n    THUMB_PHALANX_DISTAL: \"thumb-phalanx-distal\",\r\n    THUMB_TIP: \"thumb-tip\",\r\n\r\n    INDEX_FINGER_METACARPAL: \"index-finger-metacarpal\",\r\n    INDEX_FINGER_PHALANX_PROXIMAL: \"index-finger-phalanx-proximal\",\r\n    INDEX_FINGER_PHALANX_INTERMEDIATE: \"index-finger-phalanx-intermediate\",\r\n    INDEX_FINGER_PHALANX_DISTAL: \"index-finger-phalanx-distal\",\r\n    INDEX_FINGER_TIP: \"index-finger-tip\",\r\n\r\n    MIDDLE_FINGER_METACARPAL: \"middle-finger-metacarpal\",\r\n    MIDDLE_FINGER_PHALANX_PROXIMAL: \"middle-finger-phalanx-proximal\",\r\n    MIDDLE_FINGER_PHALANX_INTERMEDIATE: \"middle-finger-phalanx-intermediate\",\r\n    MIDDLE_FINGER_PHALANX_DISTAL: \"middle-finger-phalanx-distal\",\r\n    MIDDLE_FINGER_TIP: \"middle-finger-tip\",\r\n\r\n    RING_FINGER_METACARPAL: \"ring-finger-metacarpal\",\r\n    RING_FINGER_PHALANX_PROXIMAL: \"ring-finger-phalanx-proximal\",\r\n    RING_FINGER_PHALANX_INTERMEDIATE: \"ring-finger-phalanx-intermediate\",\r\n    RING_FINGER_PHALANX_DISTAL: \"ring-finger-phalanx-distal\",\r\n    RING_FINGER_TIP: \"ring-finger-tip\",\r\n\r\n    PINKY_FINGER_METACARPAL: \"pinky-finger-metacarpal\",\r\n    PINKY_FINGER_PHALANX_PROXIMAL: \"pinky-finger-phalanx-proximal\",\r\n    PINKY_FINGER_PHALANX_INTERMEDIATE: \"pinky-finger-phalanx-intermediate\",\r\n    PINKY_FINGER_PHALANX_DISTAL: \"pinky-finger-phalanx-distal\",\r\n    PINKY_FINGER_TIP: \"pinky-finger-tip\",\r\n};\r\n\r\nPP.TrackedHandJointIDIndex = {\r\n    WRIST: 0,\r\n\r\n    THUMB_METACARPAL: 1,\r\n    THUMB_PHALANX_PROXIMAL: 2,\r\n    THUMB_PHALANX_DISTAL: 3,\r\n    THUMB_TIP: 4,\r\n\r\n    INDEX_FINGER_METACARPAL: 5,\r\n    INDEX_FINGER_PHALANX_PROXIMAL: 6,\r\n    INDEX_FINGER_PHALANX_INTERMEDIATE: 7,\r\n    INDEX_FINGER_PHALANX_DISTAL: 8,\r\n    INDEX_FINGER_TIP: 9,\r\n\r\n    MIDDLE_FINGER_METACARPAL: 10,\r\n    MIDDLE_FINGER_PHALANX_PROXIMAL: 11,\r\n    MIDDLE_FINGER_PHALANX_INTERMEDIATE: 12,\r\n    MIDDLE_FINGER_PHALANX_DISTAL: 13,\r\n    MIDDLE_FINGER_TIP: 14,\r\n\r\n    RING_FINGER_METACARPAL: 15,\r\n    RING_FINGER_PHALANX_PROXIMAL: 16,\r\n    RING_FINGER_PHALANX_INTERMEDIATE: 17,\r\n    RING_FINGER_PHALANX_DISTAL: 18,\r\n    RING_FINGER_TIP: 19,\r\n\r\n    PINKY_FINGER_METACARPAL: 20,\r\n    PINKY_FINGER_PHALANX_PROXIMAL: 21,\r\n    PINKY_FINGER_PHALANX_INTERMEDIATE: 22,\r\n    PINKY_FINGER_PHALANX_DISTAL: 23,\r\n    PINKY_FINGER_TIP: 24,\r\n};", "PP.InputUtils = {\r\n    getHandednessByIndex: function (index) {\r\n        let handedness = null;\r\n\r\n        switch (index) {\r\n            case PP.HandednessIndex.LEFT:\r\n                handedness = PP.Handedness.LEFT;\r\n                break;\r\n            case PP.HandednessIndex.RIGHT:\r\n                handedness = PP.Handedness.RIGHT;\r\n                break;\r\n        }\r\n\r\n        return handedness;\r\n    },\r\n    getInputSource: function (handedness, inputSourceType) {\r\n        let inputSource = null;\r\n\r\n        if (WL.xrSession && WL.xrSession.inputSources) {\r\n            for (let i = 0; i < WL.xrSession.inputSources.length; i++) {\r\n                let input = WL.xrSession.inputSources[i];\r\n\r\n                let isCorrectType = (!inputSourceType) || (inputSourceType == PP.InputSourceType.GAMEPAD && !input.hand) || (inputSourceType == PP.InputSourceType.TRACKED_HAND && input.hand);\r\n                if (isCorrectType && input.handedness == handedness) {\r\n                    inputSource = input;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return inputSource;\r\n    },\r\n    getInputSourceTypeByHandedness: function (handedness) {\r\n        let inputSource = PP.InputUtils.getInputSource(handedness);\r\n\r\n        return PP.InputUtils.getInputSourceType(inputSource);\r\n    },\r\n    getInputSourceType: function (inputSource) {\r\n        let inputSourceType = null;\r\n\r\n        if (inputSource) {\r\n            if (inputSource.hand) {\r\n                inputSourceType = PP.InputSourceType.TRACKED_HAND;\r\n            } else {\r\n                inputSourceType = PP.InputSourceType.GAMEPAD;\r\n            }\r\n        }\r\n\r\n        return inputSourceType;\r\n    },\r\n    getOppositeHandedness: function (handedness) {\r\n        let oppositeHandedness = null;\r\n\r\n        switch (handedness) {\r\n            case PP.Handedness.LEFT:\r\n                oppositeHandedness = PP.Handedness.RIGHT;\r\n                break;\r\n            case PP.Handedness.RIGHT:\r\n                oppositeHandedness = PP.Handedness.LEFT;\r\n                break;\r\n        }\r\n\r\n        return oppositeHandedness;\r\n    },\r\n    getJointIDByIndex: function (index) {\r\n        let jointID = null;\r\n\r\n        let jointIDKey = null;\r\n        for (let jointIDIndexKey in PP.TrackedHandJointIDIndex) {\r\n            if (PP.TrackedHandJointIDIndex[jointIDIndexKey] == index) {\r\n                jointIDKey = jointIDIndexKey;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (jointIDKey != null) {\r\n            jointID = PP.TrackedHandJointID[jointIDKey];\r\n        }\r\n\r\n        return jointID;\r\n    },\r\n};", "PP.KeyID = {\r\n    _0: \"0\",\r\n    _1: \"1\",\r\n    _2: \"2\",\r\n    _3: \"3\",\r\n    _4: \"4\",\r\n    _5: \"5\",\r\n    _6: \"6\",\r\n    _7: \"7\",\r\n    _8: \"8\",\r\n    _9: \"9\",\r\n\r\n    A: \"A\",\r\n    B: \"B\",\r\n    C: \"C\",\r\n    D: \"D\",\r\n    E: \"E\",\r\n    F: \"F\",\r\n    G: \"G\",\r\n    H: \"H\",\r\n    I: \"I\",\r\n    J: \"J\",\r\n    K: \"K\",\r\n    L: \"L\",\r\n    M: \"M\",\r\n    N: \"N\",\r\n    O: \"O\",\r\n    P: \"P\",\r\n    Q: \"Q\",\r\n    R: \"R\",\r\n    S: \"S\",\r\n    T: \"T\",\r\n    U: \"U\",\r\n    V: \"V\",\r\n    W: \"W\",\r\n    X: \"X\",\r\n    Y: \"Y\",\r\n    Z: \"Z\",\r\n\r\n    a: \"a\",\r\n    b: \"b\",\r\n    c: \"c\",\r\n    d: \"d\",\r\n    e: \"e\",\r\n    f: \"f\",\r\n    g: \"g\",\r\n    h: \"h\",\r\n    i: \"i\",\r\n    j: \"j\",\r\n    k: \"k\",\r\n    l: \"l\",\r\n    m: \"m\",\r\n    n: \"n\",\r\n    o: \"o\",\r\n    p: \"p\",\r\n    q: \"q\",\r\n    r: \"r\",\r\n    s: \"s\",\r\n    t: \"t\",\r\n    u: \"u\",\r\n    v: \"v\",\r\n    w: \"w\",\r\n    x: \"x\",\r\n    y: \"y\",\r\n    z: \"z\",\r\n\r\n    UP: \"ArrowUp\",\r\n    DOWN: \"ArrowDown\",\r\n    LEFT: \"ArrowLeft\",\r\n    RIGHT: \"ArrowRight\",\r\n\r\n    SPACE: \" \",\r\n    ENTER: \"Enter\",\r\n    BACKSPACE: \"Backspace\",\r\n    ESC: \"Escape\",\r\n\r\n    SHIFT_LEFT: \"ShiftLeft\",\r\n    SHIFT_RIGHT: \"ShiftRight\",\r\n    CONTROL_LEFT: \"ControlLeft\",\r\n    CONTROL_RIGHT: \"ControlRight\",\r\n    ALT_LEFT: \"AltLeft\",\r\n    ALT_RIGHT: \"AltRight\",\r\n};\r\n\r\nPP.Keyboard = class Keyboard {\r\n    constructor() {\r\n        this._myKeyInfos = new Map();\r\n\r\n        for (let key in PP.KeyID) {\r\n            this.addKey(PP.KeyID[key]);\r\n        }\r\n    }\r\n\r\n    isKeyPressed(keyID) {\r\n        let isPressed = false;\r\n\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            isPressed = this._myKeyInfos.get(keyID).myIsPressed;\r\n        }\r\n\r\n        return isPressed;\r\n    }\r\n\r\n    isKeyPressStart(keyID) {\r\n        let isPressStart = false;\r\n\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            isPressStart = this._myKeyInfos.get(keyID).myIsPressStart;\r\n        }\r\n\r\n        return isPressStart;\r\n    }\r\n\r\n    isKeyPressEnd(keyID) {\r\n        let isPressEnd = false;\r\n\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            isPressEnd = this._myKeyInfos.get(keyID).myIsPressEnd;\r\n        }\r\n\r\n        return isPressEnd;\r\n    }\r\n\r\n    addKey(keyID) {\r\n        this._myKeyInfos.set(keyID, this._createKeyInfo());\r\n    }\r\n\r\n    start() {\r\n        window.addEventListener('keydown', this._keyDown.bind(this));\r\n        window.addEventListener('keyup', this._keyUp.bind(this));\r\n    }\r\n\r\n    update(dt) {\r\n        if (!document.hasFocus()) {\r\n            for (let keyInfo of this._myKeyInfos.values()) {\r\n                if (keyInfo.myIsPressed) {\r\n                    keyInfo.myIsPressed = false;\r\n                    keyInfo.myIsPressEndToProcess = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let keyInfo of this._myKeyInfos.values()) {\r\n            keyInfo.myIsPressStart = keyInfo.myIsPressStartToProcess;\r\n            keyInfo.myIsPressEnd = keyInfo.myIsPressEndToProcess;\r\n            keyInfo.myIsPressStartToProcess = false;\r\n            keyInfo.myIsPressEndToProcess = false;\r\n        }\r\n    }\r\n\r\n    _keyDown(event) {\r\n        this._keyPressedChanged(event.key, true);\r\n        if (event.key != event.code) {\r\n            this._keyPressedChanged(event.code, true);\r\n        }\r\n    }\r\n\r\n    _keyUp(event) {\r\n        this._keyPressedChanged(event.key, false);\r\n        if (event.key != event.code) {\r\n            this._keyPressedChanged(event.code, false);\r\n        }\r\n    }\r\n\r\n    _keyPressedChanged(keyID, isPressed) {\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            let keyInfo = this._myKeyInfos.get(keyID);\r\n\r\n            if (isPressed) {\r\n                keyInfo.myIsPressed = true;\r\n                keyInfo.myIsPressStartToProcess = true;\r\n            } else {\r\n                keyInfo.myIsPressed = false;\r\n                keyInfo.myIsPressEndToProcess = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    _createKeyInfo() {\r\n        return { myIsPressed: false, myIsPressStart: false, myIsPressStartToProcess: false, myIsPressEnd: false, myIsPressEndToProcess: false, };\r\n    }\r\n};", "PP.MouseButtonID = {\r\n    LEFT: 0,\r\n    MIDDLE: 1,\r\n    RIGHT: 2,\r\n};\r\n\r\nPP.Mouse = class Mouse {\r\n    constructor() {\r\n        // #TODO refactor Mouse/Keyboard/Gamepad and create a sort of parent ButtonHandler that have the base ButtonInfo and all of them inherit\r\n\r\n        this._myButtonInfos = new Map();\r\n        for (let key in PP.MouseButtonID) {\r\n            this._myButtonInfos.set(PP.MouseButtonID[key], this._createButtonInfo());\r\n        }\r\n\r\n        this._myPreventContextMenuCallback = this._preventContextMenu.bind(this);\r\n        this._myPreventMiddleButtonScrollCallback = this._preventMiddleButtonScroll.bind(this);\r\n\r\n        this._myInternalMousePosition = PP.vec2_create();\r\n        this._myScreenSize = PP.vec2_create();\r\n        this._updateScreenSize();\r\n\r\n        this._myResetMovingDelay = 0.15;\r\n        this._myResetMovingTimer = new PP.Timer(this._myResetMovingDelay, false);\r\n        this._myIsMoving = false;\r\n\r\n        this._myIsInsideView = false;\r\n        this._myIsValid = false;\r\n\r\n        this._myPointerUpOnPointerLeave = true;\r\n\r\n        this._myContextMenuActive = true;\r\n        this._myMiddleButtonScrollActive = true;\r\n\r\n        this._myPointerID = null;\r\n        this._myLastValidPointerEvent = null;\r\n\r\n        this._myPointerEventValidCallbacks = new Map();      // Signature: callback(event)\r\n\r\n        // Support Variables\r\n        this._myProjectionMatrixInverse = PP.mat4_create();\r\n        this._myRotationQuat = PP.quat_create();\r\n        this._myOriginWorld = PP.vec3_create();\r\n        this._myDirectionWorld = PP.vec3_create();\r\n    }\r\n\r\n    start() {\r\n        this._myOnPointerMoveCallback = this._onPointerAction.bind(this, this._onPointerMove.bind(this));\r\n        document.body.addEventListener(\"pointermove\", this._myOnPointerMoveCallback);\r\n        this._myOnPointerDownCallback = this._onPointerAction.bind(this, this._onPointerDown.bind(this));\r\n        document.body.addEventListener(\"pointerdown\", this._myOnPointerDownCallback);\r\n        this._myOnPointerUpCallback = this._onPointerAction.bind(this, this._onPointerUp.bind(this));\r\n        document.body.addEventListener(\"pointerup\", this._myOnPointerUpCallback);\r\n        this._myOnPointerLeaveCallback = this._onPointerLeave.bind(this);\r\n        document.body.addEventListener(\"pointerleave\", this._myOnPointerLeaveCallback);\r\n        this._myOnPointerEnterCallback = this._onPointerEnter.bind(this);\r\n        document.body.addEventListener(\"pointerenter\", this._myOnPointerEnterCallback);\r\n\r\n        // these are needed to being able to detect for example left and right click together, pointer only allow one down at a time\r\n        this._myOnMouseDownCallback = this._onMouseAction.bind(this, this._onPointerDown.bind(this));\r\n        document.body.addEventListener(\"mousedown\", this._myOnMouseDownCallback);\r\n        this._myOnMouseUpCallback = this._onMouseAction.bind(this, this._onPointerUp.bind(this));\r\n        document.body.addEventListener(\"mouseup\", this._myOnMouseUpCallback);\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myResetMovingTimer.isRunning()) {\r\n            this._myResetMovingTimer.update(dt);\r\n            if (this._myResetMovingTimer.isDone()) {\r\n                this._myResetMovingTimer.reset();\r\n                this._myIsMoving = false;\r\n            }\r\n        }\r\n\r\n        for (let buttonInfo of this._myButtonInfos.values()) {\r\n            buttonInfo.myIsPressStart = buttonInfo.myIsPressStartToProcess;\r\n            buttonInfo.myIsPressEnd = buttonInfo.myIsPressEndToProcess;\r\n            buttonInfo.myIsPressStartToProcess = false;\r\n            buttonInfo.myIsPressEndToProcess = false;\r\n        }\r\n\r\n        this._updateScreenSize();\r\n\r\n        if (!this.isAnyButtonPressed() && !this._myIsMoving) {\r\n            this._myPointerID = null;\r\n        }\r\n\r\n        if (this._myLastValidPointerEvent != null) {\r\n            let isLastValidPointerEventStillValid = this._isPointerEventValid(this._myLastValidPointerEvent);\r\n            if (!isLastValidPointerEventStillValid) {\r\n                if (this._myIsInsideView) {\r\n                    this._onPointerLeave(this._myLastValidPointerEvent);\r\n                }\r\n\r\n                this._myLastValidPointerEvent = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        document.body.removeEventListener(\"pointermove\", this._myOnPointerMoveCallback);\r\n        document.body.removeEventListener(\"pointerdown\", this._myOnPointerDownCallback);\r\n        document.body.removeEventListener(\"pointerup\", this._myOnPointerUpCallback);\r\n        document.body.removeEventListener(\"pointerleave\", this._myOnPointerLeaveCallback);\r\n        document.body.removeEventListener(\"pointerenter\", this._myOnPointerEnterCallback);\r\n\r\n        document.body.removeEventListener(\"mousedown\", this._myOnMouseDownCallback);\r\n        document.body.removeEventListener(\"mouseup\", this._myOnMouseUpCallback);\r\n\r\n        document.body.removeEventListener(\"contextmenu\", this._myPreventContextMenuCallback);\r\n        document.body.removeEventListener(\"mousedown\", this._myPreventMiddleButtonScrollCallback);\r\n    }\r\n\r\n    isValid() {\r\n        return this._myIsValid;\r\n    }\r\n\r\n    isButtonPressed(buttonID) {\r\n        let isPressed = false;\r\n\r\n        if (this._myButtonInfos.has(buttonID)) {\r\n            isPressed = this._myButtonInfos.get(buttonID).myIsPressed;\r\n        }\r\n\r\n        return isPressed;\r\n    }\r\n\r\n    isAnyButtonPressed() {\r\n        let isPressed = false;\r\n\r\n        for (let buttonInfo of this._myButtonInfos.values()) {\r\n            if (buttonInfo.myIsPressed) {\r\n                isPressed = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isPressed;\r\n    }\r\n\r\n    isButtonPressStart(buttonID) {\r\n        let isPressStart = false;\r\n\r\n        if (this._myButtonInfos.has(buttonID)) {\r\n            isPressStart = this._myButtonInfos.get(buttonID).myIsPressStart;\r\n        }\r\n\r\n        return isPressStart;\r\n    }\r\n\r\n    isButtonPressEnd(buttonID = null) {\r\n        let isPressEnd = false;\r\n\r\n        if (this._myButtonInfos.has(buttonID)) {\r\n            isPressEnd = this._myButtonInfos.get(buttonID).myIsPressEnd;\r\n        }\r\n\r\n        return isPressEnd;\r\n    }\r\n\r\n    isMoving() {\r\n        return this._myIsMoving;\r\n    }\r\n\r\n    isInsideView() {\r\n        return this._myIsInsideView;\r\n    }\r\n\r\n    isTargetingRenderCanvas() {\r\n        return this.isInsideView() && this._myLastValidPointerEvent != null && this._myLastValidPointerEvent.target == WL.canvas;\r\n    }\r\n\r\n    // the origin and direction are set by the mouse\r\n    raycastWorld(raycastSetup, raycastResults = new PP.RaycastResults()) {\r\n        this.getOriginWorld(raycastSetup.myOrigin);\r\n        this.getDirectionWorld(raycastSetup.myDirection);\r\n        raycastResults = PP.PhysicsUtils.raycast(raycastSetup, raycastResults);\r\n        return raycastResults;\r\n    }\r\n\r\n    getPositionScreen(out = PP.vec2_create()) {\r\n        let mousePosition = out;\r\n        mousePosition[0] = this._myInternalMousePosition[0];\r\n        mousePosition[1] = this._myScreenSize[1] - 1 - this._myInternalMousePosition[1];\r\n        return mousePosition;\r\n    }\r\n\r\n    getPositionScreenNormalized(out = PP.vec2_create()) {\r\n        let mousePosition = out;\r\n        mousePosition[0] = (this._myScreenSize[0] == 0) ? 0 : ((this._myInternalMousePosition[0] / this._myScreenSize[0]) * 2 - 1);\r\n        mousePosition[1] = (this._myScreenSize[1] == 0) ? 0 : (((this._myScreenSize[1] - 1 - this._myInternalMousePosition[1]) / this._myScreenSize[1]) * 2 - 1);\r\n        return mousePosition;\r\n    }\r\n\r\n    getScreenSize() {\r\n        return this._myScreenSize;\r\n    }\r\n\r\n    getPositionWorld(distanceFromCamera, out = PP.vec3_create()) {\r\n        let originWorld = this.getOriginWorld(this._myOriginWorld);\r\n        let directionWorld = this.getDirectionWorld(this._myDirectionWorld);\r\n\r\n        out = originWorld.vec3_add(directionWorld.vec3_scale(distanceFromCamera, out), out);\r\n        return out;\r\n    }\r\n\r\n    getOriginWorld(out = PP.vec3_create()) {\r\n        if (PP.XRUtils.isSessionActive()) {\r\n            PP.myPlayerObjects.myEyeLeft.pp_getPosition(out); // in theory mouse should not be used inside the session, but may make sense for AR which uses eye left\r\n        } else {\r\n            PP.myPlayerObjects.myNonVRCamera.pp_getPosition(out);\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    getDirectionWorld(out = PP.vec3_create()) {\r\n        let right = this._myInternalMousePosition[0] / this._myScreenSize[0];\r\n        let up = this._myInternalMousePosition[1] / this._myScreenSize[1];\r\n\r\n        let directionLocal = out;\r\n        directionLocal.vec3_set(right * 2 - 1, -up * 2 + 1, -1.0);\r\n\r\n        let projectionMatrixInvert = this._myProjectionMatrixInverse;\r\n        if (PP.XRUtils.isSessionActive()) {\r\n            projectionMatrixInvert = PP.myPlayerObjects.myEyeLeft.pp_getComponentHierarchy(\"view\").projectionMatrix.mat4_invert(projectionMatrixInvert);\r\n        } else {\r\n            projectionMatrixInvert = PP.myPlayerObjects.myNonVRCamera.pp_getComponentHierarchy(\"view\").projectionMatrix.mat4_invert(projectionMatrixInvert);\r\n        }\r\n\r\n        directionLocal.vec3_transformMat4(projectionMatrixInvert, directionLocal);\r\n        directionLocal.vec3_normalize(directionLocal);\r\n\r\n        let directionWorld = directionLocal;\r\n        if (PP.XRUtils.isSessionActive()) {\r\n            directionWorld = directionLocal.vec3_transformQuat(PP.myPlayerObjects.myEyeLeft.pp_getRotationQuat(this._myRotationQuat), directionLocal);\r\n        } else {\r\n            directionWorld = directionLocal.vec3_transformQuat(PP.myPlayerObjects.myNonVRCamera.pp_getRotationQuat(this._myRotationQuat), directionLocal);\r\n        }\r\n\r\n        directionWorld.vec3_normalize(directionWorld);\r\n\r\n        return out;\r\n    }\r\n\r\n    setTouchValid(touchValid) {\r\n        let callbackID = \"internal_touch_valid_callback\";\r\n        if (touchValid) {\r\n            this.removePointerEventValidCallback(callbackID);\r\n        } else {\r\n            this.addPointerEventValidCallback(callbackID, function (event) {\r\n                return event.pointerType == \"mouse\";\r\n            });\r\n        }\r\n    }\r\n\r\n    setTargetOnlyRenderCanvas(targetOnlyRenderCanvas) {\r\n        let callbackID = \"internal_target_only_render_canvas_callback\";\r\n        if (targetOnlyRenderCanvas) {\r\n            this.addPointerEventValidCallback(callbackID, function (event) {\r\n                return event.target == WL.canvas;\r\n            });\r\n        } else {\r\n            this.removePointerEventValidCallback(callbackID);\r\n        }\r\n    }\r\n\r\n    getLastValidPointerEvent() {\r\n        return this._myLastValidPointerEvent;\r\n    }\r\n\r\n    // can be used to specify that only some pointerType are valid (eg: mouse, touch, pen) or just some target (eg: WL.canvas)\r\n    addPointerEventValidCallback(id, callback) {\r\n        this._myPointerEventValidCallbacks.set(id, callback);\r\n    }\r\n\r\n    removePointerEventValidCallback(id) {\r\n        this._myPointerEventValidCallbacks.delete(id);\r\n    }\r\n\r\n    isPointerUpOnPointerLeave() {\r\n        return this._myPointerUpOnPointerLeave;\r\n    }\r\n\r\n    setPointerUpOnPointerLeave(pointerUpOnPointerLeave) {\r\n        this._myPointerUpOnPointerLeave = pointerUpOnPointerLeave;\r\n    }\r\n\r\n    isContextMenuActive() {\r\n        return this._myContextMenuActive;\r\n    }\r\n\r\n    setContextMenuActive(active) {\r\n        if (this._myContextMenuActive != active) {\r\n            if (active) {\r\n                document.body.removeEventListener(\"contextmenu\", this._myPreventContextMenuCallback);\r\n            } else {\r\n                document.body.addEventListener(\"contextmenu\", this._myPreventContextMenuCallback, false);\r\n            }\r\n            this._myContextMenuActive = active;\r\n        }\r\n    }\r\n\r\n    isMiddleButtonScrollActive() {\r\n        return this._myMiddleButtonScrollActive;\r\n    }\r\n\r\n    setMiddleButtonScrollActive(active) {\r\n        if (this._myMiddleButtonScrollActive != active) {\r\n            if (active) {\r\n                document.body.removeEventListener(\"mousedown\", this._myPreventMiddleButtonScrollCallback);\r\n            } else {\r\n                document.body.addEventListener(\"mousedown\", this._myPreventMiddleButtonScrollCallback, false);\r\n            }\r\n            this._myMiddleButtonScrollActive = active;\r\n        }\r\n    }\r\n\r\n    setResetMovingDelay(delay) {\r\n        this._myResetMovingDelay = delay;\r\n    }\r\n\r\n    getResetMovingDelay() {\r\n        return this._myResetMovingDelay;\r\n    }\r\n\r\n    _onPointerAction(actionCallback, event) {\r\n        if (!this._isPointerEventIDValid(event)) return;\r\n\r\n        if (!this._isPointerEventValid(event)) {\r\n            if (this._myIsInsideView) {\r\n                this._onPointerLeave(event);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!this._myIsInsideView) {\r\n            this._onPointerEnter(event);\r\n        }\r\n\r\n        actionCallback(event);\r\n\r\n        this._updatePositionAndScreen(event);\r\n        this._updatePointerData(event);\r\n    }\r\n\r\n    _onMouseAction(actionCallback, event) {\r\n        if (!this._myIsInsideView) return;\r\n        if (!this._isMouseAllowed()) return;\r\n        if (!this._isPointerEventIDValid(this._myLastValidPointerEvent)) return;\r\n        if (!this._isPointerEventValid(this._myLastValidPointerEvent)) return;\r\n\r\n        actionCallback(event);\r\n    }\r\n\r\n    _onPointerMove(event) {\r\n        this._myResetMovingTimer.start(this._myResetMovingDelay);\r\n        this._myIsMoving = true;\r\n    }\r\n\r\n    _onPointerDown(event) {\r\n        let buttonInfo = this._myButtonInfos.get(event.button);\r\n        if (!buttonInfo.myIsPressed) {\r\n            buttonInfo.myIsPressed = true;\r\n            buttonInfo.myIsPressStartToProcess = true;\r\n        }\r\n    }\r\n\r\n    _onPointerUp(event) {\r\n        let buttonInfo = this._myButtonInfos.get(event.button);\r\n        if (buttonInfo.myIsPressed) {\r\n            buttonInfo.myIsPressed = false;\r\n            buttonInfo.myIsPressEndToProcess = true;\r\n        }\r\n    }\r\n\r\n    _onPointerLeave(event) {\r\n        if (!this._myIsInsideView || this._myLastValidPointerEvent == null || event.pointerId != this._myLastValidPointerEvent.pointerId) return;\r\n\r\n        this._myIsInsideView = false;\r\n\r\n        this._myIsMoving = false;\r\n\r\n        if (this._myPointerUpOnPointerLeave) {\r\n            for (let buttonInfo of this._myButtonInfos.values()) {\r\n                if (buttonInfo.myIsPressed) {\r\n                    buttonInfo.myIsPressed = false;\r\n                    buttonInfo.myIsPressEndToProcess = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        this._myPointerID = null;\r\n    }\r\n\r\n    _onPointerEnter(event) {\r\n        if ((this._myIsInsideView && this._myPointerID != null) || !this._isPointerEventIDValid(event) || !this._isPointerEventValid(event)) return;\r\n\r\n        this._myIsInsideView = true;\r\n\r\n        this._updatePositionAndScreen(event);\r\n        this._updatePointerData(event);\r\n    }\r\n\r\n    _preventContextMenu(event) {\r\n        if (!this._isPointerEventIDValid(event) || !this._isPointerEventValid(event)) return;\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    _preventMiddleButtonScroll(event) {\r\n        if (!this._isPointerEventIDValid(event) || !this._isPointerEventValid(event)) return;\r\n\r\n        if (event.button == 1) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    _updatePositionAndScreen(event) {\r\n        this._updateScreenSize();\r\n        this._myInternalMousePosition[0] = event.clientX;\r\n        this._myInternalMousePosition[1] = event.clientY;\r\n\r\n        this._myIsValid = true;\r\n    }\r\n\r\n    _updateScreenSize() {\r\n        let bounds = document.body.getBoundingClientRect();\r\n        this._myScreenSize[0] = bounds.width;\r\n        this._myScreenSize[1] = bounds.height;\r\n    }\r\n\r\n    _updatePointerData(event) {\r\n        this._myPointerID = event.pointerId;\r\n        this._myLastValidPointerEvent = event;\r\n    }\r\n\r\n    _isPointerEventIDValid(event) {\r\n        if (event == null) return false;\r\n\r\n        return this._myPointerID == null || this._myPointerID == event.pointerId;\r\n    }\r\n\r\n    _isPointerEventValid(event) {\r\n        if (event == null) return false;\r\n\r\n        let isValid = true;\r\n\r\n        for (let callback of this._myPointerEventValidCallbacks.values()) {\r\n            if (!callback(event)) {\r\n                isValid = false;\r\n                break;\r\n            };\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    _isMouseAllowed() {\r\n        // mouse events are valid only if the last pointer event was a mouse (id==1)\r\n        return this._myLastValidPointerEvent != null && this._myLastValidPointerEvent.pointerId == 1;\r\n    }\r\n\r\n    _createButtonInfo() {\r\n        return { myIsPressed: false, myIsPressStart: false, myIsPressStartToProcess: false, myIsPressEnd: false, myIsPressEndToProcess: false, };\r\n    }\r\n};", "PP.InputManager = class InputManager {\r\n    constructor() {\r\n        this._myMouse = new PP.Mouse();\r\n        this._myKeyboard = new PP.Keyboard();\r\n        this._myGamepadManager = new PP.GamepadManager();\r\n    }\r\n\r\n    start() {\r\n        this._myMouse.start();\r\n        this._myKeyboard.start();\r\n        this._myGamepadManager.start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myMouse.update(dt);\r\n        this._myKeyboard.update(dt);\r\n        this._myGamepadManager.update(dt);\r\n    }\r\n\r\n    getMouse() {\r\n        return this._myMouse;\r\n    }\r\n\r\n    getKeyboard() {\r\n        return this._myKeyboard;\r\n    }\r\n\r\n    getGamepadManager() {\r\n        return this._myGamepadManager;\r\n    }\r\n};", "WL.registerComponent('pp-input-manager', {\r\n    _myGamepadFixForward: { type: WL.Type.Bool, default: true },\r\n    _myMousePreventContextMenu: { type: WL.Type.Bool, default: true },\r\n    _myMousePreventMiddleButtonScroll: { type: WL.Type.Bool, default: true },\r\n}, {\r\n    init() {\r\n        this._myInputManager = new PP.InputManager();\r\n\r\n        PP.myInputManager = this._myInputManager;\r\n\r\n        PP.myMouse = this._myInputManager.getMouse();\r\n        PP.myKeyboard = this._myInputManager.getKeyboard();\r\n\r\n        PP.myGamepadManager = this._myInputManager.getGamepadManager();\r\n        PP.myGamepads = PP.myGamepadManager.getGamepads();\r\n        PP.myLeftGamepad = PP.myGamepadManager.getLeftGamepad();\r\n        PP.myRightGamepad = PP.myGamepadManager.getRightGamepad();\r\n    },\r\n    start() {\r\n        this._myInputManager.start();\r\n\r\n        this._setupMousePrevent();\r\n        this._addGamepadCores();\r\n    },\r\n    update(dt) {\r\n        this._myInputManager.update(dt);\r\n    },\r\n    _setupMousePrevent() {\r\n        if (this._myMousePreventContextMenu) {\r\n            PP.myMouse.setContextMenuActive(false);\r\n        }\r\n\r\n        if (this._myMousePreventMiddleButtonScroll) {\r\n            PP.myMouse.setMiddleButtonScrollActive(false);\r\n        }\r\n    },\r\n    _addGamepadCores() {\r\n        let handPoseParams = new PP.HandPoseParams();\r\n        handPoseParams.myReferenceObject = PP.myPlayerObjects.myPlayerPivot;\r\n        handPoseParams.myFixForward = this._myFixForward;\r\n        handPoseParams.myForceEmulatedVelocities = false;\r\n\r\n        let leftXRGamepadCore = new PP.XRGamepadCore(PP.Handedness.LEFT, handPoseParams);\r\n        let rightXRGamepadCore = new PP.XRGamepadCore(PP.Handedness.RIGHT, handPoseParams);\r\n\r\n        PP.myLeftGamepad.addGamepadCore(\"left_xr_gamepad\", leftXRGamepadCore);\r\n        PP.myRightGamepad.addGamepadCore(\"right_xr_gamepad\", rightXRGamepadCore);\r\n\r\n        let leftKeyboardGamepadCore = new PP.KeyboardGamepadCore(PP.Handedness.LEFT, leftXRGamepadCore.getHandPose());\r\n        let rightKeyboardGamepadCore = new PP.KeyboardGamepadCore(PP.Handedness.RIGHT, rightXRGamepadCore.getHandPose());\r\n\r\n        PP.myLeftGamepad.addGamepadCore(\"left_keyboard_gamepad\", leftKeyboardGamepadCore);\r\n        PP.myRightGamepad.addGamepadCore(\"right_keyboard_gamepad\", rightKeyboardGamepadCore);\r\n    }\r\n});\r\n\r\nPP.myInputManager = null;\r\n\r\nPP.myMouse = null;\r\n\r\nPP.myKeyboard = null;\r\n\r\nPP.myGamepadManager = null;\r\nPP.myGamepads = null;\r\nPP.myLeftGamepad = null;\r\nPP.myRightGamepad = null;", "WL.registerComponent('pp-switch-hand-object', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myGamepad: { type: WL.Type.Object },\r\n    _myTrackedHand: { type: WL.Type.Object }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myHandednessType = PP.InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myFirstUpdate = true;\r\n\r\n        this._myCurrentInputSourceType = null;\r\n    },\r\n    onActivate() {\r\n        this._myFirstUpdate = true;\r\n    },\r\n    update: function (dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n            this._start();\r\n        }\r\n\r\n        let inputSourceType = PP.InputUtils.getInputSourceTypeByHandedness(this._myHandednessType);\r\n        if (inputSourceType != null && this._myCurrentInputSourceType != inputSourceType) {\r\n            this._myCurrentInputSourceType = inputSourceType;\r\n\r\n            if (inputSourceType == PP.InputSourceType.TRACKED_HAND) {\r\n                if (this._myGamepad != null) {\r\n                    this._myGamepad.pp_setActive(false);\r\n                }\r\n                if (this._myTrackedHand != null) {\r\n                    this._myTrackedHand.pp_setActive(true);\r\n                }\r\n            } else if (inputSourceType == PP.InputSourceType.GAMEPAD) {\r\n                if (this._myTrackedHand != null) {\r\n                    this._myTrackedHand.pp_setActive(false);\r\n                }\r\n                if (this._myGamepad != null) {\r\n                    this._myGamepad.pp_setActive(true);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _start() {\r\n        if (this._myGamepad != null) {\r\n            this._myGamepad.pp_setActive(false);\r\n        }\r\n\r\n        if (this._myTrackedHand != null) {\r\n            this._myTrackedHand.pp_setActive(false);\r\n        }\r\n\r\n        this._myCurrentInputSourceType = null;\r\n    }\r\n});", "WL.registerComponent('pp-tracked-hand-draw-joint', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myJointID: {\r\n        type: WL.Type.Enum, values:\r\n            [\r\n                'Wrist',\r\n                'Thumb Metacarpal', 'Thumb Phalanx Proximal', 'Thumb Phalanx Distal', 'Thumb Tip',\r\n                'Index Metacarpal', 'Index Phalanx Proximal', 'Index Phalanx Intermediate', 'Index Phalanx Distal', 'Index Tip',\r\n                'Middle Metacarpal', 'Middle Phalanx Proximal', 'Middle Phalanx Intermediate', 'Middle Phalanx Distal', 'Middle Tip',\r\n                'Ring Metacarpal', 'Ring Phalanx Proximal', 'Ring Phalanx Intermediate', 'Ring Phalanx Distal', 'Ring Tip',\r\n                'Pinky Metacarpal', 'Pinky Phalanx Proximal', 'Pinky Phalanx Intermediate', 'Pinky Phalanx Distal', 'Pinky Tip'\r\n            ],\r\n        default: 'Wrist'\r\n    },\r\n    _myJointMesh: { type: WL.Type.Mesh },\r\n    _myJointMaterial: { type: WL.Type.Material }\r\n}, {\r\n    init: function () {\r\n        this._myHandednessInternal = PP.InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myJointIDInternal = PP.InputUtils.getJointIDByIndex(this._myJointID);\r\n\r\n        this._myTrackedHandJointPose = new PP.TrackedHandJointPose(this._myHandednessInternal, this._myJointIDInternal);\r\n        this._myTrackedHandJointPose.setFixForward(this._myFixForward);\r\n    },\r\n    start: function () {\r\n        this._myTrackedHandJointPose.start();\r\n\r\n        this._buildTrackedHandHierarchy();\r\n    },\r\n    update: function (dt) {\r\n        this._myTrackedHandJointPose.update(dt);\r\n        this._myJointMeshObject.pp_setTransformLocalQuat(this._myTrackedHandJointPose.getTransformQuat());\r\n        this._myJointMeshObject.pp_setScaleLocal(this._myTrackedHandJointPose.getJointRadius());\r\n    },\r\n    _buildTrackedHandHierarchy() {\r\n        this._myJointMeshObject = this.object.pp_addObject();\r\n\r\n        let mesh = this._myJointMeshObject.pp_addComponent(\"mesh\");\r\n        mesh.mesh = this._myJointMesh;\r\n        mesh.material = this._myJointMaterial;\r\n\r\n        this._myJointMeshObject.pp_setScaleLocal(0);\r\n    }\r\n});", "WL.registerComponent('pp-tracked-hand-draw-all-joints', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myHideMetacarpals: { type: WL.Type.Bool, default: true },\r\n    _myJointMesh: { type: WL.Type.Mesh },\r\n    _myJointMaterial: { type: WL.Type.Material }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._buildTrackedHandHierarchy();\r\n    },\r\n    update: function (dt) {\r\n    },\r\n    _buildTrackedHandHierarchy() {\r\n        this._myTrackedHandMeshObject = this.object.pp_addObject();\r\n\r\n        this._myJointMeshObjectList = [];\r\n\r\n        for (let jointIDKey in PP.TrackedHandJointID) {\r\n            let jointID = PP.TrackedHandJointID[jointIDKey];\r\n            if (!this._myHideMetacarpals ||\r\n                (jointID != PP.TrackedHandJointID.THUMB_METACARPAL &&\r\n                    jointID != PP.TrackedHandJointID.INDEX_FINGER_METACARPAL && jointID != PP.TrackedHandJointID.MIDDLE_FINGER_METACARPAL &&\r\n                    jointID != PP.TrackedHandJointID.RING_FINGER_METACARPAL && jointID != PP.TrackedHandJointID.PINKY_FINGER_METACARPAL)\r\n            ) {\r\n                let jointObject = this._myTrackedHandMeshObject.pp_addObject();\r\n                this._myJointMeshObjectList[jointID] = jointObject;\r\n\r\n                jointObject.pp_addComponent(\"pp-tracked-hand-draw-joint\",\r\n                    {\r\n                        \"_myHandedness\": this._myHandedness,\r\n                        \"_myFixForward\": this._myFixForward,\r\n                        \"_myJointID\": PP.TrackedHandJointIDIndex[jointIDKey],\r\n                        \"_myJointMesh\": this._myJointMesh,\r\n                        \"_myJointMaterial\": this._myJointMaterial,\r\n                    });\r\n\r\n            }\r\n        }\r\n    }\r\n});", "WL.registerComponent('pp-tracked-hand-draw-skin', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myHandSkin: { type: WL.Type.Skin, default: null }\r\n}, {\r\n    init: function () {\r\n        this._myHandednessInternal = PP.InputUtils.getHandednessByIndex(this._myHandedness);\r\n\r\n        this._myTrackedHandPose = new PP.TrackedHandPose(this._myHandednessInternal);\r\n        this._myTrackedHandPose.setFixForward(this._myFixForward);\r\n    },\r\n    start: function () {\r\n        this._myTrackedHandPose.start();\r\n\r\n        this._prepareJoints();\r\n    },\r\n    update: function update(dt) {\r\n        this._myTrackedHandPose.update(dt);\r\n\r\n        for (let i = 0; i < this._myJoints.length; i++) {\r\n            let jointObject = this._myJoints[i];\r\n\r\n            let jointID = jointObject.name; // joint name must match the PP.TrackedHandJointID enum value\r\n            let jointPose = this._myTrackedHandPose.getJointPose(jointID);\r\n\r\n            jointObject.pp_setTransformLocalQuat(jointPose.getTransformQuat());\r\n        }\r\n    },\r\n    _prepareJoints() {\r\n        this._myJoints = [];\r\n\r\n        let skinJointIDs = this._myHandSkin.jointIds;\r\n\r\n        for (let i = 0; i < skinJointIDs.length; i++) {\r\n            this._myJoints[i] = WL._wrapObject(skinJointIDs[i]);\r\n        }\r\n    }\r\n});", "PP.GamepadButtonID = {\r\n    SELECT: 0,      // Trigger\r\n    SQUEEZE: 1,     // Grip\r\n    TOUCHPAD: 2,    // This is to support older gamepads, you can just use TOP_BUTTON to use this button for both older and newer gamepads\r\n    THUMBSTICK: 3,\r\n    BOTTOM_BUTTON: 4,   // A or X button on oculus quest gamepad\r\n    TOP_BUTTON: 5,      // B or Y button on oculus quest gamepad, reverts to TOUCHPAD button for gamepads that does not support TOP_BUTTON\r\n    THUMB_REST: 6\r\n};\r\n\r\nPP.GamepadButtonEvent = {\r\n    PRESS_START: 0,\r\n    PRESS_END: 1,\r\n    PRESSED: 2,     //Every frame that it is pressed\r\n    NOT_PRESSED: 3, //Every frame that it is not pressed\r\n    TOUCH_START: 4,\r\n    TOUCH_END: 5,\r\n    TOUCHED: 6,     //Every frame that it is touched\r\n    NOT_TOUCHED: 7, //Every frame that it is not touched\r\n    VALUE_CHANGED: 8,\r\n    ALWAYS: 9,      //Every frame\r\n};\r\n\r\nPP.GamepadAxesEvent = {\r\n    X_CHANGED: 0,\r\n    Y_CHANGED: 1,\r\n    AXES_CHANGED: 2,\r\n    ALWAYS: 3\r\n};\r\n\r\nPP.GamepadButtonInfo = class GamepadButtonInfo {\r\n    constructor(id, handedness) {\r\n        this.myID = id;\r\n        this.myHandedness = handedness;\r\n\r\n        this.myIsPressed = false;\r\n        this.myPrevIsPressed = false;\r\n\r\n        this.myIsTouched = false;\r\n        this.myPrevIsTouched = false;\r\n\r\n        this.myValue = 0.0;\r\n        this.myPrevValue = 0.0;\r\n\r\n        this.myTimePressed = 0;\r\n        this.myPrevTimePressed = 0;\r\n\r\n        this.myTimeNotPressed = 0;\r\n        this.myPrevTimeNotPressed = 0;\r\n\r\n        this.myTimeTouched = 0;\r\n        this.myPrevTimeTouched = 0;\r\n\r\n        this.myTimeNotTouched = 0;\r\n        this.myPrevTimeNotTouched = 0;\r\n\r\n        this.myMultiplePressStartCount = 0;\r\n        this.myPrevMultiplePressStartCount = 0;\r\n        this.myMultiplePressEndCount = 0;\r\n        this.myPrevMultiplePressEndCount = 0;\r\n\r\n        this.myMultipleTouchStartCount = 0;\r\n        this.myPrevMultipleTouchStartCount = 0;\r\n        this.myMultipleTouchEndCount = 0;\r\n        this.myPrevMultipleTouchEndCount = 0;\r\n    }\r\n\r\n    getID() {\r\n        return this.myID;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this.myHandedness;\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue;\r\n    }\r\n\r\n    isPressed() {\r\n        return this.myIsPressed;\r\n    }\r\n\r\n    isTouched() {\r\n        return this.myIsTouched;\r\n    }\r\n\r\n    isPressStart(multiplePressCount = null) {\r\n        return (this.myIsPressed && !this.myPrevIsPressed) && (multiplePressCount == null || this.myMultiplePressStartCount == multiplePressCount);\r\n    }\r\n\r\n    isPressEnd(multiplePressCount = null) {\r\n        return (!this.myIsPressed && this.myPrevIsPressed) && (multiplePressCount == null || this.myMultiplePressEndCount == multiplePressCount);\r\n    }\r\n\r\n    isTouchStart(multipleTouchCount = null) {\r\n        return (this.myIsTouched && !this.myPrevIsTouched) && (multipleTouchCount == null || this.myMultipleTouchStartCount == multipleTouchCount);\r\n    }\r\n\r\n    isTouchEnd(multipleTouchCount = null) {\r\n        return (!this.myIsTouched && this.myPrevIsTouched) && (multipleTouchCount == null || this.myMultipleTouchEndCount == multipleTouchCount);\r\n    }\r\n\r\n    clone() {\r\n        let value = new PP.GamepadButtonInfo(this.myID, this.myHandedness);\r\n        value.myIsPressed = this.myIsPressed;\r\n        value.myPrevIsPressed = this.myPrevIsPressed;\r\n        value.myIsTouched = this.myIsTouched;\r\n        value.myPrevIsTouched = this.myPrevIsTouched;\r\n        value.myValue = this.myValue;\r\n        value.myPrevValue = this.myPrevValue;\r\n\r\n        value.myTimePressed = this.myTimePressed;\r\n        value.myPrevTimePressed = this.myPrevTimePressed;\r\n        value.myTimeNotPressed = this.myTimeNotPressed;\r\n        value.myPrevTimeNotPressed = this.myPrevTimeNotPressed;\r\n\r\n        value.myTimeTouched = this.myTimeTouched;\r\n        value.myPrevTimeTouched = this.myPrevTimeTouched;\r\n        value.myTimeNotTouched = this.myTimeNotTouched;\r\n        value.myPrevTimeNotTouched = this.myPrevTimeNotTouched;\r\n\r\n        value.myMultiplePressStartCount = this.myMultiplePressStartCount;\r\n        value.myPrevMultiplePressStartCount = this.myPrevMultiplePressStartCount;\r\n        value.myMultiplePressEndCount = this.myMultiplePressEndCount;\r\n        value.myPrevMultiplePressEndCount = this.myPrevMultiplePressEndCount;\r\n\r\n        value.myMultipleTouchStartCount = this.myMultipleTouchStartCount;\r\n        value.myPrevMultipleTouchStartCount = this.myPrevMultipleTouchStartCount;\r\n        value.myMultipleTouchEndCount = this.myMultipleTouchEndCount;\r\n        value.myPrevMultipleTouchEndCount = this.myPrevMultipleTouchEndCount;\r\n\r\n        return value;\r\n    }\r\n};\r\n\r\nPP.GamepadAxesInfo = class GamepadAxesInfo {\r\n    constructor(handedness) {\r\n        this.myHandedness = handedness;\r\n\r\n        this.myAxes = PP.vec2_create(0, 0); // this.myAxes[0] is X,  this.myAxes[1] is Y\r\n        this.myPrevAxes = PP.vec2_create(0, 0);\r\n    }\r\n\r\n    getAxes() {\r\n        return this.myAxes;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this.myHandedness;\r\n    }\r\n\r\n    clone() {\r\n        let value = new PP.GamepadAxesInfo(this.myHandedness);\r\n        value.myAxes.vec2_copy(this.myAxes);\r\n        value.myPrevAxes.vec2_copy(this.myPrevAxes);\r\n\r\n        return value;\r\n    }\r\n};\r\n\r\nPP.GamepadPulseInfo = class GamepadPulseInfo {\r\n    constructor() {\r\n        this.myIntensity = 0.0;\r\n        this.myDuration = 0.0;\r\n\r\n        this.myIsDevicePulsing = false; // true if the gamepad actually sent a request to pulse to the device\r\n    }\r\n\r\n    clone() {\r\n        let value = new PP.GamepadPulseInfo();\r\n        value.myIntensity = this.myIntensity;\r\n        value.myDuration = this.myDuration;\r\n        value.myIsDevicePulsing = this.myIsDevicePulsing;\r\n\r\n        return value;\r\n    }\r\n};", "PP.BaseGamepad = class BaseGamepad {\r\n\r\n    constructor(handedness) {\r\n        this._myHandedness = handedness;\r\n\r\n        this._myButtonInfos = [];\r\n        for (let key in PP.GamepadButtonID) {\r\n            this._myButtonInfos[PP.GamepadButtonID[key]] = new PP.GamepadButtonInfo(PP.GamepadButtonID[key], this._myHandedness);\r\n        }\r\n\r\n        this._myAxesInfo = new PP.GamepadAxesInfo(this._myHandedness);\r\n\r\n        this._myButtonCallbacks = [];   // Signature: callback(ButtonInfo, Gamepad)\r\n        for (let key in PP.GamepadButtonID) {\r\n            this._myButtonCallbacks[PP.GamepadButtonID[key]] = [];\r\n            for (let eventKey in PP.GamepadButtonEvent) {\r\n                this._myButtonCallbacks[PP.GamepadButtonID[key]][PP.GamepadButtonEvent[eventKey]] = new Map();\r\n            }\r\n        }\r\n\r\n        this._myAxesCallbacks = [];     // Signature: callback(AxesInfo, Gamepad)\r\n        for (let eventKey in PP.GamepadAxesEvent) {\r\n            this._myAxesCallbacks[PP.GamepadAxesEvent[eventKey]] = new Map();\r\n        }\r\n\r\n        this._myPulseInfo = new PP.GamepadPulseInfo();\r\n\r\n        //Setup\r\n        this._myMultiplePressMaxDelay = 0.5;\r\n        this._myMultipleTouchMaxDelay = 0.5;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this._myHandedness;\r\n    }\r\n\r\n    getButtonInfo(buttonID) {\r\n        return this._myButtonInfos[buttonID];\r\n    }\r\n\r\n    registerButtonEventListener(buttonID, buttonEvent, id, callback) {\r\n        this._myButtonCallbacks[buttonID][buttonEvent].set(id, callback);\r\n    }\r\n\r\n    unregisterButtonEventListener(buttonID, buttonEvent, id) {\r\n        this._myButtonCallbacks[buttonID][buttonEvent].delete(id);\r\n    }\r\n\r\n    getAxesInfo() {\r\n        return this._myAxesInfo;\r\n    }\r\n\r\n    registerAxesEventListener(axesEvent, id, callback) {\r\n        this._myAxesCallbacks[axesEvent].set(id, callback);\r\n    }\r\n\r\n    unregisterAxesEventListener(axesEvent, id) {\r\n        this._myAxesCallbacks[axesEvent].delete(id);\r\n    }\r\n\r\n    pulse(intensity, duration = 0) {\r\n        this._myPulseInfo.myIntensity = Math.min(Math.max(intensity, 0), 1); // clamp \r\n        this._myPulseInfo.myDuration = Math.max(duration, 0);\r\n    }\r\n\r\n    stopPulse() {\r\n        this._myPulseInfo.myIntensity = 0;\r\n        this._myPulseInfo.myDuration = 0;\r\n    }\r\n\r\n    isPulsing() {\r\n        return this._myPulseInfo.myIntensity > 0 || this._myPulseInfo.myDuration > 0;\r\n    }\r\n\r\n    getPulseInfo() {\r\n        return this._myPulseInfo;\r\n    }\r\n\r\n    getMultiplePressMaxDelay() {\r\n        return this._myMultiplePressMaxDelay;\r\n    }\r\n\r\n    setMultiplePressMaxDelay(maxDelay) {\r\n        this._myMultiplePressMaxDelay = maxDelay;\r\n    }\r\n\r\n    getMultipleTouchMaxDelay() {\r\n        return this._myMultipleTouchMaxDelay;\r\n    }\r\n\r\n    setMultipleTouchMaxDelay(maxDelay) {\r\n        this._myMultipleTouchMaxDelay = maxDelay;\r\n    }\r\n\r\n    // the following functions should be re-implemented in the actual class\r\n\r\n    getHandPose() {\r\n        return null;\r\n    }\r\n\r\n    _start() {\r\n\r\n    }\r\n\r\n    _preUpdate(dt) {\r\n\r\n    }\r\n\r\n    _postUpdate(dt) {\r\n\r\n    }\r\n\r\n    _getButtonData(buttonID) {\r\n        let buttonData = this._createButtonData();\r\n        return buttonData;\r\n    }\r\n\r\n    _getAxesData() {\r\n        let axesData = this._createAxesData();\r\n        return axesData;\r\n    }\r\n\r\n    _getHapticActuators() {\r\n        let hapticActuator = [];\r\n        return hapticActuator;\r\n    }\r\n\r\n    // the above functions should be re-implemented in the actual class\r\n\r\n    start() {\r\n        this._start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._preUpdate(dt);\r\n\r\n        this._preUpdateButtonInfos();\r\n        this._updateButtonInfos();\r\n        this._postUpdateButtonInfos(dt);\r\n\r\n        this._preUpdateAxesInfos();\r\n        this._updateAxesInfos();\r\n        this._postUpdateAxesInfos();\r\n\r\n        this._updatePulse(dt);\r\n\r\n        this._postUpdate(dt);\r\n    }\r\n\r\n    _preUpdateButtonInfos() {\r\n        this._myButtonInfos.forEach(function (item) {\r\n            item.myPrevIsPressed = item.myIsPressed;\r\n            item.myPrevIsTouched = item.myIsTouched;\r\n            item.myPrevValue = item.myValue;\r\n        });\r\n    }\r\n\r\n    _updateButtonInfos() {\r\n        this._updateSingleButtonInfo(PP.GamepadButtonID.SELECT);\r\n        this._updateSingleButtonInfo(PP.GamepadButtonID.SQUEEZE);\r\n        this._updateSingleButtonInfo(PP.GamepadButtonID.TOUCHPAD);\r\n        this._updateSingleButtonInfo(PP.GamepadButtonID.THUMBSTICK);\r\n        this._updateSingleButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON);\r\n        this._updateSingleButtonInfo(PP.GamepadButtonID.TOP_BUTTON);\r\n        this._updateSingleButtonInfo(PP.GamepadButtonID.THUMB_REST);\r\n    }\r\n\r\n    _updateSingleButtonInfo(buttonID) {\r\n        let button = this._myButtonInfos[buttonID];\r\n        let buttonData = this._getButtonData(buttonID);\r\n\r\n        button.myIsPressed = buttonData.myIsPressed;\r\n        button.myIsTouched = buttonData.myIsTouched;\r\n        button.myValue = buttonData.myValue;\r\n    }\r\n\r\n    _postUpdateButtonInfos(dt) {\r\n        this._myButtonInfos.forEach(function (item) {\r\n            if (item.myIsPressed) {\r\n                item.myTimePressed += dt;\r\n                if (!item.myPrevIsPressed) {\r\n                    item.myMultiplePressStartCount += 1;\r\n\r\n                    item.myPrevTimeNotPressed = item.myTimeNotPressed;\r\n                    item.myTimeNotPressed = 0;\r\n                }\r\n\r\n                if (item.myPrevTimeNotPressed + item.myTimePressed > this._myMultiplePressMaxDelay && item.myMultiplePressEndCount > 0) {\r\n                    item.myPrevMultiplePressEndCount = item.myMultiplePressEndCount;\r\n                    item.myMultiplePressEndCount = 0;\r\n                }\r\n\r\n                if (item.myTimePressed > this._myMultiplePressMaxDelay && item.myMultiplePressStartCount > 0) {\r\n                    item.myPrevMultiplePressStartCount = item.myMultiplePressStartCount;\r\n                    item.myMultiplePressStartCount = 0;\r\n                }\r\n            } else {\r\n                item.myTimeNotPressed += dt;\r\n                if (item.myPrevIsPressed) {\r\n                    item.myMultiplePressEndCount += 1;\r\n\r\n                    item.myPrevTimePressed = item.myTimePressed;\r\n                    item.myTimePressed = 0;\r\n                }\r\n\r\n                if (item.myPrevTimePressed + item.myTimeNotPressed > this._myMultiplePressMaxDelay && item.myMultiplePressStartCount > 0) {\r\n                    item.myPrevMultiplePressStartCount = item.myMultiplePressStartCount;\r\n                    item.myMultiplePressStartCount = 0;\r\n                }\r\n\r\n                if (item.myTimeNotPressed > this._myMultiplePressMaxDelay && item.myMultiplePressEndCount > 0) {\r\n                    item.myPrevMultiplePressEndCount = item.myMultiplePressEndCount;\r\n                    item.myMultiplePressEndCount = 0;\r\n                }\r\n            }\r\n\r\n            if (item.myIsTouched) {\r\n                item.myTimeTouched += dt;\r\n                if (!item.myPrevIsTouched) {\r\n                    item.myMultipleTouchStartCount += 1;\r\n\r\n                    item.myPrevTimeNotTouched = item.myTimeNotTouched;\r\n                    item.myTimeNotTouched = 0;\r\n                }\r\n\r\n                if (item.myPrevTimeNotTouched + item.myTimeTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchEndCount > 0) {\r\n                    item.myPrevMultipleTouchEndCount = item.myMultipleTouchEndCount;\r\n                    item.myMultipleTouchEndCount = 0;\r\n                }\r\n\r\n                if (item.myTimeTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchStartCount > 0) {\r\n                    item.myPrevMultipleTouchStartCount = item.myMultipleTouchStartCount;\r\n                    item.myMultipleTouchStartCount = 0;\r\n                }\r\n            } else {\r\n                item.myTimeNotTouched += dt;\r\n                if (item.myPrevIsTouched) {\r\n                    item.myMultipleTouchEndCount += 1;\r\n\r\n                    item.myPrevTimeTouched = item.myTimeTouched;\r\n                    item.myTimeTouched = 0;\r\n                }\r\n\r\n                if (item.myPrevTimeTouched + item.myTimeNotTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchStartCount > 0) {\r\n                    item.myPrevMultipleTouchStartCount = item.myMultipleTouchStartCount;\r\n                    item.myMultipleTouchStartCount = 0;\r\n                }\r\n\r\n                if (item.myTimeNotTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchEndCount > 0) {\r\n                    item.myPrevMultipleTouchEndCount = item.myMultipleTouchEndCount;\r\n                    item.myMultipleTouchEndCount = 0;\r\n                }\r\n            }\r\n        }.bind(this));\r\n\r\n        for (let key in PP.GamepadButtonID) {\r\n            let buttonInfo = this._myButtonInfos[PP.GamepadButtonID[key]];\r\n            let buttonCallbacks = this._myButtonCallbacks[PP.GamepadButtonID[key]];\r\n\r\n            //PRESSED\r\n            if (buttonInfo.myIsPressed && !buttonInfo.myPrevIsPressed) {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.PRESS_START];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            if (!buttonInfo.myIsPressed && buttonInfo.myPrevIsPressed) {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.PRESS_END];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            if (buttonInfo.myIsPressed) {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.PRESSED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            } else {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.NOT_PRESSED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            //TOUCHED\r\n            if (buttonInfo.myIsTouched && !buttonInfo.myPrevIsTouched) {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.TOUCH_START];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            if (!buttonInfo.myIsTouched && buttonInfo.myPrevIsTouched) {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.TOUCH_END];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            if (buttonInfo.myIsTouched) {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.TOUCHED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            } else {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.NOT_TOUCHED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            //VALUE\r\n            if (buttonInfo.myValue != buttonInfo.myPrevValue) {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.VALUE_CHANGED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            //ALWAYS\r\n            let callbacks = buttonCallbacks[PP.GamepadButtonEvent.ALWAYS];\r\n            this._triggerCallbacks(callbacks, buttonInfo);\r\n        }\r\n\r\n        this._mySelectStart = false;\r\n        this._mySelectEnd = false;\r\n        this._mySqueezeStart = false;\r\n        this._mySqueezeEnd = false;\r\n    }\r\n\r\n    _preUpdateAxesInfos() {\r\n        this._myAxesInfo.myPrevAxes[0] = this._myAxesInfo.myAxes[0];\r\n        this._myAxesInfo.myPrevAxes[1] = this._myAxesInfo.myAxes[1];\r\n    }\r\n\r\n    _updateAxesInfos() {\r\n        let axesData = this._getAxesData();\r\n        this._myAxesInfo.myAxes[0] = axesData[0];\r\n        this._myAxesInfo.myAxes[1] = axesData[1];\r\n    }\r\n\r\n    _postUpdateAxesInfos() {\r\n        //X CHANGED\r\n        if (this._myAxesInfo.myAxes[0] != this._myAxesInfo.myPrevAxes[0]) {\r\n            let callbacks = this._myAxesCallbacks[PP.GamepadAxesEvent.X_CHANGED];\r\n            this._triggerCallbacks(callbacks, this._myAxesInfo);\r\n        }\r\n\r\n        //Y CHANGED\r\n        if (this._myAxesInfo.myAxes[1] != this._myAxesInfo.myPrevAxes[1]) {\r\n            let callbacks = this._myAxesCallbacks[PP.GamepadAxesEvent.Y_CHANGED];\r\n            this._triggerCallbacks(callbacks, this._myAxesInfo);\r\n        }\r\n\r\n        //AXES CHANGED\r\n        if (this._myAxesInfo.myAxes[0] != this._myAxesInfo.myPrevAxes[0] ||\r\n            this._myAxesInfo.myAxes[1] != this._myAxesInfo.myPrevAxes[1]) {\r\n            let callbacks = this._myAxesCallbacks[PP.GamepadAxesEvent.AXES_CHANGED];\r\n            this._triggerCallbacks(callbacks, this._myAxesInfo);\r\n        }\r\n\r\n        //ALWAYS        \r\n        let callbacks = this._myAxesCallbacks[PP.GamepadAxesEvent.ALWAYS];\r\n        this._triggerCallbacks(callbacks, this._myAxesInfo);\r\n    }\r\n\r\n    _updatePulse(dt) {\r\n        if (this._myPulseInfo.myIsDevicePulsing || this._myPulseInfo.myIntensity > 0) {\r\n            let hapticActuators = this._getHapticActuators();\r\n            if (hapticActuators.length > 0) {\r\n                if (this._myPulseInfo.myIntensity > 0) {\r\n                    for (let hapticActuator of hapticActuators) {\r\n                        hapticActuator.pulse(this._myPulseInfo.myIntensity, 1000); // duration is managed by this class\r\n                    }\r\n                    this._myPulseInfo.myIsDevicePulsing = true;\r\n                } else if (this._myPulseInfo.myIsDevicePulsing) {\r\n                    for (let hapticActuator of hapticActuators) {\r\n                        hapticActuator.reset();\r\n                    }\r\n                    this._myPulseInfo.myIsDevicePulsing = false;\r\n                }\r\n            } else {\r\n                this._myPulseInfo.myIsDevicePulsing = false;\r\n            }\r\n        }\r\n\r\n        this._myPulseInfo.myDuration -= dt;\r\n        if (this._myPulseInfo.myDuration <= 0) {\r\n            this._myPulseInfo.myIntensity = 0;\r\n            this._myPulseInfo.myDuration = 0;\r\n        }\r\n    }\r\n\r\n    _triggerCallbacks(callbacks, info) {\r\n        for (let callback of callbacks.values()) {\r\n            callback(info, this);\r\n        }\r\n    }\r\n\r\n    _createButtonData() {\r\n        return { myIsPressed: false, myIsTouched: false, myValue: 0 };\r\n    }\r\n\r\n    _createAxesData() {\r\n        return PP.vec2_create(0, 0);\r\n    }\r\n};", "PP.UniversalGamepad = class UniversalGamepad extends PP.BaseGamepad {\r\n\r\n    constructor(handedness) {\r\n        super(handedness);\r\n\r\n        this._myGamepadCores = new Map();\r\n\r\n        this._myStarted = false;\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n\r\n    }\r\n\r\n    addGamepadCore(id, gamepadCore) {\r\n        if (gamepadCore.getHandedness() == this.getHandedness()) {\r\n            this._myGamepadCores.set(id, gamepadCore);\r\n            if (this._myStarted) {\r\n                gamepadCore.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    getGamepadCore(id) {\r\n        return this._myGamepadCores.get(id);\r\n    }\r\n\r\n    removeGamepadCore(id) {\r\n        let gamepadCore = this._myGamepadCores.get(id);\r\n        if (gamepadCore) {\r\n            this._myGamepadCores.delete(id);\r\n        }\r\n    }\r\n\r\n    removeAllGamepadCores() {\r\n        for (let id of this._myGamepadCores.keys()) {\r\n            this.removeGamepadCore(id);\r\n        }\r\n    }\r\n\r\n    getHandPose() {\r\n        let handPose = null;\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                let currentCoreHandPose = core.getHandPose();\r\n                if (handPose == null || (currentCoreHandPose != null && currentCoreHandPose.isValid())) {\r\n                    handPose = currentCoreHandPose;\r\n                }\r\n            }\r\n\r\n            if (handPose != null && handPose.isValid()) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return handPose;\r\n    }\r\n\r\n    _start() {\r\n        for (let core of this._myGamepadCores.values()) {\r\n            core.start();\r\n        }\r\n\r\n        this._myStarted = true;\r\n    }\r\n\r\n    _preUpdate(dt) {\r\n        for (let core of this._myGamepadCores.values()) {\r\n            core.preUpdate(dt);\r\n        }\r\n    }\r\n\r\n    _postUpdate(dt) {\r\n        for (let core of this._myGamepadCores.values()) {\r\n            core.postUpdate(dt);\r\n        }\r\n    }\r\n\r\n    _getButtonData(buttonID) {\r\n        this._myButtonData.myIsPressed = false;\r\n        this._myButtonData.myIsTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                let coreButtonData = core.getButtonData(buttonID);\r\n                this._myButtonData.myIsPressed = this._myButtonData.myIsPressed || coreButtonData.myIsPressed;\r\n                this._myButtonData.myIsTouched = this._myButtonData.myIsTouched || coreButtonData.myIsTouched;\r\n                if (Math.abs(coreButtonData.myValue) > Math.abs(this._myButtonData.myValue)) {\r\n                    this._myButtonData.myValue = coreButtonData.myValue;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    _getAxesData() {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                let coreAxesData = core.getAxesData();\r\n\r\n                if (Math.abs(coreAxesData[0]) > Math.abs(this._myAxesData[0])) {\r\n                    this._myAxesData[0] = coreAxesData[0];\r\n                }\r\n\r\n                if (Math.abs(coreAxesData[1]) > Math.abs(this._myAxesData[1])) {\r\n                    this._myAxesData[1] = coreAxesData[1];\r\n                }\r\n            }\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    _getHapticActuators() {\r\n        this._myHapticActuators.pp_clear();\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                this._myHapticActuators.push(...core.getHapticActuators());\r\n            }\r\n        }\r\n\r\n        return this._myHapticActuators;\r\n    }\r\n};", "PP.GamepadCore = class GamepadCore {\r\n\r\n    constructor(handedness, handPose) {\r\n        this._myHandedness = handedness;\r\n        this._myHandPose = handPose;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this._myHandedness;\r\n    }\r\n\r\n    getHandPose() {\r\n        return this._myHandPose;\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        return true;\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    preUpdate(dt) {\r\n\r\n    }\r\n\r\n    postUpdate(dt) {\r\n\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        let buttonData = this._createButtonData();\r\n        return buttonData;\r\n    }\r\n\r\n    getAxesData() {\r\n        let axesData = this._createAxesData();\r\n        return axesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        let hapticActuators = [];\r\n        return hapticActuators;\r\n    }\r\n\r\n    _createButtonData() {\r\n        return { myIsPressed: false, myIsTouched: false, myValue: 0 };\r\n    }\r\n\r\n    _createAxesData() {\r\n        return PP.vec2_create(0, 0);\r\n    }\r\n};", "// xr-standard mapping is assumed\r\n\r\nPP.XRGamepadCore = class XRGamepadCore extends PP.GamepadCore {\r\n\r\n    constructor(handedness, handPoseParams = new PP.HandPoseParams()) {\r\n        super(handedness, new PP.HandPose(handedness, handPoseParams));\r\n\r\n        this._mySelectPressed = false;\r\n        this._mySqueezePressed = false;\r\n\r\n        this._myIsXRSessionActive = false;\r\n        this._myInputSource = null;\r\n        this._myGamepad = null;\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        //connected == null is to fix webxr emulator that leaves that field undefined\r\n        return this._myIsXRSessionActive && this._myGamepad != null && (this._myGamepad.connected == null || this._myGamepad.connected);\r\n    }\r\n\r\n    start() {\r\n        this._myHandPose.start();\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    preUpdate(dt) {\r\n        this._updateHandPose(dt);\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myIsPressed = false;\r\n        this._myButtonData.myIsTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (buttonID < this._myGamepad.buttons.length) {\r\n                let gamepadButton = this._myGamepad.buttons[buttonID];\r\n\r\n                if (buttonID != PP.GamepadButtonID.SELECT && buttonID != PP.GamepadButtonID.SQUEEZE) {\r\n                    this._myButtonData.myIsPressed = gamepadButton.pressed;\r\n                } else {\r\n                    this._myButtonData.myIsPressed = this._getSpecialButtonPressed(buttonID);\r\n                }\r\n\r\n                this._myButtonData.myIsTouched = gamepadButton.touched;\r\n                this._myButtonData.myValue = gamepadButton.value;\r\n            } else if (buttonID == PP.GamepadButtonID.TOP_BUTTON && this._myGamepad.buttons.length >= 3) {\r\n                //This way if you are using a basic touch gamepad, top button will work anyway\r\n                let touchButton = this._myGamepad.buttons[2];\r\n                this._myButtonData.myIsPressed = touchButton.pressed;\r\n                this._myButtonData.myIsTouched = touchButton.touched;\r\n                this._myButtonData.myValue = touchButton.value;\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData() {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            let internalAxes = this._myGamepad.axes;\r\n            if (internalAxes.length == 4) {\r\n                //in this case it could be both touch axes or thumbstick axes, that depends on the gamepad\r\n                //to support both I simply choose the absolute max value (unused axes will always be 0)\r\n\r\n                //X\r\n                if (Math.abs(internalAxes[0]) > Math.abs(internalAxes[2])) {\r\n                    this._myAxesData[0] = internalAxes[0];\r\n                } else {\r\n                    this._myAxesData[0] = internalAxes[2];\r\n                }\r\n\r\n                //Y\r\n                if (Math.abs(internalAxes[1]) > Math.abs(internalAxes[3])) {\r\n                    this._myAxesData[1] = internalAxes[1];\r\n                } else {\r\n                    this._myAxesData[1] = internalAxes[3];\r\n                }\r\n\r\n            } else if (internalAxes.length == 2) {\r\n                this._myAxesData[0] = internalAxes[0];\r\n                this._myAxesData[1] = internalAxes[1];\r\n            }\r\n\r\n            //y axis is recorder negative when thumbstick is pressed forward for weird reasons\r\n            this._myAxesData[1] = -this._myAxesData[1];\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        this._myHapticActuators.pp_clear();\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this._myGamepad.hapticActuators != null && this._myGamepad.hapticActuators.length > 0) {\r\n                this._myHapticActuators.push(...this._myGamepad.hapticActuators);\r\n            }\r\n\r\n            if (this._myGamepad.vibrationActuator != null) {\r\n                this._myHapticActuators.push(this._myGamepad.vibrationActuator);\r\n            }\r\n        }\r\n\r\n        return this._myHapticActuators;\r\n    }\r\n\r\n    _updateHandPose(dt) {\r\n        this._myHandPose.update(dt);\r\n\r\n        this._myInputSource = this._myHandPose.getInputSource();\r\n        if (this._myInputSource != null) {\r\n            this._myGamepad = this._myInputSource.gamepad;\r\n        } else {\r\n            this._myGamepad = null;\r\n        }\r\n    }\r\n\r\n    //This is to be more compatible\r\n    _getSpecialButtonPressed(buttonID) {\r\n        let isPressed = false;\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (buttonID == PP.GamepadButtonID.SELECT) {\r\n                isPressed = this._mySelectPressed;\r\n            } else if (buttonID == PP.GamepadButtonID.SQUEEZE) {\r\n                isPressed = this._mySqueezePressed;\r\n            }\r\n        }\r\n\r\n        return isPressed;\r\n    }\r\n\r\n    _onXRSessionStart(session) {\r\n        session.addEventListener(\"selectstart\", this._selectStart.bind(this));\r\n        session.addEventListener(\"selectend\", this._selectEnd.bind(this));\r\n\r\n        session.addEventListener(\"squeezestart\", this._squeezeStart.bind(this));\r\n        session.addEventListener(\"squeezeend\", this._squeezeEnd.bind(this));\r\n\r\n        this._myIsXRSessionActive = true;\r\n    }\r\n\r\n    _onXRSessionEnd(session) {\r\n        this._myIsXRSessionActive = false;\r\n    }\r\n\r\n    //Select and Squeeze are managed this way to be more compatible\r\n    _selectStart(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySelectPressed = true;\r\n        }\r\n    }\r\n\r\n    _selectEnd(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySelectPressed = false;\r\n        }\r\n    }\r\n\r\n    _squeezeStart(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySqueezePressed = true;\r\n        }\r\n    }\r\n\r\n    _squeezeEnd(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySqueezePressed = false;\r\n        }\r\n    }\r\n};", "PP.KeyboardGamepadCore = class KeyboardGamepadCore extends PP.GamepadCore {\r\n\r\n    constructor(handedness, handPose = null) {\r\n        super(handedness, handPose);\r\n\r\n        this._myHandPoseUpdateActive = false;\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    setHandPoseUpdateActive(active) {\r\n        this._myHandPoseUpdateActive = active;\r\n    }\r\n\r\n    isHandPoseUpdateActive() {\r\n        return this._myHandPoseUpdateActive;\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        return !PP.XRUtils.isSessionActive();\r\n    }\r\n\r\n    start() {\r\n        if (this._myHandPose && this._myHandPoseUpdateActive) {\r\n            this._myHandPose.start();\r\n        }\r\n    }\r\n\r\n    preUpdate(dt) {\r\n        if (this._myHandPose && this._myHandPoseUpdateActive) {\r\n            this._myHandPose.update(dt);\r\n        }\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myIsPressed = false;\r\n        this._myButtonData.myIsTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this.getHandedness() == PP.Handedness.LEFT) {\r\n                switch (buttonID) {\r\n                    case PP.GamepadButtonID.SELECT:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.E) || PP.myKeyboard.isKeyPressed(PP.KeyID.e);\r\n                        break;\r\n                    case PP.GamepadButtonID.SQUEEZE:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.Q) || PP.myKeyboard.isKeyPressed(PP.KeyID.q);\r\n                        break;\r\n                    case PP.GamepadButtonID.TOUCHPAD:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.X) || PP.myKeyboard.isKeyPressed(PP.KeyID.x);\r\n                        break;\r\n                    case PP.GamepadButtonID.THUMBSTICK:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.R) || PP.myKeyboard.isKeyPressed(PP.KeyID.r);\r\n                        break;\r\n                    case PP.GamepadButtonID.BOTTOM_BUTTON:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.C) || PP.myKeyboard.isKeyPressed(PP.KeyID.c);\r\n                        break;\r\n                    case PP.GamepadButtonID.TOP_BUTTON:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.F) || PP.myKeyboard.isKeyPressed(PP.KeyID.f);\r\n                        break;\r\n                    case PP.GamepadButtonID.THUMB_REST:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.V) || PP.myKeyboard.isKeyPressed(PP.KeyID.v);\r\n                        break;\r\n                }\r\n            } else {\r\n                switch (buttonID) {\r\n                    case PP.GamepadButtonID.SELECT:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.U) || PP.myKeyboard.isKeyPressed(PP.KeyID.u);\r\n                        break;\r\n                    case PP.GamepadButtonID.SQUEEZE:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.O) || PP.myKeyboard.isKeyPressed(PP.KeyID.o);\r\n                        break;\r\n                    case PP.GamepadButtonID.TOUCHPAD:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.M) || PP.myKeyboard.isKeyPressed(PP.KeyID.m);\r\n                        break;\r\n                    case PP.GamepadButtonID.THUMBSTICK:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.Y) || PP.myKeyboard.isKeyPressed(PP.KeyID.y);\r\n                        break;\r\n                    case PP.GamepadButtonID.BOTTOM_BUTTON:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.N) || PP.myKeyboard.isKeyPressed(PP.KeyID.n);\r\n                        break;\r\n                    case PP.GamepadButtonID.TOP_BUTTON:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.H) || PP.myKeyboard.isKeyPressed(PP.KeyID.h);\r\n                        break;\r\n                    case PP.GamepadButtonID.THUMB_REST:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.B) || PP.myKeyboard.isKeyPressed(PP.KeyID.b);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myButtonData.myIsPressed) {\r\n            this._myButtonData.myIsTouched = true;\r\n            this._myButtonData.myValue = 1;\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData() {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this.getHandedness() == PP.Handedness.LEFT) {\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.W) || PP.myKeyboard.isKeyPressed(PP.KeyID.w)) this._myAxesData[1] += 1.0;\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.S) || PP.myKeyboard.isKeyPressed(PP.KeyID.s)) this._myAxesData[1] += -1.0;\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.D) || PP.myKeyboard.isKeyPressed(PP.KeyID.d)) this._myAxesData[0] += 1.0;\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.A) || PP.myKeyboard.isKeyPressed(PP.KeyID.a)) this._myAxesData[0] += -1.0;\r\n            } else {\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.I) || PP.myKeyboard.isKeyPressed(PP.KeyID.i) || PP.myKeyboard.isKeyPressed(PP.KeyID.UP)) this._myAxesData[1] += 1.0;\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.K) || PP.myKeyboard.isKeyPressed(PP.KeyID.k) || PP.myKeyboard.isKeyPressed(PP.KeyID.DOWN)) this._myAxesData[1] += -1.0;\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.L) || PP.myKeyboard.isKeyPressed(PP.KeyID.l) || PP.myKeyboard.isKeyPressed(PP.KeyID.RIGHT)) this._myAxesData[0] += 1.0;\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.J) || PP.myKeyboard.isKeyPressed(PP.KeyID.j) || PP.myKeyboard.isKeyPressed(PP.KeyID.LEFT)) this._myAxesData[0] += -1.0;\r\n            }\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        return this._myHapticActuators;\r\n    }\r\n};", "PP.VirtualGamepadGamepadCore = class VirtualGamepadGamepadCore extends PP.GamepadCore {\r\n\r\n    constructor(virtualGamepad, handedness, handPose = null) {\r\n        super(handedness, handPose);\r\n\r\n        this._myHandPoseUpdateActive = false;\r\n\r\n        this._myVirtualGamepad = virtualGamepad;\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    setHandPoseUpdateActive(active) {\r\n        this._myHandPoseUpdateActive = active;\r\n    }\r\n\r\n    isHandPoseUpdateActive() {\r\n        return this._myHandPoseUpdateActive;\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        return this._myVirtualGamepad.isVisible();\r\n    }\r\n\r\n    start() {\r\n        if (this._myHandPose && this._myHandPoseUpdateActive) {\r\n            this._myHandPose.start();\r\n        }\r\n    }\r\n\r\n    preUpdate(dt) {\r\n        if (this._myHandPose && this._myHandPoseUpdateActive) {\r\n            this._myHandPose.update(dt);\r\n        }\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myIsPressed = false;\r\n        this._myButtonData.myIsTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this._myVirtualGamepad.isButtonPressed(this._myHandedness, buttonID)) {\r\n                this._myButtonData.myIsPressed = true;\r\n                this._myButtonData.myIsTouched = true;\r\n                this._myButtonData.myValue = 1;\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData() {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            this._myVirtualGamepad.getAxes(this._myHandedness, this._myAxesData);\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        return this._myHapticActuators;\r\n    }\r\n};", "WL.registerComponent('pp-gamepad-mesh-animator', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _mySelect: { type: WL.Type.Object, default: null },\r\n    _mySqueeze: { type: WL.Type.Object, default: null },\r\n    _myThumbstick: { type: WL.Type.Object, default: null },\r\n    _myTopButton: { type: WL.Type.Object, default: null },\r\n    _myBottomButton: { type: WL.Type.Object, default: null },\r\n    _mySelectRotateAngle: { type: WL.Type.Float, default: 15 },\r\n    _mySqueezeRotateAngle: { type: WL.Type.Float, default: 11 },\r\n    _myThumbstickRotateAngle: { type: WL.Type.Float, default: 15 },\r\n    _myThumbstickPressOffset: { type: WL.Type.Float, default: 0.000625 },\r\n    _myTopButtonPressOffset: { type: WL.Type.Float, default: 0.0015 },\r\n    _myBottomButtonPressOffset: { type: WL.Type.Float, default: 0.0015 },\r\n    _myUsePressForSqueeze: { type: WL.Type.Bool, default: false },\r\n    _mySqueezePressOffset: { type: WL.Type.Float, default: 0.0015 },\r\n}, {\r\n    start: function () {\r\n        let gamepad = null;\r\n        if (this._myHandedness == 0) {\r\n            gamepad = PP.myLeftGamepad; // @EDIT get gamepad LEFT here based on how you store it in your game\r\n        } else {\r\n            gamepad = PP.myRightGamepad; // @EDIT get gamepad RIGHT here based on how you store it in your game\r\n        }\r\n\r\n        if (this._mySelect != null) {\r\n            this._mySelectOriginalRotation = this._mySelect.pp_getRotationLocalQuat();\r\n            this._mySelectOriginalLeft = this._mySelect.pp_getLeftLocal();\r\n        }\r\n\r\n        if (this._mySqueeze != null) {\r\n            this._mySqueezeOriginalPosition = this._mySqueeze.pp_getPositionLocal();\r\n            this._mySqueezeOriginalRotation = this._mySqueeze.pp_getRotationLocalQuat();\r\n            this._mySqueezeOriginalLeft = this._mySqueeze.pp_getLeftLocal();\r\n            this._mySqueezeOriginalForward = this._mySqueeze.pp_getForwardLocal();\r\n        }\r\n\r\n        if (this._myThumbstick != null) {\r\n            this._myThumbstickOriginalPosition = this._myThumbstick.pp_getPositionLocal();\r\n            this._myThumbstickOriginalRotation = this._myThumbstick.pp_getRotationLocalQuat();\r\n            this._myThumbstickOriginalLeft = this._myThumbstick.pp_getLeftLocal();\r\n            this._myThumbstickOriginalUp = this._myThumbstick.pp_getUpLocal();\r\n            this._myThumbstickOriginalForward = this._myThumbstick.pp_getForwardLocal();\r\n        }\r\n\r\n        if (this._myTopButton != null) {\r\n            this._myTopButtonOriginalPosition = this._myTopButton.pp_getPositionLocal();\r\n            this._myTopButtonOriginalUp = this._myTopButton.pp_getUpLocal();\r\n        }\r\n\r\n        if (this._myBottomButton != null) {\r\n            this._myBottomButtonOriginalPosition = this._myBottomButton.pp_getPositionLocal();\r\n            this._myBottomButtonOriginalUp = this._myBottomButton.pp_getUpLocal();\r\n        }\r\n\r\n        // PRESSED\r\n        if (this._myThumbstick != null) {\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.THUMBSTICK, PP.GamepadButtonEvent.PRESS_START, this, this._thumbstickPressedStart.bind(this));\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.THUMBSTICK, PP.GamepadButtonEvent.PRESS_END, this, this._thumbstickPressedEnd.bind(this));\r\n        }\r\n\r\n        if (this._myTopButton != null) {\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.TOP_BUTTON, PP.GamepadButtonEvent.PRESS_START, this, this._topButtonPressedStart.bind(this));\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.TOP_BUTTON, PP.GamepadButtonEvent.PRESS_END, this, this._topButtonPressedEnd.bind(this));\r\n        }\r\n\r\n        if (this._myBottomButton != null) {\r\n\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.BOTTOM_BUTTON, PP.GamepadButtonEvent.PRESS_START, this, this._bottomButtonPressedStart.bind(this));\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.BOTTOM_BUTTON, PP.GamepadButtonEvent.PRESS_END, this, this._bottomButtonPressedEnd.bind(this));\r\n        }\r\n\r\n        // VALUE CHANGED\r\n        if (this._mySelect != null) {\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.VALUE_CHANGED, this, this._selectValueChanged.bind(this));\r\n        }\r\n\r\n        if (this._mySqueeze != null) {\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.VALUE_CHANGED, this, this._squeezeValueChanged.bind(this));\r\n        }\r\n\r\n        // AXES CHANGED\r\n        if (this._myThumbstick != null) {\r\n            gamepad.registerAxesEventListener(PP.GamepadAxesEvent.AXES_CHANGED, this, this._thumbstickValueChanged.bind(this));\r\n        }\r\n    },\r\n    _thumbstickPressedStart: function () {\r\n        let upTranslation = PP.vec3_create();\r\n        return function _thumbstickPressedStart(buttonInfo, gamepad) {\r\n            // since thumbstick object rotate you need to specifically use its original up to translate it\r\n            this._myThumbstickOriginalUp.vec3_scale(-this._myThumbstickPressOffset, upTranslation);\r\n            this._myThumbstick.pp_translateLocal(upTranslation);\r\n        };\r\n    }(),\r\n    _thumbstickPressedEnd: function _thumbstickPressedEnd(buttonInfo, gamepad) {\r\n        this._myThumbstick.pp_setPositionLocal(this._myThumbstickOriginalPosition);\r\n    },\r\n    _topButtonPressedStart: function (buttonInfo, gamepad) {\r\n        this._myTopButton.pp_translateAxisLocal(-this._myTopButtonPressOffset, this._myTopButtonOriginalUp);\r\n    },\r\n    _topButtonPressedEnd: function (buttonInfo, gamepad) {\r\n        this._myTopButton.pp_setPositionLocal(this._myTopButtonOriginalPosition);\r\n    },\r\n    _bottomButtonPressedStart: function (buttonInfo, gamepad) {\r\n        this._myBottomButton.pp_translateAxisLocal(-this._myBottomButtonPressOffset, this._myBottomButtonOriginalUp);\r\n    },\r\n    _bottomButtonPressedEnd: function (buttonInfo, gamepad) {\r\n        this._myBottomButton.pp_setPositionLocal(this._myBottomButtonOriginalPosition);\r\n    },\r\n    _selectValueChanged: function (buttonInfo, gamepad) {\r\n        this._mySelect.pp_setRotationLocalQuat(this._mySelectOriginalRotation);\r\n\r\n        if (buttonInfo.myValue > 0.00001) {\r\n            this._mySelect.pp_rotateAxisLocal(this._mySelectRotateAngle * buttonInfo.myValue, this._mySelectOriginalLeft);\r\n        }\r\n    },\r\n    _squeezeValueChanged: function (buttonInfo, gamepad) {\r\n        this._mySqueeze.pp_setPositionLocal(this._mySqueezeOriginalPosition);\r\n        this._mySqueeze.pp_setRotationLocalQuat(this._mySqueezeOriginalRotation);\r\n\r\n        if (buttonInfo.myValue > 0.00001) {\r\n            if (this._myUsePressForSqueeze) {\r\n                let translation = this._mySqueezePressOffset;\r\n                if (this._myHandedness == 1) {\r\n                    translation *= -1;\r\n                }\r\n\r\n                this._mySqueeze.pp_translateAxisLocal(translation * buttonInfo.myValue, this._mySqueezeOriginalLeft);\r\n            } else {\r\n                let rotation = -this._mySqueezeRotateAngle;\r\n                if (this._myHandedness == 1) {\r\n                    rotation *= -1;\r\n                }\r\n\r\n                this._mySqueeze.pp_rotateAxisLocal(rotation * buttonInfo.myValue, this._mySqueezeOriginalForward);\r\n            }\r\n        }\r\n    },\r\n    _thumbstickValueChanged: function (axesInfo, gamepad) {\r\n        this._myThumbstick.pp_setRotationLocalQuat(this._myThumbstickOriginalRotation);\r\n\r\n        let leftRotation = this._myThumbstickRotateAngle * axesInfo.myAxes[1];\r\n        let forwardRotation = this._myThumbstickRotateAngle * axesInfo.myAxes[0];\r\n\r\n        if (Math.abs(leftRotation) > 0.0001) {\r\n            this._myThumbstick.pp_rotateAxisLocal(leftRotation, this._myThumbstickOriginalLeft);\r\n        }\r\n\r\n        if (Math.abs(forwardRotation) > 0.0001) {\r\n            this._myThumbstick.pp_rotateAxisLocal(forwardRotation, this._myThumbstickOriginalForward);\r\n        }\r\n    }\r\n});", "PP.GamepadManager = class GamepadManager {\r\n    constructor() {\r\n        this._myLeftGamepad = new PP.UniversalGamepad(PP.Handedness.LEFT);\r\n        this._myRightGamepad = new PP.UniversalGamepad(PP.Handedness.RIGHT);\r\n    }\r\n\r\n    start() {\r\n        this._myLeftGamepad.start();\r\n        this._myRightGamepad.start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myLeftGamepad.update(dt);\r\n        this._myRightGamepad.update(dt);\r\n    }\r\n\r\n    getLeftGamepad() {\r\n        return this._myLeftGamepad;\r\n    }\r\n\r\n    getRightGamepad() {\r\n        return this._myRightGamepad;\r\n    }\r\n\r\n    getGamepad(handedness) {\r\n        let gamepad = null;\r\n\r\n        switch (handedness) {\r\n            case PP.Handedness.LEFT:\r\n                gamepad = this._myLeftGamepad;\r\n                break;\r\n            case PP.Handedness.RIGHT:\r\n                gamepad = this._myRightGamepad;\r\n                break;\r\n            default:\r\n                gamepad = null;\r\n        }\r\n\r\n        return gamepad;\r\n    }\r\n\r\n    getGamepads() {\r\n        let gamepads = [];\r\n\r\n        gamepads[PP.Handedness.LEFT] = this._myLeftGamepad;\r\n        gamepads[PP.Handedness.RIGHT] = this._myRightGamepad;\r\n\r\n        return gamepads;\r\n    }\r\n};", "PP.GamepadUtils = {\r\n    _mySimultaneousPressMaxDelay: 0.15,\r\n    _mySimultaneousTouchMaxDelay: 0.15,\r\n    setSimultaneousPressMaxDelay: function (simultaneousPressMaxDelay) {\r\n        PP.GamepadUtils._mySimultaneousPressMaxDelay = simultaneousPressMaxDelay;\r\n    },\r\n    setSimultaneousTouchMaxDelay: function (simultaneousTouchMaxDelay) {\r\n        PP.GamepadUtils._mySimultaneousTouchMaxDelay = simultaneousTouchMaxDelay;\r\n    },\r\n    getSimultaneousPressMaxDelay: function () {\r\n        return PP.GamepadUtils._mySimultaneousPressMaxDelay;\r\n    },\r\n    getSimultaneousTouchMaxDelay: function () {\r\n        return PP.GamepadUtils._mySimultaneousTouchMaxDelay;\r\n    },\r\n\r\n    // gamepadButtonIDsList is a sequence of a gamepads and a list of buttonIDs like this ([gamepad1, squeeze, top, select], [gamepad2, bottom, squeeze, select], ...)\r\n    // if the first parameter is a number it's used as multiplePressCount\r\n    // if the buttonIDs list is empty for a given gamepad, it means that every button will be included\r\n    isAnyButtonPressStart: function (...gamepadButtonIDsList) {\r\n        let multiplePressCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multiplePressCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let isOnePressStart = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (button.isPressStart(multiplePressCount)) {\r\n                    isOnePressStart = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (isOnePressStart) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isOnePressStart;\r\n    },\r\n    // gamepadButtonIDsList is a sequence of a gamepads and a list of buttonIDs like this ([gamepad1, squeeze, top, select], [gamepad2, bottom, squeeze, select], ...)\r\n    // if the first parameter is a number it's used as multiplePressCount\r\n    // if the buttonIDs list is empty for a given gamepad, it means that every button will be included\r\n    areButtonsPressStart: function (...gamepadButtonIDsList) {\r\n        let multiplePressCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multiplePressCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let areButtonPressedRecently = true;\r\n        let isOnePressStart = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (!(button.myIsPressed && (multiplePressCount == null || button.myMultiplePressStartCount == multiplePressCount) && button.myTimePressed < PP.GamepadUtils._mySimultaneousPressMaxDelay)) {\r\n                    areButtonPressedRecently = false;\r\n                    break;\r\n                }\r\n\r\n                if (button.isPressStart(multiplePressCount)) {\r\n                    isOnePressStart = true;\r\n                }\r\n            }\r\n\r\n            if (!areButtonPressedRecently) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return areButtonPressedRecently && isOnePressStart;\r\n    },\r\n    isAnyButtonPressEnd: function (...gamepadButtonIDsList) {\r\n        let multiplePressCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multiplePressCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let isOnePressEnd = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (button.isPressEnd(multiplePressCount)) {\r\n                    isOnePressEnd = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (isOnePressEnd) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isOnePressEnd;\r\n    },\r\n    areButtonsPressEnd: function (...gamepadButtonIDsList) {\r\n        let multiplePressCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multiplePressCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let areButtonNotPressedRecently = true;\r\n        let isOnePressEnd = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (!(!button.myIsPressed && (multiplePressCount == null || button.myMultiplePressEndCount == multiplePressCount) && button.myTimeNotPressed < PP.GamepadUtils._mySimultaneousPressMaxDelay)) {\r\n                    areButtonNotPressedRecently = false;\r\n                    break;\r\n                }\r\n\r\n                if (button.isPressEnd(multiplePressCount)) {\r\n                    isOnePressEnd = true;\r\n                }\r\n            }\r\n\r\n            if (!areButtonNotPressedRecently) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return areButtonNotPressedRecently && isOnePressEnd;\r\n    },\r\n    isAnyButtonTouchStart: function (...gamepadButtonIDsList) {\r\n        let multiplePressCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multiplePressCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let isOneTouchStart = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (button.isTouchStart(multiplePressCount)) {\r\n                    isOneTouchStart = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (isOneTouchStart) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isOneTouchStart;\r\n    },\r\n    areButtonsTouchStart: function (...gamepadButtonIDsList) {\r\n        let multipleTouchCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multipleTouchCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let areButtonTouchedRecently = true;\r\n        let isOneTouchStart = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (!(button.myIsTouched && (multipleTouchCount == null || button.myMultipleTouchStartCount == multipleTouchCount) && button.myTimeTouched < PP.GamepadUtils._mySimultaneousTouchMaxDelay)) {\r\n                    areButtonTouchedRecently = false;\r\n                    break;\r\n                }\r\n\r\n                if (button.isTouchStart(multipleTouchCount)) {\r\n                    isOneTouchStart = true;\r\n                }\r\n            }\r\n\r\n            if (!areButtonTouchedRecently) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return areButtonTouchedRecently && isOneTouchStart;\r\n    },\r\n    isAnyButtonTouchEnd: function (...gamepadButtonIDsList) {\r\n        let multiplePressCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multiplePressCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let isOneTouchEnd = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (button.isTouchEnd(multiplePressCount)) {\r\n                    isOneTouchEnd = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (isOneTouchEnd) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isOneTouchEnd;\r\n    },\r\n    areButtonsTouchEnd: function (...gamepadButtonIDsList) {\r\n        let multipleTouchCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multipleTouchCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let areButtonNotTouchedRecently = true;\r\n        let isOneTouchEnd = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (!(!button.myIsTouched && (multipleTouchCount == null || button.myMultipleTouchEndCount == multipleTouchCount) && button.myTimeNotTouched < PP.GamepadUtils._mySimultaneousTouchMaxDelay)) {\r\n                    areButtonNotTouchedRecently = false;\r\n                    break;\r\n                }\r\n\r\n                if (button.isTouchEnd(multipleTouchCount)) {\r\n                    isOneTouchEnd = true;\r\n                }\r\n            }\r\n\r\n            if (!areButtonNotTouchedRecently) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return areButtonNotTouchedRecently && isOneTouchEnd;\r\n    },\r\n};", "WL.registerComponent('pp-gamepad-control-scheme', {\r\n    _myShowOnStart: { type: WL.Type.Bool, default: true },\r\n\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n\r\n    _mySelectText: { type: WL.Type.String, default: \"\" },\r\n    _mySqueezeText: { type: WL.Type.String, default: \"\" },\r\n    _myThumbstickText: { type: WL.Type.String, default: \"\" },\r\n    _myBottomButtonText: { type: WL.Type.String, default: \"\" },\r\n    _myTopButtonText: { type: WL.Type.String, default: \"\" },\r\n\r\n    _mySelect: { type: WL.Type.Object, default: null },\r\n    _mySqueeze: { type: WL.Type.Object, default: null },\r\n    _myThumbstick: { type: WL.Type.Object, default: null },\r\n    _myBottomButton: { type: WL.Type.Object, default: null },\r\n    _myTopButton: { type: WL.Type.Object, default: null },\r\n\r\n    _myTextScaleMultiplier: { type: WL.Type.Float, default: 1 },\r\n    _myTextOffsetMultiplier: { type: WL.Type.Float, default: 1 },\r\n    _myLineLengthMultiplier: { type: WL.Type.Float, default: 1 },\r\n    _myLineThicknessMultiplier: { type: WL.Type.Float, default: 1 },\r\n    _myDistanceFromButtonsMultiplier: { type: WL.Type.Float, default: 1 },\r\n\r\n    _myTextMaterial: { type: WL.Type.Material },\r\n    _myLineMaterial: { type: WL.Type.Material }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myTextMaterialFinal = (this._myTextMaterial != null) ? this._myTextMaterial : PP.myDefaultResources.myMaterials.myText.clone();\r\n        this._myLineMaterialFinal = (this._myLineMaterial != null) ? this._myLineMaterial : PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n\r\n        this._myHandednessType = PP.InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myControlSchemeDirection = (this._myHandednessType == PP.Handedness.LEFT) ? 1 : -1;\r\n\r\n        this._myVisible = false;\r\n        this._mySetVisibleNextUpdate = false;\r\n\r\n        this._createControlScheme();\r\n        this.setVisible(this._myShowOnStart);\r\n\r\n        this._myVisibleBackup = this._myVisible;\r\n    },\r\n    update: function (dt) {\r\n        if (this._mySetVisibleNextUpdate) {\r\n            this._mySetVisibleNextUpdate = false;\r\n            this.setVisible(false);\r\n            this.setVisible(this._myVisibleBackup);\r\n        }\r\n    },\r\n    onActivate() {\r\n        this._mySetVisibleNextUpdate = true;\r\n    },\r\n    onDeactivate() {\r\n        this._myVisibleBackup = this._myVisible;\r\n        this.setVisible(false);\r\n    },\r\n    isVisible() {\r\n        return this._myVisible;\r\n    },\r\n    setVisible(visible) {\r\n        this._myVisible = visible;\r\n\r\n        if (this._myRootObject != null) {\r\n            this._myRootObject.pp_setActive(this._myVisible);\r\n\r\n            if (this._myVisible) {\r\n                this._hideEmptySchemes();\r\n            }\r\n        }\r\n    },\r\n    setSelectText(text) {\r\n        this._mySelectText = text;\r\n        this._mySelectTextComponent.text = this._mySelectText;\r\n        this.setVisible(this._myVisible);\r\n    },\r\n    setSqueezeText(text) {\r\n        this._mySqueezeText = text;\r\n        this._mySqueezeTextComponent.text = this._mySqueezeText;\r\n        this.setVisible(this._myVisible);\r\n    },\r\n    setThumbstickText(text) {\r\n        this._myThumbstickText = text;\r\n        this._myThumbstickTextComponent.text = this._myThumbstickText;\r\n        this.setVisible(this._myVisible);\r\n    },\r\n    setBottomButtonText(text) {\r\n        this._myBottomButtonText = text;\r\n        this._myBottomButtonTextComponent.text = this._myBottomButtonText;\r\n        this.setVisible(this._myVisible);\r\n    },\r\n    setTopButtonText(text) {\r\n        this._myTopButtonText = text;\r\n        this._myTopButtonTextComponent.text = this._myTopButtonText;\r\n        this.setVisible(this._myVisible);\r\n    },\r\n    _createControlScheme() {\r\n        this._myRootObject = this.object.pp_addObject();\r\n\r\n        let distanceFromButton = 0.02 * this._myDistanceFromButtonsMultiplier;\r\n        let lineLength = 0.0935 * this._myLineLengthMultiplier;\r\n\r\n        let referenceObject = this._myThumbstick;\r\n\r\n        this._mySelectObject = this._myRootObject.pp_addObject();\r\n        this._mySelectTextComponent = this._addScheme(this._mySelect, referenceObject,\r\n            PP.vec3_create(0, 0, distanceFromButton),\r\n            PP.vec3_create(lineLength * this._myControlSchemeDirection, 0, 0),\r\n            this._mySelectObject);\r\n        this._mySelectTextComponent.text = this._mySelectText;\r\n\r\n        this._mySqueezeObject = this._myRootObject.pp_addObject();\r\n        this._mySqueezeTextComponent = this._addScheme(this._mySqueeze, referenceObject,\r\n            PP.vec3_create(distanceFromButton * this._myControlSchemeDirection, 0, 0),\r\n            PP.vec3_create(lineLength * this._myControlSchemeDirection, 0, 0),\r\n            this._mySqueezeObject);\r\n        this._mySqueezeTextComponent.text = this._mySqueezeText;\r\n\r\n        this._myThumbstickObject = this._myRootObject.pp_addObject();\r\n        this._myThumbstickTextComponent = this._addScheme(this._myThumbstick, referenceObject,\r\n            PP.vec3_create(0, distanceFromButton, 0),\r\n            PP.vec3_create(-lineLength * this._myControlSchemeDirection, 0, 0),\r\n            this._myThumbstickObject);\r\n        this._myThumbstickTextComponent.text = this._myThumbstickText;\r\n\r\n        let thumbstickPositionLocal = this._myThumbstick.pp_getPositionLocal();\r\n        let thumbstickUpLocal = this._myThumbstick.pp_getUpLocal();\r\n\r\n        {\r\n            let bottomButtonPositionLocal = this._myBottomButton.pp_getPositionLocal();\r\n            let difference = bottomButtonPositionLocal.vec3_sub(thumbstickPositionLocal);\r\n            let differenceOnUp = difference.vec3_valueAlongAxis(thumbstickUpLocal);\r\n\r\n            this._myBottomButtonObject = this._myRootObject.pp_addObject();\r\n            this._myBottomButtonTextComponent = this._addScheme(this._myBottomButton, referenceObject,\r\n                PP.vec3_create(0, distanceFromButton - differenceOnUp, 0),\r\n                PP.vec3_create(0, 0, -lineLength),\r\n                this._myBottomButtonObject);\r\n            this._myBottomButtonTextComponent.text = this._myBottomButtonText;\r\n        }\r\n\r\n        {\r\n            let topButtonPositionLocal = this._myTopButton.pp_getPositionLocal();\r\n            let difference = topButtonPositionLocal.vec3_sub(thumbstickPositionLocal);\r\n            let differenceOnUp = difference.vec3_valueAlongAxis(thumbstickUpLocal);\r\n\r\n            this._myTopButtonObject = this._myRootObject.pp_addObject();\r\n            this._myTopButtonTextComponent = this._addScheme(this._myTopButton, referenceObject,\r\n                PP.vec3_create(0, distanceFromButton - differenceOnUp, 0),\r\n                PP.vec3_create(-lineLength * this._myControlSchemeDirection, 0, 0).vec3_rotateAxis(-45 * this._myControlSchemeDirection, PP.vec3_create(0, 1, 0)),\r\n                this._myTopButtonObject);\r\n            this._myTopButtonTextComponent.text = this._myTopButtonText;\r\n        }\r\n    },\r\n    _addScheme(buttonObject, referenceObject, startOffset, endOffset, parentObject) {\r\n        let buttonPosition = buttonObject.pp_getPositionLocal();\r\n        let referenceForward = referenceObject.pp_getForwardLocal();\r\n        let referenceRight = referenceObject.pp_getRightLocal();\r\n        let referenceUp = referenceObject.pp_getUpLocal();\r\n\r\n        let lineStart = buttonPosition.vec3_add(referenceRight.vec3_scale(startOffset[0]));\r\n        lineStart.vec3_add(referenceUp.vec3_scale(startOffset[1]), lineStart);\r\n        lineStart.vec3_add(referenceForward.vec3_scale(startOffset[2]), lineStart);\r\n\r\n        let lineEnd = lineStart.vec3_add(referenceRight.vec3_scale(endOffset[0]));\r\n        lineEnd.vec3_add(referenceUp.vec3_scale(endOffset[1]), lineEnd);\r\n        lineEnd.vec3_add(referenceForward.vec3_scale(endOffset[2]), lineEnd);\r\n\r\n        let textOffset = 0.01 * this._myTextOffsetMultiplier;\r\n        let textPosition = lineEnd.vec3_add(referenceForward.vec3_scale(-textOffset));\r\n\r\n        this._addLine(lineStart, lineEnd, parentObject);\r\n        let textComponent = this._addText(textPosition, referenceForward, referenceUp, parentObject);\r\n\r\n        return textComponent;\r\n    },\r\n    _addLine(start, end, parentObject) {\r\n        let lineDirection = end.vec3_sub(start);\r\n        let length = lineDirection.vec3_length();\r\n        lineDirection.vec3_normalize(lineDirection);\r\n\r\n        lineRootObject = parentObject.pp_addObject();\r\n        lineObject = lineRootObject.pp_addObject();\r\n\r\n        let lineMesh = lineObject.addComponent('mesh');\r\n        lineMesh.mesh = PP.myDefaultResources.myMeshes.myCylinder;\r\n        lineMesh.material = this._myLineMaterialFinal;\r\n\r\n        lineRootObject.pp_setPositionLocal(start);\r\n\r\n        let thickness = 0.001 * this._myLineThicknessMultiplier;\r\n        lineObject.pp_scaleObject(PP.vec3_create(thickness / 2, length / 2, thickness / 2));\r\n\r\n        lineObject.pp_setUpLocal(lineDirection);\r\n        lineObject.pp_translateObject(PP.vec3_create(0, length / 2, 0));\r\n    },\r\n    _addText(position, forward, up, parentObject) {\r\n        let textObject = parentObject.pp_addObject();\r\n        textObject.pp_setPositionLocal(position);\r\n        textObject.pp_lookToLocal(up, forward);\r\n        textObject.pp_scaleObject(0.0935 * this._myTextScaleMultiplier);\r\n\r\n        let textComponent = textObject.pp_addComponent(\"text\");\r\n        textComponent.alignment = WL.Alignment.Center;\r\n        textComponent.justification = WL.Justification.Top;\r\n        textComponent.material = this._myTextMaterialFinal;\r\n\r\n        return textComponent;\r\n    },\r\n    _hideEmptySchemes() {\r\n        if (this._mySelectText.length == 0) {\r\n            this._mySelectObject.pp_setActive(false);\r\n        }\r\n        if (this._mySqueezeText.length == 0) {\r\n            this._mySqueezeObject.pp_setActive(false);\r\n        }\r\n        if (this._myThumbstickText.length == 0) {\r\n            this._myThumbstickObject.pp_setActive(false);\r\n        }\r\n        if (this._myBottomButtonText.length == 0) {\r\n            this._myBottomButtonObject.pp_setActive(false);\r\n        }\r\n        if (this._myTopButtonText.length == 0) {\r\n            this._myTopButtonObject.pp_setActive(false);\r\n        }\r\n    }\r\n});", "PP.VirtualGamepad = class VirtualGamepad {\r\n    constructor(params = new PP.VirtualGamepadParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = true;\r\n        this._myVirtualGamepadContainer = null;\r\n\r\n        this._myVirtualGamepadVirtualButtons = [];\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.LEFT] = [];\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.RIGHT] = [];\r\n\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.LEFT][PP.GamepadButtonID.SELECT] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.LEFT][PP.GamepadButtonID.SQUEEZE] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.LEFT][PP.GamepadButtonID.THUMBSTICK] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.LEFT][PP.GamepadButtonID.TOP_BUTTON] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.LEFT][PP.GamepadButtonID.BOTTOM_BUTTON] = null;\r\n\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.RIGHT][PP.GamepadButtonID.SELECT] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.RIGHT][PP.GamepadButtonID.SQUEEZE] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.RIGHT][PP.GamepadButtonID.THUMBSTICK] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.RIGHT][PP.GamepadButtonID.TOP_BUTTON] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.RIGHT][PP.GamepadButtonID.BOTTOM_BUTTON] = null;\r\n\r\n        this._myButtonsAmount = this._myVirtualGamepadVirtualButtons[PP.Handedness.LEFT].length;\r\n\r\n        this._myVirtualGamepadVirtualThumbsticks = [];\r\n        this._myVirtualGamepadVirtualThumbsticks[PP.Handedness.LEFT] = null;\r\n        this._myVirtualGamepadVirtualThumbsticks[PP.Handedness.RIGHT] = null;\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myVisible;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n\r\n            if (this._myVirtualGamepadContainer != null) {\r\n                if (this._myVisible) {\r\n                    this._myVirtualGamepadContainer.style.display = \"block\";\r\n                } else {\r\n                    this._myVirtualGamepadContainer.style.display = \"none\";\r\n                }\r\n\r\n                for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n                    for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                        let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                        if (button != null) {\r\n                            button.setActive(this._myVisible);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n                    let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness];\r\n                    if (thumbstick != null) {\r\n                        thumbstick.setActive(this._myVisible);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isButtonPressed(handedness, gamepadButtonID) {\r\n        if (!this._myVisible) return false;\r\n\r\n        let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n        if (button != null) {\r\n            return button.isPressed();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getAxes(handedness, outAxes = PP.vec2_create(0, 0)) {\r\n        if (!this._myVisible) return outAxes;\r\n\r\n        let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness];\r\n        if (thumbstick != null) {\r\n            outAxes.vec2_copy(thumbstick.getAxes());\r\n        }\r\n\r\n        return outAxes;\r\n    }\r\n\r\n    start() {\r\n        this._buildVirtualGamepad();\r\n\r\n        let currentVisible = this._myVisible;\r\n        this._myVisible = !this._myVisible;\r\n        this.setVisible(currentVisible);\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myParams.myAutoUpdateVisibility) {\r\n            if (PP.XRUtils.isSessionActive() && WL.vrSupported == 1) {\r\n                this.setVisible(false);\r\n            } else if (this._myParams.myShowOnDesktop && PP.BrowserUtils.isDesktop() && WL.vrSupported == 0) {\r\n                this.setVisible(true);\r\n            } else if (this._myParams.myShowOnHeadset && PP.BrowserUtils.isDesktop() && WL.vrSupported == 1) {\r\n                this.setVisible(true);\r\n            } else if (this._myParams.myShowOnMobile && PP.BrowserUtils.isMobile()) {\r\n                this.setVisible(true);\r\n            } else {\r\n                this.setVisible(false);\r\n            }\r\n        }\r\n\r\n        if (this._myVisible) {\r\n            for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n                for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                    let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                    if (button != null) {\r\n                        button.update(dt);\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n                let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness];\r\n                if (thumbstick != null) {\r\n                    thumbstick.update(dt);\r\n                }\r\n            }\r\n\r\n            this._setMouseHoverActive(!(this._myParams.myDisableMouseHoverWhenPressed && this._isAnyElementPressed()));\r\n        }\r\n    }\r\n\r\n    _buildVirtualGamepad() {\r\n        this._documentBodySetup();\r\n\r\n        this._myVirtualGamepadContainer = document.createElement(\"div\");\r\n        this._myVirtualGamepadContainer.style.display = \"block\";\r\n        this._myVirtualGamepadContainer.style.opacity = this._myParams.myOpacity.toString();\r\n        document.body.appendChild(this._myVirtualGamepadContainer);\r\n\r\n        let leftDiv = document.createElement(\"div\");\r\n        this._myVirtualGamepadContainer.appendChild(leftDiv);\r\n\r\n        let rightDiv = document.createElement(\"div\");\r\n        this._myVirtualGamepadContainer.appendChild(rightDiv);\r\n\r\n        let buttonsAmount = this._myParams.myButtonsOrder[PP.Handedness.LEFT].length;\r\n        for (let i = 0; i < buttonsAmount; i++) {\r\n            if (this._myParams.myButtonsOrder[PP.Handedness.LEFT][i] != null) {\r\n                let gamepadButtonHandedness = this._myParams.myButtonsOrder[PP.Handedness.LEFT][i][0];\r\n                let gamepadButtonID = this._myParams.myButtonsOrder[PP.Handedness.LEFT][i][1];\r\n                this._buildButton(leftDiv, PP.Handedness.LEFT, i, gamepadButtonHandedness, gamepadButtonID);\r\n            }\r\n\r\n            if (this._myParams.myButtonsOrder[PP.Handedness.RIGHT][i] != null) {\r\n                let gamepadButtonHandedness = this._myParams.myButtonsOrder[PP.Handedness.RIGHT][i][0];\r\n                let gamepadButtonID = this._myParams.myButtonsOrder[PP.Handedness.RIGHT][i][1];\r\n                this._buildButton(rightDiv, PP.Handedness.RIGHT, i, gamepadButtonHandedness, gamepadButtonID);\r\n            }\r\n        }\r\n\r\n        if (this._myParams.myThumbsticksOrder[PP.Handedness.LEFT] != null) {\r\n            let gamepadThumbstickHandedness = this._myParams.myThumbsticksOrder[PP.Handedness.LEFT];\r\n            this._buildThumbstick(leftDiv, PP.Handedness.LEFT, gamepadThumbstickHandedness);\r\n        }\r\n\r\n        if (this._myParams.myThumbsticksOrder[PP.Handedness.RIGHT] != null) {\r\n            let gamepadThumbstickHandedness = this._myParams.myThumbsticksOrder[PP.Handedness.RIGHT];\r\n            this._buildThumbstick(rightDiv, PP.Handedness.RIGHT, gamepadThumbstickHandedness);\r\n        }\r\n    }\r\n\r\n    _documentBodySetup() {\r\n        document.body.style.overflow = \"hidden\";\r\n        document.body.style.userSelect = \"none\";\r\n        document.body.style.webkitUserSelect = \"none\";\r\n        document.body.style.webkitTapHighlightColor = \"transparent\";\r\n        document.body.style.touchAction = \"none\";\r\n        document.addEventListener('gesturestart', function (e) {\r\n            e.preventDefault();\r\n        });\r\n    }\r\n\r\n    _buildButton(buttonElementParent, virtualButtonHandedness, virtualButtonIndex, gamepadButtonHandedness, gamepadButtonID) {\r\n        let virtualGamepadVirtualButton = new PP.VirtualGamepadVirtualButton(buttonElementParent, this._myParams, virtualButtonHandedness, virtualButtonIndex, gamepadButtonHandedness, gamepadButtonID);\r\n        this._myVirtualGamepadVirtualButtons[gamepadButtonHandedness][gamepadButtonID] = virtualGamepadVirtualButton;\r\n    }\r\n\r\n    _buildThumbstick(thumbstickElementParent, virtualThumbstickHandedness, gamepadThumbstickHandedness) {\r\n        let virtualGamepadVirtualThumbstick = new PP.VirtualGamepadVirtualThumbstick(thumbstickElementParent, this._myParams, virtualThumbstickHandedness, gamepadThumbstickHandedness);\r\n        this._myVirtualGamepadVirtualThumbsticks[gamepadThumbstickHandedness] = virtualGamepadVirtualThumbstick;\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n\r\n    _isAnyElementPressed() {\r\n        let isAnyElementPressed = false;\r\n\r\n        for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n            for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                if (button != null && button.isPressed()) {\r\n                    isAnyElementPressed = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!isAnyElementPressed) {\r\n            for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n                let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness];\r\n                if (thumbstick != null && thumbstick.isPressed()) {\r\n                    isAnyElementPressed = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isAnyElementPressed;\r\n    }\r\n\r\n    _setMouseHoverActive(hoverActive) {\r\n        for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n            for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                if (button != null) {\r\n                    button.setMouseHoverActive(hoverActive);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n            let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness];\r\n            if (thumbstick != null) {\r\n                thumbstick.setMouseHoverActive(hoverActive);\r\n            }\r\n        }\r\n    }\r\n};", "WL.registerComponent(\"pp-virtual-gamepad\", {\r\n    _myShowOnDesktop: { type: WL.Type.Bool, default: false },   // you may have to enable headset too\r\n    _myShowOnMobile: { type: WL.Type.Bool, default: true },\r\n    _myShowOnHeadset: { type: WL.Type.Bool, default: false },   // not 100% reliable, this is true if the device supports vr and it is desktop\r\n    _myReleaseOnPointerLeave: { type: WL.Type.Bool, default: false },\r\n    _myAddToUniversalGamepad: { type: WL.Type.Bool, default: true },\r\n    _myOpacity: { type: WL.Type.Float, default: 0.5 },\r\n    _myIconColor: { type: WL.Type.String, default: \"#e0e0e0\" },\r\n    _myBackgroundColor: { type: WL.Type.String, default: \"#616161\" },\r\n    _myInterfaceScale: { type: WL.Type.Float, default: 1 },\r\n    _myMarginScale: { type: WL.Type.Float, default: 1 },\r\n\r\n    ADVANCED_PARAMS_BELOW: { type: WL.Type.String, default: '' },\r\n\r\n    _myLabelFontSize: { type: WL.Type.Float, default: 2 },\r\n    _myLabelFontFamily: { type: WL.Type.String, default: 'sans-serif' },\r\n    _myLabelFontWeight: { type: WL.Type.String, default: 'bold' },\r\n    _myImagePressedBrightness: { type: WL.Type.Float, default: 0.5 },\r\n\r\n    _myLeftSelectButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myLeftSelectButtonOrderIndex: { type: WL.Type.Int, default: 1 },\r\n    _myLeftSelectButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'frame' },\r\n    _myLeftSelectButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myLeftSqueezeButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myLeftSqueezeButtonOrderIndex: { type: WL.Type.Int, default: 0 },\r\n    _myLeftSqueezeButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'square' },\r\n    _myLeftSqueezeButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myLeftThumbstickButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myLeftThumbstickButtonOrderIndex: { type: WL.Type.Int, default: 4 },\r\n    _myLeftThumbstickButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'dot' },\r\n    _myLeftThumbstickButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myLeftTopButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myLeftTopButtonOrderIndex: { type: WL.Type.Int, default: 2 },\r\n    _myLeftTopButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'circle' },\r\n    _myLeftTopButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myLeftBottomButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myLeftBottomButtonOrderIndex: { type: WL.Type.Int, default: 3 },\r\n    _myLeftBottomButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'ring' },\r\n    _myLeftBottomButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myRightSelectButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myRightSelectButtonOrderIndex: { type: WL.Type.Int, default: 1 },\r\n    _myRightSelectButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'frame' },\r\n    _myRightSelectButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myRightSqueezeButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myRightSqueezeButtonOrderIndex: { type: WL.Type.Int, default: 0 },\r\n    _myRightSqueezeButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'square' },\r\n    _myRightSqueezeButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myRightThumbstickButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myRightThumbstickButtonOrderIndex: { type: WL.Type.Int, default: 4 },\r\n    _myRightThumbstickButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'dot' },\r\n    _myRightThumbstickButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myRightTopButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myRightTopButtonOrderIndex: { type: WL.Type.Int, default: 2 },\r\n    _myRightTopButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'circle' },\r\n    _myRightTopButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myRightBottomButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myRightBottomButtonOrderIndex: { type: WL.Type.Int, default: 3 },\r\n    _myRightBottomButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'ring' },\r\n    _myRightBottomButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' }\r\n}, {\r\n    start() {\r\n        let params = new PP.VirtualGamepadParams();\r\n        params.defaultSetup();\r\n\r\n        for (let handedness in params.myButtonParams) {\r\n            for (let gamepadButtonID in params.myButtonParams[handedness]) {\r\n                let buttonParams = params.myButtonParams[handedness][gamepadButtonID];\r\n                buttonParams.myIconParams.myBackgroundColor = this._myBackgroundColor;\r\n                buttonParams.myIconParams.myBackgroundPressedColor = this._myIconColor;\r\n                buttonParams.myIconParams.myIconColor = this._myIconColor;\r\n                buttonParams.myIconParams.myIconPressedColor = this._myBackgroundColor;\r\n            }\r\n        }\r\n\r\n        for (let handedness in params.myThumbstickParams) {\r\n            let thumbstickParams = params.myThumbstickParams[handedness];\r\n            thumbstickParams.myBackgroundColor = this._myBackgroundColor;\r\n            thumbstickParams.myIconParams.myBackgroundColor = this._myIconColor;\r\n            thumbstickParams.myIconParams.myBackgroundPressedColor = this._myIconColor;\r\n            thumbstickParams.myIconParams.myIconColor = this._myBackgroundColor;\r\n            thumbstickParams.myIconParams.myIconPressedColor = this._myBackgroundColor;\r\n        }\r\n\r\n        params.myOpacity = this._myOpacity;\r\n\r\n        params.myReleaseOnPointerLeave = this._myReleaseOnPointerLeave;\r\n        params.myInterfaceScale = this._myInterfaceScale;\r\n        params.myMarginScale = this._myMarginScale;\r\n\r\n        params.myShowOnDesktop = this._myShowOnDesktop;\r\n        params.myShowOnMobile = this._myShowOnMobile;\r\n        params.myShowOnHeadset = this._myShowOnHeadset;\r\n\r\n        if (params.myShowOnDesktop || params.myShowOnMobile || params.myShowOnHeadset) {\r\n            params.myAutoUpdateVisibility = true;\r\n        } else {\r\n            params.myAutoUpdateVisibility = false;\r\n        }\r\n\r\n        this._advancedSetup(params);\r\n\r\n        this._myVirtualGamepad = new PP.VirtualGamepad(params);\r\n        if (!params.myAutoUpdateVisibility) {\r\n            this._myVirtualGamepad.setVisible(false);\r\n        }\r\n\r\n        this._myVirtualGamepad.start();\r\n\r\n        this._myFirstUpdate = true;\r\n    },\r\n    update(dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n\r\n            if (this._myAddToUniversalGamepad) {\r\n                let leftVirtualGamepadGamepadCore = new PP.VirtualGamepadGamepadCore(this._myVirtualGamepad, PP.Handedness.LEFT, PP.myLeftGamepad.getGamepadCore(\"left_xr_gamepad\").getHandPose());\r\n                let rightVirtualGamepadGamepadCore = new PP.VirtualGamepadGamepadCore(this._myVirtualGamepad, PP.Handedness.RIGHT, PP.myRightGamepad.getGamepadCore(\"right_xr_gamepad\").getHandPose());\r\n\r\n                PP.myLeftGamepad.addGamepadCore(\"left_virtual_gamepad\", leftVirtualGamepadGamepadCore);\r\n                PP.myRightGamepad.addGamepadCore(\"right_virtual_gamepad\", rightVirtualGamepadGamepadCore);\r\n            }\r\n        }\r\n\r\n        this._myVirtualGamepad.update(dt);\r\n    },\r\n    _advancedSetup(params) {\r\n        params.myButtonsOrder[PP.Handedness.LEFT] = [null, null, null, null, null];\r\n        params.myButtonsOrder[PP.Handedness.RIGHT] = [null, null, null, null, null];\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.SELECT];\r\n            buttonParams.myIconParams.myIconType = this._myLeftSelectButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftSelectButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.LEFT][this._myLeftSelectButtonOrderIndex] = [PP.Handedness.LEFT, PP.GamepadButtonID.SELECT];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.SQUEEZE];\r\n            buttonParams.myIconParams.myIconType = this._myLeftSqueezeButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftSqueezeButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.LEFT][this._myLeftSqueezeButtonOrderIndex] = [PP.Handedness.LEFT, PP.GamepadButtonID.SQUEEZE];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.THUMBSTICK];\r\n            buttonParams.myIconParams.myIconType = this._myLeftThumbstickButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftThumbstickButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.LEFT][this._myLeftThumbstickButtonOrderIndex] = [PP.Handedness.LEFT, PP.GamepadButtonID.THUMBSTICK];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.TOP_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myLeftTopButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftTopButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.LEFT][this._myLeftTopButtonOrderIndex] = [PP.Handedness.LEFT, PP.GamepadButtonID.TOP_BUTTON];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.BOTTOM_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myLeftBottomButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftBottomButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.LEFT][this._myLeftBottomButtonOrderIndex] = [PP.Handedness.LEFT, PP.GamepadButtonID.BOTTOM_BUTTON];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.SELECT];\r\n            buttonParams.myIconParams.myIconType = this._myRightSelectButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightSelectButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.RIGHT][this._myRightSelectButtonOrderIndex] = [PP.Handedness.RIGHT, PP.GamepadButtonID.SELECT];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.SQUEEZE];\r\n            buttonParams.myIconParams.myIconType = this._myRightSqueezeButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightSqueezeButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.RIGHT][this._myRightSqueezeButtonOrderIndex] = [PP.Handedness.RIGHT, PP.GamepadButtonID.SQUEEZE];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.THUMBSTICK];\r\n            buttonParams.myIconParams.myIconType = this._myRightThumbstickButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightThumbstickButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.RIGHT][this._myRightThumbstickButtonOrderIndex] = [PP.Handedness.RIGHT, PP.GamepadButtonID.THUMBSTICK];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.TOP_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myRightTopButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightTopButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.RIGHT][this._myRightTopButtonOrderIndex] = [PP.Handedness.RIGHT, PP.GamepadButtonID.TOP_BUTTON];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.BOTTOM_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myRightBottomButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightBottomButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.RIGHT][this._myRightBottomButtonOrderIndex] = [PP.Handedness.RIGHT, PP.GamepadButtonID.BOTTOM_BUTTON];\r\n            }\r\n        }\r\n    }\r\n});", "PP.VirtualGamepadButtonParams = class VirtualGamepadButtonParams {\r\n    constructor() {\r\n        this.myIconParams = new PP.VirtualGamepadIconParams();\r\n    }\r\n};\r\n\r\nPP.VirtualGamepadThumbstickParams = class VirtualGamepadThumbstickParams {\r\n    constructor() {\r\n        this.myBackgroundColor = \"\";\r\n\r\n        this.myMaxDistanceFromCenterMultiplier = 1;\r\n\r\n        this.myReleaseTransitionSeconds = 0.2;\r\n        this.myMoveTransitionSeconds = 0;\r\n\r\n        this.myIncludeBackgroundToDetection = false; // you can press the background of the icon to move the thumbstick, makes it harder to miss it\r\n\r\n        this.myIconParams = new PP.VirtualGamepadIconParams();\r\n    }\r\n};\r\n\r\nPP.VirtualGamepadParams = class VirtualGamepadParams {\r\n    constructor() {\r\n        this.myShowOnDesktop = false;\r\n        this.myShowOnMobile = false;\r\n        this.myShowOnHeadset = false;   // not 100% reliable, this is true if the device supports vr and it is desktop\r\n\r\n        this.myAutoUpdateVisibility = false;\r\n\r\n        this.myOpacity = 1;\r\n\r\n        this.myInterfaceScale = 1;\r\n        this.myMarginScale = 1;\r\n\r\n        this.myReleaseOnPointerLeave = false; // if mouse leaves the canvas it will be like it was released\r\n        this.myStopPropagatingMouseDownEvents = true; // this can be used to make it so the rest of the game will ignore clicks on the virtual gamepad\r\n\r\n        // Advanced Params\r\n\r\n        this.myButtonParams = [];\r\n        this.myButtonParams[PP.Handedness.LEFT] = [];\r\n        this.myButtonParams[PP.Handedness.RIGHT] = [];\r\n\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.SELECT] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.SQUEEZE] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.THUMBSTICK] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.TOP_BUTTON] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.BOTTOM_BUTTON] = new PP.VirtualGamepadButtonParams();\r\n\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.SELECT] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.SQUEEZE] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.THUMBSTICK] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.TOP_BUTTON] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.BOTTOM_BUTTON] = new PP.VirtualGamepadButtonParams();\r\n\r\n        this.myThumbstickParams = [];\r\n        this.myThumbstickParams[PP.Handedness.LEFT] = new PP.VirtualGamepadThumbstickParams();\r\n        this.myThumbstickParams[PP.Handedness.RIGHT] = new PP.VirtualGamepadThumbstickParams();\r\n\r\n        this.myButtonsOrder = [];\r\n        this.myButtonsOrder[PP.Handedness.LEFT] = [null, null, null, null, null];\r\n        this.myButtonsOrder[PP.Handedness.RIGHT] = [null, null, null, null, null];\r\n\r\n        this.myThumbsticksOrder = [];\r\n        this.myThumbsticksOrder[PP.Handedness.LEFT] = null;\r\n        this.myThumbsticksOrder[PP.Handedness.RIGHT] = null;\r\n\r\n        // Even More Advanced Params\r\n\r\n        this.myValidPointerButtons = [];\r\n\r\n        this.myMarginLeft = 0;\r\n        this.myMarginRight = 0;\r\n        this.myMarginBottom = 0;\r\n\r\n        this.myThumbstickSize = 0;\r\n\r\n        this.myButtonSize = 0;\r\n        this.myButtonsRingRadius = 0;\r\n        this.myButtonsRingStartAngle = 0;\r\n        this.myButtonsRingEndAngle = 0;\r\n\r\n        this.myFontSize = 0;\r\n\r\n        this.myMinSizeMultiplier = 0;  // can be used to specify a min size based on the view width for when the view is in portrait mode\r\n\r\n        this.myDisableMouseHoverWhenPressed = false;\r\n    }\r\n\r\n    defaultSetup() {\r\n        this.myShowOnMobile = true;\r\n        this.myAutoUpdateVisibility = true;\r\n\r\n        this.myOpacity = 0.5;\r\n\r\n        // Params\r\n\r\n        let backgroundColor = \"#616161\";\r\n        let iconColor = \"#e0e0e0\";\r\n\r\n        let buttonHoveredBrightness = 0.75;\r\n        let thumbstickHoveredBrightness = 0.75;\r\n\r\n        let thumbstickIncludeBackgroundToDetection = true;\r\n\r\n        for (let handedness in this.myButtonParams) {\r\n            for (let gamepadButtonID in this.myButtonParams[handedness]) {\r\n                let buttonParams = this.myButtonParams[handedness][gamepadButtonID];\r\n                buttonParams.myIconParams.myBackgroundColor = backgroundColor;\r\n                buttonParams.myIconParams.myBackgroundPressedColor = iconColor;\r\n                buttonParams.myIconParams.myIconColor = iconColor;\r\n                buttonParams.myIconParams.myIconPressedColor = backgroundColor;\r\n                buttonParams.myIconParams.myOverallHoveredBrightness = buttonHoveredBrightness;\r\n            }\r\n        }\r\n\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.SQUEEZE].myIconParams.myIconType = PP.VirtualGamepadIconType.SQUARE;\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.SQUEEZE].myIconParams.myIconType = PP.VirtualGamepadIconType.SQUARE;\r\n\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.SELECT].myIconParams.myIconType = PP.VirtualGamepadIconType.FRAME;\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.SELECT].myIconParams.myIconType = PP.VirtualGamepadIconType.FRAME;\r\n\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.TOP_BUTTON].myIconParams.myIconType = PP.VirtualGamepadIconType.CIRCLE;\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.TOP_BUTTON].myIconParams.myIconType = PP.VirtualGamepadIconType.CIRCLE;\r\n\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.BOTTOM_BUTTON].myIconParams.myIconType = PP.VirtualGamepadIconType.RING;\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.BOTTOM_BUTTON].myIconParams.myIconType = PP.VirtualGamepadIconType.RING;\r\n\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.THUMBSTICK].myIconParams.myIconType = PP.VirtualGamepadIconType.DOT;\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.THUMBSTICK].myIconParams.myIconType = PP.VirtualGamepadIconType.DOT;\r\n\r\n        for (let handedness in this.myThumbstickParams) {\r\n            let thumbstickParams = this.myThumbstickParams[handedness];\r\n            thumbstickParams.myBackgroundColor = backgroundColor;\r\n            thumbstickParams.myIconParams.myBackgroundColor = iconColor;\r\n            thumbstickParams.myIconParams.myBackgroundPressedColor = iconColor;\r\n            thumbstickParams.myIconParams.myIconColor = backgroundColor;\r\n            thumbstickParams.myIconParams.myIconPressedColor = backgroundColor;\r\n            thumbstickParams.myIconParams.myOverallHoveredBrightness = thumbstickHoveredBrightness;\r\n\r\n            thumbstickParams.myIncludeBackgroundToDetection = thumbstickIncludeBackgroundToDetection;\r\n        }\r\n\r\n        // Orders\r\n\r\n        this.myButtonsOrder[PP.Handedness.LEFT][0] = [PP.Handedness.LEFT, PP.GamepadButtonID.SQUEEZE];\r\n        this.myButtonsOrder[PP.Handedness.LEFT][1] = [PP.Handedness.LEFT, PP.GamepadButtonID.SELECT];\r\n        this.myButtonsOrder[PP.Handedness.LEFT][2] = [PP.Handedness.LEFT, PP.GamepadButtonID.TOP_BUTTON];\r\n        this.myButtonsOrder[PP.Handedness.LEFT][3] = [PP.Handedness.LEFT, PP.GamepadButtonID.BOTTOM_BUTTON];\r\n        this.myButtonsOrder[PP.Handedness.LEFT][4] = [PP.Handedness.LEFT, PP.GamepadButtonID.THUMBSTICK];\r\n\r\n        this.myButtonsOrder[PP.Handedness.RIGHT][0] = [PP.Handedness.RIGHT, PP.GamepadButtonID.SQUEEZE];\r\n        this.myButtonsOrder[PP.Handedness.RIGHT][1] = [PP.Handedness.RIGHT, PP.GamepadButtonID.SELECT];\r\n        this.myButtonsOrder[PP.Handedness.RIGHT][2] = [PP.Handedness.RIGHT, PP.GamepadButtonID.TOP_BUTTON];\r\n        this.myButtonsOrder[PP.Handedness.RIGHT][3] = [PP.Handedness.RIGHT, PP.GamepadButtonID.BOTTOM_BUTTON];\r\n        this.myButtonsOrder[PP.Handedness.RIGHT][4] = [PP.Handedness.RIGHT, PP.GamepadButtonID.THUMBSTICK];\r\n\r\n        this.myThumbsticksOrder[PP.Handedness.LEFT] = PP.Handedness.LEFT;\r\n        this.myThumbsticksOrder[PP.Handedness.RIGHT] = PP.Handedness.RIGHT;\r\n\r\n        // Sizes\r\n\r\n        this.myMarginLeft = 3;\r\n        this.myMarginRight = 3;\r\n        this.myMarginBottom = 3;\r\n\r\n        this.myThumbstickSize = 15;\r\n\r\n        this.myButtonSize = 5;\r\n        this.myButtonsRingRadius = 12;\r\n        this.myButtonsRingStartAngle = 385;\r\n        this.myButtonsRingEndAngle = 245;\r\n\r\n        this.myMinSizeMultiplier = 5 / 3;\r\n\r\n        // Cauldron\r\n\r\n        this.myDisableMouseHoverWhenPressed = true;\r\n        this.myValidPointerButtons = [0];\r\n    }\r\n};", "PP.VirtualGamepadVirtualButton = class VirtualGamepadVirtualButton {\r\n    constructor(buttonElementParent, virtualGamepadParams, virtualButtonHandedness, virtualButtonIndex, gamepadButtonHandedness, gamepadButtonID) {\r\n        this._myButtonElement = null;\r\n        this._myButtonIcon = null;\r\n        this._myButtonDetectionElement = null;\r\n\r\n        this._myIsActive = true;\r\n\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null;\r\n\r\n        this._myIsPressed = false;\r\n\r\n        this._myVirtualGamepadParams = virtualGamepadParams;\r\n        this._myParams = this._myVirtualGamepadParams.myButtonParams[gamepadButtonHandedness][gamepadButtonID];\r\n\r\n        this._build(buttonElementParent, virtualButtonHandedness, virtualButtonIndex);\r\n\r\n        this._myButtonDetectionElement.addEventListener(\"pointerdown\", this._onPointerDown.bind(this, this._myVirtualGamepadParams.myStopPropagatingPointerDownEvents));\r\n        document.body.addEventListener(\"pointerup\", this._onPointerUp.bind(this));\r\n\r\n        if (this._myVirtualGamepadParams.myReleaseOnPointerLeave) {\r\n            document.body.addEventListener(\"pointerleave\", this._onPointerLeave.bind(this));\r\n        }\r\n\r\n        this._myButtonDetectionElement.addEventListener(\"mouseenter\", this._onButtonEnter.bind(this));\r\n        this._myButtonDetectionElement.addEventListener(\"mouseleave\", this._onButtonLeave.bind(this));\r\n    }\r\n\r\n    isPressed() {\r\n        return this._myIsActive && this._myIsPressed;\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myIsActive != active) {\r\n            this.reset();\r\n            this._myButtonIcon.reset();\r\n        }\r\n\r\n        this._myIsActive = active;\r\n    }\r\n\r\n    setMouseHoverActive(hoverActive) {\r\n        this._myButtonIcon.setMouseHoverActive(hoverActive);\r\n    }\r\n\r\n    reset() {\r\n        this._myButtonIcon.setPressed(false);\r\n\r\n        this._myIsPressed = false;\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myButtonIcon.update(dt);\r\n    }\r\n\r\n    _onPointerDown(stopPropagatingPointerDownEvents, event) {\r\n        if (!this._myIsActive) return;\r\n        if (this._myIsPressed) return;\r\n        if (!this._myVirtualGamepadParams.myValidPointerButtons.pp_hasEqual(event.button)) return;\r\n\r\n        if (stopPropagatingPointerDownEvents) {\r\n            event.stopPropagation();\r\n        }\r\n        event.preventDefault();\r\n\r\n        this._myButtonIcon.setPressed(true);\r\n\r\n        this._myPointerID = event.pointerId;\r\n        this._myPointerButton = event.button;\r\n\r\n        this._myIsPressed = true;\r\n    }\r\n\r\n    _onPointerUp(event) {\r\n        if (!this._myIsActive) return;\r\n        if (!this._myIsPressed) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n        if (this._myPointerButton != null && this._myPointerButton != event.button) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onPointerLeave(event) {\r\n        if (!this._myIsActive) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onButtonEnter(event) {\r\n        if (!this._myIsActive) return;\r\n\r\n        this._myButtonIcon.onMouseEnter(event);\r\n    }\r\n\r\n    _onButtonLeave(event) {\r\n        if (!this._myIsActive) return;\r\n\r\n        this._myButtonIcon.onMouseLeave(event);\r\n    }\r\n\r\n    _build(buttonElementParent, virtualButtonHandedness, virtualButtonIndex) {\r\n        // setup variables used for the sizes and the like\r\n\r\n        let buttonSize = this._myVirtualGamepadParams.myButtonSize * this._myVirtualGamepadParams.myInterfaceScale;\r\n        let buttonsRingRadius = this._myVirtualGamepadParams.myButtonsRingRadius * this._myVirtualGamepadParams.myInterfaceScale;\r\n\r\n        let thumbstickSize = this._myVirtualGamepadParams.myThumbstickSize * this._myVirtualGamepadParams.myInterfaceScale;\r\n\r\n        let marginBottom = this._myVirtualGamepadParams.myMarginBottom * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginLeft = this._myVirtualGamepadParams.myMarginLeft * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginRight = this._myVirtualGamepadParams.myMarginRight * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n\r\n        let buttonRingStartAngle = this._myVirtualGamepadParams.myButtonsRingStartAngle;\r\n        let buttonRingEndAngle = this._myVirtualGamepadParams.myButtonsRingEndAngle;\r\n\r\n        let minSizeMultiplier = Math.max(1, this._myVirtualGamepadParams.myMinSizeMultiplier / this._myVirtualGamepadParams.myInterfaceScale);\r\n\r\n        let buttonsAmount = this._myVirtualGamepadParams.myButtonsOrder[PP.Handedness.LEFT].length;\r\n\r\n        let angleStep = (buttonRingEndAngle - buttonRingStartAngle) / (buttonsAmount - 1);\r\n\r\n        let currentAngle = Math.pp_angleClamp(buttonRingStartAngle + angleStep * virtualButtonIndex);\r\n\r\n        if (virtualButtonHandedness == PP.Handedness.RIGHT) {\r\n            currentAngle = 270 + (270 - currentAngle);\r\n            currentAngle = Math.pp_angleClamp(currentAngle, true);\r\n        }\r\n\r\n        let counterAngle = 360 - currentAngle;\r\n\r\n        // actual button creation\r\n\r\n        let buttonPivot = document.createElement(\"div\");\r\n        buttonPivot.style.position = \"absolute\";\r\n        buttonPivot.style.width = this._createSizeValue(buttonSize, minSizeMultiplier);\r\n        buttonPivot.style.height = this._createSizeValue(buttonSize, minSizeMultiplier);\r\n\r\n        let centerOnThumbstickBottom = marginBottom + thumbstickSize / 2 - buttonSize / 2;\r\n\r\n        buttonPivot.style.bottom = this._createSizeValue(centerOnThumbstickBottom, minSizeMultiplier);\r\n\r\n        if (virtualButtonHandedness == PP.Handedness.LEFT) {\r\n            let centerOnThumbstickLeft = marginLeft + thumbstickSize / 2 - buttonSize / 2;\r\n            buttonPivot.style.left = this._createSizeValue(centerOnThumbstickLeft, minSizeMultiplier);\r\n        } else {\r\n            let centerOnThumbstickRight = marginRight + thumbstickSize / 2 - buttonSize / 2;\r\n            buttonPivot.style.right = this._createSizeValue(centerOnThumbstickRight, minSizeMultiplier);\r\n        }\r\n\r\n        buttonPivot.style.transform = \"rotate(\" + currentAngle + \"deg) translateX(\" + this._createSizeValue(buttonsRingRadius, minSizeMultiplier) + \")\";\r\n        buttonElementParent.appendChild(buttonPivot);\r\n\r\n        this._myButtonElement = document.createElement(\"div\");\r\n        this._myButtonElement.style.position = \"absolute\";\r\n        this._myButtonElement.style.width = \"100%\";\r\n        this._myButtonElement.style.height = \"100%\";\r\n        this._myButtonElement.style.transform = \"rotate(\" + counterAngle + \"deg)\";\r\n        buttonPivot.appendChild(this._myButtonElement);\r\n\r\n        this._myButtonIcon = new PP.VirtualGamepadIcon(this._myButtonElement, this._myParams.myIconParams, minSizeMultiplier, this._myVirtualGamepadParams.myInterfaceScale);\r\n\r\n        let buttonElementStill = document.createElement(\"div\");\r\n        buttonElementStill.style.position = \"absolute\";\r\n        buttonElementStill.style.width = \"100%\";\r\n        buttonElementStill.style.height = \"100%\";\r\n        buttonElementStill.style.transform = \"rotate(\" + counterAngle + \"deg)\";\r\n        buttonPivot.appendChild(buttonElementStill);\r\n\r\n        let buttonDetectionElementSVG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        buttonDetectionElementSVG.style.position = \"absolute\";\r\n        buttonDetectionElementSVG.style.width = \"100%\";\r\n        buttonDetectionElementSVG.style.height = \"100%\";\r\n        buttonElementStill.appendChild(buttonDetectionElementSVG);\r\n\r\n        let buttonDetectionElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        buttonDetectionElement.setAttributeNS(null, 'cx', \"50%\");\r\n        buttonDetectionElement.setAttributeNS(null, 'cy', \"50%\");\r\n        buttonDetectionElement.setAttributeNS(null, 'r', \"50%\");\r\n        buttonDetectionElement.style.fill = \"#00000000\";\r\n        buttonDetectionElementSVG.appendChild(buttonDetectionElement);\r\n\r\n        this._myButtonDetectionElement = buttonDetectionElement;\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n};", "PP.VirtualGamepadVirtualThumbstick = class VirtualGamepadVirtualThumbstick {\r\n    constructor(thumbstickElementParent, virtualGamepadParams, virtualThumbstickHandedness, gamepadThumbstickHandedness) {\r\n        this._myThumbstickElement = null;\r\n        this._myThumbstickIcon = null;\r\n        this._myThumbstickBackground = null;\r\n        this._myThumbstickDetectionElement = null;\r\n\r\n        this._myIsActive = true;\r\n\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null\r\n\r\n        this._myThumbstickDragStartPosition = PP.vec2_create();\r\n\r\n        this._myAxes = PP.vec2_create();\r\n        this._myIsPressed = false;\r\n\r\n        this._myVirtualGamepadParams = virtualGamepadParams;\r\n        this._myParams = this._myVirtualGamepadParams.myThumbstickParams[gamepadThumbstickHandedness];\r\n\r\n        this._build(thumbstickElementParent, virtualThumbstickHandedness);\r\n\r\n        this._myThumbstickDetectionElement.addEventListener(\"pointerdown\", this._onPointerDown.bind(this, this._myVirtualGamepadParams.myStopPropagatingPointerDownEvents));\r\n        document.body.addEventListener(\"pointerup\", this._onPointerUp.bind(this));\r\n        document.body.addEventListener(\"pointermove\", this._onPointerMove.bind(this));\r\n\r\n        if (this._myVirtualGamepadParams.myReleaseOnPointerLeave) {\r\n            document.body.addEventListener(\"pointerleave\", this._onPointerLeave.bind(this));\r\n        }\r\n\r\n        this._myThumbstickDetectionElement.addEventListener(\"mouseenter\", this._onThumbstickEnter.bind(this));\r\n        this._myThumbstickDetectionElement.addEventListener(\"mouseleave\", this._onThumbstickLeave.bind(this));\r\n    }\r\n\r\n    isPressed() {\r\n        return this._myIsActive && this._myIsPressed;\r\n    }\r\n\r\n    getAxes() {\r\n        return this._myAxes;\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myIsActive != active) {\r\n            this.reset();\r\n            this._myThumbstickIcon.reset();\r\n        }\r\n\r\n        this._myIsActive = active;\r\n    }\r\n\r\n    setMouseHoverActive(hoverActive) {\r\n        this._myThumbstickIcon.setMouseHoverActive(hoverActive);\r\n    }\r\n\r\n    reset() {\r\n        this._myThumbstickIcon.setPressed(false);\r\n\r\n        this._myAxes[0] = 0;\r\n        this._myAxes[1] = 0;\r\n        this._myIsPressed = false;\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null;\r\n\r\n        this._myThumbstickElement.style.transition = \"all \" + this._myParams.myReleaseTransitionSeconds + \"s ease 0s\";\r\n        this._myThumbstickElement.style.transform = \"translate(0px, 0px)\";\r\n    }\r\n\r\n    update(dt) {\r\n        this._myThumbstickIcon.update(dt);\r\n    }\r\n\r\n    _onPointerDown(stopPropagatingPointerDownEvents, event) {\r\n        if (!this._myIsActive) return;\r\n        if (this._myIsPressed) return;\r\n        if (!this._myVirtualGamepadParams.myValidPointerButtons.pp_hasEqual(event.button)) return;\r\n\r\n        if (stopPropagatingPointerDownEvents) {\r\n            event.stopPropagation();\r\n        }\r\n        event.preventDefault();\r\n\r\n        this._myThumbstickIcon.setPressed(true);\r\n\r\n        this._myPointerID = event.pointerId;\r\n        this._myPointerButton = event.button;\r\n\r\n        this._myThumbstickDragStartPosition[0] = event.clientX;\r\n        this._myThumbstickDragStartPosition[1] = event.clientY;\r\n\r\n        this._myIsPressed = true;\r\n    }\r\n\r\n    _onPointerUp(event) {\r\n        if (!this._myIsActive) return;\r\n        if (!this._myIsPressed) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n        if (this._myPointerButton != null && this._myPointerButton != event.button) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onPointerLeave(event) {\r\n        if (!this._myIsActive) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onThumbstickEnter(event) {\r\n        this._myThumbstickIcon.onMouseEnter(event);\r\n    }\r\n\r\n    _onThumbstickLeave(event) {\r\n        this._myThumbstickIcon.onMouseLeave(event);\r\n    }\r\n\r\n    _onPointerMove(event) {\r\n        if (!this._myIsActive) return;\r\n        if (!this._myIsPressed) return;\r\n\r\n        if (event.pointerId != this._myPointerID) return;\r\n\r\n        let mouseX = event.clientX;\r\n        let mouseY = event.clientY;\r\n\r\n        let backgroundRect = this._myThumbstickBackground.getBoundingClientRect();\r\n        let maxDistanceFromCenter = (backgroundRect.width / 2) * this._myParams.myMaxDistanceFromCenterMultiplier;\r\n\r\n        let xDiff = mouseX - this._myThumbstickDragStartPosition[0];\r\n        let yDiff = mouseY - this._myThumbstickDragStartPosition[1];\r\n\r\n        let angle = Math.atan2(yDiff, xDiff);\r\n        let distanceFromDragStart = Math.min(maxDistanceFromCenter, Math.hypot(xDiff, yDiff));\r\n\r\n        let translateThumbstickX = distanceFromDragStart * Math.cos(angle);\r\n        let translateThumbstickY = distanceFromDragStart * Math.sin(angle);\r\n\r\n        this._myThumbstickElement.style.transition = \"all \" + this._myParams.myMoveTransitionSeconds + \"s ease-out 0s\";\r\n        this._myThumbstickElement.style.transform = \"translate(\" + translateThumbstickX + \"px, \" + translateThumbstickY + \"px)\";\r\n\r\n        this._myAxes[0] = translateThumbstickX / maxDistanceFromCenter;\r\n        this._myAxes[1] = -(translateThumbstickY / maxDistanceFromCenter);\r\n    }\r\n\r\n    _build(thumbstickElementParent, virtualThumbstickHandedness) {\r\n        // setup variables used for the sizes and the like\r\n\r\n        let thumbstickSize = this._myVirtualGamepadParams.myThumbstickSize * this._myVirtualGamepadParams.myInterfaceScale;\r\n\r\n        let marginBottom = this._myVirtualGamepadParams.myMarginBottom * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginLeft = this._myVirtualGamepadParams.myMarginLeft * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginRight = this._myVirtualGamepadParams.myMarginRight * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n\r\n        let minSizeMultiplier = Math.max(1, this._myVirtualGamepadParams.myMinSizeMultiplier / this._myVirtualGamepadParams.myInterfaceScale);\r\n\r\n        // actual thumbstick creation\r\n\r\n        let thumbstickContainer = document.createElement(\"div\");\r\n        thumbstickContainer.style.position = \"absolute\";\r\n        thumbstickContainer.style.width = this._createSizeValue(thumbstickSize, minSizeMultiplier);\r\n        thumbstickContainer.style.height = this._createSizeValue(thumbstickSize, minSizeMultiplier);\r\n        thumbstickContainer.style.bottom = this._createSizeValue(marginBottom, minSizeMultiplier);\r\n\r\n        if (virtualThumbstickHandedness == PP.Handedness.LEFT) {\r\n            thumbstickContainer.style.left = this._createSizeValue(marginLeft, minSizeMultiplier);\r\n        } else {\r\n            thumbstickContainer.style.right = this._createSizeValue(marginRight, minSizeMultiplier);\r\n        }\r\n\r\n        thumbstickElementParent.appendChild(thumbstickContainer);\r\n\r\n        let thumbstickContainerSVG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        thumbstickContainerSVG.style.position = \"absolute\";\r\n        thumbstickContainerSVG.style.width = \"100%\";\r\n        thumbstickContainerSVG.style.height = \"100%\";\r\n        thumbstickContainer.appendChild(thumbstickContainerSVG);\r\n\r\n        this._myThumbstickBackground = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        this._myThumbstickBackground.setAttributeNS(null, 'cx', \"50%\");\r\n        this._myThumbstickBackground.setAttributeNS(null, 'cy', \"50%\");\r\n        this._myThumbstickBackground.setAttributeNS(null, 'r', \"48%\");\r\n        this._myThumbstickBackground.style.fill = this._myParams.myBackgroundColor;\r\n        thumbstickContainerSVG.appendChild(this._myThumbstickBackground);\r\n\r\n        this._myThumbstickElement = document.createElement(\"div\");\r\n        this._myThumbstickElement.style.position = \"absolute\";\r\n        this._myThumbstickElement.style.width = \"34%\";\r\n        this._myThumbstickElement.style.height = \"34%\";\r\n        this._myThumbstickElement.style.top = \"33%\";\r\n        this._myThumbstickElement.style.left = \"33%\";\r\n        thumbstickContainer.appendChild(this._myThumbstickElement);\r\n\r\n        this._myThumbstickIcon = new PP.VirtualGamepadIcon(this._myThumbstickElement, this._myParams.myIconParams, minSizeMultiplier, this._myVirtualGamepadParams.myScale);\r\n\r\n        if (this._myParams.myIncludeBackgroundToDetection) {\r\n            let thumbstickBackgroundDetectionElementSVG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n            thumbstickBackgroundDetectionElementSVG.style.position = \"absolute\";\r\n            thumbstickBackgroundDetectionElementSVG.style.width = \"100%\";\r\n            thumbstickBackgroundDetectionElementSVG.style.height = \"100%\";\r\n            thumbstickContainer.appendChild(thumbstickBackgroundDetectionElementSVG);\r\n\r\n            let thumbstickBackgroundDetectionElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n            thumbstickBackgroundDetectionElement.setAttributeNS(null, 'cx', \"50%\");\r\n            thumbstickBackgroundDetectionElement.setAttributeNS(null, 'cy', \"50%\");\r\n            thumbstickBackgroundDetectionElement.setAttributeNS(null, 'r', \"48%\");\r\n            thumbstickBackgroundDetectionElement.style.fill = \"#00000000\";\r\n            thumbstickBackgroundDetectionElementSVG.appendChild(thumbstickBackgroundDetectionElement);\r\n\r\n            this._myThumbstickDetectionElement = thumbstickBackgroundDetectionElement;\r\n        } else {\r\n            let thumbstickElementStill = document.createElement(\"div\");\r\n            thumbstickElementStill.style.position = \"absolute\";\r\n            thumbstickElementStill.style.width = \"34%\";\r\n            thumbstickElementStill.style.height = \"34%\";\r\n            thumbstickElementStill.style.top = \"33%\";\r\n            thumbstickElementStill.style.left = \"33%\";\r\n            thumbstickContainer.appendChild(thumbstickElementStill);\r\n\r\n            let thumbstickDetectionElementSVG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n            thumbstickDetectionElementSVG.style.position = \"absolute\";\r\n            thumbstickDetectionElementSVG.style.width = \"100%\";\r\n            thumbstickDetectionElementSVG.style.height = \"100%\";\r\n            thumbstickElementStill.appendChild(thumbstickDetectionElementSVG);\r\n\r\n            let thumbstickDetectionElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n            thumbstickDetectionElement.setAttributeNS(null, 'cx', \"50%\");\r\n            thumbstickDetectionElement.setAttributeNS(null, 'cy', \"50%\");\r\n            thumbstickDetectionElement.setAttributeNS(null, 'r', \"50%\");\r\n            thumbstickDetectionElement.style.fill = \"#00000000\";\r\n            thumbstickDetectionElementSVG.appendChild(thumbstickDetectionElement);\r\n\r\n            this._myThumbstickDetectionElement = thumbstickDetectionElement;\r\n        }\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n};", "PP.VirtualGamepadIconType = {\r\n    NONE: 0,\r\n    LABEL: 1,\r\n    IMAGE: 2,\r\n    DOT: 3,\r\n    CIRCLE: 4,\r\n    SQUARE: 5,\r\n    RING: 6,\r\n    FRAME: 7,\r\n};\r\n\r\nPP.VirtualGamepadIconParams = class VirtualGamepadIconParams {\r\n    constructor() {\r\n        this.myBackgroundColor = \"\";\r\n        this.myBackgroundPressedColor = \"\";\r\n        this.myIconColor = \"\";\r\n        this.myIconPressedColor = \"\";\r\n\r\n        this.myIconType = PP.VirtualGamepadIconType.NONE;\r\n\r\n        this.myOverallHoveredBrightness = 1;\r\n\r\n        // if icon type is label\r\n\r\n        this.myLabel = \"\";\r\n        this.myLabelFontSize = 0;\r\n        this.myLabelFontFamily = \"\";\r\n        this.myLabelFontWeight = \"\";\r\n\r\n        // if icon type is image\r\n\r\n        this.myImageURL = \"\";\r\n        this.myImagePressedBrightness = 1;\r\n    }\r\n};\r\n\r\nPP.VirtualGamepadIcon = class VirtualGamepadIcon {\r\n    constructor(iconElementParent, iconParams, minSizeMultiplier, scale) {\r\n        this._myParams = iconParams;\r\n\r\n        this._myIconContainerElement = null;\r\n        this._myBackgroundElement = null;\r\n        this._myIconElement = null;\r\n\r\n        this._myPressed = false;\r\n\r\n        this._myIsMouseHover = false;\r\n        this._myIsMouseHoverActive = true;\r\n\r\n        this._build(iconElementParent, minSizeMultiplier, scale);\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myPressed || !this._myIsMouseHover || !this._myIsMouseHoverActive) {\r\n            this._myIconContainerElement.style.filter = \"none\";\r\n        } else {\r\n            this._myIconContainerElement.style.filter = \"brightness(\" + this._myParams.myOverallHoveredBrightness + \")\";\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setPressed(false);\r\n        this._myIsMouseHover = false;\r\n        this._myIconContainerElement.style.filter = \"none\";\r\n    }\r\n\r\n    setPressed(pressed) {\r\n        if (this._myPressed != pressed) {\r\n            this._myPressed = pressed;\r\n\r\n            if (this._myPressed) {\r\n                this._myBackgroundElement.style.fill = this._myParams.myBackgroundPressedColor;\r\n                if (this._myIconElement != null) {\r\n                    if (this._myIconElement.style.strokeWidth.length > 0) {\r\n                        this._myIconElement.style.stroke = this._myParams.myIconPressedColor;\r\n                    } else {\r\n                        this._myIconElement.style.fill = this._myParams.myIconPressedColor;\r\n                    }\r\n\r\n                    if (this._myParams.myIconType == PP.VirtualGamepadIconType.IMAGE) {\r\n                        this._myIconElement.style.filter = \"brightness(\" + this._myParams.myImagePressedBrightness + \")\";\r\n                    }\r\n                }\r\n            } else {\r\n                this._myBackgroundElement.style.fill = this._myParams.myBackgroundColor;\r\n                if (this._myIconElement != null) {\r\n                    if (this._myIconElement.style.strokeWidth.length > 0) {\r\n                        this._myIconElement.style.stroke = this._myParams.myIconColor;\r\n                    } else {\r\n                        this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                    }\r\n\r\n                    if (this._myParams.myIconType == PP.VirtualGamepadIconType.IMAGE) {\r\n                        this._myIconElement.style.filter = \"none\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseEnter() {\r\n        this._myIsMouseHover = true;\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this._myIsMouseHover = false;\r\n    }\r\n\r\n    setMouseHoverActive(hoverActive) {\r\n        this._myIsMouseHoverActive = hoverActive;\r\n    }\r\n\r\n    _build(iconElementParent, minSizeMultiplier, scale) {\r\n        this._myIconContainerElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        this._myIconContainerElement.style.position = \"absolute\";\r\n        this._myIconContainerElement.style.width = \"100%\";\r\n        this._myIconContainerElement.style.height = \"100%\";\r\n        iconElementParent.appendChild(this._myIconContainerElement);\r\n\r\n        this._myBackgroundElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        this._myBackgroundElement.setAttributeNS(null, 'cx', \"50%\");\r\n        this._myBackgroundElement.setAttributeNS(null, 'cy', \"50%\");\r\n        this._myBackgroundElement.setAttributeNS(null, 'r', \"50%\");\r\n        this._myBackgroundElement.style.fill = this._myParams.myBackgroundColor;\r\n        this._myIconContainerElement.appendChild(this._myBackgroundElement);\r\n\r\n        switch (this._myParams.myIconType) {\r\n            case PP.VirtualGamepadIconType.NONE:\r\n                break;\r\n            case PP.VirtualGamepadIconType.LABEL:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'text');\r\n                this._myIconElement.setAttributeNS(null, 'x', \"50%\");\r\n                this._myIconElement.setAttributeNS(null, 'y', \"50%\");\r\n                this._myIconElement.style.textAlign = \"center\";\r\n                this._myIconElement.style.textAnchor = \"middle\";\r\n                this._myIconElement.style.dominantBaseline = \"central\";\r\n                this._myIconElement.style.alignmentBaseline = \"central\";\r\n                this._myIconElement.style.fontFamily = this._myParams.myLabelFontFamily;\r\n                this._myIconElement.style.fontWeight = this._myParams.myLabelFontWeight;\r\n                this._myIconElement.style.fontSize = this._createSizeValue(this._myParams.myLabelFontSize * scale, minSizeMultiplier);\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconElement.textContent = this._myParams.myLabel;\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case PP.VirtualGamepadIconType.IMAGE:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'image');\r\n                this._myIconElement.setAttributeNS(null, 'x', \"0%\");\r\n                this._myIconElement.setAttributeNS(null, 'y', \"0%\");\r\n                this._myIconElement.setAttribute(\"href\", this._myParams.myImageURL);\r\n                this._myIconElement.style.width = \"100%\";\r\n                this._myIconElement.style.height = \"100%\";\r\n                this._myIconElement.style.filter = \"none\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case PP.VirtualGamepadIconType.DOT:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'circle');\r\n                this._myIconElement.setAttributeNS(null, 'cx', \"50%\");\r\n                this._myIconElement.setAttributeNS(null, 'cy', \"50%\");\r\n                this._myIconElement.setAttributeNS(null, 'r', \"17.5%\");\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case PP.VirtualGamepadIconType.CIRCLE:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'circle');\r\n                this._myIconElement.setAttributeNS(null, 'cx', \"50%\");\r\n                this._myIconElement.setAttributeNS(null, 'cy', \"50%\");\r\n                this._myIconElement.setAttributeNS(null, 'r', \"24%\");\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case PP.VirtualGamepadIconType.SQUARE:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'rect');\r\n                this._myIconElement.setAttributeNS(null, 'x', \"28%\");\r\n                this._myIconElement.setAttributeNS(null, 'y', \"28%\");\r\n                this._myIconElement.setAttributeNS(null, 'rx', \"10%\");\r\n                this._myIconElement.setAttributeNS(null, 'ry', \"10%\");\r\n                this._myIconElement.setAttributeNS(null, 'width', \"44%\");\r\n                this._myIconElement.setAttributeNS(null, 'height', \"44%\");\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconElement.style.transformOrigin = \"center\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case PP.VirtualGamepadIconType.RING:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'circle');\r\n                this._myIconElement.setAttributeNS(null, 'cx', \"50%\");\r\n                this._myIconElement.setAttributeNS(null, 'cy', \"50%\");\r\n                this._myIconElement.setAttributeNS(null, 'r', \"20%\");\r\n                this._myIconElement.style.fill = \"#00000000\";\r\n                this._myIconElement.style.stroke = this._myParams.myIconColor;\r\n                this._myIconElement.style.strokeWidth = \"10%\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case PP.VirtualGamepadIconType.FRAME:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'rect');\r\n                this._myIconElement.setAttributeNS(null, 'x', \"31.5%\");\r\n                this._myIconElement.setAttributeNS(null, 'y', \"31.5%\");\r\n                this._myIconElement.setAttributeNS(null, 'rx', \"10%\");\r\n                this._myIconElement.setAttributeNS(null, 'ry', \"10%\");\r\n                this._myIconElement.setAttributeNS(null, 'width', \"37%\");\r\n                this._myIconElement.setAttributeNS(null, 'height', \"37%\");\r\n                this._myIconElement.style.fill = \"#00000000\";\r\n                this._myIconElement.style.stroke = this._myParams.myIconColor;\r\n                this._myIconElement.style.strokeWidth = \"10%\";\r\n                this._myIconElement.style.transformOrigin = \"center\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n\r\n    _invertColors() {\r\n        if (this._myIconElement.style.strokeWidth.length > 0) {\r\n            this._myBackgroundElement.style.fill = this._myParams.myIconColor;\r\n            this._myIconElement.style.fill = this._myParams.myIconColor;\r\n            this._myIconElement.style.stroke = this._myParams.myBackgroundColor;\r\n        } else {\r\n            this._myBackgroundElement.style.fill = this._myParams.myIconColor;\r\n            this._myIconElement.style.fill = this._myParams.myBackgroundColor;\r\n        }\r\n    }\r\n}", "PP.BasePoseParams = class BasePoseParams {\r\n    constructor() {\r\n        this.myReferenceObject = null;\r\n        this.myFixForward = true;\r\n        this.myForceEmulatedVelocities = false;\r\n        this.myUpdateOnViewReset = false;\r\n    }\r\n};\r\n\r\n// BasePose transform is local by default (as if the parent/reference object was the identity transform)\r\n// you can use setReferenceObject if you want the BasePose to return the transform in world space \r\nPP.BasePose = class BasePose {\r\n\r\n    constructor(basePoseParams = new PP.BasePoseParams()) {\r\n        this._myFixForward = basePoseParams.myFixForward;\r\n        this._myForceEmulatedVelocities = basePoseParams.myForceEmulatedVelocities;\r\n        this._myUpdateOnViewReset = basePoseParams.myUpdateOnViewReset;\r\n\r\n        this._myReferenceSpace = null;\r\n        this._myReferenceObject = basePoseParams.myReferenceObject;\r\n\r\n        this._myPosition = PP.vec3_create();\r\n        this._myRotationQuat = PP.quat_create();\r\n\r\n        this._myPrevPosition = PP.vec3_create();\r\n        this._myPrevRotationQuat = PP.quat_create();\r\n\r\n        this._myLinearVelocity = PP.vec3_create();\r\n        this._myAngularVelocityRadians = PP.vec3_create();\r\n\r\n        this._myIsValid = false;\r\n        this._myIsLinearVelocityEmulated = true;\r\n        this._myIsAngularVelocityEmulated = true;\r\n\r\n        this._myPoseUpdatedCallbacks = new Map();   // Signature: callback(thisPose)\r\n    }\r\n\r\n    // if the reference object is set, the transform will be converted using it as a parent,\r\n    // otherwise the transform will be local, as if the parent/reference object was the identity transform\r\n    setReferenceObject(referenceObject) {\r\n        this._myReferenceObject = referenceObject;\r\n    }\r\n\r\n    getReferenceObject() {\r\n        return this._myReferenceObject;\r\n    }\r\n\r\n    setFixForward(fixForward) {\r\n        this._myFixForward = fixForward;\r\n    }\r\n\r\n    isFixForward() {\r\n        return this._myFixForward;\r\n    }\r\n\r\n    setForceEmulatedVelocities(forceEmulatedVelocities) {\r\n        this._myForceEmulatedVelocities = forceEmulatedVelocities;\r\n    }\r\n\r\n    isForceEmulatedVelocities() {\r\n        return this._myForceEmulatedVelocities;\r\n    }\r\n\r\n    setUpdateOnViewReset(updateOnViewReset) {\r\n        this._myUpdateOnViewReset = updateOnViewReset;\r\n    }\r\n\r\n    isUpdateOnViewReset() {\r\n        return this._myUpdateOnViewReset;\r\n    }\r\n\r\n    getReferenceSpace() {\r\n        return this._myReferenceSpace;\r\n    }\r\n\r\n    getInputSource() {\r\n        return this._myInputSource;\r\n    }\r\n\r\n    getPosition() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getRotation() {\r\n        return this.getRotationDegrees();\r\n    }\r\n\r\n    getRotationDegrees() {\r\n        return this.getRotationQuat().quat_toDegrees();\r\n\r\n    }\r\n\r\n    getRotationRadians() {\r\n        return this.getRotationQuat().quat_toRadians();\r\n    }\r\n\r\n    getRotationQuat() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getTransform() {\r\n        return this.getTransformMatrix();\r\n    }\r\n\r\n    getTransformMatrix() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getTransformQuat() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getLinearVelocity() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getAngularVelocity() {\r\n        return this.getAngularVelocityDegrees();\r\n    }\r\n\r\n    getAngularVelocityDegrees() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getAngularVelocityRadians() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    isValid() {\r\n        return this._myIsValid;\r\n    }\r\n\r\n    isLinearVelocityEmulated() {\r\n        return this._myIsLinearVelocityEmulated;\r\n    }\r\n\r\n    isAngularVelocityEmulated() {\r\n        return this._myIsAngularVelocityEmulated;\r\n    }\r\n\r\n    registerPoseUpdatedEventListener(id, callback) {\r\n        this._myPoseUpdatedCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterPoseUpdatedEventListener(id) {\r\n        this._myPoseUpdatedCallbacks.delete(id);\r\n    }\r\n\r\n    start() {\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(true, WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this, false));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    update(dt) {\r\n        this._update(dt, true);\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _isReadyToGetPose() {\r\n        return true;\r\n    }\r\n\r\n    _getPose(xrFrame) {\r\n        return null;\r\n    }\r\n\r\n    _updateHook(dt, updateVelocity, xrPose) {\r\n    }\r\n\r\n    _onXRSessionStartHook(manualStart, session) {\r\n\r\n    }\r\n\r\n    _onXRSessionEndHook() {\r\n\r\n    }\r\n\r\n    _onViewResetHook() {\r\n\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _update(dt, updateVelocity) {\r\n        this._myPrevPosition.vec3_copy(this._myPosition);\r\n        this._myPrevRotationQuat.quat_copy(this._myRotationQuat);\r\n\r\n        let xrFrame = Module['webxr_frame'];\r\n        if (xrFrame && this._isReadyToGetPose()) {\r\n            let xrPose = null;\r\n            try {\r\n                xrPose = this._getPose(xrFrame);\r\n            } catch (error) {\r\n                // not handled, pose will be null\r\n            }\r\n\r\n            if (xrPose) {\r\n                this._myPosition[0] = xrPose.transform.position.x;\r\n                this._myPosition[1] = xrPose.transform.position.y;\r\n                this._myPosition[2] = xrPose.transform.position.z;\r\n\r\n                this._myRotationQuat[0] = xrPose.transform.orientation.x;\r\n                this._myRotationQuat[1] = xrPose.transform.orientation.y;\r\n                this._myRotationQuat[2] = xrPose.transform.orientation.z;\r\n                this._myRotationQuat[3] = xrPose.transform.orientation.w;\r\n                this._myRotationQuat.quat_normalize(this._myRotationQuat);\r\n\r\n                if (updateVelocity) {\r\n                    if (xrPose.linearVelocity && !this._myForceEmulatedVelocities) {\r\n                        this._myLinearVelocity[0] = xrPose.linearVelocity.x;\r\n                        this._myLinearVelocity[1] = xrPose.linearVelocity.y;\r\n                        this._myLinearVelocity[2] = xrPose.linearVelocity.z;\r\n\r\n                        this._myIsLinearVelocityEmulated = false;\r\n                    } else {\r\n                        this._computeEmulatedLinearVelocity(dt);\r\n\r\n                        this._myIsLinearVelocityEmulated = true;\r\n                    }\r\n\r\n                    if (xrPose.angularVelocity && !this._myForceEmulatedVelocities) {\r\n                        this._myAngularVelocityRadians[0] = xrPose.angularVelocity.x;\r\n                        this._myAngularVelocityRadians[1] = xrPose.angularVelocity.y;\r\n                        this._myAngularVelocityRadians[2] = xrPose.angularVelocity.z;\r\n\r\n                        this._myIsAngularVelocityEmulated = false;\r\n                    } else {\r\n                        this._computeEmulatedAngularVelocity(dt);\r\n\r\n                        this._myIsAngularVelocityEmulated = true;\r\n                    }\r\n                }\r\n\r\n                this._myIsValid = true;\r\n            } else {\r\n                // keep previous position and rotation but reset velocity because reasons\r\n\r\n                if (updateVelocity) {\r\n                    this._myLinearVelocity[0] = 0;\r\n                    this._myLinearVelocity[1] = 0;\r\n                    this._myLinearVelocity[2] = 0;\r\n\r\n                    this._myAngularVelocityRadians[0] = 0;\r\n                    this._myAngularVelocityRadians[1] = 0;\r\n                    this._myAngularVelocityRadians[2] = 0;\r\n                }\r\n\r\n                this._myIsValid = false;\r\n                this._myIsLinearVelocityEmulated = true;\r\n                this._myIsAngularVelocityEmulated = true;\r\n            }\r\n\r\n            this._updateHook(dt, updateVelocity, xrPose);\r\n        } else {\r\n            // keep previous position and rotation but reset velocity because reasons\r\n\r\n            if (updateVelocity) {\r\n                this._myLinearVelocity[0] = 0;\r\n                this._myLinearVelocity[1] = 0;\r\n                this._myLinearVelocity[2] = 0;\r\n\r\n                this._myAngularVelocityRadians[0] = 0;\r\n                this._myAngularVelocityRadians[1] = 0;\r\n                this._myAngularVelocityRadians[2] = 0;\r\n            }\r\n\r\n            this._myIsValid = false;\r\n            this._myIsLinearVelocityEmulated = true;\r\n            this._myIsAngularVelocityEmulated = true;\r\n\r\n            this._updateHook(dt, updateVelocity, null);\r\n        }\r\n\r\n        this._myPoseUpdatedCallbacks.forEach(function (callback) { callback(this); }.bind(this));\r\n    }\r\n\r\n    _computeEmulatedLinearVelocity(dt) {\r\n        if (dt > 0) {\r\n            this._myPosition.vec3_sub(this._myPrevPosition, this._myLinearVelocity);\r\n            this._myLinearVelocity.vec3_scale(1 / dt, this._myLinearVelocity);\r\n        } else {\r\n            this._myLinearVelocity[0] = 0;\r\n            this._myLinearVelocity[1] = 0;\r\n            this._myLinearVelocity[2] = 0;\r\n        }\r\n    }\r\n\r\n    _onXRSessionStart(manualStart, session) {\r\n        session.requestReferenceSpace(WebXR.refSpace).then(function (referenceSpace) {\r\n            this._myReferenceSpace = referenceSpace;\r\n\r\n            if (referenceSpace.addEventListener != null) {\r\n                referenceSpace.addEventListener(\"reset\", this._onViewReset.bind(this));\r\n            }\r\n        }.bind(this));\r\n\r\n        this._onXRSessionStartHook(manualStart, session);\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._onXRSessionEndHook();\r\n\r\n        this._myReferenceSpace = null;\r\n    }\r\n\r\n    _onViewReset() {\r\n        if (this._myUpdateOnViewReset) {\r\n            this._update(0, false);\r\n        }\r\n\r\n        this._onViewResetHook();\r\n    }\r\n};\r\n\r\nPP.BasePose.prototype.getPosition = function () {\r\n    let position = PP.vec3_create();\r\n    let transform = PP.mat4_create();\r\n    return function getPosition() {\r\n        if (this._myReferenceObject == null) {\r\n            return this._myPosition;\r\n        }\r\n\r\n        return this._myPosition.vec3_convertPositionToWorld(this._myReferenceObject.pp_getTransform(transform), position);\r\n    };\r\n}();\r\n\r\nPP.BasePose.prototype.getRotationQuat = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    let playerRotationQuat = PP.quat_create();\r\n    let up = PP.vec3_create();\r\n    return function getRotationQuat() {\r\n        rotationQuat.quat_copy(this._myRotationQuat);\r\n\r\n        if (this._myFixForward) {\r\n            rotationQuat.quat_rotateAxisRadians(Math.PI, rotationQuat.quat_getUp(up), rotationQuat);\r\n        }\r\n\r\n        if (this._myReferenceObject == null) {\r\n            return rotationQuat;\r\n        }\r\n\r\n        return rotationQuat.quat_toWorld(this._myReferenceObject.pp_getRotationQuat(playerRotationQuat), rotationQuat);\r\n    };\r\n}();\r\n\r\nPP.BasePose.prototype.getTransformMatrix = function () {\r\n    let transform = PP.mat4_create();\r\n    return function getTransformMatrix() {\r\n        return this.getTransformQuat().quat2_toMatrix(transform);\r\n    };\r\n}();\r\n\r\nPP.BasePose.prototype.getTransformQuat = function () {\r\n    let transformQuat = PP.quat2_create();\r\n    let playerTransformQuat = PP.quat2_create();\r\n    return function getTransformQuat() {\r\n        transformQuat.quat2_setPositionRotationQuat(this._myPosition, this.getRotationQuat());\r\n\r\n        if (this._myReferenceObject == null) {\r\n            return transformQuat;\r\n        }\r\n\r\n        return transformQuat.quat_toWorld(this._myReferenceObject.pp_getTransformQuat(playerTransformQuat), transformQuat);\r\n    };\r\n}();\r\n\r\nPP.BasePose.prototype.getLinearVelocity = function () {\r\n    let position = PP.vec3_create();\r\n    let transform = PP.mat4_create();\r\n    return function getLinearVelocity() {\r\n        if (this._myReferenceObject == null) {\r\n            return this._myLinearVelocity;\r\n        }\r\n\r\n        return this._myLinearVelocity.vec3_convertDirectionToWorld(this._myReferenceObject.pp_getTransform(transform), position);\r\n    };\r\n}();\r\n\r\nPP.BasePose.prototype.getAngularVelocityDegrees = function () {\r\n    let rotationDegrees = PP.vec3_create();\r\n    return function getAngularVelocityDegrees() {\r\n        this.getAngularVelocityRadians().vec3_toDegrees(rotationDegrees);\r\n    };\r\n}();\r\n\r\nPP.BasePose.prototype.getAngularVelocityRadians = function () {\r\n    let rotationRadians = PP.vec3_create();\r\n    let transform = PP.mat4_create();\r\n    return function getAngularVelocityRadians() {\r\n        if (this._myReferenceObject == null) {\r\n            return this._myAngularVelocityRadians;\r\n        }\r\n\r\n        return this._myAngularVelocityRadians.vec3_convertDirectionToWorld(this._myReferenceObject.pp_getTransform(transform), rotationRadians);\r\n    };\r\n}();\r\n\r\nPP.BasePose.prototype._computeEmulatedAngularVelocity = function () {\r\n    let rotationRadians = PP.vec3_create();\r\n    let prevRotationRadians = PP.vec3_create();\r\n    return function _computeEmulatedAngularVelocity(dt) {\r\n        if (dt > 0) {\r\n            rotationRadians = this._myRotationQuat.quat_toRadians(rotationRadians);\r\n            prevRotationRadians = this._myPrevRotationQuat.quat_toRadians(prevRotationRadians);\r\n            rotationRadians.vec3_sub(prevRotationRadians, this._myAngularVelocityRadians);\r\n            this._myAngularVelocityRadians.vec3_scale(1 / dt, this._myAngularVelocityRadians);\r\n        } else {\r\n            this._myAngularVelocityRadians[0] = 0;\r\n            this._myAngularVelocityRadians[1] = 0;\r\n            this._myAngularVelocityRadians[2] = 0;\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.BasePose.prototype, \"getPosition\", { enumerable: false });\r\nObject.defineProperty(PP.BasePose.prototype, \"getRotationQuat\", { enumerable: false });\r\nObject.defineProperty(PP.BasePose.prototype, \"getTransformMatrix\", { enumerable: false });\r\nObject.defineProperty(PP.BasePose.prototype, \"getTransformQuat\", { enumerable: false });\r\nObject.defineProperty(PP.BasePose.prototype, \"getLinearVelocity\", { enumerable: false });\r\nObject.defineProperty(PP.BasePose.prototype, \"getAngularVelocityDegrees\", { enumerable: false });\r\nObject.defineProperty(PP.BasePose.prototype, \"getAngularVelocityRadians\", { enumerable: false });\r\nObject.defineProperty(PP.BasePose.prototype, \"_computeEmulatedAngularVelocity\", { enumerable: false });", "PP.HandPoseParams = class HandPoseParams extends PP.BasePoseParams {\r\n    constructor() {\r\n        super();\r\n\r\n        this.myFixTrackedHandRotation = true;\r\n    }\r\n};\r\n\r\nPP.HandPose = class HandPose extends PP.BasePose {\r\n\r\n    constructor(handedness, handPoseParams = new PP.HandPoseParams()) {\r\n        super(handPoseParams);\r\n\r\n        this._myInputSource = null;\r\n\r\n        this._myHandedness = handedness;\r\n        this._myFixTrackedHandRotation = handPoseParams.myFixTrackedHandRotation;\r\n\r\n        this._myIsTrackedHand = false;\r\n    }\r\n\r\n    getInputSourceType() {\r\n        if (this._myInputSource == null) {\r\n            return null;\r\n        }\r\n\r\n        return PP.InputUtils.getInputSourceType(this._myInputSource);\r\n    }\r\n\r\n    isFixTrackedHandRotation() {\r\n        return this._myFixTrackedHandRotation;\r\n    }\r\n\r\n    setFixTrackedHandRotation(fixTrackedHandRotation) {\r\n        this.myFixTrackedHandRotation = fixTrackedHandRotation;\r\n    }\r\n\r\n    _isReadyToGetPose() {\r\n        return this._myInputSource != null;\r\n    }\r\n\r\n    _getPose(xrFrame) {\r\n        return xrFrame.getPose(this._myInputSource.gripSpace, this._myReferenceSpace);\r\n    }\r\n\r\n    _onXRSessionStartHook(manualStart, session) {\r\n        session.addEventListener('inputsourceschange', function (event) {\r\n            if (event.removed) {\r\n                for (let item of event.removed) {\r\n                    if (item == this._myInputSource) {\r\n                        this._myInputSource = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (event.added) {\r\n                for (let item of event.added) {\r\n                    if (item.handedness == this._myHandedness) {\r\n                        this._myInputSource = item;\r\n                        this._myIsTrackedHand = PP.InputUtils.getInputSourceType(this._myInputSource) == PP.InputSourceType.TRACKED_HAND;\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this));\r\n\r\n        if (manualStart && this._myInputSource == null && session.inputSources) {\r\n            for (let item of session.inputSources) {\r\n                if (item.handedness == this._myHandedness) {\r\n                    this._myInputSource = item;\r\n                    this._myIsTrackedHand = PP.InputUtils.getInputSourceType(this._myInputSource) == PP.InputSourceType.TRACKED_HAND;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXRSessionEndHook() {\r\n        this._myInputSource = null;\r\n    }\r\n};\r\n\r\nPP.HandPose.prototype.getRotationQuat = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    let playerRotationQuat = PP.quat_create();\r\n    let up = PP.vec3_create();\r\n    let right = PP.vec3_create();\r\n    let forward = PP.vec3_create();\r\n    return function getRotationQuat() {\r\n        rotationQuat.quat_copy(this._myRotationQuat);\r\n\r\n        if (this._myFixForward) {\r\n            rotationQuat.quat_rotateAxisRadians(Math.PI, rotationQuat.quat_getUp(up), rotationQuat);\r\n        }\r\n\r\n        if (this._myFixTrackedHandRotation && this._myIsTrackedHand) {\r\n            rotationQuat.quat_rotateAxis(-60, rotationQuat.quat_getRight(right), rotationQuat);\r\n\r\n            let forwardRotation = 20;\r\n            forwardRotation = (this._myHandedness == PP.Handedness.LEFT) ? forwardRotation : -forwardRotation;\r\n            rotationQuat.quat_rotateAxis(forwardRotation, rotationQuat.quat_getForward(forward), rotationQuat);\r\n        }\r\n\r\n        if (this._myReferenceObject == null) {\r\n            return rotationQuat;\r\n        }\r\n\r\n        return rotationQuat.quat_toWorld(this._myReferenceObject.pp_getRotationQuat(playerRotationQuat), rotationQuat);\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.HandPose.prototype, \"getRotationQuat\", { enumerable: false });", "PP.HeadPose = class HeadPose extends PP.BasePose {\r\n    _getPose(xrFrame) {\r\n        return xrFrame.getViewerPose(this._myReferenceSpace);\r\n    }\r\n};", "PP.TrackedHandJointPose = class TrackedHandJointPose extends PP.BasePose {\r\n\r\n    constructor(handedness, trackedHandJointID, basePoseParams = new PP.BasePoseParams()) {\r\n        super(basePoseParams);\r\n\r\n        this._myInputSource = null;\r\n\r\n        this._myHandedness = handedness;\r\n        this._myTrackedHandJointID = trackedHandJointID;\r\n\r\n        this._myJointRadius = 0;\r\n    }\r\n\r\n    getTrackedHandJointID() {\r\n        return this._myTrackedHandJointID;\r\n    }\r\n\r\n    setTrackedHandJointID(trackedHandJointID) {\r\n        this._myTrackedHandJointID = trackedHandJointID;\r\n    }\r\n\r\n    getJointRadius() {\r\n        return this._myJointRadius;\r\n    }\r\n\r\n    _isReadyToGetPose() {\r\n        return this._myInputSource != null;\r\n    }\r\n\r\n    _getPose(xrFrame) {\r\n        return xrFrame.getJointPose(this._myInputSource.hand.get(this._myTrackedHandJointID), this._myReferenceSpace);\r\n    }\r\n\r\n    _updateHook(dt, updateVelocity, xrPose) {\r\n        if (xrPose != null) {\r\n            this._myJointRadius = xrPose.radius;\r\n        }\r\n    }\r\n\r\n    _onXRSessionStartHook(manualStart, session) {\r\n        session.addEventListener('inputsourceschange', function (event) {\r\n            if (event.removed) {\r\n                for (let item of event.removed) {\r\n                    if (item == this._myInputSource) {\r\n                        this._myInputSource = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (event.added) {\r\n                for (let item of event.added) {\r\n                    if (item.handedness == this._myHandedness) {\r\n                        if (PP.InputUtils.getInputSourceType(item) == PP.InputSourceType.TRACKED_HAND) {\r\n                            this._myInputSource = item;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this));\r\n\r\n        if (manualStart && this._myInputSource == null && session.inputSources) {\r\n            for (let item of session.inputSources) {\r\n                if (item.handedness == this._myHandedness) {\r\n                    if (PP.InputUtils.getInputSourceType(item) == PP.InputSourceType.TRACKED_HAND) {\r\n                        this._myInputSource = item;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXRSessionEndHook() {\r\n        this._myInputSource = null;\r\n    }\r\n};", "PP.TrackedHandPoseParams = class TrackedHandPoseParams extends PP.BasePoseParams {\r\n    constructor(addAllJointIDs = true) {\r\n        super();\r\n\r\n        this.myTrackedHandJointIDList = [];\r\n\r\n        if (addAllJointIDs) {\r\n            for (let key in PP.TrackedHandJointID) {\r\n                this.myTrackedHandJointIDList.push([PP.TrackedHandJointID[key]]);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nPP.TrackedHandPose = class TrackedHandPose {\r\n    constructor(handedness, trackedHandPoseParams = new PP.TrackedHandPoseParams()) {\r\n        this._myHandedness = handedness;\r\n\r\n        this._myFixForward = trackedHandPoseParams.myFixForward;\r\n        this._myForceEmulatedVelocities = trackedHandPoseParams.myForceEmulatedVelocities;\r\n        this._myReferenceObject = trackedHandPoseParams.myReferenceObject;\r\n\r\n        this._myTrackedHandJointPoseParams = new PP.BasePoseParams();\r\n        this._myTrackedHandJointPoseParams.myFixForward = this._myFixForward;\r\n        this._myTrackedHandJointPoseParams.myForceEmulatedVelocities = this._myForceEmulatedVelocities;\r\n        this._myTrackedHandJointPoseParams.myReferenceObject = this._myReferenceObject;\r\n\r\n        this._myTrackedHandJointPoseList = [];\r\n        for (let jointID of trackedHandPoseParams.myTrackedHandJointIDList) {\r\n            let trackedHandJointPose = new PP.TrackedHandJointPose(this._myHandedness, jointID, this._myTrackedHandJointPoseParams);\r\n            this._myTrackedHandJointPoseList[jointID] = trackedHandJointPose;\r\n        }\r\n    }\r\n\r\n    start() {\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.start();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.update(dt);\r\n        }\r\n    }\r\n\r\n    getJointPoseList() {\r\n        return this._myTrackedHandJointPoseList;\r\n    }\r\n\r\n    getJointPose(jointID) {\r\n        return this._myTrackedHandJointPoseList[jointID];\r\n    }\r\n\r\n    getJointPoseByIndex(jointIDIndex) {\r\n        return this._myTrackedHandJointPoseList[PP.InputUtils.getJointIDByIndex(jointIDIndex)];\r\n    }\r\n\r\n    addTrackedHandJointID(jointID) {\r\n        if (!this._myTrackedHandJointPoseList.pp_has(element => element.getTrackedHandJointID() == jointID)) {\r\n            let trackedHandJointPose = new PP.TrackedHandJointPose(this._myHandedness, jointID, this._myTrackedHandJointPoseParams);\r\n            this._myTrackedHandJointPoseList.push(trackedHandJointPose);\r\n        }\r\n    }\r\n\r\n    removeTrackedHandJointID(jointID) {\r\n        this._myTrackedHandJointPoseList.pp_remove(element => element.getTrackedHandJointID() == jointID);\r\n    }\r\n\r\n    setReferenceObject(referenceObject) {\r\n        this._myReferenceObject = referenceObject;\r\n        this._myTrackedHandJointPoseParams.myReferenceObject = this._myReferenceObject;\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.setReferenceObject(referenceObject);\r\n        }\r\n    }\r\n\r\n    getReferenceObject() {\r\n        return this._myReferenceObject;\r\n    }\r\n\r\n    setFixForward(fixForward) {\r\n        this._myFixForward = fixForward;\r\n        this._myTrackedHandJointPoseParams.myFixForward = this._myFixForward;\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.setFixForward(fixForward);\r\n        }\r\n    }\r\n\r\n    isFixForward() {\r\n        return this._myFixForward;\r\n    }\r\n\r\n    setForceEmulatedVelocities(forceEmulatedVelocities) {\r\n        this._myForceEmulatedVelocities = forceEmulatedVelocities;\r\n        this._myTrackedHandJointPoseParams.myForceEmulatedVelocities = this._myForceEmulatedVelocities;\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.setForceEmulatedVelocities(forceEmulatedVelocities);\r\n        }\r\n    }\r\n\r\n    isForceEmulatedVelocities() {\r\n        return this._myForceEmulatedVelocities;\r\n    }\r\n};", "WL.registerComponent(\"pp-set-player-height\", {\r\n    _myEyesHeight: { type: WL.Type.Float, default: 1.65 },\r\n    _mySetOnlyOnStart: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    start() {\r\n        let localPosition = this.object.pp_getPositionLocal();\r\n        this.object.pp_setPositionLocal(PP.vec3_create(localPosition[0], this._myEyesHeight, localPosition[2]));\r\n\r\n        this._myHeightSetOnce = false;\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    },\r\n    _onXRSessionStart() {\r\n        if (this.active && (!this._mySetOnlyOnStart || !this._myHeightSetOnce)) {\r\n            let localPosition = this.object.pp_getPositionLocal();\r\n            if (PP.XRUtils.isReferenceSpaceLocalFloor()) {\r\n                this.object.pp_setPositionLocal(PP.vec3_create(localPosition[0], 0, localPosition[2]));\r\n            } else if (PP.XRUtils.isDeviceEmulated()) {\r\n                this.object.pp_setPositionLocal(PP.vec3_create(localPosition[0], 0, localPosition[2]));\r\n            } else {\r\n                this.object.pp_setPositionLocal(PP.vec3_create(localPosition[0], this._myEyesHeight, localPosition[2]));\r\n            }\r\n\r\n            this._myHeightSetOnce = true;\r\n        }\r\n    },\r\n    _onXRSessionEnd() {\r\n        if (this.active && !this._mySetOnlyOnStart) {\r\n            let localPosition = this.object.pp_getPositionLocal();\r\n            this.object.pp_setPositionLocal(PP.vec3_create(localPosition[0], this._myEyesHeight, localPosition[2]));\r\n        }\r\n    }\r\n});", "WL.registerComponent('pp-set-hand-local-transform', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myUpdateOnViewReset: { type: WL.Type.Bool, default: true }\r\n}, {\r\n    init: function () {\r\n        this._myHandPose = new PP.HandPose(PP.InputUtils.getHandednessByIndex(this._myHandedness));\r\n        this._myHandPose.setFixForward(this._myFixForward);\r\n        this._myHandPose.setUpdateOnViewReset(this._myUpdateOnViewReset);\r\n        this._myHandPose.registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    },\r\n    start: function () {\r\n        this._myHandPose.start();\r\n    },\r\n    update: function update(dt) {\r\n        this._myHandPose.update(dt);\r\n    },\r\n    onPoseUpdated: function () {\r\n        let handPoseTransform = PP.quat2_create()\r\n        return function onPoseUpdated() {\r\n            this.object.pp_setTransformLocalQuat(this._myHandPose.getTransformQuat(handPoseTransform));\r\n        }\r\n    }()\r\n});", "WL.registerComponent('pp-set-head-local-transform', {\r\n    _myNonVRCamera: { type: WL.Type.Object },\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myUpdateOnViewReset: { type: WL.Type.Bool, default: true }\r\n}, {\r\n    init: function () {\r\n        this._myHeadPose = new PP.HeadPose();\r\n        this._myHeadPose.setFixForward(this._myFixForward);\r\n        this._myHeadPose.setUpdateOnViewReset(this._myUpdateOnViewReset);\r\n        this._myHeadPose.registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    },\r\n    start: function () {\r\n        this._myHeadPose.start();\r\n    },\r\n    update: function () {\r\n        let nonVRCameraRotation = PP.quat_create();\r\n        let nonVRCameraUp = PP.vec3_create();\r\n        let nonVRCameraPosition = PP.vec3_create();\r\n        return function update(dt) {\r\n            if (PP.XRUtils.isSessionActive()) {\r\n                this._myHeadPose.update(dt);\r\n            } else {\r\n                nonVRCameraRotation = this._myNonVRCamera.pp_getRotationLocalQuat(nonVRCameraRotation);\r\n                if (this._myFixForward) {\r\n                    nonVRCameraRotation.quat_rotateAxisRadians(Math.PI, nonVRCameraRotation.quat_getUp(nonVRCameraUp), nonVRCameraRotation);\r\n                }\r\n                this.object.pp_setPositionLocal(this._myNonVRCamera.pp_getPositionLocal(nonVRCameraPosition));\r\n                this.object.pp_setRotationLocalQuat(nonVRCameraRotation);\r\n            }\r\n        };\r\n    }(),\r\n    onPoseUpdated: function () {\r\n        let headPoseTransform = PP.quat2_create();\r\n        return function onPoseUpdated() {\r\n            if (PP.XRUtils.isSessionActive()) {\r\n                this.object.pp_setTransformLocalQuat(this._myHeadPose.getTransformQuat(headPoseTransform));\r\n            }\r\n        }\r\n    }()\r\n});", "WL.registerComponent('pp-set-vr-head-local-transform', {\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myUpdateOnViewReset: { type: WL.Type.Bool, default: true }\r\n}, {\r\n    init: function () {\r\n        this._myHeadPose = new PP.HeadPose();\r\n        this._myHeadPose.setFixForward(this._myFixForward);\r\n        this._myHeadPose.setUpdateOnViewReset(this._myUpdateOnViewReset);\r\n        this._myHeadPose.registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    },\r\n    start: function () {\r\n        this._myHeadPose.start();\r\n    },\r\n    update: function update(dt) {\r\n        this._myHeadPose.update(dt);\r\n    },\r\n    onPoseUpdated: function () {\r\n        let headPoseTransform = PP.quat2_create();\r\n        return function onPoseUpdated() {\r\n            this.object.pp_setTransformLocalQuat(this._myHeadPose.getTransformQuat(headPoseTransform));\r\n        }\r\n    }()\r\n});", "WL.registerComponent('pp-set-non-vr-head-local-transform', {\r\n    _myNonVRCamera: { type: WL.Type.Object },\r\n    _myFixForward: { type: WL.Type.Bool, default: true }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n    },\r\n    update: function (dt) {\r\n        let nonVRCameraRotation = PP.quat_create();\r\n        let nonVRCameraUp = PP.vec3_create();\r\n        let nonVRCameraPosition = PP.vec3_create();\r\n        return function update(dt) {\r\n            nonVRCameraRotation = this._myNonVRCamera.pp_getRotationLocalQuat(nonVRCameraRotation);\r\n            if (this._myFixForward) {\r\n                nonVRCameraRotation.quat_rotateAxisRadians(Math.PI, nonVRCameraRotation.quat_getUp(nonVRCameraUp), nonVRCameraRotation);\r\n            }\r\n            this.object.pp_setPositionLocal(this._myNonVRCamera.pp_getPositionLocal(nonVRCameraPosition));\r\n            this.object.pp_setRotationLocalQuat(nonVRCameraRotation);\r\n        };\r\n    }(),\r\n}); ", "WL.registerComponent('pp-set-tracked-hand-joint-local-transform', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myUpdateOnViewReset: { type: WL.Type.Bool, default: true },\r\n    _mySetLocalScaleAsJointRadius: { type: WL.Type.Bool, default: false },\r\n    _myJointID: {\r\n        type: WL.Type.Enum, values:\r\n            [\r\n                'Wrist',\r\n                'Thumb Metacarpal', 'Thumb Phalanx Proximal', 'Thumb Phalanx Distal', 'Thumb Tip',\r\n                'Index Metacarpal', 'Index Phalanx Proximal', 'Index Phalanx Intermediate', 'Index Phalanx Distal', 'Index Tip',\r\n                'Middle Metacarpal', 'Middle Phalanx Proximal', 'Middle Phalanx Intermediate', 'Middle Phalanx Distal', 'Middle Tip',\r\n                'Ring Metacarpal', 'Ring Phalanx Proximal', 'Ring Phalanx Intermediate', 'Ring Phalanx Distal', 'Ring Tip',\r\n                'Pinky Metacarpal', 'Pinky Phalanx Proximal', 'Pinky Phalanx Intermediate', 'Pinky Phalanx Distal', 'Pinky Tip'\r\n            ],\r\n        default: 'Wrist'\r\n    }\r\n}, {\r\n    init: function () {\r\n        this._myHandednessInternal = PP.InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myJointIDInternal = PP.InputUtils.getJointIDByIndex(this._myJointID);\r\n\r\n        this._myTrackedHandJointPose = new PP.TrackedHandJointPose(this._myHandednessInternal, this._myJointIDInternal);\r\n        this._myTrackedHandJointPose.setFixForward(this._myFixForward);\r\n        this._myTrackedHandJointPose.setUpdateOnViewReset(this._myUpdateOnViewReset);\r\n        this._myTrackedHandJointPose.registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    },\r\n    start: function () {\r\n        this._myTrackedHandJointPose.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myTrackedHandJointPose.update(dt);\r\n    },\r\n    onPoseUpdated: function () {\r\n        let jointPoseTransform = PP.quat2_create()\r\n        return function onPoseUpdated() {\r\n            this.object.pp_setTransformLocalQuat(this._myTrackedHandJointPose.getTransformQuat(jointPoseTransform));\r\n\r\n            if (this._mySetLocalScaleAsJointRadius) {\r\n                this.object.pp_setScaleLocal(this._myTrackedHandJointPose.getJointRadius());\r\n            }\r\n        }\r\n    }()\r\n});", "WL.registerComponent('pp-copy-hand-transform', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n}, {\r\n    init: function () {\r\n        this._myHandednessType = (this._myHandedness == 0) ? PP.Handedness.LEFT : PP.Handedness.RIGHT;\r\n    },\r\n    update: function (dt) {\r\n        let hand = PP.myPlayerObjects.myHands[this._myHandednessType];\r\n        this.object.pp_setTransformQuat(hand.pp_getTransformQuat());\r\n        this.object.pp_setScale(hand.pp_getScale());\r\n    },\r\n});", "WL.registerComponent('pp-copy-head-transform', {\r\n}, {\r\n    update: function (dt) {\r\n        let head = PP.myPlayerObjects.myHead;\r\n        this.object.pp_setTransformQuat(head.pp_getTransformQuat());\r\n        this.object.pp_setScale(head.pp_getScale());\r\n    },\r\n});", "WL.registerComponent('pp-copy-player-transform', {\r\n}, {\r\n    update: function (dt) {\r\n        let player = PP.myPlayerObjects.myPlayer;\r\n        this.object.pp_setTransformQuat(player.pp_getTransformQuat());\r\n        this.object.pp_setScale(player.pp_getScale());\r\n    },\r\n});", "WL.registerComponent('pp-copy-player-pivot-transform', {\r\n}, {\r\n    update: function (dt) {\r\n        let playerPivot = PP.myPlayerObjects.myPlayerPivot;\r\n        this.object.pp_setTransformQuat(playerPivot.pp_getTransformQuat());\r\n        this.object.pp_setScale(playerPivot.pp_getScale());\r\n    },\r\n});", "\r\nPP.ToolHandedness = {\r\n    NONE: null,\r\n    LEFT: \"left\",\r\n    RIGHT: \"right\",\r\n};\r\n\r\nPP.ToolInputSourceType = {\r\n    NONE: null,\r\n    GAMEPAD: 0,\r\n    TRACKED_HAND: 1\r\n};", "WL.registerComponent('pp-tool-cursor', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myApplyDefaultCursorOffset: { type: WL.Type.Bool, default: true },\r\n    _myPulseOnHover: { type: WL.Type.Bool, default: false },\r\n    _myShowFingerCursor: { type: WL.Type.Bool, default: false },\r\n}, {\r\n    init: function () {\r\n        this._myHandednessString = ['left', 'right'][this._myHandedness];\r\n\r\n        this._myCursorPositionDefaultOffset = PP.vec3_create(0, -0.035, -0.05);\r\n        this._myCursorRotationDefaultOffset = PP.vec3_create(-30, 0, 0);\r\n\r\n        this._myCursorMeshScale = PP.vec3_create(0.0025, 0.0025, 0.0025);\r\n        this._myCursorColor = [255 / 255, 255 / 255, 255 / 255, 1];\r\n\r\n        this._myCursorTargetCollisionGroup = 7;\r\n    },\r\n    start: function () {\r\n        this._myToolCursorObject = WL.scene.addObject(this.object);\r\n        this._myFixForwardObject = WL.scene.addObject(this._myToolCursorObject);\r\n\r\n        if (this._myFixForward) {\r\n            this._myFixForwardObject.pp_rotateObject(PP.vec3_create(0, 180, 0));\r\n        }\r\n\r\n        this._myCursorObjectVR = WL.scene.addObject(this._myFixForwardObject);\r\n\r\n        if (this._myApplyDefaultCursorOffset) {\r\n            this._myCursorObjectVR.pp_setPositionLocal(this._myCursorPositionDefaultOffset);\r\n            this._myCursorObjectVR.pp_rotateObject(this._myCursorRotationDefaultOffset);\r\n        }\r\n\r\n        {\r\n            this._myCursorMeshobject = WL.scene.addObject(this._myCursorObjectVR);\r\n            this._myCursorMeshobject.pp_setScale(this._myCursorMeshScale);\r\n\r\n            let cursorMeshComponent = this._myCursorMeshobject.addComponent(\"mesh\");\r\n            cursorMeshComponent.mesh = PP.myDefaultResources.myMeshes.mySphere;\r\n            cursorMeshComponent.material = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n            cursorMeshComponent.material.color = this._myCursorColor;\r\n\r\n            let cursorComponent = this._myCursorObjectVR.addComponent(\"cursor\", { \"collisionGroup\": this._myCursorTargetCollisionGroup, \"handedness\": this._myHandedness + 1, \"cursorObject\": this._myCursorMeshobject });\r\n            cursorComponent.rayCastMode = 0; //collision\r\n            if (this._myPulseOnHover) {\r\n                cursorComponent.globalTarget.addHoverFunction(this._pulseOnHover.bind(this));\r\n            }\r\n        }\r\n\r\n        this._myCursorObjectNonVR = WL.scene.addObject(this._myToolCursorObject);\r\n\r\n        {\r\n            let cursorComponent = this._myCursorObjectNonVR.addComponent(\"cursor\", { \"collisionGroup\": this._myCursorTargetCollisionGroup, \"handedness\": this._myHandedness + 1 });\r\n            cursorComponent.rayCastMode = 0; //collision\r\n            if (this._myPulseOnHover) {\r\n                cursorComponent.globalTarget.addHoverFunction(this._pulseOnHover.bind(this));\r\n            }\r\n            cursorComponent.setViewComponent(PP.myPlayerObjects.myNonVRCamera.getComponent(\"view\"));\r\n        }\r\n\r\n        let fingerCursorMeshObject = null;\r\n        let fingerCollisionSize = 0.0125;\r\n\r\n        if (this._myShowFingerCursor) {\r\n            fingerCursorMeshObject = this._myToolCursorObject.pp_addObject();\r\n\r\n            let meshComponent = fingerCursorMeshObject.addComponent(\"mesh\");\r\n            meshComponent.mesh = PP.myDefaultResources.myMeshes.mySphere;\r\n            meshComponent.material = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n            meshComponent.material.color = this._myCursorColor;\r\n\r\n            fingerCursorMeshObject.pp_setScale(fingerCollisionSize);\r\n        }\r\n\r\n        this._myFingerCursorObject = WL.scene.addObject(this._myToolCursorObject);\r\n        this._myFingerCursorComponent = this._myFingerCursorObject.addComponent(\"pp-finger-cursor\", {\r\n            \"_myHandedness\": this._myHandedness,\r\n            \"_myEnableMultipleClicks\": true,\r\n            \"_myCollisionGroup\": this._myCursorTargetCollisionGroup,\r\n            \"_myCollisionSize\": fingerCollisionSize,\r\n            \"_myCursorObject\": fingerCursorMeshObject\r\n        });\r\n\r\n        this._myCursorObjectVR.pp_setActive(false);\r\n        this._myCursorObjectNonVR.pp_setActive(false);\r\n        this._myFingerCursorObject.pp_setActive(false);\r\n\r\n    },\r\n    update: function () {\r\n        let transformQuat = PP.quat2_create();\r\n        let transform = PP.mat4_create();\r\n        return function update(dt) {\r\n            let isUsingHand = this._isUsingHand();\r\n\r\n            this._myFingerCursorObject.pp_setActive(isUsingHand);\r\n\r\n            if (isUsingHand) {\r\n                this._myCursorObjectNonVR.pp_setActive(false);\r\n                this._myCursorObjectVR.pp_setActive(false);\r\n            } else {\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    this._myCursorObjectVR.pp_setActive(!isUsingHand);\r\n                    this._myCursorObjectNonVR.pp_setActive(false);\r\n                } else {\r\n                    this._myCursorObjectNonVR.pp_setActive(!isUsingHand);\r\n                    this._myCursorObjectVR.pp_setActive(false);\r\n\r\n                    this._myCursorObjectNonVR.pp_setTransformQuat(PP.myPlayerObjects.myNonVRCamera.pp_getTransformQuat(transformQuat));\r\n                }\r\n            }\r\n        };\r\n    }(),\r\n    _isUsingHand: function () {\r\n        let isUsingHand = false;\r\n\r\n        if (WL.xrSession && WL.xrSession.inputSources) {\r\n            for (let i = 0; i < WL.xrSession.inputSources.length; i++) {\r\n                let input = WL.xrSession.inputSources[i];\r\n                if (input.hand && input.handedness == this._myHandednessString) {\r\n                    isUsingHand = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isUsingHand;\r\n    },\r\n    _pulseOnHover: function (object) {\r\n        let targetComponent = object.getComponent(\"cursor-target\");\r\n\r\n        if (targetComponent && !targetComponent.isSurface) {\r\n            if (this._myHandedness == 0) {\r\n                if (PP.myLeftGamepad) {\r\n                    PP.myLeftGamepad.pulse(0.4, 0);\r\n                }\r\n            } else {\r\n                if (PP.myRightGamepad) {\r\n                    PP.myRightGamepad.pulse(0.4, 0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n});", "PP.ConsoleVRWidgetSetup = class ConsoleVRWidgetSetup {\r\n\r\n    constructor() {\r\n        this._initializeBuildSetup();\r\n        this._initializeRuntimeSetup();\r\n    }\r\n\r\n    _initializeBuildSetup() {\r\n        //General\r\n        this.myBackgroundColor = [46 / 255, 46 / 255, 46 / 255, 1];\r\n\r\n        this.myCursorTargetCollisionCollider = 2; // box\r\n        this.myCursorTargetCollisionGroup = 7; //keep this in sync with ConsoleVRSetup\r\n        this.myCursorTargetCollisionThickness = 0.001;\r\n\r\n        this.myDefaultTextColor = [255 / 255, 255 / 255, 255 / 255, 1];\r\n\r\n        this.myTextAlignment = 2; // center\r\n        this.myTextJustification = 2; // middle\r\n        this.myTextColor = this.myDefaultTextColor;\r\n\r\n        this.myMessageTypeColors = [];\r\n        this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.LOG] = this.myDefaultTextColor;\r\n        this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.ERROR] = [255 / 255, 40 / 255, 40 / 255, 1];\r\n        this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.WARN] = [250 / 255, 220 / 255, 40 / 255, 1];\r\n        this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.INFO] = [60 / 255, 200 / 255, 255 / 255, 1];\r\n\r\n        //Messages\r\n        this.myMessagesPanelPosition = PP.vec3_create(0, 0.075, 0);\r\n\r\n        this.myMessagesBackgroundScale = PP.vec3_create(0.34, 0.15, 1);\r\n\r\n        {\r\n            let xPaddingPercentage = 0.03;\r\n            let yPaddingPercentage = xPaddingPercentage * this.myMessagesBackgroundScale[0] / this.myMessagesBackgroundScale[1] * 0.8; //a bit less padding\r\n            let xPosition = -this.myMessagesBackgroundScale[0] + this.myMessagesBackgroundScale[0] * xPaddingPercentage;\r\n            let yPosition = this.myMessagesBackgroundScale[1] - this.myMessagesBackgroundScale[1] * yPaddingPercentage;\r\n            this.myMessagesTextsPanelPosition = PP.vec3_create(xPosition, yPosition, 0.007);\r\n        }\r\n        this.myMessagesTextsPanelScale = PP.vec3_create(0.1, 0.1, 0.1);\r\n\r\n        this.myMessagesTextStartString = \".\\n\"; // to avoid issue with text component padding\r\n        this.myMessagesTextAlignment = 1; // left\r\n        this.myMessagesTextJustification = 3; // top\r\n\r\n        this.myMessagesTextPositions = [];\r\n        this.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType.LOG] = PP.vec3_create(0, 0, 0.00001);\r\n        this.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType.ERROR] = PP.vec3_create(0, 0, 0);\r\n        this.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType.WARN] = PP.vec3_create(0, 0, 0);\r\n        this.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType.INFO] = PP.vec3_create(0, 0, 0);\r\n\r\n        this.myMessagesTextColors = [];\r\n        this.myMessagesTextColors[PP.ConsoleVRWidget.MessageType.LOG] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.LOG];\r\n        this.myMessagesTextColors[PP.ConsoleVRWidget.MessageType.ERROR] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.ERROR];\r\n        this.myMessagesTextColors[PP.ConsoleVRWidget.MessageType.WARN] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.WARN];\r\n        this.myMessagesTextColors[PP.ConsoleVRWidget.MessageType.INFO] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.INFO];\r\n\r\n        //Buttons     \r\n        this.myButtonsPanelPosition = PP.vec3_create(0, -0.11, 0.015);\r\n\r\n        this.myButtonBackgroundScale = PP.vec3_create(0.04, 0.02, 1);\r\n\r\n        this.myButtonTextPosition = PP.vec3_create(0, 0, 0.007);\r\n        this.myButtonTextScale = PP.vec3_create(0.18, 0.18, 0.18);\r\n\r\n        this.myButtonCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myButtonCursorTargetPosition[2] = this.myButtonTextPosition[2];\r\n\r\n        this.myButtonsCollisionCollider = this.myCursorTargetCollisionCollider;\r\n        this.myButtonsCollisionGroup = this.myCursorTargetCollisionGroup;\r\n        this.myButtonsCollisionExtents = this.myButtonBackgroundScale.slice(0);\r\n        this.myButtonsCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myClearButtonTextLabel = \"clear\";\r\n        this.myUpButtonTextLabel = \"up\";\r\n        this.myDownButtonTextLabel = \"down\";\r\n\r\n        this.myFilterButtonsTextColors = [];\r\n        this.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType.LOG] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.LOG];\r\n        this.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType.ERROR] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.ERROR];\r\n        this.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType.WARN] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.WARN];\r\n        this.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType.INFO] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.INFO];\r\n\r\n        this.myFilterButtonsTextLabel = [];\r\n        this.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType.LOG] = \"log\";\r\n        this.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType.ERROR] = \"error\";\r\n        this.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType.WARN] = \"warn\";\r\n        this.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType.INFO] = \"info\";\r\n\r\n        //Buttons positioning\r\n        {\r\n            let numberOfButtons = 7;\r\n            let buttonsHorizontalSpace = Math.max(0.68, this.myButtonBackgroundScale[0] * numberOfButtons);\r\n            //2 at start, 3 between filters, 4 spaces between filter and clear and 4 spaces between clear and up/down, 1 space between up and down, 1 at end\r\n            let numberOfSpacesBetweenButtons = 2 + 3 + 4 + 4 + 1 + 2;\r\n            let spaceWidth = Math.max((buttonsHorizontalSpace - numberOfButtons * this.myButtonBackgroundScale[0] * 2) / numberOfSpacesBetweenButtons, 0);\r\n            let halfButtonWidth = this.myButtonBackgroundScale[0];\r\n            let initialPosition = - buttonsHorizontalSpace / 2;\r\n\r\n            this.myFilterButtonsPositions = [];\r\n            this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.LOG] = [initialPosition + spaceWidth * 2 + halfButtonWidth, 0, 0];\r\n            this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.ERROR] = [this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.LOG][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n            this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.WARN] = [this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.ERROR][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n            this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.INFO] = [this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.WARN][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n\r\n            this.myClearButtonPosition = [this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.INFO][0] + halfButtonWidth + spaceWidth * 4 + halfButtonWidth, 0, 0];\r\n            this.myUpButtonPosition = [this.myClearButtonPosition[0] + halfButtonWidth + spaceWidth * 4 + halfButtonWidth, 0, 0];\r\n            this.myDownButtonPosition = [this.myUpButtonPosition[0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n        }\r\n\r\n        //Notify Icon\r\n        this.myNotifyIconBackgroundScale = PP.vec3_create(0.01, 0.01, 1);\r\n\r\n        this.myNotifyIconPanelPositions = [];\r\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE] = PP.vec3_create(0, 0, 0);\r\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE][0] = -this.myMessagesBackgroundScale[0] + this.myNotifyIconBackgroundScale[0] + 0.01;\r\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE][1] = -this.myMessagesBackgroundScale[1] + this.myNotifyIconBackgroundScale[1] + 0.01;\r\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE][2] = this.myMessagesTextsPanelPosition[2] - 0.00001; //prevent glitches with text\r\n\r\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.LEFT] = this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE];\r\n\r\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.RIGHT] = this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE];\r\n\r\n        this.myNotifyIconCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myNotifyIconCursorTargetPosition[2] = this.myButtonsPanelPosition[2] + this.myButtonTextPosition[2] - this.myMessagesTextsPanelPosition[2]; // a little behind the button target to avoid hiding it\r\n\r\n        this.myNotifyIconCollisionExtents = this.myNotifyIconBackgroundScale.slice(0);\r\n        this.myNotifyIconCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myNotifyIconColor = [210 / 255, 210 / 255, 210 / 255, 1];\r\n\r\n        //Pointer\r\n        this.myPointerCollisionCollider = this.myCursorTargetCollisionCollider;\r\n        this.myPointerCollisionGroup = this.myCursorTargetCollisionGroup;\r\n\r\n        {\r\n            let spaceBetweenMessagesAndButtons = Math.abs((this.myMessagesPanelPosition[1] - this.myMessagesBackgroundScale[1]) - (this.myButtonsPanelPosition[1] + this.myButtonBackgroundScale[1]));\r\n            let pointerCollisionHalfHeight = this.myMessagesBackgroundScale[1] + this.myButtonBackgroundScale[1] + spaceBetweenMessagesAndButtons / 2;\r\n            this.myPointerCollisionExtents = PP.vec3_create(this.myMessagesBackgroundScale[0], pointerCollisionHalfHeight, this.myCursorTargetCollisionThickness);\r\n        }\r\n\r\n        this.myPointerCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myPointerCursorTargetPosition[1] = (this.myMessagesPanelPosition[1] + this.myMessagesBackgroundScale[1]) - this.myPointerCollisionExtents[1];\r\n        this.myPointerCursorTargetPosition[2] = this.myButtonsPanelPosition[2] + this.myButtonTextPosition[2] - 0.0001; // a little behind the button target to avoid hiding it\r\n    }\r\n\r\n    _initializeRuntimeSetup() {\r\n        this.myTabString = \"     \";\r\n        this.myAssertStartString = \"Assertion failed:\";\r\n\r\n        this.myMaxCharactersPerLine = 100;\r\n        this.myMaxLineSplits = 50; //prevent infinite splitting\r\n        this.myMaxLines = 22;\r\n        this.myMaxMessages = 2000;\r\n        this.myMaxMessagesDeletePad = 2000; // to prevent deleting at every message, delay the delete after the limit is exceed by this value\r\n\r\n        this.myLinesBetweenMessages = 1;\r\n\r\n        this.myButtonHoverColor = [150 / 255, 150 / 255, 150 / 255, 1];\r\n        this.myButtonDisabledTextColor = this.myBackgroundColor;\r\n        this.myButtonDisabledBackgroundColor = [110 / 255, 110 / 255, 110 / 255, 1];\r\n\r\n        this.myFilterButtonDisabledTextColor = this.myButtonDisabledTextColor;\r\n        this.myFilterButtonDisabledBackgroundColor = this.myButtonDisabledBackgroundColor;\r\n\r\n        this.myScrollDelay = 0.1;\r\n        this.myScrollAmount = 1;\r\n        this.myScrollThumbstickHandedness = PP.ToolHandedness.RIGHT;\r\n        this.myScrollThumbstickDelay = 0.1;\r\n        this.myScrollThumbstickMinThreshold = 0.2;\r\n        this.myScrollThumbstickAmount = 3;\r\n\r\n        this.myPulseDelay = 5;\r\n        this.myPulseIntensity = 0.3;\r\n        this.myPulseDuration = 0.085;\r\n\r\n        this.myClearBrowserConsoleWhenClearPressed = true;\r\n\r\n        this.myGamepadScrollOnlyOnHover = true;\r\n    }\r\n};", "PP.ConsoleVRWidgetUI = class ConsoleVRWidgetUI {\r\n\r\n    build(parentObject, setup, additionalSetup) {\r\n        this._myParentObject = parentObject;\r\n        this._mySetup = setup;\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myPlaneMesh = PP.MeshUtils.createPlaneMesh();\r\n\r\n        this._createSkeleton();\r\n        this._setTransforms();\r\n        this._addComponents();\r\n\r\n        this._setTransformForNonVR();\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.myPivotObject.pp_setActiveHierarchy(visible);\r\n    }\r\n\r\n    //Skeleton\r\n    _createSkeleton() {\r\n        this.myPivotObject = WL.scene.addObject(this._myParentObject);\r\n\r\n        this._createMessagesSkeleton();\r\n        this._createButtonsSkeleton();\r\n        this._createPointerSkeleton();\r\n    }\r\n\r\n    _createMessagesSkeleton() {\r\n        this.myMessagesPanel = WL.scene.addObject(this.myPivotObject);\r\n        this.myMessagesBackground = WL.scene.addObject(this.myMessagesPanel);\r\n        this.myMessagesTextsPanel = WL.scene.addObject(this.myMessagesPanel);\r\n\r\n        this.myMessagesTexts = [];\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            this.myMessagesTexts[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myMessagesTextsPanel);\r\n        }\r\n\r\n        this.myNotifyIconPanel = WL.scene.addObject(this.myMessagesPanel);\r\n        this.myNotifyIconBackground = WL.scene.addObject(this.myNotifyIconPanel);\r\n        this.myNotifyIconCursorTarget = WL.scene.addObject(this.myNotifyIconPanel);\r\n    }\r\n\r\n    _createButtonsSkeleton() {\r\n        this.myButtonsPanel = WL.scene.addObject(this.myPivotObject);\r\n\r\n        this.myFilterButtonsPanels = [];\r\n        this.myFilterButtonsBackgrounds = [];\r\n        this.myFilterButtonsTexts = [];\r\n        this.myFilterButtonsCursorTargets = [];\r\n\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myButtonsPanel);\r\n            this.myFilterButtonsBackgrounds[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]]);\r\n            this.myFilterButtonsTexts[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]]);\r\n            this.myFilterButtonsCursorTargets[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]]);\r\n        }\r\n\r\n        this.myClearButtonPanel = WL.scene.addObject(this.myButtonsPanel);\r\n        this.myClearButtonBackground = WL.scene.addObject(this.myClearButtonPanel);\r\n        this.myClearButtonText = WL.scene.addObject(this.myClearButtonPanel);\r\n        this.myClearButtonCursorTarget = WL.scene.addObject(this.myClearButtonPanel);\r\n\r\n        this.myUpButtonPanel = WL.scene.addObject(this.myButtonsPanel);\r\n        this.myUpButtonBackground = WL.scene.addObject(this.myUpButtonPanel);\r\n        this.myUpButtonText = WL.scene.addObject(this.myUpButtonPanel);\r\n        this.myUpButtonCursorTarget = WL.scene.addObject(this.myUpButtonPanel);\r\n\r\n        this.myDownButtonPanel = WL.scene.addObject(this.myButtonsPanel);\r\n        this.myDownButtonBackground = WL.scene.addObject(this.myDownButtonPanel);\r\n        this.myDownButtonText = WL.scene.addObject(this.myDownButtonPanel);\r\n        this.myDownButtonCursorTarget = WL.scene.addObject(this.myDownButtonPanel);\r\n    }\r\n\r\n    _createPointerSkeleton() {\r\n        this.myPointerCursorTarget = WL.scene.addObject(this.myPivotObject);\r\n    }\r\n\r\n    //Transforms\r\n    _setTransforms() {\r\n        this.myPivotObject.setDirty();\r\n\r\n        this._setMessagesTransforms();\r\n        this._setButtonsTransforms();\r\n        this._setPointerTransform();\r\n    }\r\n\r\n    _setMessagesTransforms() {\r\n        this.myMessagesPanel.setTranslationLocal(this._mySetup.myMessagesPanelPosition);\r\n        this.myMessagesBackground.scale(this._mySetup.myMessagesBackgroundScale);\r\n\r\n        this.myMessagesTextsPanel.setTranslationLocal(this._mySetup.myMessagesTextsPanelPosition);\r\n        this.myMessagesTextsPanel.scale(this._mySetup.myMessagesTextsPanelScale);\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            this.myMessagesTexts[PP.ConsoleVRWidget.MessageType[key]].setTranslationLocal(this._mySetup.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType[key]]);\r\n        }\r\n\r\n        this.myNotifyIconPanel.setTranslationLocal(this._mySetup.myNotifyIconPanelPositions[this._myAdditionalSetup.myHandedness]);\r\n        this.myNotifyIconBackground.scale(this._mySetup.myNotifyIconBackgroundScale);\r\n        this.myNotifyIconCursorTarget.setTranslationLocal(this._mySetup.myNotifyIconCursorTargetPosition);\r\n    }\r\n\r\n    _setButtonsTransforms() {\r\n        this.myButtonsPanel.setTranslationLocal(this._mySetup.myButtonsPanelPosition);\r\n\r\n        //Filter Buttons\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]].setTranslationLocal(this._mySetup.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType[key]]);\r\n\r\n            this.myFilterButtonsBackgrounds[PP.ConsoleVRWidget.MessageType[key]].scale(this._mySetup.myButtonBackgroundScale);\r\n\r\n            this.myFilterButtonsTexts[PP.ConsoleVRWidget.MessageType[key]].setTranslationLocal(this._mySetup.myButtonTextPosition);\r\n            this.myFilterButtonsTexts[PP.ConsoleVRWidget.MessageType[key]].scale(this._mySetup.myButtonTextScale);\r\n\r\n            this.myFilterButtonsCursorTargets[PP.ConsoleVRWidget.MessageType[key]].setTranslationLocal(this._mySetup.myButtonCursorTargetPosition);\r\n        }\r\n\r\n        //Clear\r\n        {\r\n            this.myClearButtonPanel.setTranslationLocal(this._mySetup.myClearButtonPosition);\r\n\r\n            this.myClearButtonBackground.scale(this._mySetup.myButtonBackgroundScale);\r\n\r\n            this.myClearButtonText.setTranslationLocal(this._mySetup.myButtonTextPosition);\r\n            this.myClearButtonText.scale(this._mySetup.myButtonTextScale);\r\n\r\n            this.myClearButtonCursorTarget.setTranslationLocal(this._mySetup.myButtonCursorTargetPosition);\r\n        }\r\n\r\n        //Up\r\n        {\r\n            this.myUpButtonPanel.setTranslationLocal(this._mySetup.myUpButtonPosition);\r\n\r\n            this.myUpButtonBackground.scale(this._mySetup.myButtonBackgroundScale);\r\n\r\n            this.myUpButtonText.setTranslationLocal(this._mySetup.myButtonTextPosition);\r\n            this.myUpButtonText.scale(this._mySetup.myButtonTextScale);\r\n\r\n            this.myUpButtonCursorTarget.setTranslationLocal(this._mySetup.myButtonCursorTargetPosition);\r\n        }\r\n\r\n        //Down\r\n        {\r\n            this.myDownButtonPanel.setTranslationLocal(this._mySetup.myDownButtonPosition);\r\n\r\n            this.myDownButtonBackground.scale(this._mySetup.myButtonBackgroundScale);\r\n\r\n            this.myDownButtonText.setTranslationLocal(this._mySetup.myButtonTextPosition);\r\n            this.myDownButtonText.scale(this._mySetup.myButtonTextScale);\r\n\r\n            this.myDownButtonCursorTarget.setTranslationLocal(this._mySetup.myButtonCursorTargetPosition);\r\n        }\r\n    }\r\n\r\n    _setPointerTransform() {\r\n        this.myPointerCursorTarget.setTranslationLocal(this._mySetup.myPointerCursorTargetPosition);\r\n    }\r\n\r\n    //Components\r\n    _addComponents() {\r\n        this._addMessagesComponents();\r\n        this._addButtonsComponents();\r\n        this._addPointerComponents();\r\n    }\r\n\r\n    _addMessagesComponents() {\r\n        let messagesBackgroundMeshComp = this.myMessagesBackground.addComponent('mesh');\r\n        messagesBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n        messagesBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        messagesBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myMessagesTextComponents = [];\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            let textComp = this.myMessagesTexts[PP.ConsoleVRWidget.MessageType[key]].addComponent('text');\r\n\r\n            textComp.alignment = this._mySetup.myMessagesTextAlignment;\r\n            textComp.justification = this._mySetup.myMessagesTextJustification;\r\n            textComp.material = this._myAdditionalSetup.myTextMaterial.clone();\r\n            textComp.material.color = this._mySetup.myMessagesTextColors[PP.ConsoleVRWidget.MessageType[key]];\r\n            textComp.lineSpacing = 1.2;\r\n            textComp.text = this._mySetup.myMessagesTextStartString;\r\n\r\n            this.myMessagesTextComponents[PP.ConsoleVRWidget.MessageType[key]] = textComp;\r\n        }\r\n\r\n        this.myNotifyIconBackgroundComponent = this.myNotifyIconBackground.addComponent('mesh');\r\n        this.myNotifyIconBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myNotifyIconBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myNotifyIconBackgroundComponent.material.color = this._mySetup.myNotifyIconColor;\r\n\r\n        this.myNotifyIconCursorTargetComponent = this.myNotifyIconCursorTarget.addComponent('cursor-target');\r\n\r\n        this.myNotifyIconCollisionComponent = this.myNotifyIconCursorTarget.addComponent('collision');\r\n        this.myNotifyIconCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myNotifyIconCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myNotifyIconCollisionComponent.extents = this._mySetup.myNotifyIconCollisionExtents;\r\n    }\r\n\r\n    _addButtonsComponents() {\r\n        //worship the code copy pasteness\r\n\r\n        this.myFilterButtonsBackgroundComponents = [];\r\n        this.myFilterButtonsTextComponents = [];\r\n        this.myFilterButtonsCursorTargetComponents = [];\r\n        this.myFilterButtonsCollisionComponents = [];\r\n\r\n        //Filter Buttons\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            let buttonBackgroundMeshComp = this.myFilterButtonsBackgrounds[PP.ConsoleVRWidget.MessageType[key]].addComponent('mesh');\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myFilterButtonsTexts[PP.ConsoleVRWidget.MessageType[key]].addComponent('text');\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.material.color = this._mySetup.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType[key]];\r\n            buttonTextComp.text = this._mySetup.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType[key]];\r\n\r\n            let buttonCursorTargetComp = this.myFilterButtonsCursorTargets[PP.ConsoleVRWidget.MessageType[key]].addComponent('cursor-target');\r\n\r\n            let buttonCollisionComp = this.myFilterButtonsCursorTargets[PP.ConsoleVRWidget.MessageType[key]].addComponent('collision');\r\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\r\n\r\n            this.myFilterButtonsBackgroundComponents[PP.ConsoleVRWidget.MessageType[key]] = buttonBackgroundMeshComp;\r\n            this.myFilterButtonsTextComponents[PP.ConsoleVRWidget.MessageType[key]] = buttonTextComp;\r\n            this.myFilterButtonsCursorTargetComponents[PP.ConsoleVRWidget.MessageType[key]] = buttonCursorTargetComp;\r\n            this.myFilterButtonsCollisionComponents[PP.ConsoleVRWidget.MessageType[key]] = buttonCollisionComp;\r\n        }\r\n\r\n        //Clear \r\n        {\r\n            let buttonBackgroundMeshComp = this.myClearButtonBackground.addComponent('mesh');\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myClearButtonText.addComponent('text');\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.text = this._mySetup.myClearButtonTextLabel;\r\n\r\n            let buttonCursorTargetComp = this.myClearButtonCursorTarget.addComponent('cursor-target');\r\n\r\n            let buttonCollisionComp = this.myClearButtonCursorTarget.addComponent('collision');\r\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\r\n\r\n            this.myClearButtonBackgroundComponent = buttonBackgroundMeshComp;\r\n            this.myClearButtonTextComponent = buttonTextComp;\r\n            this.myClearButtonCursorTargetComponent = buttonCursorTargetComp;\r\n            this.myClearButtonCollisionComponent = buttonCollisionComp;\r\n        }\r\n\r\n        //Up \r\n        {\r\n            let buttonBackgroundMeshComp = this.myUpButtonBackground.addComponent('mesh');\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myUpButtonText.addComponent('text');\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.text = this._mySetup.myUpButtonTextLabel;\r\n\r\n            let buttonCursorTargetComp = this.myUpButtonCursorTarget.addComponent('cursor-target');\r\n\r\n            let buttonCollisionComp = this.myUpButtonCursorTarget.addComponent('collision');\r\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\r\n\r\n            this.myUpButtonBackgroundComponent = buttonBackgroundMeshComp;\r\n            this.myUpButtonTextComponent = buttonTextComp;\r\n            this.myUpButtonCursorTargetComponent = buttonCursorTargetComp;\r\n            this.myUpButtonCollisionComponent = buttonCollisionComp;\r\n        }\r\n\r\n        //Down \r\n        {\r\n            let buttonBackgroundMeshComp = this.myDownButtonBackground.addComponent('mesh');\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myDownButtonText.addComponent('text');\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.text = this._mySetup.myDownButtonTextLabel;\r\n\r\n            let buttonCursorTargetComp = this.myDownButtonCursorTarget.addComponent('cursor-target');\r\n\r\n            let buttonCollisionComp = this.myDownButtonCursorTarget.addComponent('collision');\r\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\r\n\r\n            this.myDownButtonBackgroundComponent = buttonBackgroundMeshComp;\r\n            this.myDownButtonTextComponent = buttonTextComp;\r\n            this.myDownButtonCursorTargetComponent = buttonCursorTargetComp;\r\n            this.myDownButtonCollisionComponent = buttonCollisionComp;\r\n        }\r\n    }\r\n\r\n    _addPointerComponents() {\r\n        this.myPointerCursorTargetComponent = this.myPointerCursorTarget.addComponent('cursor-target');\r\n        this.myPointerCursorTargetComponent.isSurface = true;\r\n\r\n        let collisionComp = this.myPointerCursorTarget.addComponent('collision');\r\n        collisionComp.collider = this._mySetup.myPointerCollisionCollider;\r\n        collisionComp.group = 1 << this._mySetup.myPointerCollisionGroup;\r\n        collisionComp.extents = this._mySetup.myPointerCollisionExtents;\r\n\r\n        this.myPointerCollisionComponent = collisionComp;\r\n    }\r\n\r\n    _setupButtonTextComponent(textComponent) {\r\n        textComponent.alignment = this._mySetup.myTextAlignment;\r\n        textComponent.justification = this._mySetup.myTextJustification;\r\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\r\n        textComponent.material.color = this._mySetup.myTextColor;\r\n        textComponent.text = \"\";\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        this._setTransformForVR();\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._setTransformForNonVR();\r\n    }\r\n\r\n    _setTransformForVR() {\r\n        this.myNotifyIconPanel.setTranslationLocal(this._mySetup.myNotifyIconPanelPositions[this._myAdditionalSetup.myHandedness]);\r\n    }\r\n\r\n    _setTransformForNonVR() {\r\n        this.myNotifyIconPanel.setTranslationLocal(this._mySetup.myNotifyIconPanelPositions[PP.ToolHandedness.NONE]);\r\n    }\r\n};", "/* Doesn't support\r\n    - Placeholder like %d and other similar kind of way to build strings\r\n*/\r\n\r\nPP.ConsoleVRWidget = class ConsoleVRWidget {\r\n\r\n    constructor() {\r\n        this._myWidgetFrame = new PP.WidgetFrame(\"C\", 0);\r\n        this._myWidgetFrame.registerWidgetVisibleChangedEventListener(this, this._widgetVisibleChanged.bind(this));\r\n\r\n        this._mySetup = new PP.ConsoleVRWidgetSetup();\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myUI = new PP.ConsoleVRWidgetUI();\r\n\r\n        this._myMessages = [];\r\n\r\n        this._myOldBrowserConsole = [];\r\n        this._myOldConsoleVR = [];\r\n\r\n        this._myTypeFilters = [];\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            this._myTypeFilters[PP.ConsoleVRWidget.MessageType[key]] = false;\r\n        }\r\n\r\n        this._myScrollUp = false;\r\n        this._myScrollDown = false;\r\n        this._myScrollOffset = 0;\r\n        this._myScrollTimer = 0;\r\n        this._myScrollThumbstickTimer = 0;\r\n\r\n        this._myPulseTimer = 0;\r\n\r\n        this._myGamepadScrollActive = true;\r\n        if (this._mySetup.myGamepadScrollOnlyOnHover) {\r\n            this._myGamepadScrollActive = false;\r\n        }\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this._myWidgetFrame.setVisible(visible);\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myWidgetFrame.isVisible();\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myLeftGamepad = PP.myLeftGamepad; //@EDIT get gamepad LEFT here based on how you store it in your game\r\n        this._myRightGamepad = PP.myRightGamepad; //@EDIT get gamepad RIGHT here based on how you store it in your game\r\n\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myWidgetFrame.start(parentObject, additionalSetup);\r\n\r\n        this._myUI.build(this._myWidgetFrame.getWidgetObject(), this._mySetup, additionalSetup);\r\n        this._myUI.setVisible(this._myWidgetFrame.myIsWidgetVisible);\r\n        this._setNotifyIconActive(false);\r\n\r\n        this._addListeners();\r\n\r\n        this._overrideConsolesFunctions();\r\n    }\r\n\r\n    //This must be done only when all the setup is complete, to avoid issues with other part of the code calling the console and then triggering the console vr while not ready yet\r\n    _overrideConsolesFunctions() {\r\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.LOG] = console.log;\r\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.ERROR] = console.error;\r\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.WARN] = console.warn;\r\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.INFO] = console.info;\r\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.DEBUG] = console.debug;\r\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.ASSERT] = console.assert;\r\n        this._myOldBrowserConsoleClear = console.clear;\r\n\r\n        if (this._myAdditionalSetup.myOverrideBrowserConsole) {\r\n            console.log = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.LOG, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\r\n            console.error = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.ERROR, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\r\n            console.warn = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.WARN, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\r\n            console.info = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.INFO, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\r\n            console.debug = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.DEBUG, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\r\n            console.assert = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.ASSERT, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\r\n            console.clear = this._clearConsole.bind(this, true, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\r\n\r\n            window.addEventListener('error', function (errorEvent) {\r\n                if (errorEvent.error != null) {\r\n                    this._consolePrint(PP.ConsoleVRWidget.ConsoleFunction.ERROR, PP.ConsoleVRWidget.Sender.WINDOW, \"Uncaught\", errorEvent.error.stack);\r\n                } else {\r\n                    this._consolePrint(PP.ConsoleVRWidget.ConsoleFunction.ERROR, PP.ConsoleVRWidget.Sender.WINDOW, \"Uncaught\", errorEvent.message);\r\n                }\r\n            }.bind(this));\r\n\r\n            window.addEventListener('unhandledrejection', function (errorEvent) {\r\n                this._consolePrint(PP.ConsoleVRWidget.ConsoleFunction.ERROR, PP.ConsoleVRWidget.Sender.WINDOW, \"Uncaught (in promise)\", errorEvent.reason);\r\n            }.bind(this));\r\n        }\r\n\r\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.LOG] = PP.ConsoleVR.log;\r\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.ERROR] = PP.ConsoleVR.error;\r\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.WARN] = PP.ConsoleVR.warn;\r\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.INFO] = PP.ConsoleVR.info;\r\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.DEBUG] = PP.ConsoleVR.debug;\r\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.ASSERT] = PP.ConsoleVR.assert;\r\n        this._myOldConsoleVRClear = PP.ConsoleVR.clear;\r\n\r\n        PP.ConsoleVR.log = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.LOG, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\r\n        PP.ConsoleVR.error = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.ERROR, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\r\n        PP.ConsoleVR.warn = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.WARN, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\r\n        PP.ConsoleVR.info = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.INFO, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\r\n        PP.ConsoleVR.debug = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.DEBUG, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\r\n        PP.ConsoleVR.assert = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.ASSERT, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\r\n        PP.ConsoleVR.clear = this._clearConsole.bind(this, true, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\r\n    }\r\n\r\n    update(dt) {\r\n        this._myWidgetFrame.update(dt);\r\n\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            this._updateScroll(dt);\r\n        }\r\n\r\n        this._updateGamepadsExtraActions(dt);\r\n    }\r\n\r\n    //Text section\r\n\r\n    _updateText(messageType) {\r\n        let consoleText = \"\";\r\n\r\n        if (!this._myTypeFilters[messageType]) {\r\n            let linesCount = 0;\r\n            let i = this._myMessages.length - 1;\r\n\r\n            let scrollLinesToSkip = Math.round(this._myScrollOffset);\r\n\r\n            while (i >= 0 && linesCount < this._mySetup.myMaxLines) {\r\n                let message = this._myMessages[i];\r\n\r\n                //skip filtered messages\r\n                if (this._myTypeFilters[message.myType]) {\r\n                    i -= 1;\r\n                    continue;\r\n                }\r\n\r\n                let messageLines = message.myLines.length;\r\n\r\n                //compute line to skip due to scroll offset\r\n                let linesToSkip = 0;\r\n                if (scrollLinesToSkip > 0) {\r\n                    let additionalEmptyLines = 0;\r\n                    if (i != this._myMessages.length - 1) {\r\n                        additionalEmptyLines = this._mySetup.myLinesBetweenMessages;\r\n                    }\r\n\r\n                    if (scrollLinesToSkip >= messageLines + additionalEmptyLines) { // + empty lines between messages\r\n                        scrollLinesToSkip -= messageLines + additionalEmptyLines;\r\n                        linesToSkip = messageLines + additionalEmptyLines;\r\n                    } else {\r\n                        linesToSkip = scrollLinesToSkip;\r\n                        scrollLinesToSkip = 0;\r\n                    }\r\n                }\r\n\r\n                //add empty lines between messages\r\n                if (i != this._myMessages.length - 1) {\r\n                    let emptyLinesToSkip = this._mySetup.myLinesBetweenMessages - Math.max(this._mySetup.myLinesBetweenMessages - linesToSkip, 0);\r\n                    let emptyLinesToShow = this._mySetup.myLinesBetweenMessages - emptyLinesToSkip;\r\n                    if (linesCount + emptyLinesToShow > this._mySetup.myMaxLines) {\r\n                        emptyLinesToShow = this._myMaxLines - linesCount;\r\n                    }\r\n\r\n                    for (let j = 0; j < emptyLinesToShow; j++) {\r\n                        consoleText = (\"\\n\").concat(consoleText);\r\n                    }\r\n\r\n                    linesCount += emptyLinesToShow;\r\n                    linesToSkip -= emptyLinesToSkip;\r\n                }\r\n\r\n                //computing the number of message lines to show\r\n                let linesToShow = messageLines - linesToSkip;\r\n                if (linesCount + linesToShow > this._mySetup.myMaxLines) {\r\n                    linesToShow = this._mySetup.myMaxLines - linesCount;\r\n                }\r\n\r\n                if (linesToShow > 0) {\r\n                    if (message.myType == messageType) {\r\n                        //if the message is the same type of this message text component, add the message lines\r\n\r\n                        let linesToPrint = message.myLines.slice(messageLines - linesToShow - linesToSkip, messageLines - linesToSkip);\r\n                        let text = linesToPrint.join(\"\\n\");\r\n                        consoleText = (text.concat(\"\\n\")).concat(consoleText);\r\n\r\n                        linesCount += linesToShow;\r\n                    } else {\r\n                        //otherwise add empty lines, so that the text component with the correct type will have space to show this message\r\n\r\n                        for (let j = 0; j < linesToShow; j++) {\r\n                            consoleText = (\"\\n\").concat(consoleText);\r\n                        }\r\n\r\n                        linesCount += linesToShow;\r\n                    }\r\n                }\r\n\r\n                i -= 1;\r\n            }\r\n        }\r\n\r\n        consoleText = this._mySetup.myMessagesTextStartString.concat(consoleText);\r\n\r\n        this._myUI.myMessagesTextComponents[messageType].text = consoleText;\r\n    }\r\n\r\n    _consolePrint(consoleFunction, sender, ...args) {\r\n        if (consoleFunction != PP.ConsoleVRWidget.ConsoleFunction.ASSERT || (args.length > 0 && !args[0])) {\r\n            let message = this._argsToMessage(consoleFunction, ...args);\r\n            this._addMessage(message);\r\n\r\n            if (this._myMessages.length >= this._mySetup.myMaxMessages + this._mySetup.myMaxMessagesDeletePad) {\r\n                this._myMessages = this._myMessages.slice(this._myMessages.length - this._mySetup.myMaxMessages);\r\n                this._clampScrollOffset();\r\n            }\r\n\r\n            this._updateAllTexts();\r\n\r\n            this._pulseGamepad();\r\n        }\r\n\r\n        switch (sender) {\r\n            case PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE:\r\n                this._myOldBrowserConsole[consoleFunction].apply(console, args);\r\n                break;\r\n            case PP.ConsoleVRWidget.Sender.CONSOLE_VR:\r\n                this._myOldConsoleVR[consoleFunction].apply(PP.ConsoleVR, args);\r\n                break;\r\n            default:\r\n                this._myOldBrowserConsole[consoleFunction].apply(console, args);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _argsToMessage(consoleFunction, ...args) {\r\n        if (consoleFunction == PP.ConsoleVRWidget.ConsoleFunction.ASSERT) {\r\n            args = args.slice(1);\r\n            args.splice(0, 0, this._mySetup.myAssertStartString);\r\n        }\r\n\r\n        let messageType = this._consoleFunctionToMessageType(consoleFunction);\r\n\r\n        let formattedText = this._formatArgs(...args);\r\n\r\n        let lines = this._splitLongLines(formattedText);\r\n\r\n        if (messageType == PP.ConsoleVRWidget.MessageType.DEBUG) {\r\n            messageType = PP.ConsoleVRWidget.MessageType.LOG;\r\n        } else if (messageType == PP.ConsoleVRWidget.MessageType.EXCEPTION || messageType == PP.ConsoleVRWidget.MessageType.ASSERT) {\r\n            messageType = PP.ConsoleVRWidget.MessageType.ERROR;\r\n        }\r\n\r\n\r\n        let message = new PP.ConsoleVRWidget.Message(messageType, lines);\r\n\r\n        return message;\r\n    }\r\n\r\n    _consoleFunctionToMessageType(consoleFunction) {\r\n        let messageType = PP.ConsoleVRWidget.MessageType.LOG;\r\n\r\n        if (consoleFunction < PP.ConsoleVRWidget.ConsoleFunction.DEBUG) {\r\n            messageType = consoleFunction;\r\n        } else if (consoleFunction == PP.ConsoleVRWidget.ConsoleFunction.DEBUG) {\r\n            messageType = PP.ConsoleVRWidget.MessageType.LOG;\r\n        } else {\r\n            messageType = PP.ConsoleVRWidget.MessageType.ERROR;\r\n        }\r\n\r\n        return messageType;\r\n    }\r\n\r\n    //Here the formatting using placeholder like %d could be implemented in the future\r\n    _formatArgs(...args) {\r\n        let stringifiedArgs = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            if (args[i] === undefined) {\r\n                stringifiedArgs.push(\"undefined\");\r\n            } else {\r\n                stringifiedArgs.push(this._stringifyItem(args[i]));\r\n            }\r\n        }\r\n\r\n        let formattedString = stringifiedArgs.join(\" \");\r\n\r\n        return formattedString;\r\n    }\r\n\r\n    _stringifyItem(item) {\r\n        if (typeof item === 'object') {\r\n            let stringifiedItem = null;\r\n            let linesBetweenItems = 2;\r\n\r\n            try {\r\n                stringifiedItem = JSON.stringify(item, this._jsonReplacer.bind(this), linesBetweenItems);\r\n            } catch (error) {\r\n                let cache = new WeakSet();\r\n\r\n                stringifiedItem = JSON.stringify(item, function (key, value) {\r\n                    if (typeof value === 'object' && value !== null) {\r\n                        if (cache.has(value)) {\r\n                            return \"<stringify error: object already stringified>\"; //try to avoid circular reference, a repeated object will be caught in this check too sadly\r\n                        }\r\n                        cache.add(value);\r\n                    }\r\n\r\n                    return this._jsonReplacer(key, value);\r\n                }.bind(this), linesBetweenItems);\r\n            }\r\n\r\n            stringifiedItem = stringifiedItem.replaceAll('\"[', '[');\r\n            stringifiedItem = stringifiedItem.replaceAll(\"'[\", \"[\");\r\n            stringifiedItem = stringifiedItem.replaceAll(']\"', ']');\r\n            stringifiedItem = stringifiedItem.replaceAll(\"]'\", \"]\");\r\n\r\n            return stringifiedItem;\r\n        }\r\n\r\n        return item;\r\n    }\r\n\r\n    _splitLongLines(messageText) {\r\n        let linesToSplit = messageText.split(\"\\n\");\r\n        let lines = [];\r\n        for (let i = 0; i < linesToSplit.length; i++) {\r\n            let lineToSplit = linesToSplit[i];\r\n\r\n            if (lineToSplit.length > this._mySetup.myMaxCharactersPerLine) {\r\n                let spacesAtStart = this._getSpacesAtStart(lineToSplit);\r\n                let spaceToAdd = this._mySetup.myTabString.concat(spacesAtStart);\r\n                let lineSplits = 0;\r\n\r\n                while (lineToSplit.length > this._mySetup.myMaxCharactersPerLine && lineSplits < this._mySetup.myMaxLineSplits) {\r\n                    let firstSub = lineToSplit.substr(0, this._mySetup.myMaxCharactersPerLine - 1);\r\n                    let secondSub = lineToSplit.substr(this._mySetup.myMaxCharactersPerLine - 1);\r\n                    secondSub = spaceToAdd.concat(secondSub);\r\n\r\n                    lines.push(firstSub);\r\n\r\n                    lineToSplit = secondSub;\r\n                    lineSplits++;\r\n                }\r\n                lines.push(lineToSplit);\r\n            } else {\r\n                lines.push(lineToSplit);\r\n            }\r\n        }\r\n\r\n        return lines;\r\n    }\r\n\r\n    _getSpacesAtStart(text) {\r\n        let spaces = \"\";\r\n        let i = 0;\r\n\r\n        while (i < text.length && text[i] == ' ') {\r\n            spaces = spaces.concat(\" \");\r\n            i++;\r\n        }\r\n\r\n        return spaces;\r\n    }\r\n\r\n    _addMessage(message) {\r\n        let hasSameInfoAsPrev = false;\r\n        if (this._myMessages.length > 0) {\r\n            let lastMessage = this._myMessages[this._myMessages.length - 1];\r\n            if (lastMessage.hasSameInfo(message)) {\r\n                lastMessage.increaseCount();\r\n                hasSameInfoAsPrev = true;\r\n            }\r\n        }\r\n\r\n        if (!hasSameInfoAsPrev) {\r\n            this._myMessages.push(message);\r\n        }\r\n\r\n        this._adjustScrollOffsetAfterMessageAdded(message, hasSameInfoAsPrev);\r\n        this._updateNotifyIcon(message);\r\n    }\r\n\r\n    //if you have scrolled, new messages does not move the scroll position\r\n    _adjustScrollOffsetAfterMessageAdded(message, hasSameInfoAsPrev) {\r\n        if (!hasSameInfoAsPrev && !(this._myTypeFilters[message.myType]) && this._myScrollOffset > 0) {\r\n            this._myScrollOffset += message.myLines.length + this._mySetup.myLinesBetweenMessages;\r\n        }\r\n    }\r\n\r\n    _updateAllTexts() {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            for (let key in PP.ConsoleVRWidget.MessageType) {\r\n                this._updateText(PP.ConsoleVRWidget.MessageType[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateNotifyIcon(message) {\r\n        if (!(this._myTypeFilters[message.myType]) && this._myScrollOffset > 0) {\r\n            this._setNotifyIconActive(true);\r\n        }\r\n    }\r\n\r\n    _updateScroll(dt) {\r\n        if (this._myScrollUp) {\r\n            this._myScrollTimer += dt;\r\n            while (this._myScrollTimer > this._mySetup.myScrollDelay) {\r\n                this._myScrollTimer -= this._mySetup.myScrollDelay;\r\n                this._myScrollOffset += this._mySetup.myScrollAmount;\r\n            }\r\n        } else if (this._myScrollDown) {\r\n            this._myScrollTimer += dt;\r\n            while (this._myScrollTimer > this._mySetup.myScrollDelay) {\r\n                this._myScrollTimer -= this._mySetup.myScrollDelay;\r\n                this._myScrollOffset -= this._mySetup.myScrollAmount;\r\n            }\r\n        }\r\n\r\n        this._clampScrollOffset();\r\n\r\n        if (this._myScrollUp || this._myScrollDown) {\r\n            this._updateAllTexts();\r\n        }\r\n\r\n        if (this._myScrollOffset == 0) {\r\n            this._setNotifyIconActive(false);\r\n        }\r\n    }\r\n\r\n    _clampScrollOffset() {\r\n        let maxScroll = this._getMaxScrollOffset();\r\n        this._myScrollOffset = Math.min(Math.max(this._myScrollOffset, 0), maxScroll); //clamp \r\n    }\r\n\r\n    _getMaxScrollOffset() {\r\n        return Math.max(this._getLinesCount() - this._mySetup.myMaxLines, 0);\r\n    }\r\n\r\n    _getLinesCount() {\r\n        let linesCount = 0;\r\n        for (let message of this._myMessages) {\r\n            if (!this._myTypeFilters[message.myType]) {\r\n                linesCount += message.myLines.length + this._mySetup.myLinesBetweenMessages;\r\n            }\r\n        }\r\n        linesCount -= this._mySetup.myLinesBetweenMessages; //empty line is added only between messages\r\n        linesCount = Math.max(linesCount, 0);\r\n\r\n        return linesCount;\r\n    }\r\n\r\n    //Listener section\r\n\r\n    _addListeners() {\r\n        let ui = this._myUI;\r\n\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            let cursorTarget = ui.myFilterButtonsCursorTargetComponents[PP.ConsoleVRWidget.MessageType[key]];\r\n            let backgroundMaterial = ui.myFilterButtonsBackgroundComponents[PP.ConsoleVRWidget.MessageType[key]].material;\r\n            let textMaterial = ui.myFilterButtonsTextComponents[PP.ConsoleVRWidget.MessageType[key]].material;\r\n\r\n            cursorTarget.addTripleClickFunction(this._resetFilters.bind(this, PP.ConsoleVRWidget.MessageType[key]));\r\n            cursorTarget.addDoubleClickFunction(this._filterAllButOne.bind(this, PP.ConsoleVRWidget.MessageType[key], textMaterial));\r\n            cursorTarget.addClickFunction(this._toggleFilter.bind(this, PP.ConsoleVRWidget.MessageType[key], textMaterial));\r\n            cursorTarget.addHoverFunction(this._filterHover.bind(this, PP.ConsoleVRWidget.MessageType[key], backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._filterUnHover.bind(this, PP.ConsoleVRWidget.MessageType[key], backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myClearButtonCursorTargetComponent;\r\n            let backgroundMaterial = ui.myClearButtonBackgroundComponent.material;\r\n\r\n            cursorTarget.addClickFunction(this._clearConsole.bind(this, false, null));\r\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._genericUnHover.bind(this, backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myUpButtonCursorTargetComponent;\r\n            let backgroundMaterial = ui.myUpButtonBackgroundComponent.material;\r\n\r\n            cursorTarget.addDoubleClickFunction(this._instantScrollUp.bind(this, true));\r\n            cursorTarget.addDownFunction(this._setScrollUp.bind(this, true));\r\n            cursorTarget.addUpFunction(this._setScrollUp.bind(this, false));\r\n            cursorTarget.addUnHoverFunction(this._setScrollUp.bind(this, false));\r\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._genericUnHover.bind(this, backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myDownButtonCursorTargetComponent;\r\n            let backgroundMaterial = ui.myDownButtonBackgroundComponent.material;\r\n\r\n            cursorTarget.addDoubleClickFunction(this._instantScrollDown.bind(this));\r\n            cursorTarget.addDownFunction(this._setScrollDown.bind(this, true));\r\n            cursorTarget.addUpFunction(this._setScrollDown.bind(this, false));\r\n            cursorTarget.addUnHoverFunction(this._setScrollDown.bind(this, false));\r\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._genericUnHover.bind(this, backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myNotifyIconCursorTargetComponent;\r\n            let backgroundMaterial = ui.myNotifyIconBackgroundComponent.material;\r\n\r\n            cursorTarget.addClickFunction(this._instantScrollDown.bind(this));\r\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._notifyIconUnHover.bind(this));\r\n        }\r\n\r\n        ui.myPointerCursorTargetComponent.addHoverFunction(this._setGamepadScrollActive.bind(this, true));\r\n        ui.myPointerCursorTargetComponent.addUnHoverFunction(this._setGamepadScrollActive.bind(this, false));\r\n    }\r\n\r\n    _resetFilters(messageType) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            for (let key in PP.ConsoleVRWidget.MessageType) {\r\n                let backgroundMaterial = this._myUI.myFilterButtonsBackgroundComponents[PP.ConsoleVRWidget.MessageType[key]].material;\r\n                let filterTextMaterial = this._myUI.myFilterButtonsTextComponents[PP.ConsoleVRWidget.MessageType[key]].material;\r\n\r\n                this._myTypeFilters[PP.ConsoleVRWidget.MessageType[key]] = false;\r\n                filterTextMaterial.color = this._mySetup.myMessageTypeColors[PP.ConsoleVRWidget.MessageType[key]];\r\n                if (PP.ConsoleVRWidget.MessageType[key] != messageType) {\r\n                    backgroundMaterial.color = this._mySetup.myBackgroundColor;\r\n                }\r\n            }\r\n\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _filterAllButOne(messageType) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            for (let key in PP.ConsoleVRWidget.MessageType) {\r\n                let backgroundMaterial = this._myUI.myFilterButtonsBackgroundComponents[PP.ConsoleVRWidget.MessageType[key]].material;\r\n                let filterTextMaterial = this._myUI.myFilterButtonsTextComponents[PP.ConsoleVRWidget.MessageType[key]].material;\r\n                if (PP.ConsoleVRWidget.MessageType[key] != messageType) {\r\n                    this._myTypeFilters[PP.ConsoleVRWidget.MessageType[key]] = true;\r\n                    backgroundMaterial.color = this._mySetup.myFilterButtonDisabledBackgroundColor;\r\n                    filterTextMaterial.color = this._mySetup.myFilterButtonDisabledTextColor;\r\n                } else {\r\n                    this._myTypeFilters[PP.ConsoleVRWidget.MessageType[key]] = false;\r\n                    filterTextMaterial.color = this._mySetup.myMessageTypeColors[messageType];\r\n                }\r\n            }\r\n\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _toggleFilter(messageType, textMaterial) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n\r\n            this._myTypeFilters[messageType] = !this._myTypeFilters[messageType];\r\n            if (this._myTypeFilters[messageType]) {\r\n                textMaterial.color = this._mySetup.myFilterButtonDisabledTextColor;\r\n            } else {\r\n                textMaterial.color = this._mySetup.myMessageTypeColors[messageType];\r\n            }\r\n\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _clearConsole(codeDrivenClear = false, sender = null) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible || codeDrivenClear) {\r\n            this._myMessages = [];\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n\r\n            if (codeDrivenClear) {\r\n                switch (sender) {\r\n                    case PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE:\r\n                        this._myOldBrowserConsoleClear.apply(console);\r\n                        break;\r\n                    case PP.ConsoleVRWidget.Sender.CONSOLE_VR:\r\n                        this._myOldConsoleVRClear.apply(PP.ConsoleVR);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            } else if (this._mySetup.myClearBrowserConsoleWhenClearPressed) {\r\n                PP.ConsoleVR._myRealClear();\r\n            }\r\n        }\r\n    }\r\n\r\n    _setScrollUp(value) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible || !value) {\r\n            if (value) {\r\n                this._myScrollTimer = 0;\r\n            }\r\n\r\n            this._myScrollUp = value;\r\n        }\r\n    }\r\n\r\n    _setScrollDown(value) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible || !value) {\r\n            if (value) {\r\n                this._myScrollTimer = 0;\r\n            }\r\n\r\n            this._myScrollDown = value;\r\n        }\r\n    }\r\n\r\n    _instantScrollUp() {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            this._myScrollOffset = this._getMaxScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _instantScrollDown() {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            this._myScrollOffset = 0;\r\n            this._setNotifyIconActive(false);\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _setNotifyIconActive(active) {\r\n        this._myUI.myNotifyIconPanel.pp_setActiveHierarchy(active && this._myWidgetFrame.myIsWidgetVisible);\r\n    }\r\n\r\n    _notifyIconUnHover() {\r\n        let material = this._myUI.myNotifyIconBackgroundComponent.material;\r\n        material.color = this._mySetup.myNotifyIconColor;\r\n    }\r\n\r\n    _filterHover(messageType, material) {\r\n        this._genericHover(material);\r\n    }\r\n\r\n    _filterUnHover(messageType, material) {\r\n        if (this._myTypeFilters[messageType]) {\r\n            material.color = this._mySetup.myFilterButtonDisabledBackgroundColor;\r\n        } else {\r\n            material.color = this._mySetup.myBackgroundColor;\r\n        }\r\n    }\r\n\r\n    _genericHover(material) {\r\n        material.color = this._mySetup.myButtonHoverColor;\r\n    }\r\n\r\n    _genericUnHover(material) {\r\n        material.color = this._mySetup.myBackgroundColor;\r\n    }\r\n\r\n    //Gamepad section\r\n\r\n    _updateGamepadsExtraActions(dt) {\r\n        if (this._myLeftGamepad && this._myRightGamepad) {\r\n            if ((this._myLeftGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressStart() && this._myRightGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).myIsPressed) ||\r\n                (this._myRightGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressStart() && this._myLeftGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).myIsPressed)) {\r\n                this._toggleVisibility();\r\n            }\r\n\r\n            this._myPulseTimer = Math.max(this._myPulseTimer - dt, 0);\r\n\r\n            this._updateScrollWithThumbstick(dt);\r\n        }\r\n    }\r\n\r\n    _toggleVisibility() {\r\n        this._myWidgetFrame.toggleVisibility();\r\n    }\r\n\r\n    _widgetVisibleChanged(visible) {\r\n        this._myUI.setVisible(visible);\r\n        if (visible) {\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _updateScrollWithThumbstick(dt) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible && this._myGamepadScrollActive) {\r\n            let axes = [0, 0];\r\n            if (this._mySetup.myScrollThumbstickHandedness == PP.ToolHandedness.LEFT) {\r\n                axes = this._myLeftGamepad.getAxesInfo().myAxes;\r\n            } else if (this._mySetup.myScrollThumbstickHandedness == PP.ToolHandedness.RIGHT) {\r\n                axes = this._myRightGamepad.getAxesInfo().myAxes;\r\n            }\r\n\r\n            if (Math.abs(axes[1]) > this._mySetup.myScrollThumbstickMinThreshold) {\r\n                this._myScrollThumbstickTimer += dt;\r\n\r\n                while (this._myScrollThumbstickTimer > this._mySetup.myScrollThumbstickDelay) {\r\n                    this._myScrollThumbstickTimer -= this._mySetup.myScrollThumbstickDelay;\r\n\r\n                    let normalizedScrollAmount = (Math.abs(axes[1]) - this._mySetup.myScrollThumbstickMinThreshold) / (1 - this._mySetup.myScrollThumbstickMinThreshold);\r\n                    this._myScrollOffset += Math.sign(axes[1]) * normalizedScrollAmount * this._mySetup.myScrollThumbstickAmount;\r\n                }\r\n\r\n                this._clampScrollOffset();\r\n                this._updateAllTexts();\r\n            } else {\r\n                this._myScrollThumbstickTimer = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    _pulseGamepad() {\r\n        if (this._myLeftGamepad && this._myRightGamepad) {\r\n            let pulseType = this._myAdditionalSetup.myPulseOnNewMessage;\r\n            let pulseEnabled = pulseType == PP.ConsoleVRWidget.PulseOnNewMessage.ALWAYS || (!this._myWidgetFrame.myIsWidgetVisible && pulseType == PP.ConsoleVRWidget.PulseOnNewMessage.WHEN_HIDDEN);\r\n            if (pulseEnabled && this._myPulseTimer == 0) {\r\n                if (this._myAdditionalSetup.myHandedness == PP.ToolHandedness.RIGHT) {\r\n                    this._myRightGamepad.pulse(this._mySetup.myPulseIntensity, this._mySetup.myPulseDuration);\r\n                } else {\r\n                    this._myLeftGamepad.pulse(this._mySetup.myPulseIntensity, this._mySetup.myPulseDuration);\r\n                }\r\n                this._myPulseTimer = this._mySetup.myPulseDelay;\r\n            }\r\n        }\r\n    }\r\n\r\n    _isSimpleArray(array) {\r\n        if (this._isSpecialSimpleArray(array)) {\r\n            return true;\r\n        } else if (Array.isArray(array)) {\r\n            let isBuiltIn = true;\r\n            for (let element of array) {\r\n                if (element instanceof Object) {\r\n                    isBuiltIn = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return isBuiltIn;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _isSpecialSimpleArray(item) {\r\n        return item && item.constructor &&\r\n            (\r\n                item.constructor.name == \"Uint32Array\" ||\r\n                item.constructor.name == \"Int32Array\" ||\r\n                item.constructor.name == \"Float32Array\" ||\r\n                item.constructor.name == \"Float64Array\"\r\n            );\r\n    }\r\n\r\n    _setGamepadScrollActive(active) {\r\n        this._myGamepadScrollActive = active;\r\n\r\n        if (!this._mySetup.myGamepadScrollOnlyOnHover) {\r\n            this._myGamepadScrollActive = true;\r\n        }\r\n    }\r\n\r\n    _jsonReplacer(key, value) {\r\n        if (value instanceof Map) {\r\n            return Array.from(value.entries());\r\n        } else if (this._isSimpleArray(value)) {\r\n            let array = value;\r\n            if (this._isSpecialSimpleArray(array)) {\r\n                let arrayCopy = []; // Special arrays like Float32Array do not print like Array\r\n                for (let i = 0; i < array.length; i++) {\r\n                    arrayCopy[i] = array[i];\r\n                }\r\n\r\n                array = arrayCopy;\r\n            }\r\n\r\n            let stringifiedArray = JSON.stringify(array);\r\n            stringifiedArray = stringifiedArray.split(\",\").join(\", \");\r\n            return stringifiedArray;\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n};\r\n\r\nPP.ConsoleVRWidget.AdditionalSetup = class ConsoleVRWidgetAdditionalSetup {\r\n    constructor() {\r\n        this.myHandedness = PP.ToolHandedness.NONE;\r\n        this.myOverrideBrowserConsole = false;\r\n        this.myShowOnStart = false;\r\n        this.myShowVisibilityButton = false;\r\n        this.myPulseOnNewMessage = PP.ConsoleVRWidget.PulseOnNewMessage.NEVER;\r\n        this.myPlaneMaterial = null;\r\n        this.myTextMaterial = null;\r\n    }\r\n};\r\n\r\nPP.ConsoleVRWidget.ConsoleFunction = {\r\n    INFO: 0,\r\n    WARN: 1,\r\n    ERROR: 2,\r\n    LOG: 3,\r\n    DEBUG: 4,\r\n    ASSERT: 5\r\n};\r\n\r\nPP.ConsoleVRWidget.Sender = {\r\n    BROWSER_CONSOLE: 0,\r\n    CONSOLE_VR: 1,\r\n    WINDOW: 2\r\n};\r\n\r\nPP.ConsoleVRWidget.PulseOnNewMessage = {\r\n    NEVER: 0,\r\n    ALWAYS: 1,\r\n    WHEN_HIDDEN: 2,\r\n};\r\n\r\nPP.ConsoleVRWidget.MessageType = {\r\n    INFO: 0,\r\n    WARN: 1,\r\n    ERROR: 2,\r\n    LOG: 3\r\n};\r\n\r\nPP.ConsoleVRWidget.Message = class ConsoleVRWidgetMessage {\r\n    constructor(messageType, messageLines) {\r\n        this.myType = messageType;\r\n        this.myLines = messageLines;\r\n\r\n        this._myOriginalText = messageLines.join(\"\\n\");\r\n\r\n        this._myMessagesCount = 1;\r\n    }\r\n\r\n    hasSameInfo(message) {\r\n        return this._myOriginalText == message._myOriginalText && this.myType == message.myType;\r\n    }\r\n\r\n    increaseCount() {\r\n        this._myMessagesCount += 1;\r\n\r\n        let countString = ((\"(x\").concat(this._myMessagesCount)).concat(\") \");\r\n\r\n        let text = this._myOriginalText.slice(0);\r\n        text = countString.concat(text);\r\n        this.myLines = text.split(\"\\n\");\r\n    }\r\n};", "PP.ConsoleVR = {\r\n    _myRealLog: console.log,\r\n    _myRealError: console.error,\r\n    _myRealWarn: console.warn,\r\n    _myRealInfo: console.info,\r\n    _myRealDebug: console.debug,\r\n    _myRealAssert: console.assert,\r\n    _myRealClear: console.clear,\r\n    _myForwardToBrowserConsole: true,\r\n\r\n    log: function (...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            this._myRealLog.apply(console, args);\r\n        }\r\n    },\r\n    error: function (...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            this._myRealError.apply(console, args);\r\n        }\r\n    },\r\n    warn: function (...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            this._myRealWarn.apply(console, args);\r\n        }\r\n    },\r\n    info: function (...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            this._myRealInfo.apply(console, args);\r\n        }\r\n    },\r\n    debug: function (...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            this._myRealDebug.apply(console, args);\r\n        }\r\n    },\r\n    assert: function (...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            this._myRealAssert.apply(console, args);\r\n        }\r\n    },\r\n    clear: function () {\r\n        if (this._myForwardToBrowserConsole) {\r\n            this._myRealClear.apply(console);\r\n        }\r\n    },\r\n    setForwardToBrowserConsole: function (forwardToBrowserConsole) {\r\n        this._myForwardToBrowserConsole = forwardToBrowserConsole;\r\n    },\r\n    isForwardToBrowserConsole: function () {\r\n        return this._myForwardToBrowserConsole;\r\n    }\r\n};", "WL.registerComponent('pp-console-vr', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['none', 'left', 'right'], default: 'none' },\r\n    _myOverrideBrowserConsole: { type: WL.Type.Bool, default: true },\r\n    _myShowOnStart: { type: WL.Type.Bool, default: false },\r\n    _myShowVisibilityButton: { type: WL.Type.Bool, default: false },\r\n    _myPulseOnNewMessage: { type: WL.Type.Enum, values: ['never', 'always', 'when hidden'], default: 'never' }\r\n}, {\r\n    init: function () {\r\n        this._myWidget = new PP.ConsoleVRWidget();\r\n\r\n        this._myStarted = false;\r\n    },\r\n    start: function () {\r\n        let additionalSetup = new PP.ConsoleVRWidget.AdditionalSetup();\r\n        additionalSetup.myHandedness = [null, 'left', 'right'][this._myHandedness];\r\n        additionalSetup.myOverrideBrowserConsole = this._myOverrideBrowserConsole;\r\n        additionalSetup.myShowOnStart = this._myShowOnStart;\r\n        additionalSetup.myShowVisibilityButton = this._myShowVisibilityButton;\r\n        additionalSetup.myPulseOnNewMessage = this._myPulseOnNewMessage;\r\n        additionalSetup.myPlaneMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        additionalSetup.myTextMaterial = PP.myDefaultResources.myMaterials.myText.clone();\r\n\r\n        this._myWidget.start(this.object, additionalSetup);\r\n\r\n        this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n        this._mySetVisibleNextUpdate = false;\r\n\r\n        this._myStarted = true;\r\n    },\r\n    update: function (dt) {\r\n        if (this._mySetVisibleNextUpdate) {\r\n            this._mySetVisibleNextUpdate = false;\r\n            this._myWidget.setVisible(false);\r\n            this._myWidget.setVisible(this._myWidgetVisibleBackup);\r\n        }\r\n\r\n        this._myWidget.update(dt);\r\n    },\r\n    onActivate() {\r\n        this._mySetVisibleNextUpdate = true;\r\n    },\r\n    onDeactivate() {\r\n        if (this._myStarted) {\r\n            this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n\r\n            this._myWidget.setVisible(false);\r\n        }\r\n    },\r\n});\r\n", "//Don't move inside easy_object_tuners folder, otherwise it won't resolve the parent class dependency\r\n\r\nPP.EasyObjectTuner = class EasyObjectTuner {\r\n    constructor(object, variableName, setAsDefault, useTuneTarget) {\r\n        this._myObject = object;\r\n        this._myUseTuneTarget = useTuneTarget;\r\n        this._mySetAsDefault = setAsDefault;\r\n\r\n        this._myEasyObject = this._myObject;\r\n        if (this._myUseTuneTarget) {\r\n            this._myEasyObject = PP.myEasyTuneTarget;\r\n        }\r\n        this._myPrevEasyObject = null;\r\n\r\n        let variableNamePrefix = this._getVariableNamePrefix();\r\n\r\n        if (variableName == \"\") {\r\n            this._myEasyTuneVariableName = variableNamePrefix.concat(this._myObject.objectId);\r\n        } else {\r\n            this._myEasyTuneVariableName = variableNamePrefix.concat(variableName);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        let easyTuneVariable = this._createEasyTuneVariable(this._myEasyTuneVariableName);\r\n\r\n        PP.myEasyTuneVariables.add(easyTuneVariable);\r\n        if (this._mySetAsDefault) {\r\n            PP.setEasyTuneWidgetActiveVariable(this._myEasyTuneVariableName);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (PP.myEasyTuneVariables.isActive(this._myEasyTuneVariableName)) {\r\n            if (this._myUseTuneTarget) {\r\n                this._myEasyObject = PP.myEasyTuneTarget;\r\n            }\r\n\r\n            if (this._myPrevEasyObject != this._myEasyObject) {\r\n                this._myPrevEasyObject = this._myEasyObject;\r\n                if (this._myEasyObject) {\r\n                    let value = this._getObjectValue(this._myEasyObject);\r\n                    PP.myEasyTuneVariables.set(this._myEasyTuneVariableName, value, true);\r\n                } else {\r\n                    let value = this._getDefaultValue();\r\n                    PP.myEasyTuneVariables.set(this._myEasyTuneVariableName, value, true);\r\n                }\r\n            }\r\n\r\n            if (this._myEasyObject) {\r\n                this._updateObjectValue(this._myEasyObject, PP.myEasyTuneVariables.get(this._myEasyTuneVariableName));\r\n            }\r\n        }\r\n    }\r\n\r\n    updateVariableValue(value) {\r\n        PP.myEasyTuneVariables.set(this._myEasyTuneVariableName, value);\r\n    }\r\n};", "WL.registerComponent(\"pp-easy-light-attenuation\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false }\r\n\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyLightAttenuation(this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    }\r\n});\r\n\r\nPP.EasyLightAttenuation = class EasyLightAttenuation extends PP.EasyObjectTuner {\r\n    constructor(object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = \"Light Attenuation \";\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneNumber(variableName, this._getDefaultValue(), 0.01, 3, 0, 1);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let attenuation = this._getLightAttenuation(object);\r\n        return attenuation;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return 0;\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let attenuation = value;\r\n\r\n        let light = object.pp_getComponent(\"light\");\r\n        if (light) {\r\n            light.color[3] = attenuation;\r\n        }\r\n    }\r\n\r\n    _getLightAttenuation(object) {\r\n        let attenuation = this._getDefaultValue();\r\n\r\n        let light = object.pp_getComponent(\"light\");\r\n        if (light) {\r\n            attenuation = light.color[3];\r\n        }\r\n\r\n        return attenuation;\r\n    }\r\n};", "WL.registerComponent(\"pp-easy-light-color\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _myColorModel: { type: WL.Type.Enum, values: ['rgb', 'hsv'] }\r\n\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyLightColor(this._myColorModel, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    }\r\n});\r\n\r\nPP.EasyLightColor = class EasyLightColor extends PP.EasyObjectTuner {\r\n    constructor(colorModel, object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n        this._myColorModel = colorModel;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Light RGB \";\r\n        } else {\r\n            nameFirstPart = \"Light HSV \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneIntArray(variableName, this._getDefaultValue(), 100, 0, 255);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let color = null;\r\n\r\n        let lightColor = this._getLightColor(object);\r\n        if (lightColor) {\r\n            if (this._myColorModel == 0) {\r\n                color = PP.ColorUtils.rgbCodeToHuman(lightColor);\r\n            } else {\r\n                color = PP.ColorUtils.hsvCodeToHuman(PP.ColorUtils.rgbToHsv(lightColor));\r\n            }\r\n        } else {\r\n            color = this._getDefaultValue();\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return PP.vec3_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let color = value;\r\n\r\n        if (this._myColorModel == 0) {\r\n            color = PP.ColorUtils.rgbHumanToCode(color);\r\n        } else {\r\n            color = PP.ColorUtils.hsvToRgb(PP.ColorUtils.hsvHumanToCode(color));\r\n        }\r\n\r\n        let light = object.pp_getComponent(\"light\");\r\n        if (light) {\r\n            light.color[0] = color[0];\r\n            light.color[1] = color[1];\r\n            light.color[2] = color[2];\r\n            light.color[3] = light.color[3];\r\n        }\r\n\r\n        if ((PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).isPressStart() && PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).myIsPressed) ||\r\n            (PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).isPressStart() && PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).myIsPressed)) {\r\n\r\n            let hsvColor = PP.ColorUtils.color1To255(PP.ColorUtils.rgbToHsv(color));\r\n            let rgbColor = PP.ColorUtils.color1To255(color);\r\n\r\n            console.log(\"RGB:\", rgbColor.vec_toString(0), \"- HSV:\", hsvColor.vec_toString(0));\r\n        }\r\n    }\r\n\r\n    _getLightColor(object) {\r\n        let color = null;\r\n        let light = object.pp_getComponent(\"light\");\r\n        if (light) {\r\n            color = light.color.slice(0, 3);\r\n        }\r\n\r\n        return color;\r\n    }\r\n};", "WL.registerComponent(\"pp-easy-mesh-color\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myColorModel: { type: WL.Type.Enum, values: ['rgb', 'hsv'], default: 'hsv' },\r\n    _myColorType: { type: WL.Type.Enum, values: ['color', 'diffuse color', 'ambient color', 'specular color', 'emissive color', 'fog color', 'ambient factor'], default: 'color' },\r\n\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyMeshColor(this._myColorModel, this._myColorType, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type, {\r\n            \"_myVariableName\": this._myVariableName,\r\n            \"_mySetAsDefault\": this._mySetAsDefault,\r\n            \"_myUseTuneTarget\": this._myUseTuneTarget,\r\n            \"_myColorModel\": this._myColorModel,\r\n            \"_myColorType\": this._myColorType,\r\n        });\r\n        clonedComponent.active = this.active;\r\n\r\n        return clonedComponent;\r\n    }\r\n});\r\n\r\nPP.EasyMeshColor = class EasyMeshColor extends PP.EasyObjectTuner {\r\n    constructor(colorModel, colorType, object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n        this._myColorModel = colorModel;\r\n        this._myColorType = colorType;\r\n        this._myColorVariableNames = ['color', 'diffuseColor', 'ambientColor', 'specularColor', 'emissiveColor', 'fogColor', 'ambientFactor',];\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Mesh RGB \";\r\n        } else {\r\n            nameFirstPart = \"Mesh HSV \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        if (this._myColorType == 6) {\r\n            return new PP.EasyTuneNumberArray(variableName, this._getDefaultValue(), 0.1, 3, 0, 1);\r\n        }\r\n        return new PP.EasyTuneIntArray(variableName, this._getDefaultValue(), 100, 0, 255);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let color = null;\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            if (this._myColorType != 6) {\r\n                color = meshMaterial[this._myColorVariableNames[this._myColorType]].pp_clone();\r\n\r\n                if (this._myColorModel == 0) {\r\n                    color = PP.ColorUtils.rgbCodeToHuman(color);\r\n                } else {\r\n                    color = PP.ColorUtils.hsvCodeToHuman(PP.ColorUtils.rgbToHsv(color));\r\n                }\r\n            } else {\r\n                color = [meshMaterial[this._myColorVariableNames[this._myColorType]]];\r\n            }\r\n        } else {\r\n            color = this._getDefaultValue();\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        if (this._myColorType == 6) {\r\n            return [0];\r\n        }\r\n\r\n        return PP.vec4_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let color = value;\r\n\r\n        if (this._myColorType != 6) {\r\n            if (this._myColorModel == 0) {\r\n                color = PP.ColorUtils.rgbHumanToCode(color);\r\n            } else {\r\n                color = PP.ColorUtils.hsvToRgb(PP.ColorUtils.hsvHumanToCode(color));\r\n            }\r\n        }\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            meshMaterial[this._myColorVariableNames[this._myColorType]] = color;\r\n        }\r\n\r\n        if (this._myColorType != 6) {\r\n            if ((PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).isPressStart() && PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).myIsPressed) ||\r\n                (PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).isPressStart() && PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).myIsPressed)) {\r\n\r\n                let hsvColor = PP.ColorUtils.color1To255(PP.ColorUtils.rgbToHsv(color));\r\n                let rgbColor = PP.ColorUtils.color1To255(color);\r\n\r\n                console.log(\"RGB:\", rgbColor.vec_toString(0), \"- HSV:\", hsvColor.vec_toString(0));\r\n            }\r\n        }\r\n    }\r\n\r\n    _getMeshMaterial(object) {\r\n        let material = null;\r\n        let mesh = object.pp_getComponentHierarchy(\"mesh\");\r\n        if (mesh) {\r\n            material = mesh.material;\r\n        }\r\n\r\n        return material;\r\n    }\r\n};", "WL.registerComponent(\"pp-easy-mesh-ambient-factor\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyMeshAmbientFactor(this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type, {\r\n            \"_myVariableName\": this._myVariableName,\r\n            \"_mySetAsDefault\": this._mySetAsDefault,\r\n            \"_myUseTuneTarget\": this._myUseTuneTarget\r\n        });\r\n        clonedComponent.active = this.active;\r\n\r\n        return clonedComponent;\r\n    }\r\n});\r\n\r\nPP.EasyMeshAmbientFactor = class EasyMeshAmbientFactor extends PP.EasyObjectTuner {\r\n    constructor(object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Mesh AF \";\r\n        } else {\r\n            nameFirstPart = \"Mesh AF \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneNumber(variableName, this._getDefaultValue(), 0.1, 3, 0, 1);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let ambientFactor = null;\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            ambientFactor = meshMaterial.ambientFactor;\r\n        } else {\r\n            ambientFactor = this._getDefaultValue();\r\n        }\r\n\r\n        return ambientFactor;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return 0;\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let ambientFactor = value;\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            meshMaterial.ambientFactor = ambientFactor;\r\n        }\r\n    }\r\n\r\n    _getMeshMaterial(object) {\r\n        let material = null;\r\n        let mesh = object.pp_getComponentHierarchy(\"mesh\");\r\n        if (mesh) {\r\n            material = mesh.material;\r\n        }\r\n\r\n        return material;\r\n    }\r\n};", "WL.registerComponent(\"pp-easy-scale\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _myIsLocal: { type: WL.Type.Bool, default: false },\r\n    _myScaleAsOne: { type: WL.Type.Bool, default: true }, // Edit all scale values together\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyScale(this._myIsLocal, this._myScaleAsOne, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    }\r\n});\r\n\r\nPP.EasyScale = class EasyScale extends PP.EasyObjectTuner {\r\n    constructor(isLocal, scaleAsOne, object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n        this._myIsLocal = isLocal;\r\n        this._myScaleAsOne = scaleAsOne;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        return \"Scale \";\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneNumberArray(variableName, this._getDefaultValue(), 1, 3, 0.001, null, this._myScaleAsOne);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        return this._myIsLocal ? object.pp_getScaleLocal() : object.pp_getScaleWorld();\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return PP.vec3_create(1, 1, 1);\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        if (this._myIsLocal) {\r\n            object.pp_setScaleLocal(value);\r\n        } else {\r\n            object.pp_setScaleWorld(value);\r\n        }\r\n    }\r\n};", "WL.registerComponent(\"pp-easy-set-tune-target-child-number\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myEasyTuneVariableName = \"Target Child \";\r\n\r\n        if (this._myVariableName == \"\") {\r\n            this._myEasyTuneVariableName = this._myEasyTuneVariableName.concat(this.object.objectId);\r\n        } else {\r\n            this._myEasyTuneVariableName = this._myEasyTuneVariableName.concat(this._myVariableName);\r\n        }\r\n\r\n        let childrenCount = this.object.pp_getChildren().length;\r\n        let min = 1;\r\n        let max = childrenCount;\r\n        if (childrenCount == 0) {\r\n            min = 0;\r\n            max = 0;\r\n        }\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneInt(this._myEasyTuneVariableName, 0, 10, min, max));\r\n        if (this._mySetAsDefault) {\r\n            PP.setEasyTuneWidgetActiveVariable(this._myEasyTuneVariableName);\r\n        }\r\n\r\n        this._myCurrentChildIndex = -1;\r\n        this._myCurrentChildrenCount = childrenCount;\r\n    },\r\n    update: function () {\r\n        if (PP.myEasyTuneVariables.isActive(this._myEasyTuneVariableName)) {\r\n            let childrenCount = this.object.pp_getChildren().length;\r\n            if (childrenCount != this._myCurrentChildrenCount) {\r\n                this._myCurrentChildrenCount = childrenCount;\r\n\r\n                let min = 1;\r\n                let max = childrenCount;\r\n                if (childrenCount == 0) {\r\n                    min = 0;\r\n                    max = 0;\r\n                }\r\n\r\n                let easyTuneVariable = PP.myEasyTuneVariables.getEasyTuneVariable(this._myEasyTuneVariableName);\r\n                easyTuneVariable.setMin(min);\r\n                easyTuneVariable.setMax(max);\r\n            }\r\n\r\n            let childIndex = PP.myEasyTuneVariables.get(this._myEasyTuneVariableName);\r\n            if (childIndex != this._myCurrentChildIndex) {\r\n                if (childIndex == 0 && this._myCurrentChildIndex != -1) {\r\n                    PP.myEasyTuneTarget = null;\r\n                } else if (childIndex > 0) {\r\n                    PP.myEasyTuneTarget = this.object.pp_getChildren()[childIndex - 1];\r\n                }\r\n\r\n                this._myCurrentChildIndex = childIndex;\r\n            }\r\n        }\r\n    }\r\n});", "WL.registerComponent(\"pp-easy-set-tune-target-grab\", {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myGrabber = this.object.pp_getComponent(\"pp-grabber-hand\");\r\n    },\r\n    update: function () {\r\n    },\r\n    _onRelease: function (grabber, grabbable) {\r\n        PP.myEasyTuneTarget = grabbable.object;\r\n    },\r\n    _onGrab: function (grabber, grabbable) {\r\n        //PP.myEasyTuneTarget = null;\r\n    },\r\n    onActivate() {\r\n        this._myGrabber.registerGrabEventListener(this, this._onGrab.bind(this));\r\n        this._myGrabber.registerThrowEventListener(this, this._onRelease.bind(this));\r\n    },\r\n    onDeactivate() {\r\n        this._myGrabber.unregisterGrabEventListener(this);\r\n        this._myGrabber.unregisterThrowEventListener(this);\r\n    }\r\n});", "WL.registerComponent(\"pp-easy-transform\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _myIsLocal: { type: WL.Type.Bool, default: false },\r\n    _myScaleAsOne: { type: WL.Type.Bool, default: true }, // Edit all scale values together\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyTransform(this._myIsLocal, this._myScaleAsOne, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type, {\r\n            \"_myVariableName\": this._myVariableName,\r\n            \"_mySetAsDefault\": this._mySetAsDefault,\r\n            \"_myUseTuneTarget\": this._myUseTuneTarget,\r\n            \"_myIsLocal\": this._myIsLocal,\r\n            \"_myUseTuneTarget\": this._myUseTuneTarget,\r\n        });\r\n        clonedComponent.active = this.active;\r\n\r\n        return clonedComponent;\r\n    }\r\n});\r\n\r\nPP.EasyTransform = class EasyTransform extends PP.EasyObjectTuner {\r\n    constructor(isLocal, scaleAsOne, object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n        this._myIsLocal = isLocal;\r\n        this._myScaleAsOne = scaleAsOne;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        return \"Transform \";\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneTransform(variableName, this._getDefaultValue(), this._myScaleAsOne);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        return this._myIsLocal ? object.pp_getTransformLocal() : object.pp_getTransformWorld();\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return PP.mat4_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        if (this._myIsLocal) {\r\n            object.pp_setTransformLocal(value);\r\n        } else {\r\n            object.pp_setTransformWorld(value);\r\n        }\r\n    }\r\n};", "PP.EasyTuneBaseWidgetParams = class EasyTuneBaseWidgetParams {\r\n    constructor() {\r\n        this.myVariablesImportCallback = null;   // Signature: callback()\r\n        this.myVariablesExportCallback = null;   // Signature: callback()\r\n    }\r\n};\r\n\r\nPP.EasyTuneBaseWidget = class EasyTuneBaseWidget {\r\n\r\n    constructor(params) {\r\n        this._mySetup = null;\r\n        this._myUI = null;\r\n\r\n        this._myParams = params;\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myVariable = null;\r\n\r\n        this._myIsVisible = true;\r\n\r\n        this._myScrollVariableRequestCallbacks = new Map();     // Signature: callback(scrollAmount)\r\n\r\n        this._myAppendToVariableName = \"\";\r\n\r\n        this._myScrollVariableActive = false;\r\n        this._myScrollDirection = 0;\r\n        this._myScrollVariableTimer = 0;\r\n        this._myHasScrolled = false;\r\n\r\n        this._myResetImportLabelTimer = new PP.Timer(0, false);\r\n        this._myResetExportLabelTimer = new PP.Timer(0, false);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (visible) {\r\n            this._refreshUI();\r\n        }\r\n\r\n        this._myUI.setVisible(visible);\r\n\r\n        this._myIsVisible = visible;\r\n    }\r\n\r\n    setEasyTuneVariable(variable, appendToVariableName) {\r\n        this._myVariable = variable;\r\n\r\n        if ((typeof appendToVariableName) !== 'undefined') {\r\n            this._myAppendToVariableName = appendToVariableName;\r\n        } else {\r\n            this._myAppendToVariableName = \"\";\r\n        }\r\n\r\n        this._setEasyTuneVariableHook();\r\n\r\n        this._refreshUI();\r\n    }\r\n\r\n    isScrollVariableActive() {\r\n        return this._myScrollVariableActive;\r\n    }\r\n\r\n    getScrollVariableDirection() {\r\n        return this._myScrollDirection;\r\n    }\r\n\r\n    setScrollVariableActive(active, scrollDirection) {\r\n        this._myScrollVariableActive = active;\r\n        this._myScrollDirection = scrollDirection;\r\n        this._myScrollVariableTimer = this._mySetup.myScrollVariableDelay;\r\n        this._myHasScrolled = false;\r\n    }\r\n\r\n    getWidget() {\r\n        return this;\r\n    }\r\n\r\n    syncWidget(otherEasyTuneWidget) {\r\n        if (otherEasyTuneWidget != null) {\r\n            if (otherEasyTuneWidget._myResetImportLabelTimer.isRunning()) {\r\n                this._myResetImportLabelTimer.start(otherEasyTuneWidget._myResetImportLabelTimer.getTimeLeft());\r\n            } else {\r\n                this._myResetImportLabelTimer.reset();\r\n            }\r\n\r\n            if (otherEasyTuneWidget._myResetExportLabelTimer.isRunning()) {\r\n                this._myResetExportLabelTimer.start(otherEasyTuneWidget._myResetExportLabelTimer.getTimeLeft());\r\n            } else {\r\n                this._myResetExportLabelTimer.reset();\r\n            }\r\n\r\n            this._myUI.myImportButtonTextComponent.text = otherEasyTuneWidget._myUI.myImportButtonTextComponent.text;\r\n            this._myUI.myExportButtonTextComponent.text = otherEasyTuneWidget._myUI.myExportButtonTextComponent.text;\r\n\r\n            this.setScrollVariableActive(otherEasyTuneWidget.isScrollVariableActive(), otherEasyTuneWidget.getScrollVariableDirection());\r\n        } else {\r\n            this._myResetImportLabelTimer.reset();\r\n            this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportButtonText;\r\n\r\n            this._myResetExportLabelTimer.reset();\r\n            this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportButtonText;\r\n        }\r\n    }\r\n\r\n    onImportSuccess() {\r\n        this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportSuccessButtonText;\r\n        this._myResetImportLabelTimer.start(this._mySetup.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    onImportFailure() {\r\n        this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportFailureButtonText;\r\n        this._myResetImportLabelTimer.start(this._mySetup.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    onExportSuccess() {\r\n        this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportSuccessButtonText;\r\n        this._myResetExportLabelTimer.start(this._mySetup.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    onExportFailure() {\r\n        this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportFailureButtonText;\r\n        this._myResetExportLabelTimer.start(this._mySetup.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    registerScrollVariableRequestEventListener(id, callback) {\r\n        this._myScrollVariableRequestCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterScrollVariableRequestEventListener(id) {\r\n        this._myScrollVariableRequestCallbacks.delete(id);\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._mySetup.build();\r\n\r\n        this._myResetImportLabelTimer.setDuration(this._mySetup.myImportExportResetLabelSeconds);\r\n        this._myResetExportLabelTimer.setDuration(this._mySetup.myImportExportResetLabelSeconds);\r\n\r\n        this._myUI.build(parentObject, this._mySetup, additionalSetup);\r\n        this._myUI.setImportExportButtonsActive(this._myAdditionalSetup.myEnableVariablesImportExportButtons);\r\n\r\n        this._startHook(parentObject, additionalSetup);\r\n\r\n        this._addListeners();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._isActive()) {\r\n            this._updateHook(dt);\r\n\r\n            this._updateScrollVariable(dt);\r\n\r\n            this._updateImportExportLabel(dt);\r\n        }\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _setEasyTuneVariableHook() {\r\n    }\r\n\r\n    _refreshUIHook() {\r\n    }\r\n\r\n    _startHook(parentObject, additionalSetup) {\r\n    }\r\n\r\n    _addListenersHook() {\r\n    }\r\n\r\n    _updateHook(dt) {\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _refreshUI() {\r\n        if (this._myVariable) {\r\n            if (this._myVariable.myName != null) {\r\n                this._myUI.myVariableLabelTextComponent.text = this._myVariable.myName.concat(this._myAppendToVariableName);\r\n            } else {\r\n                let name = \"Unknown\";\r\n                this._myUI.myVariableLabelTextComponent.text = name.concat(this._myAppendToVariableName);\r\n            }\r\n\r\n            this._refreshUIHook();\r\n        }\r\n    }\r\n\r\n    _updateScrollVariable(dt) {\r\n        if (this._myScrollVariableActive) {\r\n            if (this._myScrollVariableTimer <= 0) {\r\n                this._scrollVariableRequest(this._myScrollDirection);\r\n                this._myScrollVariableTimer = this._mySetup.myScrollVariableDelay;\r\n                this._myHasScrolled = true;\r\n            } else {\r\n                this._myScrollVariableTimer -= dt;\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateImportExportLabel(dt) {\r\n        if (this._myResetImportLabelTimer.isRunning(dt)) {\r\n            this._myResetImportLabelTimer.update(dt);\r\n            if (this._myResetImportLabelTimer.isDone()) {\r\n                this._myResetImportLabelTimer.reset();\r\n                this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportButtonText;\r\n            }\r\n        }\r\n\r\n        if (this._myResetExportLabelTimer.isRunning(dt)) {\r\n            this._myResetExportLabelTimer.update(dt);\r\n            if (this._myResetExportLabelTimer.isDone()) {\r\n                this._myResetExportLabelTimer.reset();\r\n                this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportButtonText;\r\n            }\r\n        }\r\n    }\r\n\r\n    _isActive() {\r\n        return this._myIsVisible && this._myVariable;\r\n    }\r\n\r\n    _addListeners() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myNextButtonCursorTargetComponent.addDownFunction(this._setScrollVariableActive.bind(this, true, 1, false));\r\n        ui.myNextButtonCursorTargetComponent.addDownOnHoverFunction(this._setScrollVariableActive.bind(this, true, 1, false));\r\n        ui.myNextButtonCursorTargetComponent.addUpFunction(this._setScrollVariableActive.bind(this, false, 0, false));\r\n        ui.myNextButtonCursorTargetComponent.addUpWithNoDownFunction(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myNextButtonCursorTargetComponent.addUnHoverFunction(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myNextButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myNextButtonBackgroundComponent.material));\r\n        ui.myNextButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myNextButtonBackgroundComponent.material));\r\n\r\n        ui.myPreviousButtonCursorTargetComponent.addDownFunction(this._setScrollVariableActive.bind(this, true, -1, false));\r\n        ui.myPreviousButtonCursorTargetComponent.addDownOnHoverFunction(this._setScrollVariableActive.bind(this, true, -1, false));\r\n        ui.myPreviousButtonCursorTargetComponent.addUpFunction(this._setScrollVariableActive.bind(this, false, 0, false));\r\n        ui.myPreviousButtonCursorTargetComponent.addUpWithNoDownFunction(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myPreviousButtonCursorTargetComponent.addUnHoverFunction(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myPreviousButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\r\n        ui.myPreviousButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\r\n\r\n        ui.myImportButtonCursorTargetComponent.addUpFunction(this._importVariables.bind(this));\r\n        ui.myImportButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myImportButtonBackgroundComponent.material));\r\n        ui.myImportButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myImportButtonBackgroundComponent.material));\r\n\r\n        ui.myExportButtonCursorTargetComponent.addUpFunction(this._exportVariables.bind(this));\r\n        ui.myExportButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myExportButtonBackgroundComponent.material));\r\n        ui.myExportButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myExportButtonBackgroundComponent.material));\r\n\r\n        this._addListenersHook();\r\n    }\r\n\r\n    _setScrollVariableActive(active, scrollDirection, skipForceScroll) {\r\n        if (this._isActive() || !active) {\r\n            let forceScroll = !active && !this._myHasScrolled && !skipForceScroll;\r\n            let oldScrollDirection = this._myScrollDirection;\r\n\r\n            this.setScrollVariableActive(active, scrollDirection);\r\n\r\n            if (forceScroll) {\r\n                this._scrollVariableRequest(oldScrollDirection);\r\n            }\r\n        }\r\n    }\r\n\r\n    _scrollVariableRequest(amount) {\r\n        if (this._isActive() && amount != 0) {\r\n            for (let callback of this._myScrollVariableRequestCallbacks.values()) {\r\n                callback(amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    _genericHover(material) {\r\n        material.color = this._mySetup.myButtonHoverColor;\r\n    }\r\n\r\n    _genericUnHover(material) {\r\n        material.color = this._mySetup.myBackgroundColor;\r\n    }\r\n\r\n    _importVariables() {\r\n        if (this._myUI.myImportButtonTextComponent.text == this._mySetup.myImportButtonText) {\r\n            this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportingButtonText;\r\n            this._myResetImportLabelTimer.reset();\r\n\r\n            this._myParams.myVariablesImportCallback();\r\n        }\r\n    }\r\n\r\n    _exportVariables() {\r\n        if (this._myUI.myExportButtonTextComponent.text == this._mySetup.myExportButtonText) {\r\n            this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportingButtonText;\r\n            this._myResetExportLabelTimer.reset();\r\n\r\n            this._myParams.myVariablesExportCallback();\r\n        }\r\n    }\r\n};", "\r\nPP.EasyTuneBaseWidgetUI = class EasyTuneBaseWidgetUI {\r\n\r\n    build(parentObject, setup, additionalSetup) {\r\n        this._myParentObject = parentObject;\r\n        this._mySetup = setup;\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myImportExportButtonsActive = true;\r\n\r\n        this._myPlaneMesh = PP.myDefaultResources.myMeshes.myPlane;\r\n\r\n        this._buildHook();\r\n\r\n        this._createSkeleton();\r\n        this._setTransforms();\r\n        this._addComponents();\r\n\r\n        this._setTransformForNonVR();\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.myPivotObject.pp_setActiveHierarchy(visible);\r\n\r\n        if (visible) {\r\n            this.setImportExportButtonsActive(this._myImportExportButtonsActive);\r\n        }\r\n\r\n        this._setVisibleHook(visible);\r\n    }\r\n\r\n    setImportExportButtonsActive(active) {\r\n        this._myImportExportButtonsActive = active;\r\n\r\n        this.myImportExportPanel.pp_setActiveHierarchy(this._myImportExportButtonsActive);\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _buildHook() {\r\n    }\r\n\r\n    _setVisibleHook(visible) {\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n    }\r\n\r\n    _setTransformHook() {\r\n    }\r\n\r\n    _addComponentsHook() {\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    // Skeleton\r\n\r\n    _createSkeleton() {\r\n        this.myPivotObject = WL.scene.addObject(this._myParentObject);\r\n\r\n        this.myBackPanel = WL.scene.addObject(this.myPivotObject);\r\n        this.myBackBackground = WL.scene.addObject(this.myBackPanel);\r\n\r\n        // Display\r\n\r\n        this.myDisplayPanel = WL.scene.addObject(this.myPivotObject);\r\n\r\n        this.myVariableLabelPanel = WL.scene.addObject(this.myDisplayPanel);\r\n        this.myVariableLabelText = WL.scene.addObject(this.myVariableLabelPanel);\r\n        this.myVariableLabelCursorTarget = WL.scene.addObject(this.myVariableLabelPanel);\r\n\r\n        // Next/Previous\r\n\r\n        this.myNextButtonPanel = WL.scene.addObject(this.myVariableLabelPanel);\r\n        this.myNextButtonBackground = WL.scene.addObject(this.myNextButtonPanel);\r\n        this.myNextButtonText = WL.scene.addObject(this.myNextButtonPanel);\r\n        this.myNextButtonCursorTarget = WL.scene.addObject(this.myNextButtonPanel);\r\n\r\n        this.myPreviousButtonPanel = WL.scene.addObject(this.myVariableLabelPanel);\r\n        this.myPreviousButtonBackground = WL.scene.addObject(this.myPreviousButtonPanel);\r\n        this.myPreviousButtonText = WL.scene.addObject(this.myPreviousButtonPanel);\r\n        this.myPreviousButtonCursorTarget = WL.scene.addObject(this.myPreviousButtonPanel);\r\n\r\n        // Import/Export\r\n\r\n        this.myImportExportPanel = WL.scene.addObject(this.myPivotObject);\r\n\r\n        this.myImportButtonPanel = WL.scene.addObject(this.myImportExportPanel);\r\n        this.myImportButtonBackground = WL.scene.addObject(this.myImportButtonPanel);\r\n        this.myImportButtonText = WL.scene.addObject(this.myImportButtonPanel);\r\n        this.myImportButtonCursorTarget = WL.scene.addObject(this.myImportButtonPanel);\r\n\r\n        this.myExportButtonPanel = WL.scene.addObject(this.myImportExportPanel);\r\n        this.myExportButtonBackground = WL.scene.addObject(this.myExportButtonPanel);\r\n        this.myExportButtonText = WL.scene.addObject(this.myExportButtonPanel);\r\n        this.myExportButtonCursorTarget = WL.scene.addObject(this.myExportButtonPanel);\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCursorTarget = WL.scene.addObject(this.myPivotObject);\r\n\r\n        this._createSkeletonHook();\r\n    }\r\n\r\n    // Transforms\r\n\r\n    _setTransforms() {\r\n        this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectPositions[this._myAdditionalSetup.myHandedness]);\r\n\r\n        this.myBackPanel.setTranslationLocal(this._mySetup.myBackPanelPosition);\r\n        this.myBackBackground.scale(this._mySetup.myBackBackgroundScale);\r\n\r\n        // Display\r\n        this.myDisplayPanel.setTranslationLocal(this._mySetup.myDisplayPanelPosition);\r\n\r\n        this.myVariableLabelPanel.setTranslationLocal(this._mySetup.myVariableLabelPanelPosition);\r\n        this.myVariableLabelText.scale(this._mySetup.myVariableLabelTextScale);\r\n        this.myVariableLabelCursorTarget.setTranslationLocal(this._mySetup.myVariableLabelCursorTargetPosition);\r\n\r\n        // Next/Previous\r\n\r\n        this.myNextButtonPanel.setTranslationLocal(this._mySetup.myRightSideButtonPosition);\r\n        this.myNextButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myNextButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myNextButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myNextButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myPreviousButtonPanel.setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\r\n        this.myPreviousButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myPreviousButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myPreviousButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myPreviousButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        // Import/Export\r\n\r\n        this.myImportExportPanel.setTranslationLocal(this._mySetup.myImportExportPanelPosition);\r\n\r\n        this.myImportButtonPanel.setTranslationLocal(this._mySetup.myImportButtonPosition);\r\n        this.myImportButtonBackground.scale(this._mySetup.myImportExportButtonBackgroundScale);\r\n        this.myImportButtonText.setTranslationLocal(this._mySetup.myImportExportButtonTextPosition);\r\n        this.myImportButtonText.scale(this._mySetup.myImportExportButtonTextScale);\r\n        this.myImportButtonCursorTarget.setTranslationLocal(this._mySetup.myImportExportButtonCursorTargetPosition);\r\n\r\n        this.myExportButtonPanel.setTranslationLocal(this._mySetup.myExportButtonPosition);\r\n        this.myExportButtonBackground.scale(this._mySetup.myImportExportButtonBackgroundScale);\r\n        this.myExportButtonText.setTranslationLocal(this._mySetup.myImportExportButtonTextPosition);\r\n        this.myExportButtonText.scale(this._mySetup.myImportExportButtonTextScale);\r\n        this.myExportButtonCursorTarget.setTranslationLocal(this._mySetup.myImportExportButtonCursorTargetPosition);\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCursorTarget.setTranslationLocal(this._mySetup.myPointerCursorTargetPosition);\r\n\r\n        this._setTransformHook();\r\n    }\r\n\r\n    // Components\r\n\r\n    _addComponents() {\r\n        this.myBackBackgroundComponent = this.myBackBackground.addComponent('mesh');\r\n        this.myBackBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myBackBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myBackBackgroundComponent.material.color = this._mySetup.myBackBackgroundColor;\r\n\r\n        // Display\r\n\r\n        this.myVariableLabelTextComponent = this.myVariableLabelText.addComponent('text');\r\n        this._setupTextComponent(this.myVariableLabelTextComponent);\r\n        this.myVariableLabelTextComponent.text = \" \";\r\n\r\n        this.myVariableLabelCursorTargetComponent = this.myVariableLabelCursorTarget.addComponent('cursor-target');\r\n        this.myVariableLabelCollisionComponent = this.myVariableLabelCursorTarget.addComponent('collision');\r\n        this.myVariableLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myVariableLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myVariableLabelCollisionComponent.extents = this._mySetup.myVariableLabelCollisionExtents;\r\n\r\n        // Next/Previous\r\n\r\n        this.myNextButtonBackgroundComponent = this.myNextButtonBackground.addComponent('mesh');\r\n        this.myNextButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myNextButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myNextButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myNextButtonTextComponent = this.myNextButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myNextButtonTextComponent);\r\n        this.myNextButtonTextComponent.text = this._mySetup.myNextButtonText;\r\n\r\n        this.myNextButtonCursorTargetComponent = this.myNextButtonCursorTarget.addComponent('cursor-target');\r\n        this.myNextButtonCollisionComponent = this.myNextButtonCursorTarget.addComponent('collision');\r\n        this.myNextButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myNextButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myNextButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myPreviousButtonBackgroundComponent = this.myPreviousButtonBackground.addComponent('mesh');\r\n        this.myPreviousButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPreviousButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPreviousButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPreviousButtonTextComponent = this.myPreviousButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myPreviousButtonTextComponent);\r\n        this.myPreviousButtonTextComponent.text = this._mySetup.myPreviousButtonText;\r\n\r\n        this.myPreviousButtonCursorTargetComponent = this.myPreviousButtonCursorTarget.addComponent('cursor-target');\r\n        this.myPreviousButtonCollisionComponent = this.myPreviousButtonCursorTarget.addComponent('collision');\r\n        this.myPreviousButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPreviousButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPreviousButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        // Import/Export\r\n\r\n        this.myImportButtonBackgroundComponent = this.myImportButtonBackground.addComponent('mesh');\r\n        this.myImportButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myImportButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myImportButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myImportButtonTextComponent = this.myImportButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myImportButtonTextComponent);\r\n        this.myImportButtonTextComponent.text = this._mySetup.myImportButtonText;\r\n\r\n        this.myImportButtonCursorTargetComponent = this.myImportButtonCursorTarget.addComponent('cursor-target');\r\n        this.myImportButtonCollisionComponent = this.myImportButtonCursorTarget.addComponent('collision');\r\n        this.myImportButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myImportButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myImportButtonCollisionComponent.extents = this._mySetup.myImportExportButtonCollisionExtents;\r\n\r\n        this.myExportButtonBackgroundComponent = this.myExportButtonBackground.addComponent('mesh');\r\n        this.myExportButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myExportButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myExportButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myExportButtonTextComponent = this.myExportButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myExportButtonTextComponent);\r\n        this.myExportButtonTextComponent.text = this._mySetup.myExportButtonText;\r\n\r\n        this.myExportButtonCursorTargetComponent = this.myExportButtonCursorTarget.addComponent('cursor-target');\r\n        this.myExportButtonCollisionComponent = this.myExportButtonCursorTarget.addComponent('collision');\r\n        this.myExportButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myExportButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myExportButtonCollisionComponent.extents = this._mySetup.myImportExportButtonCollisionExtents;\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCollisionComponent = this.myPointerCursorTarget.addComponent('collision');\r\n        this.myPointerCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPointerCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPointerCollisionComponent.extents = this._mySetup.myPointerCollisionExtents;\r\n\r\n        this._addComponentsHook();\r\n    }\r\n\r\n    _setupTextComponent(textComponent) {\r\n        textComponent.alignment = this._mySetup.myTextAlignment;\r\n        textComponent.justification = this._mySetup.myTextJustification;\r\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\r\n        textComponent.material.color = this._mySetup.myTextColor;\r\n        textComponent.text = \"\";\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        this._setTransformForVR();\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._setTransformForNonVR();\r\n    }\r\n\r\n    _setTransformForVR() {\r\n        this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectPositions[this._myAdditionalSetup.myHandedness]);\r\n    }\r\n\r\n    _setTransformForNonVR() {\r\n        this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectPositions[PP.ToolHandedness.NONE]);\r\n    }\r\n};", "PP.EasyTuneBaseWidgetSetup = class EasyTuneBaseWidgetSetup {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    build() {\r\n        this._initializeBuildSetup();\r\n        this._initializeRuntimeSetup();\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _getBackPanelMaxY() {\r\n        return this.myDisplayPanelPosition[1] + this.myVariableLabelPanelPosition[1] + this.mySideButtonBackgroundScale[1] + this._mySideButtonDistanceFromBorder * 1.25;\r\n    }\r\n\r\n    _getBackPanelMinY() {\r\n        return this.myDisplayPanelPosition[1] - this._mySideButtonDistanceFromBorder * 1.25 - this.mySideButtonBackgroundScale[1];\r\n    }\r\n\r\n    _getBackPanelMaxX() {\r\n        return this._mySideButtonPanelHalfWidth\r\n    }\r\n\r\n    _getBackPanelMinX() {\r\n        return -this._mySideButtonPanelHalfWidth;\r\n    }\r\n\r\n    // small Z offset to avoid glitching with other widgets\r\n    _getPivotZOffset() {\r\n        return 0;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n    }\r\n\r\n    _initializeRuntimeSetupHook() {\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _initializeBuildSetup() {\r\n        // General\r\n\r\n        this.myBackgroundColor = [46 / 255, 46 / 255, 46 / 255, 1];\r\n\r\n        this.myCursorTargetCollisionCollider = WL.Collider.Box;\r\n        this.myCursorTargetCollisionGroup = 7;\r\n        this.myCursorTargetCollisionThickness = 0.001;\r\n\r\n        this.myDefaultTextColor = [255 / 255, 255 / 255, 255 / 255, 1];\r\n\r\n        this.myTextAlignment = WL.Alignment.Center;\r\n        this.myTextJustification = WL.Justification.Middle;\r\n        this.myTextColor = this.myDefaultTextColor;\r\n\r\n        this.myLabelTextScale = PP.vec3_create(0.19, 0.19, 0.19);\r\n        this.myButtonTextScale = PP.vec3_create(0.18, 0.18, 0.18);\r\n\r\n        this._myPanelZOffset = 0.01;\r\n        this._myColliderZOffset = 0.017;\r\n        this._mySideButtonDistanceFromBorder = 0.0125;\r\n        this._mySideButtonPanelHalfWidth = 0.2;\r\n\r\n        // Pivot\r\n\r\n        this.myPivotObjectPositions = [];\r\n        this.myPivotObjectPositions[PP.ToolHandedness.NONE] = PP.vec3_create(0, 0, this._getPivotZOffset());\r\n        this.myPivotObjectPositions[PP.ToolHandedness.LEFT] = PP.vec3_create(-0.04, 0.02, this._getPivotZOffset());\r\n        this.myPivotObjectPositions[PP.ToolHandedness.RIGHT] = PP.vec3_create(-0.08, 0.02, this._getPivotZOffset());\r\n\r\n        this.mySideButtonBackgroundScale = PP.vec3_create(0.015, 0.015, 1);\r\n        this.mySideButtonTextScale = this.myButtonTextScale;\r\n        this.mySideButtonTextPosition = PP.vec3_create(0, 0, 0.007);\r\n\r\n        this.mySideButtonCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.mySideButtonCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.mySideButtonCollisionExtents = this.mySideButtonBackgroundScale.slice(0);\r\n        this.mySideButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myLeftSideButtonPosition = PP.vec3_create(0, 0, -0.00001);\r\n        this.myLeftSideButtonPosition[0] = -this._mySideButtonPanelHalfWidth + this.mySideButtonBackgroundScale[0] + this._mySideButtonDistanceFromBorder;\r\n\r\n        this.myRightSideButtonPosition = PP.vec3_create(0, 0, -0.00001);\r\n        this.myRightSideButtonPosition[0] = -this.myLeftSideButtonPosition[0];\r\n\r\n        // Display\r\n\r\n        this.myDisplayPanelPosition = PP.vec3_create(0, 0.1, 0);\r\n\r\n        this.myVariableLabelPanelPosition = PP.vec3_create(0, 0.025, this._myPanelZOffset);\r\n        this.myVariableLabelTextScale = this.myLabelTextScale;\r\n\r\n        this.myVariableLabelCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myVariableLabelCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myVariableLabelCollisionExtents = PP.vec3_create(0.065, 0.0175, 1);\r\n        this.myVariableLabelCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myNextButtonText = \">\";\r\n        this.myPreviousButtonText = \"<\";\r\n\r\n        this._initializeBuildSetupHook();\r\n\r\n        // Background\r\n\r\n        {\r\n            let maxX = this._getBackPanelMaxX();\r\n            let minX = this._getBackPanelMinX();\r\n            let maxY = this._getBackPanelMaxY();\r\n            let minY = this._getBackPanelMinY();\r\n\r\n            this.myBackPanelPosition = [(maxX + minX) / 2, (maxY + minY) / 2, 0];\r\n            this.myBackBackgroundScale = [(maxX - minX) / 2, (maxY - minY) / 2, 1];\r\n\r\n            this.myBackBackgroundColor = [70 / 255, 70 / 255, 70 / 255, 1];\r\n        }\r\n\r\n        // Import Export\r\n\r\n        this.myImportExportButtonBackgroundScale = PP.vec3_create(0.04, 0.02, 1);\r\n        this.myImportExportButtonTextScale = this.myButtonTextScale;\r\n        this.myImportExportButtonTextPosition = PP.vec3_create(0, 0, 0.007);\r\n\r\n        this.myImportExportPanelPosition = [0, this._getBackPanelMaxY() + this._mySideButtonDistanceFromBorder + this.myImportExportButtonBackgroundScale[1], this._myPanelZOffset];\r\n\r\n        this.myImportExportButtonCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myImportExportButtonCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myImportExportButtonCollisionExtents = this.myImportExportButtonBackgroundScale.slice(0);\r\n        this.myImportExportButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myImportButtonText = \"Import\";\r\n        this.myExportButtonText = \"Export\";\r\n\r\n        this.myImportExportResetLabelSeconds = 2;\r\n\r\n        this.myImportingButtonText = \"...\";\r\n        this.myImportSuccessButtonText = \"Done\";\r\n        this.myImportFailureButtonText = \"Error\";\r\n\r\n        this.myExportingButtonText = \"...\";\r\n        this.myExportSuccessButtonText = \"Done\";\r\n        this.myExportFailureButtonText = \"Error\";\r\n\r\n        this.myImportButtonPosition = PP.vec3_create(0, 0, -0.00001);\r\n        this.myImportButtonPosition[0] = -this.myImportExportButtonBackgroundScale[0] - this._mySideButtonDistanceFromBorder / 2;\r\n\r\n        this.myExportButtonPosition = PP.vec3_create(0, 0, -0.00001);\r\n        this.myExportButtonPosition[0] = -this.myImportButtonPosition[0];\r\n\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCollisionExtents = this.myBackBackgroundScale.slice(0);\r\n        this.myPointerCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n        this.myPointerCursorTargetPosition = this.myBackPanelPosition.slice(0);\r\n        this.myPointerCursorTargetPosition[2] = this._myColliderZOffset - 0.0001; // a little behind the button target to avoid hiding it\r\n    }\r\n\r\n    _initializeRuntimeSetup() {\r\n        this.myButtonHoverColor = [150 / 255, 150 / 255, 150 / 255, 1];\r\n\r\n        this.myScrollVariableDelay = 0.5;\r\n\r\n        this._initializeRuntimeSetupHook();\r\n    }\r\n};", "\r\nPP.EasyTuneBoolArrayWidget = class EasyTuneBoolArrayWidget extends PP.EasyTuneBaseWidget {\r\n\r\n    constructor(params, arraySize, gamepad) {\r\n        super(params);\r\n\r\n        this._mySetup = new PP.EasyTuneBoolArrayWidgetSetup(arraySize);\r\n        this._myUI = new PP.EasyTuneBoolArrayWidgetUI();\r\n\r\n        this._myGamepad = gamepad;\r\n\r\n        this._myValueEditIndex = 0;\r\n        this._myValueButtonEditIntensity = 0;\r\n        this._myValueButtonEditIntensityTimer = 0;\r\n        this._myValueEditActive = false;\r\n    }\r\n\r\n    _refreshUIHook() {\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this._myUI.myValueTextComponents[i].text = (this._myVariable.myValue[i]) ? \"true\" : \"false\";\r\n        }\r\n    }\r\n\r\n    _startHook(parentObject, additionalSetup) {\r\n        this._myUI.setAdditionalButtonsActive(additionalSetup.myEnableAdditionalButtons);\r\n    }\r\n\r\n    _updateHook(dt) {\r\n        this._updateValue(dt);\r\n    }\r\n\r\n    _updateValue(dt) {\r\n        let stickVariableIntensity = 0;\r\n\r\n        if (this._myGamepad) {\r\n            stickVariableIntensity = this._myGamepad.getAxesInfo().myAxes[1];\r\n        }\r\n\r\n        let valueIntensity = 0;\r\n        if (this._myValueEditActive) {\r\n            valueIntensity = stickVariableIntensity;\r\n        } else if (this._myValueButtonEditIntensity != 0) {\r\n            if (this._myValueButtonEditIntensityTimer <= 0) {\r\n                valueIntensity = this._myValueButtonEditIntensity;\r\n            } else {\r\n                this._myValueButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (Math.abs(valueIntensity) > this._mySetup.myThumbstickToggleThreshold) {\r\n            this._myVariable.myValue[this._myValueEditIndex] = valueIntensity > 0;\r\n            this._refreshUI();\r\n        }\r\n    }\r\n\r\n    _addListenersHook() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myVariableLabelCursorTargetComponent.addClickFunction(this._resetAllValues.bind(this));\r\n        ui.myVariableLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myVariableLabelText));\r\n        ui.myVariableLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myVariableLabelText, this._mySetup.myVariableLabelTextScale));\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myValueCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, i));\r\n            ui.myValueCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], true));\r\n            ui.myValueCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], false));\r\n        }\r\n    }\r\n\r\n    _setValueEditIntensity(index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myValueButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n                this._myValueEditIndex = index;\r\n            }\r\n\r\n            this._myValueButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setValueEditActive(index, text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                this._myValueEditIndex = index;\r\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.scalingWorld = this._mySetup.myValueTextScale;\r\n            }\r\n\r\n            this._myValueEditActive = active;\r\n        }\r\n    }\r\n\r\n    _resetValue(index) {\r\n        if (this._isActive()) {\r\n            this._myVariable.myValue[index] = this._myVariable.myDefaultValue[index];\r\n            this._myUI.myValueTextComponents[index].text = (this._myVariable.myValue[index]) ? \"true\" : \"false\";\r\n        }\r\n    }\r\n\r\n    _resetAllValues() {\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this._resetValue(i);\r\n        }\r\n    }\r\n\r\n    _genericTextHover(text) {\r\n        text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n    }\r\n\r\n    _genericTextUnHover(text, originalScale) {\r\n        text.scalingWorld = originalScale;\r\n    }\r\n};", "\r\nPP.EasyTuneBoolArrayWidgetUI = class EasyTuneBoolArrayWidgetUI extends PP.EasyTuneBaseWidgetUI {\r\n\r\n    setAdditionalButtonsActive(active) {\r\n        this._myAdditionalButtonsActive = active;\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValueIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n            this.myValueDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        }\r\n    }\r\n\r\n    _buildHook() {\r\n        this._myAdditionalButtonsActive = true;\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n        this.myValuesPanel = WL.scene.addObject(this.myDisplayPanel);\r\n\r\n        this.myValuePanels = [];\r\n        this.myValueTexts = [];\r\n        this.myValueCursorTargets = [];\r\n\r\n        this.myValueIncreaseButtonPanels = [];\r\n        this.myValueIncreaseButtonBackgrounds = [];\r\n        this.myValueIncreaseButtonTexts = [];\r\n        this.myValueIncreaseButtonCursorTargets = [];\r\n\r\n        this.myValueDecreaseButtonPanels = [];\r\n        this.myValueDecreaseButtonBackgrounds = [];\r\n        this.myValueDecreaseButtonTexts = [];\r\n        this.myValueDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValuePanels[i] = WL.scene.addObject(this.myValuesPanel);\r\n            this.myValueTexts[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n            this.myValueCursorTargets[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n\r\n            this.myValueIncreaseButtonPanels[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n            this.myValueIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\r\n            this.myValueIncreaseButtonTexts[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\r\n            this.myValueIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\r\n\r\n            this.myValueDecreaseButtonPanels[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n            this.myValueDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\r\n            this.myValueDecreaseButtonTexts[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\r\n            this.myValueDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\r\n        }\r\n    }\r\n\r\n    _setTransformHook() {\r\n        this.myValuesPanel.setTranslationLocal(this._mySetup.myValuesPanelPosition);\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValuePanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myValueTexts[i].scale(this._mySetup.myValueTextScale);\r\n            this.myValueCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myValueIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myRightSideButtonPosition);\r\n            this.myValueIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myValueIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myValueIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myValueIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myValueDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\r\n            this.myValueDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myValueDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myValueDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myValueDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        this.myValueTextComponents = [];\r\n        this.myValueCursorTargetComponents = [];\r\n        this.myValueCollisionComponents = [];\r\n\r\n        this.myValueIncreaseButtonBackgroundComponents = [];\r\n        this.myValueIncreaseButtonTextComponents = [];\r\n        this.myValueIncreaseButtonCursorTargetComponents = [];\r\n        this.myValueIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myValueDecreaseButtonBackgroundComponents = [];\r\n        this.myValueDecreaseButtonTextComponents = [];\r\n        this.myValueDecreaseButtonCursorTargetComponents = [];\r\n        this.myValueDecreaseButtonCollisionComponents = [];\r\n\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValueTextComponents[i] = this.myValueTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myValueTextComponents[i]);\r\n            this.myValueTextComponents[i].text = \" \";\r\n\r\n            this.myValueCursorTargetComponents[i] = this.myValueCursorTargets[i].addComponent('cursor-target');\r\n            this.myValueCollisionComponents[i] = this.myValueCursorTargets[i].addComponent('collision');\r\n            this.myValueCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myValueIncreaseButtonBackgroundComponents[i] = this.myValueIncreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myValueIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myValueIncreaseButtonTextComponents[i] = this.myValueIncreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myValueIncreaseButtonTextComponents[i]);\r\n            this.myValueIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myValueIncreaseButtonCursorTargetComponents[i] = this.myValueIncreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myValueIncreaseButtonCollisionComponents[i] = this.myValueIncreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myValueIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myValueDecreaseButtonBackgroundComponents[i] = this.myValueDecreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myValueDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myValueDecreaseButtonTextComponents[i] = this.myValueDecreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myValueDecreaseButtonTextComponents[i]);\r\n            this.myValueDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myValueDecreaseButtonCursorTargetComponents[i] = this.myValueDecreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myValueDecreaseButtonCollisionComponents[i] = this.myValueDecreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myValueDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n    }\r\n\r\n    _setVisibleHook(visible) {\r\n        if (visible) {\r\n            this.setAdditionalButtonsActive(this._myAdditionalButtonsActive);\r\n        }\r\n    }\r\n};", "PP.EasyTuneBoolArrayWidgetSetup = class EasyTuneBoolArrayWidgetSetup extends PP.EasyTuneBaseWidgetSetup {\r\n\r\n    constructor(arraySize) {\r\n        super();\r\n\r\n        this.myArraySize = arraySize;\r\n    }\r\n\r\n    _getBackPanelMinY() {\r\n        let valuePanelLastPosition = (this.myValuePanelsPositions[this.myArraySize - 1]) ? this.myValuePanelsPositions[this.myArraySize - 1][1] : 0;\r\n        return super._getBackPanelMinY() + this.myValuesPanelPosition[1] + valuePanelLastPosition;\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00802713;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n        this.myIncreaseButtonText = \"+\";\r\n        this.myDecreaseButtonText = \"-\";\r\n\r\n        this._myValuePanelDistanceFromVariableLabelPanel = 0.055;\r\n        this._myDistanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\r\n\r\n        this.myValuesPanelPosition = [0, this.myVariableLabelPanelPosition[1] - this._myValuePanelDistanceFromVariableLabelPanel, this._myPanelZOffset];\r\n\r\n        this.myValueTextScale = PP.vec3_create(0.4, 0.4, 0.4);\r\n\r\n        this.myValueCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myValueCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myValueCollisionExtents = PP.vec3_create(0.065, 0.02, 1);\r\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myValuePanelsPositions = [];\r\n        this.myValuePanelsPositions[0] = PP.vec3_create(0, 0, 0);\r\n        for (let i = 1; i < this.myArraySize; i++) {\r\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].slice(0);\r\n            this.myValuePanelsPositions[i][1] -= this._myDistanceBetweenValues;\r\n        }\r\n    }\r\n\r\n    _initializeRuntimeSetupHook() {\r\n        this.myTextHoverScaleMultiplier = PP.vec3_create(1.25, 1.25, 1.25);\r\n\r\n        this.myThumbstickToggleThreshold = 0.6;\r\n        this.myButtonEditDelay = 0;\r\n    }\r\n};", "\r\nPP.EasyTuneBoolArrayWidgetSelector = class EasyTuneBoolArrayWidgetSelector {\r\n\r\n    constructor(params, gamepad) {\r\n        this._myGamepad = gamepad;\r\n\r\n        this._myParentObject = null;\r\n\r\n        this._myParams = params;\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myWidgets = new Map();\r\n\r\n        this._myVariable = null;\r\n        this._myIsVisible = true;\r\n\r\n        this._myAppendToVariableName = null;\r\n\r\n        this._myScrollVariableRequestCallbacks = new Map();     // Signature: callback(scrollAmount)\r\n\r\n        this._myCurrentArraySize = 0;\r\n    }\r\n\r\n    setEasyTuneVariable(variable, appendToVariableName) {\r\n        this._myVariable = variable;\r\n        this._myCurrentArraySize = this._myVariable.myValue.length;\r\n        this._myAppendToVariableName = appendToVariableName;\r\n\r\n        if (!this._myWidgets.has(this._myCurrentArraySize)) {\r\n            this._createWidget(this._myCurrentArraySize);\r\n        }\r\n\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.setEasyTuneVariable(variable, appendToVariableName);\r\n        }\r\n\r\n        this.setVisible(this._myIsVisible);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        for (let widget of this._myWidgets.values()) {\r\n            widget.setVisible(false);\r\n        }\r\n\r\n        if (this._myVariable) {\r\n            this._sizeChangedCheck();\r\n\r\n            let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n            if (widget) {\r\n                widget.setVisible(visible);\r\n            }\r\n        }\r\n\r\n        this._myIsVisible = visible;\r\n    }\r\n\r\n    isScrollVariableActive() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            return widget.isScrollVariableActive();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getScrollVariableDirection() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            return widget.getScrollVariableDirection();\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    setScrollVariableActive(active, scrollDirection) {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.setScrollVariableActive(active, scrollDirection);\r\n        }\r\n    }\r\n\r\n    getWidget() {\r\n        return this._myWidgets.get(this._myCurrentArraySize);\r\n    }\r\n\r\n    registerScrollVariableRequestEventListener(id, callback) {\r\n        this._myScrollVariableRequestCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterScrollVariableRequestEventListener(id) {\r\n        this._myScrollVariableRequestCallbacks.delete(id);\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myParentObject = parentObject;\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._createWidget(1);\r\n\r\n        if (this._myVariable) {\r\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._isActive()) {\r\n            this._sizeChangedCheck();\r\n\r\n            let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n            if (widget) {\r\n                widget.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    onImportSuccess() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onImportSuccess();\r\n        }\r\n    }\r\n\r\n    onImportFailure() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onImportFailure();\r\n        }\r\n    }\r\n\r\n    onExportSuccess() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onExportSuccess();\r\n        }\r\n    }\r\n\r\n    onExportFailure() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onExportFailure();\r\n        }\r\n    }\r\n\r\n    _isActive() {\r\n        return this._myIsVisible && this._myVariable;\r\n    }\r\n\r\n    _scrollVariableRequest(amount) {\r\n        for (let callback of this._myScrollVariableRequestCallbacks.values()) {\r\n            callback(amount);\r\n        }\r\n    }\r\n\r\n    _createWidget(arraySize) {\r\n        this._myWidgets.set(arraySize, new PP.EasyTuneBoolArrayWidget(this._myParams, arraySize, this._myGamepad));\r\n        this._myWidgets.get(arraySize).start(this._myParentObject, this._myAdditionalSetup);\r\n        this._myWidgets.get(arraySize).setVisible(false);\r\n        this._myWidgets.get(arraySize).registerScrollVariableRequestEventListener(this, this._scrollVariableRequest.bind(this));\r\n    }\r\n\r\n    _sizeChangedCheck() {\r\n        if (this._myVariable.myValue.length != this._myCurrentArraySize) {\r\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\r\n        }\r\n    }\r\n};", "\r\nPP.EasyTuneNoneWidget = class EasyTuneNoneWidget extends PP.EasyTuneBaseWidget {\r\n\r\n    constructor(params) {\r\n        super(params);\r\n\r\n        this._mySetup = new PP.EasyTuneNoneWidgetSetup();\r\n        this._myUI = new PP.EasyTuneNoneWidgetUI();\r\n    }\r\n};", "\r\nPP.EasyTuneNoneWidgetUI = class EasyTuneNoneWidgetUI extends PP.EasyTuneBaseWidgetUI {\r\n\r\n    _createSkeletonHook() {\r\n        this.myTypeNotSupportedPanel = WL.scene.addObject(this.myDisplayPanel);\r\n        this.myTypeNotSupportedText = WL.scene.addObject(this.myTypeNotSupportedPanel);\r\n        this.myTypeNotSupportedCursorTarget = WL.scene.addObject(this.myTypeNotSupportedPanel);\r\n    }\r\n\r\n    _setTransformHook() {\r\n        this.myTypeNotSupportedPanel.setTranslationLocal(this._mySetup.myTypeNotSupportedPanelPosition);\r\n        this.myTypeNotSupportedText.scale(this._mySetup.myTypeNotSupportedTextScale);\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        this.myTypeNotSupportedTextComponent = this.myTypeNotSupportedText.addComponent('text');\r\n        this._setupTextComponent(this.myTypeNotSupportedTextComponent);\r\n        this.myTypeNotSupportedTextComponent.text = this._mySetup.myTypeNotSupportedText;\r\n    }\r\n};", "PP.EasyTuneNoneWidgetSetup = class EasyTuneNoneWidgetSetup extends PP.EasyTuneBaseWidgetSetup {\r\n\r\n    _getBackPanelMinY() {\r\n        return super._getBackPanelMinY() + this.myTypeNotSupportedPanelPosition[1];\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00804713;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n        this.myTypeNotSupportedPanelPosition = PP.vec3_create(0, -0.03, this._myPanelZOffset);\r\n        this.myTypeNotSupportedTextScale = PP.vec3_create(0.275, 0.275, 0.275);\r\n        this.myTypeNotSupportedText = \"Type Not Supported\";\r\n    }\r\n};", "\r\nPP.EasyTuneNumberArrayWidget = class EasyTuneNumberArrayWidget extends PP.EasyTuneBaseWidget {\r\n\r\n    constructor(params, arraySize, gamepad) {\r\n        super(params);\r\n\r\n        this._myGamepad = gamepad;\r\n\r\n        this._mySetup = new PP.EasyTuneNumberArrayWidgetSetup(arraySize);\r\n        this._myUI = new PP.EasyTuneNumberArrayWidgetUI();\r\n\r\n        this._myValueEditIndex = -1;\r\n\r\n        this._myValueButtonEditIntensity = 0;\r\n        this._myValueButtonEditIntensityTimer = 0;\r\n        this._myStepButtonEditIntensity = 0;\r\n        this._myStepButtonEditIntensityTimer = 0;\r\n\r\n        this._myValueEditActive = false;\r\n        this._myStepEditActive = false;\r\n\r\n        this._myValueRealValue = 0;\r\n        this._myStepMultiplierValue = 0;\r\n        this._myStepFastEdit = false;\r\n    }\r\n\r\n    _setEasyTuneVariableHook() {\r\n        if (this._myValueEditIndex >= 0) {\r\n            this._myValueRealValue = this._myVariable.myValue[this._myValueEditIndex];\r\n        }\r\n    }\r\n\r\n    _refreshUIHook() {\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this._myUI.myValueTextComponents[i].text = this._myVariable.myValue[i].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n\r\n        this._myUI.myStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myStepPerSecond);\r\n    }\r\n\r\n\r\n    _startHook(parentObject, additionalSetup) {\r\n        this._myUI.setAdditionalButtonsActive(additionalSetup.myEnableAdditionalButtons);\r\n    }\r\n\r\n    _updateHook(dt) {\r\n        this._updateValue(dt);\r\n    }\r\n\r\n    _updateValue(dt) {\r\n        let stickVariableIntensity = 0;\r\n\r\n        if (this._myGamepad) {\r\n            let y = this._myGamepad.getAxesInfo().myAxes[1];\r\n\r\n            if (Math.abs(y) > this._mySetup.myEditThumbstickMinThreshold) {\r\n                let normalizedEditAmount = (Math.abs(y) - this._mySetup.myEditThumbstickMinThreshold) / (1 - this._mySetup.myEditThumbstickMinThreshold);\r\n                stickVariableIntensity = Math.sign(y) * normalizedEditAmount;\r\n            }\r\n        }\r\n\r\n        let valueIntensity = 0;\r\n        if (this._myValueEditActive) {\r\n            valueIntensity = stickVariableIntensity;\r\n        } else if (this._myValueButtonEditIntensity != 0) {\r\n            if (this._myValueButtonEditIntensityTimer <= 0) {\r\n                valueIntensity = this._myValueButtonEditIntensity;\r\n            } else {\r\n                this._myValueButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (valueIntensity != 0) {\r\n            let amountToAdd = valueIntensity * this._myVariable.myStepPerSecond * dt;\r\n\r\n            this._myValueRealValue += amountToAdd;\r\n\r\n            if (this._myVariable.myMin != null && this._myVariable.myMax != null) {\r\n                this._myValueRealValue = Math.pp_clamp(this._myValueRealValue, this._myVariable.myMin, this._myVariable.myMax);\r\n            } else if (this._myVariable.myMin != null) {\r\n                this._myValueRealValue = Math.max(this._myValueRealValue, this._myVariable.myMin);\r\n            } else if (this._myVariable.myMax != null) {\r\n                this._myValueRealValue = Math.min(this._myValueRealValue, this._myVariable.myMax);\r\n            }\r\n\r\n            let decimalPlacesMultiplier = Math.pow(10, this._myVariable.myDecimalPlaces);\r\n\r\n            if (this._myVariable.myEditAllValuesTogether) {\r\n                let newValue = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                let difference = newValue - this._myVariable.myValue[this._myValueEditIndex];\r\n\r\n                for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n                    this._myVariable.myValue[i] = Math.round((this._myVariable.myValue[i] + difference) * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n\r\n                    if (this._myVariable.myMin != null && this._myVariable.myMax != null) {\r\n                        this._myVariable.myValue[i] = Math.pp_clamp(this._myVariable.myValue[i], this._myVariable.myMin, this._myVariable.myMax);\r\n                    } else if (this._myVariable.myMin != null) {\r\n                        this._myVariable.myValue[i] = Math.max(this._myVariable.myValue[i], this._myVariable.myMin);\r\n                    } else if (this._myVariable.myMax != null) {\r\n                        this._myVariable.myValue[i] = Math.min(this._myVariable.myValue[i], this._myVariable.myMax);\r\n                    }\r\n\r\n                    this._myUI.myValueTextComponents[i].text = this._myVariable.myValue[i].toFixed(this._myVariable.myDecimalPlaces);\r\n                }\r\n\r\n            } else {\r\n                this._myVariable.myValue[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n\r\n                if (this._myVariable.myMin != null && this._myVariable.myMax != null) {\r\n                    this._myVariable.myValue[this._myValueEditIndex] = Math.pp_clamp(this._myVariable.myValue[this._myValueEditIndex], this._myVariable.myMin, this._myVariable.myMax);\r\n                } else if (this._myVariable.myMin != null) {\r\n                    this._myVariable.myValue[this._myValueEditIndex] = Math.max(this._myVariable.myValue[this._myValueEditIndex], this._myVariable.myMin);\r\n                } else if (this._myVariable.myMax != null) {\r\n                    this._myVariable.myValue[this._myValueEditIndex] = Math.min(this._myVariable.myValue[this._myValueEditIndex], this._myVariable.myMax);\r\n                }\r\n\r\n                this._myUI.myValueTextComponents[this._myValueEditIndex].text = this._myVariable.myValue[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\r\n            }\r\n        } else {\r\n            this._myValueRealValue = this._myVariable.myValue[this._myValueEditIndex];\r\n        }\r\n\r\n        let stepIntensity = 0;\r\n        if (this._myStepEditActive) {\r\n            stepIntensity = stickVariableIntensity;\r\n        } else if (this._myStepButtonEditIntensity != 0) {\r\n            if (this._myStepButtonEditIntensityTimer <= 0) {\r\n                stepIntensity = this._myStepButtonEditIntensity;\r\n            } else {\r\n                this._myStepButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (stepIntensity != 0) {\r\n            let amountToAdd = 0;\r\n            if (this._myStepFastEdit) {\r\n                amountToAdd = Math.sign(stepIntensity) * 1;\r\n                this._myStepFastEdit = false;\r\n            } else {\r\n                amountToAdd = stepIntensity * this._mySetup.myStepMultiplierStepPerSecond * dt;\r\n            }\r\n\r\n            this._myStepMultiplierValue += amountToAdd;\r\n            if (Math.abs(this._myStepMultiplierValue) >= 1) {\r\n                if (Math.sign(this._myStepMultiplierValue) > 0) {\r\n                    this._myStepMultiplierValue -= 1;\r\n                    this._changeStep(this._myVariable.myStepPerSecond * 10);\r\n                } else {\r\n                    this._myStepMultiplierValue += 1;\r\n                    this._changeStep(this._myVariable.myStepPerSecond * 0.1);\r\n                }\r\n            }\r\n        } else {\r\n            this._myStepMultiplierValue = 0;\r\n            this._myStepFastEdit = true;\r\n        }\r\n    }\r\n\r\n    _addListenersHook() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myVariableLabelCursorTargetComponent.addClickFunction(this._resetAllValues.bind(this));\r\n        ui.myVariableLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myVariableLabelText));\r\n        ui.myVariableLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myVariableLabelText, this._mySetup.myVariableLabelTextScale));\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myValueCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, i));\r\n            ui.myValueCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], true));\r\n            ui.myValueCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], false));\r\n        }\r\n\r\n        ui.myStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this));\r\n        ui.myStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, ui.myStepText, true));\r\n        ui.myStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, ui.myStepText, false));\r\n\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 1));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 1));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, -1));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, -1));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 0));\r\n\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myStepDecreaseButtonBackgroundComponent.material));\r\n    }\r\n\r\n    _setValueEditIntensity(index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myValueButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n                this._myValueRealValue = this._myVariable.myValue[index];\r\n                this._myValueEditIndex = index;\r\n            }\r\n\r\n            this._myValueButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setStepEditIntensity(value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myStepButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n            }\r\n\r\n            this._myStepButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setValueEditActive(index, text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                this._myValueRealValue = this._myVariable.myValue[index];\r\n                this._myValueEditIndex = index;\r\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.scalingWorld = this._mySetup.myValueTextScale;\r\n            }\r\n\r\n            this._myValueEditActive = active;\r\n        }\r\n    }\r\n\r\n    _setStepEditActive(text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.scalingWorld = this._mySetup.myStepTextScale;\r\n            }\r\n\r\n            this._myStepEditActive = active;\r\n        }\r\n    }\r\n\r\n    _resetValue(index) {\r\n        if (this._isActive()) {\r\n            this._myVariable.myValue[index] = this._myVariable.myDefaultValue[index];\r\n            this._myUI.myValueTextComponents[index].text = this._myVariable.myValue[index].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n    }\r\n\r\n    _resetAllValues() {\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this._resetValue(i);\r\n        }\r\n    }\r\n\r\n    _resetStep() {\r\n        if (this._isActive()) {\r\n            this._changeStep(this._myVariable.myDefaultStepPerSecond);\r\n        }\r\n    }\r\n\r\n    _changeStep(step) {\r\n        step = Math.pp_roundDecimal(step, 10);\r\n        this._myVariable.myStepPerSecond = step;\r\n        this._myUI.myStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myStepPerSecond);\r\n    }\r\n\r\n    _genericTextHover(text) {\r\n        text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n    }\r\n\r\n    _genericTextUnHover(text, originalScale) {\r\n        text.scalingWorld = originalScale;\r\n    }\r\n};", "\r\nPP.EasyTuneNumberArrayWidgetUI = class EasyTuneNumberArrayWidgetUI extends PP.EasyTuneBaseWidgetUI {\r\n\r\n    setAdditionalButtonsActive(active) {\r\n        this._myAdditionalButtonsActive = active;\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValueIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n            this.myValueDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        }\r\n\r\n        this.myStepIncreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        this.myStepDecreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n    }\r\n\r\n    _buildHook() {\r\n        this._myAdditionalButtonsActive = true;\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n        this.myValuesPanel = WL.scene.addObject(this.myDisplayPanel);\r\n\r\n        this.myValuePanels = [];\r\n        this.myValueTexts = [];\r\n        this.myValueCursorTargets = [];\r\n\r\n        this.myValueIncreaseButtonPanels = [];\r\n        this.myValueIncreaseButtonBackgrounds = [];\r\n        this.myValueIncreaseButtonTexts = [];\r\n        this.myValueIncreaseButtonCursorTargets = [];\r\n\r\n        this.myValueDecreaseButtonPanels = [];\r\n        this.myValueDecreaseButtonBackgrounds = [];\r\n        this.myValueDecreaseButtonTexts = [];\r\n        this.myValueDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValuePanels[i] = WL.scene.addObject(this.myValuesPanel);\r\n            this.myValueTexts[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n            this.myValueCursorTargets[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n\r\n            this.myValueIncreaseButtonPanels[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n            this.myValueIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\r\n            this.myValueIncreaseButtonTexts[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\r\n            this.myValueIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\r\n\r\n            this.myValueDecreaseButtonPanels[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n            this.myValueDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\r\n            this.myValueDecreaseButtonTexts[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\r\n            this.myValueDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\r\n        }\r\n\r\n        this.myStepPanel = WL.scene.addObject(this.myPivotObject);\r\n        this.myStepText = WL.scene.addObject(this.myStepPanel);\r\n        this.myStepCursorTarget = WL.scene.addObject(this.myStepPanel);\r\n\r\n        this.myStepIncreaseButtonPanel = WL.scene.addObject(this.myStepPanel);\r\n        this.myStepIncreaseButtonBackground = WL.scene.addObject(this.myStepIncreaseButtonPanel);\r\n        this.myStepIncreaseButtonText = WL.scene.addObject(this.myStepIncreaseButtonPanel);\r\n        this.myStepIncreaseButtonCursorTarget = WL.scene.addObject(this.myStepIncreaseButtonPanel);\r\n\r\n        this.myStepDecreaseButtonPanel = WL.scene.addObject(this.myStepPanel);\r\n        this.myStepDecreaseButtonBackground = WL.scene.addObject(this.myStepDecreaseButtonPanel);\r\n        this.myStepDecreaseButtonText = WL.scene.addObject(this.myStepDecreaseButtonPanel);\r\n        this.myStepDecreaseButtonCursorTarget = WL.scene.addObject(this.myStepDecreaseButtonPanel);\r\n    }\r\n\r\n    _setTransformHook() {\r\n        this.myValuesPanel.setTranslationLocal(this._mySetup.myValuesPanelPosition);\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValuePanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myValueTexts[i].scale(this._mySetup.myValueTextScale);\r\n            this.myValueCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myValueIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myRightSideButtonPosition);\r\n            this.myValueIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myValueIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myValueIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myValueIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myValueDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\r\n            this.myValueDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myValueDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myValueDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myValueDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        this.myStepPanel.setTranslationLocal(this._mySetup.myStepPanelPosition);\r\n        this.myStepText.scale(this._mySetup.myStepTextScale);\r\n        this.myStepCursorTarget.setTranslationLocal(this._mySetup.myStepCursorTargetPosition);\r\n\r\n        this.myStepIncreaseButtonPanel.setTranslationLocal(this._mySetup.myRightSideButtonPosition);\r\n        this.myStepIncreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myStepIncreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myStepIncreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myStepIncreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myStepDecreaseButtonPanel.setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\r\n        this.myStepDecreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myStepDecreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myStepDecreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myStepDecreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        this.myValueTextComponents = [];\r\n        this.myValueCursorTargetComponents = [];\r\n        this.myValueCollisionComponents = [];\r\n\r\n        this.myValueIncreaseButtonBackgroundComponents = [];\r\n        this.myValueIncreaseButtonTextComponents = [];\r\n        this.myValueIncreaseButtonCursorTargetComponents = [];\r\n        this.myValueIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myValueDecreaseButtonBackgroundComponents = [];\r\n        this.myValueDecreaseButtonTextComponents = [];\r\n        this.myValueDecreaseButtonCursorTargetComponents = [];\r\n        this.myValueDecreaseButtonCollisionComponents = [];\r\n\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValueTextComponents[i] = this.myValueTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myValueTextComponents[i]);\r\n            this.myValueTextComponents[i].text = \" \";\r\n\r\n            this.myValueCursorTargetComponents[i] = this.myValueCursorTargets[i].addComponent('cursor-target');\r\n            this.myValueCollisionComponents[i] = this.myValueCursorTargets[i].addComponent('collision');\r\n            this.myValueCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myValueIncreaseButtonBackgroundComponents[i] = this.myValueIncreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myValueIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myValueIncreaseButtonTextComponents[i] = this.myValueIncreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myValueIncreaseButtonTextComponents[i]);\r\n            this.myValueIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myValueIncreaseButtonCursorTargetComponents[i] = this.myValueIncreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myValueIncreaseButtonCollisionComponents[i] = this.myValueIncreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myValueIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myValueDecreaseButtonBackgroundComponents[i] = this.myValueDecreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myValueDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myValueDecreaseButtonTextComponents[i] = this.myValueDecreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myValueDecreaseButtonTextComponents[i]);\r\n            this.myValueDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myValueDecreaseButtonCursorTargetComponents[i] = this.myValueDecreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myValueDecreaseButtonCollisionComponents[i] = this.myValueDecreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myValueDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        this.myStepTextComponent = this.myStepText.addComponent('text');\r\n        this._setupTextComponent(this.myStepTextComponent);\r\n        this.myStepTextComponent.text = \" \";\r\n\r\n        this.myStepCursorTargetComponent = this.myStepCursorTarget.addComponent('cursor-target');\r\n        this.myStepCollisionComponent = this.myStepCursorTarget.addComponent('collision');\r\n        this.myStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        //Increase/Decrease\r\n        this.myStepIncreaseButtonBackgroundComponent = this.myStepIncreaseButtonBackground.addComponent('mesh');\r\n        this.myStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myStepIncreaseButtonTextComponent = this.myStepIncreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myStepIncreaseButtonTextComponent);\r\n        this.myStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myStepIncreaseButtonCursorTargetComponent = this.myStepIncreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myStepIncreaseButtonCollisionComponent = this.myStepIncreaseButtonCursorTarget.addComponent('collision');\r\n        this.myStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myStepDecreaseButtonBackgroundComponent = this.myStepDecreaseButtonBackground.addComponent('mesh');\r\n        this.myStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myStepDecreaseButtonTextComponent = this.myStepDecreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myStepDecreaseButtonTextComponent);\r\n        this.myStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myStepDecreaseButtonCursorTargetComponent = this.myStepDecreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myStepDecreaseButtonCollisionComponent = this.myStepDecreaseButtonCursorTarget.addComponent('collision');\r\n        this.myStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n    }\r\n\r\n    _setVisibleHook(visible) {\r\n        if (visible) {\r\n            this.setAdditionalButtonsActive(this._myAdditionalButtonsActive);\r\n        }\r\n    }\r\n};", "PP.EasyTuneNumberArrayWidgetSetup = class EasyTuneNumberArrayWidgetSetup extends PP.EasyTuneBaseWidgetSetup {\r\n\r\n    constructor(arraySize) {\r\n        super();\r\n\r\n        this.myArraySize = arraySize;\r\n    }\r\n\r\n    _getBackPanelMinY() {\r\n        return this.myStepPanelPosition[1] - this._mySideButtonDistanceFromBorder * 1.25 - this.mySideButtonBackgroundScale[1];\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00803713;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n        this.myIncreaseButtonText = \"+\";\r\n        this.myDecreaseButtonText = \"-\";\r\n\r\n        this._myValuePanelDistanceFromVariableLabelPanel = 0.055;\r\n        this._myDistanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\r\n\r\n        this.myValuesPanelPosition = [0, this.myVariableLabelPanelPosition[1] - this._myValuePanelDistanceFromVariableLabelPanel, this._myPanelZOffset];\r\n\r\n        this.myValueTextScale = PP.vec3_create(0.4, 0.4, 0.4);\r\n\r\n        this.myValueCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myValueCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myValueCollisionExtents = PP.vec3_create(0.065, 0.02, 1);\r\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myValuePanelsPositions = [];\r\n        this.myValuePanelsPositions[0] = PP.vec3_create(0, 0, 0);\r\n        for (let i = 1; i < this.myArraySize; i++) {\r\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].slice(0);\r\n            this.myValuePanelsPositions[i][1] -= this._myDistanceBetweenValues;\r\n        }\r\n\r\n        let valuePanelLastPosition = (this.myValuePanelsPositions[this.myArraySize - 1]) ? this.myValuePanelsPositions[this.myArraySize - 1][1] : 0;\r\n        this.myStepPanelPosition = [0, this.myDisplayPanelPosition[1] + this.myValuesPanelPosition[1] + valuePanelLastPosition - this._myValuePanelDistanceFromVariableLabelPanel, this._myPanelZOffset];\r\n        this.myStepTextScale = this.myLabelTextScale;\r\n        this.myStepStartString = \"Step: \";\r\n\r\n        this.myStepCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myStepCursorTargetPosition[2] = this._myColliderZOffset - this.myStepPanelPosition[2];\r\n        this.myStepCollisionExtents = PP.vec3_create(0.065, 0.0175, 1);\r\n        this.myStepCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n    }\r\n\r\n    _initializeRuntimeSetupHook() {\r\n        this.myTextHoverScaleMultiplier = PP.vec3_create(1.25, 1.25, 1.25);\r\n\r\n        this.myEditThumbstickMinThreshold = 0.35;\r\n        this.myStepMultiplierStepPerSecond = 2.25;\r\n        this.myButtonEditDelay = 0;\r\n    }\r\n};", "\r\nPP.EasyTuneNumberArrayWidgetSelector = class EasyTuneNumberArrayWidgetSelector {\r\n\r\n    constructor(params, gamepad) {\r\n        this._myGamepad = gamepad;\r\n\r\n        this._myParentObject = null;\r\n\r\n        this._myParams = params;\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myWidgets = new Map();\r\n\r\n        this._myVariable = null;\r\n        this._myIsVisible = true;\r\n\r\n        this._myAppendToVariableName = null;\r\n\r\n        this._myScrollVariableRequestCallbacks = new Map();     // Signature: callback(scrollAmount)\r\n\r\n        this._myCurrentArraySize = 0;\r\n    }\r\n\r\n    setEasyTuneVariable(variable, appendToVariableName) {\r\n        this._myVariable = variable;\r\n        this._myCurrentArraySize = this._myVariable.myValue.length;\r\n        this._myAppendToVariableName = appendToVariableName;\r\n\r\n        if (!this._myWidgets.has(this._myCurrentArraySize)) {\r\n            this._createWidget(this._myCurrentArraySize);\r\n        }\r\n\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.setEasyTuneVariable(variable, appendToVariableName);\r\n        }\r\n\r\n        this.setVisible(this._myIsVisible);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        for (let widget of this._myWidgets.values()) {\r\n            widget.setVisible(false);\r\n        }\r\n\r\n        if (this._myVariable) {\r\n            this._sizeChangedCheck();\r\n\r\n            let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n            if (widget) {\r\n                widget.setVisible(visible);\r\n            }\r\n        }\r\n\r\n        this._myIsVisible = visible;\r\n    }\r\n\r\n    isScrollVariableActive() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            return widget.isScrollVariableActive();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getScrollVariableDirection() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            return widget.getScrollVariableDirection();\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    setScrollVariableActive(active, scrollDirection) {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.setScrollVariableActive(active, scrollDirection);\r\n        }\r\n    }\r\n\r\n    getWidget() {\r\n        return this._myWidgets.get(this._myCurrentArraySize);\r\n    }\r\n\r\n    registerScrollVariableRequestEventListener(id, callback) {\r\n        this._myScrollVariableRequestCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterScrollVariableRequestEventListener(id) {\r\n        this._myScrollVariableRequestCallbacks.delete(id);\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myParentObject = parentObject;\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._createWidget(1);\r\n\r\n        if (this._myVariable) {\r\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._isActive()) {\r\n            this._sizeChangedCheck();\r\n\r\n            let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n            if (widget) {\r\n                widget.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    onImportSuccess() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onImportSuccess();\r\n        }\r\n    }\r\n\r\n    onImportFailure() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onImportFailure();\r\n        }\r\n    }\r\n\r\n    onExportSuccess() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onExportSuccess();\r\n        }\r\n    }\r\n\r\n    onExportFailure() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onExportFailure();\r\n        }\r\n    }\r\n\r\n    _isActive() {\r\n        return this._myIsVisible && this._myVariable;\r\n    }\r\n\r\n    _scrollVariableRequest(amount) {\r\n        for (let callback of this._myScrollVariableRequestCallbacks.values()) {\r\n            callback(amount);\r\n        }\r\n    }\r\n\r\n    _createWidget(arraySize) {\r\n        this._myWidgets.set(arraySize, new PP.EasyTuneNumberArrayWidget(this._myParams, arraySize, this._myGamepad));\r\n        this._myWidgets.get(arraySize).start(this._myParentObject, this._myAdditionalSetup);\r\n        this._myWidgets.get(arraySize).setVisible(false);\r\n        this._myWidgets.get(arraySize).registerScrollVariableRequestEventListener(this, this._scrollVariableRequest.bind(this));\r\n    }\r\n\r\n    _sizeChangedCheck() {\r\n        if (this._myVariable.myValue.length != this._myCurrentArraySize) {\r\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\r\n        }\r\n    }\r\n};", "PP.EasyTuneTransformWidget = class EasyTuneTransformWidget extends PP.EasyTuneBaseWidget {\r\n\r\n    constructor(params, gamepad) {\r\n        super(params);\r\n\r\n        this._myGamepad = gamepad;\r\n\r\n        this._mySetup = new PP.EasyTuneTransformWidgetSetup();\r\n        this._myUI = new PP.EasyTuneTransformWidgetUI();\r\n\r\n        this._myValueButtonEditIntensity = 0;\r\n        this._myValueButtonEditIntensityTimer = 0;\r\n        this._myStepButtonEditIntensity = 0;\r\n        this._myStepButtonEditIntensityTimer = 0;\r\n\r\n        this._myValueEditActive = false;\r\n        this._myStepEditActive = false;\r\n\r\n        this._myValueRealValue = 0;\r\n        this._myComponentStepValue = 0;\r\n        this._myStepMultiplierValue = 0;\r\n        this._myStepFastEdit = false;\r\n\r\n        this._myValueEditIndex = -1;\r\n        this._myComponentIndex = 0;\r\n        this._myStepIndex = 0;\r\n    }\r\n\r\n    _setEasyTuneVariableHook() {\r\n        if (this._myValueEditIndex >= 0) {\r\n            switch (this._myComponentIndex) {\r\n                case 0:\r\n                    this._myValueRealValue = this._myVariable.myPosition[this._myValueEditIndex];\r\n                    this._myComponentStepValue = this._myVariable.myPositionStepPerSecond;\r\n                    break;\r\n                case 1:\r\n                    this._myValueRealValue = this._myVariable.myRotation[this._myValueEditIndex];\r\n                    this._myComponentStepValue = this._myVariable.myRotationStepPerSecond;\r\n                    break;\r\n                case 2:\r\n                    this._myValueRealValue = this._myVariable.myScale[this._myValueEditIndex];\r\n                    this._myComponentStepValue = this._myVariable.myScaleStepPerSecond;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    _refreshUIHook() {\r\n        for (let i = 0; i < 3; i++) {\r\n            this._myUI.myPositionTextComponents[i].text = this._myVariable.myPosition[i].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n        this._myUI.myPositionStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myPositionStepPerSecond);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this._myUI.myRotationTextComponents[i].text = this._myVariable.myRotation[i].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n        this._myUI.myRotationStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myRotationStepPerSecond);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this._myUI.myScaleTextComponents[i].text = this._myVariable.myScale[i].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n        this._myUI.myScaleStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myScaleStepPerSecond);\r\n    }\r\n\r\n    _startHook(parentObject, additionalSetup) {\r\n        this._myUI.setAdditionalButtonsActive(additionalSetup.myEnableAdditionalButtons);\r\n    }\r\n\r\n    _updateHook(dt) {\r\n        this._updateValue(dt);\r\n    }\r\n\r\n    _updateValue(dt) {\r\n        let stickVariableIntensity = 0;\r\n\r\n        if (this._myGamepad) {\r\n            let y = this._myGamepad.getAxesInfo().myAxes[1];\r\n\r\n            if (Math.abs(y) > this._mySetup.myEditThumbstickMinThreshold) {\r\n                let normalizedEditAmount = (Math.abs(y) - this._mySetup.myEditThumbstickMinThreshold) / (1 - this._mySetup.myEditThumbstickMinThreshold);\r\n                stickVariableIntensity = Math.sign(y) * normalizedEditAmount;\r\n            }\r\n        }\r\n\r\n        let valueIntensity = 0;\r\n        if (this._myValueEditActive) {\r\n            valueIntensity = stickVariableIntensity;\r\n        } else if (this._myValueButtonEditIntensity != 0) {\r\n            if (this._myValueButtonEditIntensityTimer <= 0) {\r\n                valueIntensity = this._myValueButtonEditIntensity;\r\n            } else {\r\n                this._myValueButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (valueIntensity != 0) {\r\n            let amountToAdd = valueIntensity * this._myComponentStepValue * dt;\r\n\r\n            this._myValueRealValue += amountToAdd;\r\n\r\n            let decimalPlacesMultiplier = Math.pow(10, this._myVariable.myDecimalPlaces);\r\n\r\n            switch (this._myComponentIndex) {\r\n                case 0:\r\n                    this._myVariable.myPosition[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                    this._myUI.myPositionTextComponents[this._myValueEditIndex].text = this._myVariable.myPosition[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                case 1:\r\n                    if (this._myValueRealValue > 180) {\r\n                        while (this._myValueRealValue > 180) {\r\n                            this._myValueRealValue -= 180;\r\n                        }\r\n                        this._myValueRealValue = -180 + this._myValueRealValue;\r\n                    }\r\n\r\n                    if (this._myValueRealValue < -180) {\r\n                        while (this._myValueRealValue < - 180) {\r\n                            this._myValueRealValue += 180;\r\n                        }\r\n                        this._myValueRealValue = 180 - this._myValueRealValue;\r\n                    }\r\n\r\n                    this._myVariable.myRotation[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                    this._myUI.myRotationTextComponents[this._myValueEditIndex].text = this._myVariable.myRotation[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                case 2:\r\n                    if (this._myValueRealValue <= 0) {\r\n                        this._myValueRealValue = 1 / decimalPlacesMultiplier;\r\n                    }\r\n\r\n                    if (this._myVariable.myScaleAsOne) {\r\n                        let newValue = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                        let difference = newValue - this._myVariable.myScale[this._myValueEditIndex];\r\n\r\n                        for (let i = 0; i < 3; i++) {\r\n                            this._myVariable.myScale[i] = Math.round((this._myVariable.myScale[i] + difference) * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                            this._myVariable.myScale[i] = Math.max(this._myVariable.myScale[i], 1 / decimalPlacesMultiplier);\r\n                            this._myUI.myScaleTextComponents[i].text = this._myVariable.myScale[i].toFixed(this._myVariable.myDecimalPlaces);\r\n                        }\r\n                    } else {\r\n                        this._myVariable.myScale[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                        this._myVariable.myScale[this._myValueEditIndex] = Math.max(this._myVariable.myScale[this._myValueEditIndex], 1 / decimalPlacesMultiplier);\r\n                        this._myUI.myScaleTextComponents[this._myValueEditIndex].text = this._myVariable.myScale[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\r\n                    }\r\n                    break;\r\n            }\r\n        } else {\r\n            switch (this._myComponentIndex) {\r\n                case 0:\r\n                    this._myValueRealValue = this._myVariable.myPosition[this._myValueEditIndex];\r\n                    break;\r\n                case 1:\r\n                    this._myValueRealValue = this._myVariable.myRotation[this._myValueEditIndex];\r\n                    break;\r\n                case 2:\r\n                    this._myValueRealValue = this._myVariable.myScale[this._myValueEditIndex];\r\n                    break;\r\n            }\r\n        }\r\n\r\n        let stepIntensity = 0;\r\n        if (this._myStepEditActive) {\r\n            stepIntensity = stickVariableIntensity;\r\n        } else if (this._myStepButtonEditIntensity != 0) {\r\n            if (this._myStepButtonEditIntensityTimer <= 0) {\r\n                stepIntensity = this._myStepButtonEditIntensity;\r\n            } else {\r\n                this._myStepButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (stepIntensity != 0) {\r\n            let amountToAdd = 0;\r\n            if (this._myStepFastEdit) {\r\n                amountToAdd = Math.sign(stepIntensity) * 1;\r\n                this._myStepFastEdit = false;\r\n            } else {\r\n                amountToAdd = stepIntensity * this._mySetup.myStepMultiplierStepPerSecond * dt;\r\n            }\r\n\r\n            this._myStepMultiplierValue += amountToAdd;\r\n            if (Math.abs(this._myStepMultiplierValue) >= 1) {\r\n                let stepValue = 0;\r\n                switch (this._myStepIndex) {\r\n                    case 0:\r\n                        stepValue = this._myVariable.myPositionStepPerSecond;\r\n                        break;\r\n                    case 1:\r\n                        stepValue = this._myVariable.myRotationStepPerSecond;\r\n                        break;\r\n                    case 2:\r\n                        stepValue = this._myVariable.myScaleStepPerSecond;\r\n                        break;\r\n                    default:\r\n                        stepValue = 0;\r\n                }\r\n                if (Math.sign(this._myStepMultiplierValue) > 0) {\r\n                    this._myStepMultiplierValue -= 1;\r\n                    this._changeStep(this._myStepIndex, stepValue * 10);\r\n                } else {\r\n                    this._myStepMultiplierValue += 1;\r\n                    this._changeStep(this._myStepIndex, stepValue * 0.1);\r\n                }\r\n            }\r\n        } else {\r\n            this._myStepMultiplierValue = 0;\r\n            this._myStepFastEdit = true;\r\n        }\r\n    }\r\n\r\n    _addListenersHook() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myVariableLabelCursorTargetComponent.addClickFunction(this._resetAllValues.bind(this));\r\n        ui.myVariableLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myVariableLabelText));\r\n        ui.myVariableLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myVariableLabelText, this._mySetup.myVariableLabelTextScale));\r\n\r\n        ui.myPositionLabelCursorTargetComponent.addClickFunction(this._resetComponentValues.bind(this, 0));\r\n        ui.myPositionLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myPositionLabelText));\r\n        ui.myPositionLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myPositionLabelText, this._mySetup.myComponentLabelTextScale));\r\n        for (let i = 0; i < 3; i++) {\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 0, i, 1));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 0, i, 1));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 0, i, -1));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 0, i, -1));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myPositionIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myPositionDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myPositionCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, 0, i));\r\n            ui.myPositionCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, 0, i, ui.myPositionTexts[i], true));\r\n            ui.myPositionCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, 0, i, ui.myPositionTexts[i], false));\r\n        }\r\n\r\n        ui.myRotationLabelCursorTargetComponent.addClickFunction(this._resetComponentValues.bind(this, 1));\r\n        ui.myRotationLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myRotationLabelText));\r\n        ui.myRotationLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myRotationLabelText, this._mySetup.myComponentLabelTextScale));\r\n        for (let i = 0; i < 3; i++) {\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 1, i, 1));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 1, i, 1));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 1, i, -1));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 1, i, -1));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myRotationIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myRotationDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myRotationCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, 1, i));\r\n            ui.myRotationCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, 1, i, ui.myRotationTexts[i], true));\r\n            ui.myRotationCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, 1, i, ui.myRotationTexts[i], false));\r\n        }\r\n\r\n        ui.myScaleLabelCursorTargetComponent.addClickFunction(this._resetComponentValues.bind(this, 2));\r\n        ui.myScaleLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myScaleLabelText));\r\n        ui.myScaleLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myScaleLabelText, this._mySetup.myComponentLabelTextScale));\r\n        for (let i = 0; i < 3; i++) {\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 2, i, 1));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 2, i, 1));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 2, i, -1));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 2, i, -1));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myScaleIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myScaleDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myScaleCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, 2, i));\r\n            ui.myScaleCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, 2, i, ui.myScaleTexts[i], true));\r\n            ui.myScaleCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, 2, i, ui.myScaleTexts[i], false));\r\n        }\r\n\r\n        ui.myPositionStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this, 0));\r\n        ui.myPositionStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, 0, ui.myPositionStepText, true));\r\n        ui.myPositionStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, 0, ui.myPositionStepText, false));\r\n\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 0, 1));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 0, 1));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 0, -1));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 0, -1));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPositionStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPositionStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionStepDecreaseButtonBackgroundComponent.material));\r\n\r\n        ui.myRotationStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this, 1));\r\n        ui.myRotationStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, 1, ui.myRotationStepText, true));\r\n        ui.myRotationStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, 1, ui.myRotationStepText, false));\r\n\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 1, 1));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 1, 1));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 1, -1));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 1, -1));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myRotationStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myRotationStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationStepDecreaseButtonBackgroundComponent.material));\r\n\r\n        ui.myScaleStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this, 2));\r\n        ui.myScaleStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, 2, ui.myScaleStepText, true));\r\n        ui.myScaleStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, 2, ui.myScaleStepText, false));\r\n\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 2, 1));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 2, 1));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 2, -1));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 2, -1));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myScaleStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myScaleStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleStepDecreaseButtonBackgroundComponent.material));\r\n\r\n    }\r\n\r\n    _setValueEditIntensity(componentIndex, index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                switch (componentIndex) {\r\n                    case 0:\r\n                        this._myValueRealValue = this._myVariable.myPosition[index];\r\n                        this._myComponentStepValue = this._myVariable.myPositionStepPerSecond;\r\n                        break;\r\n                    case 1:\r\n                        this._myValueRealValue = this._myVariable.myRotation[index];\r\n                        this._myComponentStepValue = this._myVariable.myRotationStepPerSecond;\r\n                        break;\r\n                    case 2:\r\n                        this._myValueRealValue = this._myVariable.myScale[index];\r\n                        this._myComponentStepValue = this._myVariable.myScaleStepPerSecond;\r\n                        break;\r\n                }\r\n\r\n                this._myValueButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n                this._myValueEditIndex = index;\r\n                this._myComponentIndex = componentIndex;\r\n            }\r\n\r\n            this._myValueButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setStepEditIntensity(index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myStepButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n            }\r\n\r\n            this._myStepButtonEditIntensity = value;\r\n\r\n            this._myStepIndex = index;\r\n        }\r\n    }\r\n\r\n    _setValueEditActive(componentIndex, index, text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                switch (componentIndex) {\r\n                    case 0:\r\n                        this._myValueRealValue = this._myVariable.myPosition[index];\r\n                        this._myComponentStepValue = this._myVariable.myPositionStepPerSecond;\r\n                        break;\r\n                    case 1:\r\n                        this._myValueRealValue = this._myVariable.myRotation[index];\r\n                        this._myComponentStepValue = this._myVariable.myRotationStepPerSecond;\r\n                        break;\r\n                    case 2:\r\n                        this._myValueRealValue = this._myVariable.myScale[index];\r\n                        this._myComponentStepValue = this._myVariable.myScaleStepPerSecond;\r\n                        break;\r\n                }\r\n\r\n                this._myValueEditIndex = index;\r\n                this._myComponentIndex = componentIndex;\r\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.scalingWorld = this._mySetup.myValueTextScale;\r\n            }\r\n\r\n            this._myValueEditActive = active;\r\n        }\r\n    }\r\n\r\n    _setStepEditActive(index, text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.scalingWorld = this._mySetup.myStepTextScale;\r\n            }\r\n\r\n            this._myStepEditActive = active;\r\n            this._myStepIndex = index;\r\n        }\r\n    }\r\n\r\n    _resetValue(componentIndex, index) {\r\n        if (this._isActive()) {\r\n            switch (componentIndex) {\r\n                case 0:\r\n                    this._myVariable.myPosition[index] = this._myVariable.myDefaultPosition[index];\r\n                    this._myUI.myPositionTextComponents[index].text = this._myVariable.myPosition[index].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                case 1:\r\n                    this._myVariable.myRotation[index] = this._myVariable.myDefaultRotation[index];\r\n                    this._myUI.myRotationTextComponents[index].text = this._myVariable.myRotation[index].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                case 2:\r\n                    this._myVariable.myScale[index] = this._myVariable.myDefaultScale[index];\r\n                    this._myUI.myScaleTextComponents[index].text = this._myVariable.myScale[index].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                default:\r\n                    defaultValue = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    _resetAllValues() {\r\n        for (let i = 0; i < 3; i++) {\r\n            this._resetComponentValues(i);\r\n        }\r\n    }\r\n\r\n    _resetComponentValues(index) {\r\n        for (let i = 0; i < 3; i++) {\r\n            this._resetValue(index, i);\r\n        }\r\n    }\r\n\r\n    _resetStep(index) {\r\n        if (this._isActive()) {\r\n            let defaultValue = 0;\r\n            switch (index) {\r\n                case 0:\r\n                    defaultValue = this._myVariable.myDefaultPositionStepPerSecond;\r\n                    break;\r\n                case 1:\r\n                    defaultValue = this._myVariable.myDefaultRotationStepPerSecond;\r\n                    break;\r\n                case 2:\r\n                    defaultValue = this._myVariable.myDefaultScaleStepPerSecond;\r\n                    break;\r\n                default:\r\n                    defaultValue = 0;\r\n            }\r\n\r\n            this._changeStep(index, defaultValue);\r\n        }\r\n    }\r\n\r\n    _changeStep(index, step) {\r\n        step = Math.pp_roundDecimal(step, 10);\r\n\r\n        switch (index) {\r\n            case 0:\r\n                this._myVariable.myPositionStepPerSecond = step;\r\n                this._myUI.myPositionStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myPositionStepPerSecond);\r\n                break;\r\n            case 1:\r\n                this._myVariable.myRotationStepPerSecond = step;\r\n                this._myUI.myRotationStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myRotationStepPerSecond);\r\n                break;\r\n            case 2:\r\n                this._myVariable.myScaleStepPerSecond = step;\r\n                this._myUI.myScaleStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myScaleStepPerSecond);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _genericTextHover(text) {\r\n        text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n    }\r\n\r\n    _genericTextUnHover(text, originalScale) {\r\n        text.scalingWorld = originalScale;\r\n    }\r\n};", "\r\nPP.EasyTuneTransformWidgetUI = class EasyTuneTransformWidgetUI extends PP.EasyTuneBaseWidgetUI {\r\n\r\n    setAdditionalButtonsActive(active) {\r\n        this._myAdditionalButtonsActive = active;\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n            this.myPositionDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        }\r\n        this.myPositionStepIncreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        this.myPositionStepDecreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n            this.myRotationDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        }\r\n        this.myRotationStepIncreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        this.myRotationStepDecreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScaleIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n            this.myScaleDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        }\r\n        this.myScaleStepIncreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        this.myScaleStepDecreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n    }\r\n\r\n    _buildHook() {\r\n        this._myAdditionalButtonsActive = true;\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n        // Position\r\n\r\n        this.myPositionPanel = WL.scene.addObject(this.myDisplayPanel);\r\n        this.myPositionLabelText = WL.scene.addObject(this.myPositionPanel);\r\n        this.myPositionLabelCursorTarget = WL.scene.addObject(this.myPositionPanel);\r\n\r\n        this.myPositionPanels = [];\r\n        this.myPositionTexts = [];\r\n        this.myPositionCursorTargets = [];\r\n\r\n        this.myPositionIncreaseButtonPanels = [];\r\n        this.myPositionIncreaseButtonBackgrounds = [];\r\n        this.myPositionIncreaseButtonTexts = [];\r\n        this.myPositionIncreaseButtonCursorTargets = [];\r\n\r\n        this.myPositionDecreaseButtonPanels = [];\r\n        this.myPositionDecreaseButtonBackgrounds = [];\r\n        this.myPositionDecreaseButtonTexts = [];\r\n        this.myPositionDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionPanels[i] = WL.scene.addObject(this.myPositionPanel);\r\n            this.myPositionTexts[i] = WL.scene.addObject(this.myPositionPanels[i]);\r\n            this.myPositionCursorTargets[i] = WL.scene.addObject(this.myPositionPanels[i]);\r\n\r\n            this.myPositionIncreaseButtonPanels[i] = WL.scene.addObject(this.myPositionPanels[i]);\r\n            this.myPositionIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myPositionIncreaseButtonPanels[i]);\r\n            this.myPositionIncreaseButtonTexts[i] = WL.scene.addObject(this.myPositionIncreaseButtonPanels[i]);\r\n            this.myPositionIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myPositionIncreaseButtonPanels[i]);\r\n\r\n            this.myPositionDecreaseButtonPanels[i] = WL.scene.addObject(this.myPositionPanels[i]);\r\n            this.myPositionDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myPositionDecreaseButtonPanels[i]);\r\n            this.myPositionDecreaseButtonTexts[i] = WL.scene.addObject(this.myPositionDecreaseButtonPanels[i]);\r\n            this.myPositionDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myPositionDecreaseButtonPanels[i]);\r\n        }\r\n\r\n        // Rotation\r\n\r\n        this.myRotationPanel = WL.scene.addObject(this.myDisplayPanel);\r\n        this.myRotationLabelText = WL.scene.addObject(this.myRotationPanel);\r\n        this.myRotationLabelCursorTarget = WL.scene.addObject(this.myRotationPanel);\r\n\r\n        this.myRotationPanels = [];\r\n        this.myRotationTexts = [];\r\n        this.myRotationCursorTargets = [];\r\n\r\n        this.myRotationIncreaseButtonPanels = [];\r\n        this.myRotationIncreaseButtonBackgrounds = [];\r\n        this.myRotationIncreaseButtonTexts = [];\r\n        this.myRotationIncreaseButtonCursorTargets = [];\r\n\r\n        this.myRotationDecreaseButtonPanels = [];\r\n        this.myRotationDecreaseButtonBackgrounds = [];\r\n        this.myRotationDecreaseButtonTexts = [];\r\n        this.myRotationDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationPanels[i] = WL.scene.addObject(this.myRotationPanel);\r\n            this.myRotationTexts[i] = WL.scene.addObject(this.myRotationPanels[i]);\r\n            this.myRotationCursorTargets[i] = WL.scene.addObject(this.myRotationPanels[i]);\r\n\r\n            this.myRotationIncreaseButtonPanels[i] = WL.scene.addObject(this.myRotationPanels[i]);\r\n            this.myRotationIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myRotationIncreaseButtonPanels[i]);\r\n            this.myRotationIncreaseButtonTexts[i] = WL.scene.addObject(this.myRotationIncreaseButtonPanels[i]);\r\n            this.myRotationIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myRotationIncreaseButtonPanels[i]);\r\n\r\n            this.myRotationDecreaseButtonPanels[i] = WL.scene.addObject(this.myRotationPanels[i]);\r\n            this.myRotationDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myRotationDecreaseButtonPanels[i]);\r\n            this.myRotationDecreaseButtonTexts[i] = WL.scene.addObject(this.myRotationDecreaseButtonPanels[i]);\r\n            this.myRotationDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myRotationDecreaseButtonPanels[i]);\r\n        }\r\n\r\n        // Scale\r\n\r\n        this.myScalePanel = WL.scene.addObject(this.myDisplayPanel);\r\n        this.myScaleLabelText = WL.scene.addObject(this.myScalePanel);\r\n        this.myScaleLabelCursorTarget = WL.scene.addObject(this.myScalePanel);\r\n\r\n        this.myScalePanels = [];\r\n        this.myScaleTexts = [];\r\n        this.myScaleCursorTargets = [];\r\n\r\n        this.myScaleIncreaseButtonPanels = [];\r\n        this.myScaleIncreaseButtonBackgrounds = [];\r\n        this.myScaleIncreaseButtonTexts = [];\r\n        this.myScaleIncreaseButtonCursorTargets = [];\r\n\r\n        this.myScaleDecreaseButtonPanels = [];\r\n        this.myScaleDecreaseButtonBackgrounds = [];\r\n        this.myScaleDecreaseButtonTexts = [];\r\n        this.myScaleDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScalePanels[i] = WL.scene.addObject(this.myScalePanel);\r\n            this.myScaleTexts[i] = WL.scene.addObject(this.myScalePanels[i]);\r\n            this.myScaleCursorTargets[i] = WL.scene.addObject(this.myScalePanels[i]);\r\n\r\n            this.myScaleIncreaseButtonPanels[i] = WL.scene.addObject(this.myScalePanels[i]);\r\n            this.myScaleIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myScaleIncreaseButtonPanels[i]);\r\n            this.myScaleIncreaseButtonTexts[i] = WL.scene.addObject(this.myScaleIncreaseButtonPanels[i]);\r\n            this.myScaleIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myScaleIncreaseButtonPanels[i]);\r\n\r\n            this.myScaleDecreaseButtonPanels[i] = WL.scene.addObject(this.myScalePanels[i]);\r\n            this.myScaleDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myScaleDecreaseButtonPanels[i]);\r\n            this.myScaleDecreaseButtonTexts[i] = WL.scene.addObject(this.myScaleDecreaseButtonPanels[i]);\r\n            this.myScaleDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myScaleDecreaseButtonPanels[i]);\r\n        }\r\n\r\n        // Steps\r\n\r\n        // Position\r\n\r\n        this.myPositionStepPanel = WL.scene.addObject(this.myPositionPanel);\r\n        this.myPositionStepText = WL.scene.addObject(this.myPositionStepPanel);\r\n        this.myPositionStepCursorTarget = WL.scene.addObject(this.myPositionStepPanel);\r\n\r\n        this.myPositionStepIncreaseButtonPanel = WL.scene.addObject(this.myPositionStepPanel);\r\n        this.myPositionStepIncreaseButtonBackground = WL.scene.addObject(this.myPositionStepIncreaseButtonPanel);\r\n        this.myPositionStepIncreaseButtonText = WL.scene.addObject(this.myPositionStepIncreaseButtonPanel);\r\n        this.myPositionStepIncreaseButtonCursorTarget = WL.scene.addObject(this.myPositionStepIncreaseButtonPanel);\r\n\r\n        this.myPositionStepDecreaseButtonPanel = WL.scene.addObject(this.myPositionStepPanel);\r\n        this.myPositionStepDecreaseButtonBackground = WL.scene.addObject(this.myPositionStepDecreaseButtonPanel);\r\n        this.myPositionStepDecreaseButtonText = WL.scene.addObject(this.myPositionStepDecreaseButtonPanel);\r\n        this.myPositionStepDecreaseButtonCursorTarget = WL.scene.addObject(this.myPositionStepDecreaseButtonPanel);\r\n\r\n        // Rotation\r\n\r\n        this.myRotationStepPanel = WL.scene.addObject(this.myRotationPanel);\r\n        this.myRotationStepText = WL.scene.addObject(this.myRotationStepPanel);\r\n        this.myRotationStepCursorTarget = WL.scene.addObject(this.myRotationStepPanel);\r\n\r\n        this.myRotationStepIncreaseButtonPanel = WL.scene.addObject(this.myRotationStepPanel);\r\n        this.myRotationStepIncreaseButtonBackground = WL.scene.addObject(this.myRotationStepIncreaseButtonPanel);\r\n        this.myRotationStepIncreaseButtonText = WL.scene.addObject(this.myRotationStepIncreaseButtonPanel);\r\n        this.myRotationStepIncreaseButtonCursorTarget = WL.scene.addObject(this.myRotationStepIncreaseButtonPanel);\r\n\r\n        this.myRotationStepDecreaseButtonPanel = WL.scene.addObject(this.myRotationStepPanel);\r\n        this.myRotationStepDecreaseButtonBackground = WL.scene.addObject(this.myRotationStepDecreaseButtonPanel);\r\n        this.myRotationStepDecreaseButtonText = WL.scene.addObject(this.myRotationStepDecreaseButtonPanel);\r\n        this.myRotationStepDecreaseButtonCursorTarget = WL.scene.addObject(this.myRotationStepDecreaseButtonPanel);\r\n\r\n        // Scale\r\n\r\n        this.myScaleStepPanel = WL.scene.addObject(this.myScalePanel);\r\n        this.myScaleStepText = WL.scene.addObject(this.myScaleStepPanel);\r\n        this.myScaleStepCursorTarget = WL.scene.addObject(this.myScaleStepPanel);\r\n\r\n        this.myScaleStepIncreaseButtonPanel = WL.scene.addObject(this.myScaleStepPanel);\r\n        this.myScaleStepIncreaseButtonBackground = WL.scene.addObject(this.myScaleStepIncreaseButtonPanel);\r\n        this.myScaleStepIncreaseButtonText = WL.scene.addObject(this.myScaleStepIncreaseButtonPanel);\r\n        this.myScaleStepIncreaseButtonCursorTarget = WL.scene.addObject(this.myScaleStepIncreaseButtonPanel);\r\n\r\n        this.myScaleStepDecreaseButtonPanel = WL.scene.addObject(this.myScaleStepPanel);\r\n        this.myScaleStepDecreaseButtonBackground = WL.scene.addObject(this.myScaleStepDecreaseButtonPanel);\r\n        this.myScaleStepDecreaseButtonText = WL.scene.addObject(this.myScaleStepDecreaseButtonPanel);\r\n        this.myScaleStepDecreaseButtonCursorTarget = WL.scene.addObject(this.myScaleStepDecreaseButtonPanel);\r\n    }\r\n\r\n    _setTransformHook() {\r\n        //Position\r\n\r\n        this.myPositionPanel.setTranslationLocal(this._mySetup.myPositionPanelPosition);\r\n        this.myPositionLabelText.scale(this._mySetup.myComponentLabelTextScale);\r\n        this.myPositionLabelCursorTarget.setTranslationLocal(this._mySetup.myComponentLabelCursorTargetPosition);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionPanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myPositionTexts[i].scale(this._mySetup.myValueTextScale);\r\n            this.myPositionCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myPositionIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myIncreaseButtonPosition);\r\n            this.myPositionIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myPositionIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myPositionIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myPositionIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myPositionDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myDecreaseButtonPosition);\r\n            this.myPositionDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myPositionDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myPositionDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myPositionDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Rotation\r\n\r\n        this.myRotationPanel.setTranslationLocal(this._mySetup.myRotationPanelPosition);\r\n        this.myRotationLabelText.scale(this._mySetup.myComponentLabelTextScale);\r\n        this.myRotationLabelCursorTarget.setTranslationLocal(this._mySetup.myComponentLabelCursorTargetPosition);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationPanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myRotationTexts[i].scale(this._mySetup.myValueTextScale);\r\n            this.myRotationCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myRotationIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myIncreaseButtonPosition);\r\n            this.myRotationIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myRotationIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myRotationIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myRotationIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myRotationDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myDecreaseButtonPosition);\r\n            this.myRotationDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myRotationDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myRotationDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myRotationDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Scale\r\n\r\n        this.myScalePanel.setTranslationLocal(this._mySetup.myScalePanelPosition);\r\n        this.myScaleLabelText.scale(this._mySetup.myComponentLabelTextScale);\r\n        this.myScaleLabelCursorTarget.setTranslationLocal(this._mySetup.myComponentLabelCursorTargetPosition);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScalePanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myScaleTexts[i].scale(this._mySetup.myValueTextScale);\r\n            this.myScaleCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myScaleIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myIncreaseButtonPosition);\r\n            this.myScaleIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myScaleIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myScaleIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myScaleIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myScaleDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myDecreaseButtonPosition);\r\n            this.myScaleDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myScaleDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myScaleDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myScaleDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Steps\r\n\r\n        // Position\r\n\r\n        this.myPositionStepPanel.setTranslationLocal(this._mySetup.myStepPanelPosition);\r\n        this.myPositionStepText.scale(this._mySetup.myStepTextScale);\r\n        this.myPositionStepCursorTarget.setTranslationLocal(this._mySetup.myStepCursorTargetPosition);\r\n\r\n        this.myPositionStepIncreaseButtonPanel.setTranslationLocal(this._mySetup.myIncreaseButtonPosition);\r\n        this.myPositionStepIncreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myPositionStepIncreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myPositionStepIncreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myPositionStepIncreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myPositionStepDecreaseButtonPanel.setTranslationLocal(this._mySetup.myDecreaseButtonPosition);\r\n        this.myPositionStepDecreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myPositionStepDecreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myPositionStepDecreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myPositionStepDecreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        // Rotation\r\n\r\n        this.myRotationStepPanel.setTranslationLocal(this._mySetup.myStepPanelPosition);\r\n        this.myRotationStepText.scale(this._mySetup.myStepTextScale);\r\n        this.myRotationStepCursorTarget.setTranslationLocal(this._mySetup.myStepCursorTargetPosition);\r\n\r\n        this.myRotationStepIncreaseButtonPanel.setTranslationLocal(this._mySetup.myIncreaseButtonPosition);\r\n        this.myRotationStepIncreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myRotationStepIncreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myRotationStepIncreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myRotationStepIncreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myRotationStepDecreaseButtonPanel.setTranslationLocal(this._mySetup.myDecreaseButtonPosition);\r\n        this.myRotationStepDecreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myRotationStepDecreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myRotationStepDecreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myRotationStepDecreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        // Scale\r\n\r\n        this.myScaleStepPanel.setTranslationLocal(this._mySetup.myStepPanelPosition);\r\n        this.myScaleStepText.scale(this._mySetup.myStepTextScale);\r\n        this.myScaleStepCursorTarget.setTranslationLocal(this._mySetup.myStepCursorTargetPosition);\r\n\r\n        this.myScaleStepIncreaseButtonPanel.setTranslationLocal(this._mySetup.myIncreaseButtonPosition);\r\n        this.myScaleStepIncreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myScaleStepIncreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myScaleStepIncreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myScaleStepIncreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myScaleStepDecreaseButtonPanel.setTranslationLocal(this._mySetup.myDecreaseButtonPosition);\r\n        this.myScaleStepDecreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myScaleStepDecreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myScaleStepDecreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myScaleStepDecreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        // Position\r\n\r\n        this.myPositionLabelTextComponent = this.myPositionLabelText.addComponent('text');\r\n        this._setupTextComponent(this.myPositionLabelTextComponent);\r\n        this.myPositionLabelTextComponent.text = this._mySetup.myPositionText;\r\n\r\n        this.myPositionLabelCursorTargetComponent = this.myPositionLabelCursorTarget.addComponent('cursor-target');\r\n        this.myPositionLabelCollisionComponent = this.myPositionLabelCursorTarget.addComponent('collision');\r\n        this.myPositionLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionLabelCollisionComponent.extents = this._mySetup.myComponentLabelCollisionExtents;\r\n\r\n        this.myPositionTextComponents = [];\r\n        this.myPositionCursorTargetComponents = [];\r\n        this.myPositionCollisionComponents = [];\r\n\r\n        this.myPositionIncreaseButtonBackgroundComponents = [];\r\n        this.myPositionIncreaseButtonTextComponents = [];\r\n        this.myPositionIncreaseButtonCursorTargetComponents = [];\r\n        this.myPositionIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myPositionDecreaseButtonBackgroundComponents = [];\r\n        this.myPositionDecreaseButtonTextComponents = [];\r\n        this.myPositionDecreaseButtonCursorTargetComponents = [];\r\n        this.myPositionDecreaseButtonCollisionComponents = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionTextComponents[i] = this.myPositionTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myPositionTextComponents[i]);\r\n            this.myPositionTextComponents[i].text = \" \";\r\n\r\n            this.myPositionCursorTargetComponents[i] = this.myPositionCursorTargets[i].addComponent('cursor-target');\r\n            this.myPositionCollisionComponents[i] = this.myPositionCursorTargets[i].addComponent('collision');\r\n            this.myPositionCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myPositionCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myPositionCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myPositionIncreaseButtonBackgroundComponents[i] = this.myPositionIncreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myPositionIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myPositionIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myPositionIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myPositionIncreaseButtonTextComponents[i] = this.myPositionIncreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myPositionIncreaseButtonTextComponents[i]);\r\n            this.myPositionIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myPositionIncreaseButtonCursorTargetComponents[i] = this.myPositionIncreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myPositionIncreaseButtonCollisionComponents[i] = this.myPositionIncreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myPositionIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myPositionIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myPositionIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myPositionDecreaseButtonBackgroundComponents[i] = this.myPositionDecreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myPositionDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myPositionDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myPositionDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myPositionDecreaseButtonTextComponents[i] = this.myPositionDecreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myPositionDecreaseButtonTextComponents[i]);\r\n            this.myPositionDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myPositionDecreaseButtonCursorTargetComponents[i] = this.myPositionDecreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myPositionDecreaseButtonCollisionComponents[i] = this.myPositionDecreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myPositionDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myPositionDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myPositionDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        // Rotation\r\n\r\n        this.myRotationLabelTextComponent = this.myRotationLabelText.addComponent('text');\r\n        this._setupTextComponent(this.myRotationLabelTextComponent);\r\n        this.myRotationLabelTextComponent.text = this._mySetup.myRotationText;\r\n\r\n        this.myRotationLabelCursorTargetComponent = this.myRotationLabelCursorTarget.addComponent('cursor-target');\r\n        this.myRotationLabelCollisionComponent = this.myRotationLabelCursorTarget.addComponent('collision');\r\n        this.myRotationLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationLabelCollisionComponent.extents = this._mySetup.myComponentLabelCollisionExtents;\r\n\r\n        this.myRotationTextComponents = [];\r\n        this.myRotationCursorTargetComponents = [];\r\n        this.myRotationCollisionComponents = [];\r\n\r\n        this.myRotationIncreaseButtonBackgroundComponents = [];\r\n        this.myRotationIncreaseButtonTextComponents = [];\r\n        this.myRotationIncreaseButtonCursorTargetComponents = [];\r\n        this.myRotationIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myRotationDecreaseButtonBackgroundComponents = [];\r\n        this.myRotationDecreaseButtonTextComponents = [];\r\n        this.myRotationDecreaseButtonCursorTargetComponents = [];\r\n        this.myRotationDecreaseButtonCollisionComponents = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationTextComponents[i] = this.myRotationTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myRotationTextComponents[i]);\r\n            this.myRotationTextComponents[i].text = \" \";\r\n\r\n            this.myRotationCursorTargetComponents[i] = this.myRotationCursorTargets[i].addComponent('cursor-target');\r\n            this.myRotationCollisionComponents[i] = this.myRotationCursorTargets[i].addComponent('collision');\r\n            this.myRotationCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myRotationCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myRotationCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myRotationIncreaseButtonBackgroundComponents[i] = this.myRotationIncreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myRotationIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myRotationIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myRotationIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myRotationIncreaseButtonTextComponents[i] = this.myRotationIncreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myRotationIncreaseButtonTextComponents[i]);\r\n            this.myRotationIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myRotationIncreaseButtonCursorTargetComponents[i] = this.myRotationIncreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myRotationIncreaseButtonCollisionComponents[i] = this.myRotationIncreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myRotationIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myRotationIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myRotationIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myRotationDecreaseButtonBackgroundComponents[i] = this.myRotationDecreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myRotationDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myRotationDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myRotationDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myRotationDecreaseButtonTextComponents[i] = this.myRotationDecreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myRotationDecreaseButtonTextComponents[i]);\r\n            this.myRotationDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myRotationDecreaseButtonCursorTargetComponents[i] = this.myRotationDecreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myRotationDecreaseButtonCollisionComponents[i] = this.myRotationDecreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myRotationDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myRotationDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myRotationDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        // Scale\r\n\r\n        this.myScaleLabelTextComponent = this.myScaleLabelText.addComponent('text');\r\n        this._setupTextComponent(this.myScaleLabelTextComponent);\r\n        this.myScaleLabelTextComponent.text = this._mySetup.myScaleText;\r\n\r\n        this.myScaleLabelCursorTargetComponent = this.myScaleLabelCursorTarget.addComponent('cursor-target');\r\n        this.myScaleLabelCollisionComponent = this.myScaleLabelCursorTarget.addComponent('collision');\r\n        this.myScaleLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleLabelCollisionComponent.extents = this._mySetup.myComponentLabelCollisionExtents;\r\n\r\n        this.myScaleTextComponents = [];\r\n        this.myScaleCursorTargetComponents = [];\r\n        this.myScaleCollisionComponents = [];\r\n\r\n        this.myScaleIncreaseButtonBackgroundComponents = [];\r\n        this.myScaleIncreaseButtonTextComponents = [];\r\n        this.myScaleIncreaseButtonCursorTargetComponents = [];\r\n        this.myScaleIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myScaleDecreaseButtonBackgroundComponents = [];\r\n        this.myScaleDecreaseButtonTextComponents = [];\r\n        this.myScaleDecreaseButtonCursorTargetComponents = [];\r\n        this.myScaleDecreaseButtonCollisionComponents = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScaleTextComponents[i] = this.myScaleTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myScaleTextComponents[i]);\r\n            this.myScaleTextComponents[i].text = \" \";\r\n\r\n            this.myScaleCursorTargetComponents[i] = this.myScaleCursorTargets[i].addComponent('cursor-target');\r\n            this.myScaleCollisionComponents[i] = this.myScaleCursorTargets[i].addComponent('collision');\r\n            this.myScaleCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myScaleCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myScaleCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myScaleIncreaseButtonBackgroundComponents[i] = this.myScaleIncreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myScaleIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myScaleIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myScaleIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myScaleIncreaseButtonTextComponents[i] = this.myScaleIncreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myScaleIncreaseButtonTextComponents[i]);\r\n            this.myScaleIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myScaleIncreaseButtonCursorTargetComponents[i] = this.myScaleIncreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myScaleIncreaseButtonCollisionComponents[i] = this.myScaleIncreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myScaleIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myScaleIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myScaleIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myScaleDecreaseButtonBackgroundComponents[i] = this.myScaleDecreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myScaleDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myScaleDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myScaleDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myScaleDecreaseButtonTextComponents[i] = this.myScaleDecreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myScaleDecreaseButtonTextComponents[i]);\r\n            this.myScaleDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myScaleDecreaseButtonCursorTargetComponents[i] = this.myScaleDecreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myScaleDecreaseButtonCollisionComponents[i] = this.myScaleDecreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myScaleDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myScaleDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myScaleDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        // Steps\r\n\r\n        // Position \r\n        this.myPositionStepTextComponent = this.myPositionStepText.addComponent('text');\r\n        this._setupTextComponent(this.myPositionStepTextComponent);\r\n        this.myPositionStepTextComponent.text = \" \";\r\n\r\n        this.myPositionStepCursorTargetComponent = this.myPositionStepCursorTarget.addComponent('cursor-target');\r\n        this.myPositionStepCollisionComponent = this.myPositionStepCursorTarget.addComponent('collision');\r\n        this.myPositionStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        this.myPositionStepIncreaseButtonBackgroundComponent = this.myPositionStepIncreaseButtonBackground.addComponent('mesh');\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPositionStepIncreaseButtonTextComponent = this.myPositionStepIncreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myPositionStepIncreaseButtonTextComponent);\r\n        this.myPositionStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myPositionStepIncreaseButtonCursorTargetComponent = this.myPositionStepIncreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myPositionStepIncreaseButtonCollisionComponent = this.myPositionStepIncreaseButtonCursorTarget.addComponent('collision');\r\n        this.myPositionStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myPositionStepDecreaseButtonBackgroundComponent = this.myPositionStepDecreaseButtonBackground.addComponent('mesh');\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPositionStepDecreaseButtonTextComponent = this.myPositionStepDecreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myPositionStepDecreaseButtonTextComponent);\r\n        this.myPositionStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myPositionStepDecreaseButtonCursorTargetComponent = this.myPositionStepDecreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myPositionStepDecreaseButtonCollisionComponent = this.myPositionStepDecreaseButtonCursorTarget.addComponent('collision');\r\n        this.myPositionStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        // Rotation\r\n\r\n        this.myRotationStepTextComponent = this.myRotationStepText.addComponent('text');\r\n        this._setupTextComponent(this.myRotationStepTextComponent);\r\n        this.myRotationStepTextComponent.text = \" \";\r\n\r\n        this.myRotationStepCursorTargetComponent = this.myRotationStepCursorTarget.addComponent('cursor-target');\r\n        this.myRotationStepCollisionComponent = this.myRotationStepCursorTarget.addComponent('collision');\r\n        this.myRotationStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        this.myRotationStepIncreaseButtonBackgroundComponent = this.myRotationStepIncreaseButtonBackground.addComponent('mesh');\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myRotationStepIncreaseButtonTextComponent = this.myRotationStepIncreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myRotationStepIncreaseButtonTextComponent);\r\n        this.myRotationStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myRotationStepIncreaseButtonCursorTargetComponent = this.myRotationStepIncreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myRotationStepIncreaseButtonCollisionComponent = this.myRotationStepIncreaseButtonCursorTarget.addComponent('collision');\r\n        this.myRotationStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myRotationStepDecreaseButtonBackgroundComponent = this.myRotationStepDecreaseButtonBackground.addComponent('mesh');\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myRotationStepDecreaseButtonTextComponent = this.myRotationStepDecreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myRotationStepDecreaseButtonTextComponent);\r\n        this.myRotationStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myRotationStepDecreaseButtonCursorTargetComponent = this.myRotationStepDecreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myRotationStepDecreaseButtonCollisionComponent = this.myRotationStepDecreaseButtonCursorTarget.addComponent('collision');\r\n        this.myRotationStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        // Scale\r\n\r\n        this.myScaleStepTextComponent = this.myScaleStepText.addComponent('text');\r\n        this._setupTextComponent(this.myScaleStepTextComponent);\r\n        this.myScaleStepTextComponent.text = \" \";\r\n\r\n        this.myScaleStepCursorTargetComponent = this.myScaleStepCursorTarget.addComponent('cursor-target');\r\n        this.myScaleStepCollisionComponent = this.myScaleStepCursorTarget.addComponent('collision');\r\n        this.myScaleStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        this.myScaleStepIncreaseButtonBackgroundComponent = this.myScaleStepIncreaseButtonBackground.addComponent('mesh');\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myScaleStepIncreaseButtonTextComponent = this.myScaleStepIncreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myScaleStepIncreaseButtonTextComponent);\r\n        this.myScaleStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myScaleStepIncreaseButtonCursorTargetComponent = this.myScaleStepIncreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myScaleStepIncreaseButtonCollisionComponent = this.myScaleStepIncreaseButtonCursorTarget.addComponent('collision');\r\n        this.myScaleStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myScaleStepDecreaseButtonBackgroundComponent = this.myScaleStepDecreaseButtonBackground.addComponent('mesh');\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myScaleStepDecreaseButtonTextComponent = this.myScaleStepDecreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myScaleStepDecreaseButtonTextComponent);\r\n        this.myScaleStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myScaleStepDecreaseButtonCursorTargetComponent = this.myScaleStepDecreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myScaleStepDecreaseButtonCollisionComponent = this.myScaleStepDecreaseButtonCursorTarget.addComponent('collision');\r\n        this.myScaleStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n    }\r\n\r\n    _addStepComponents() {\r\n        //Position\r\n        this.myPositionStepTextComponent = this.myPositionStepText.addComponent('text');\r\n        this._setupTextComponent(this.myPositionStepTextComponent);\r\n        this.myPositionStepTextComponent.text = \" \";\r\n\r\n        this.myPositionStepCursorTargetComponent = this.myPositionStepCursorTarget.addComponent('cursor-target');\r\n        this.myPositionStepCollisionComponent = this.myPositionStepCursorTarget.addComponent('collision');\r\n        this.myPositionStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        //Increase/Decrease\r\n        this.myPositionStepIncreaseButtonBackgroundComponent = this.myPositionStepIncreaseButtonBackground.addComponent('mesh');\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPositionStepIncreaseButtonTextComponent = this.myPositionStepIncreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myPositionStepIncreaseButtonTextComponent);\r\n        this.myPositionStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myPositionStepIncreaseButtonCursorTargetComponent = this.myPositionStepIncreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myPositionStepIncreaseButtonCollisionComponent = this.myPositionStepIncreaseButtonCursorTarget.addComponent('collision');\r\n        this.myPositionStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myPositionStepDecreaseButtonBackgroundComponent = this.myPositionStepDecreaseButtonBackground.addComponent('mesh');\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPositionStepDecreaseButtonTextComponent = this.myPositionStepDecreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myPositionStepDecreaseButtonTextComponent);\r\n        this.myPositionStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myPositionStepDecreaseButtonCursorTargetComponent = this.myPositionStepDecreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myPositionStepDecreaseButtonCollisionComponent = this.myPositionStepDecreaseButtonCursorTarget.addComponent('collision');\r\n        this.myPositionStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        //Rotation\r\n        this.myRotationStepTextComponent = this.myRotationStepText.addComponent('text');\r\n        this._setupTextComponent(this.myRotationStepTextComponent);\r\n        this.myRotationStepTextComponent.text = \" \";\r\n\r\n        this.myRotationStepCursorTargetComponent = this.myRotationStepCursorTarget.addComponent('cursor-target');\r\n        this.myRotationStepCollisionComponent = this.myRotationStepCursorTarget.addComponent('collision');\r\n        this.myRotationStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        //Increase/Decrease\r\n        this.myRotationStepIncreaseButtonBackgroundComponent = this.myRotationStepIncreaseButtonBackground.addComponent('mesh');\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myRotationStepIncreaseButtonTextComponent = this.myRotationStepIncreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myRotationStepIncreaseButtonTextComponent);\r\n        this.myRotationStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myRotationStepIncreaseButtonCursorTargetComponent = this.myRotationStepIncreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myRotationStepIncreaseButtonCollisionComponent = this.myRotationStepIncreaseButtonCursorTarget.addComponent('collision');\r\n        this.myRotationStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myRotationStepDecreaseButtonBackgroundComponent = this.myRotationStepDecreaseButtonBackground.addComponent('mesh');\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myRotationStepDecreaseButtonTextComponent = this.myRotationStepDecreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myRotationStepDecreaseButtonTextComponent);\r\n        this.myRotationStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myRotationStepDecreaseButtonCursorTargetComponent = this.myRotationStepDecreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myRotationStepDecreaseButtonCollisionComponent = this.myRotationStepDecreaseButtonCursorTarget.addComponent('collision');\r\n        this.myRotationStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        //Scale\r\n        this.myScaleStepTextComponent = this.myScaleStepText.addComponent('text');\r\n        this._setupTextComponent(this.myScaleStepTextComponent);\r\n        this.myScaleStepTextComponent.text = \" \";\r\n\r\n        this.myScaleStepCursorTargetComponent = this.myScaleStepCursorTarget.addComponent('cursor-target');\r\n        this.myScaleStepCollisionComponent = this.myScaleStepCursorTarget.addComponent('collision');\r\n        this.myScaleStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        //Increase/Decrease\r\n        this.myScaleStepIncreaseButtonBackgroundComponent = this.myScaleStepIncreaseButtonBackground.addComponent('mesh');\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myScaleStepIncreaseButtonTextComponent = this.myScaleStepIncreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myScaleStepIncreaseButtonTextComponent);\r\n        this.myScaleStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myScaleStepIncreaseButtonCursorTargetComponent = this.myScaleStepIncreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myScaleStepIncreaseButtonCollisionComponent = this.myScaleStepIncreaseButtonCursorTarget.addComponent('collision');\r\n        this.myScaleStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myScaleStepDecreaseButtonBackgroundComponent = this.myScaleStepDecreaseButtonBackground.addComponent('mesh');\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myScaleStepDecreaseButtonTextComponent = this.myScaleStepDecreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myScaleStepDecreaseButtonTextComponent);\r\n        this.myScaleStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myScaleStepDecreaseButtonCursorTargetComponent = this.myScaleStepDecreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myScaleStepDecreaseButtonCollisionComponent = this.myScaleStepDecreaseButtonCursorTarget.addComponent('collision');\r\n        this.myScaleStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n    }\r\n};", "PP.EasyTuneTransformWidgetSetup = class EasyTuneTransformWidgetSetup extends PP.EasyTuneBaseWidgetSetup {\r\n\r\n    _getBackPanelMinY() {\r\n        return super._getBackPanelMinY() + this.myPositionPanelPosition[1] + this.myStepPanelPosition[1];\r\n    }\r\n\r\n    _getBackPanelMaxX() {\r\n        return this.myDisplayPanelPosition[0] + this.myRotationPanelPosition[0] + this.myIncreaseButtonPosition[0] + this.mySideButtonBackgroundScale[0] + this._mySideButtonDistanceFromBorder;\r\n    }\r\n\r\n    _getBackPanelMinX() {\r\n        return this.myDisplayPanelPosition[0] + this.myScalePanelPosition[0] + this.myDecreaseButtonPosition[0] - this.mySideButtonBackgroundScale[0] - this._mySideButtonDistanceFromBorder;\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00805713;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n        this.myIncreaseButtonText = \"+\";\r\n        this.myDecreaseButtonText = \"-\";\r\n\r\n        this.myDecreaseButtonPosition = PP.vec3_create(-0.13, 0, -0.00001);\r\n        this.myIncreaseButtonPosition = PP.vec3_create(-this.myDecreaseButtonPosition[0], 0, -0.00001);\r\n\r\n        let distanceBetweenComponents = Math.abs(this.myIncreaseButtonPosition[0]) + Math.abs(this.myRightSideButtonPosition[0]);\r\n        let distanceFromVariableLabel = 0.045;\r\n        this.myPositionPanelPosition = [0, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, this._myPanelZOffset];\r\n        this.myRotationPanelPosition = [this.myPositionPanelPosition[0] + distanceBetweenComponents, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, this._myPanelZOffset];\r\n        this.myScalePanelPosition = [this.myPositionPanelPosition[0] - distanceBetweenComponents, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, this._myPanelZOffset];\r\n\r\n        this.myPositionText = \"Position\";\r\n        this.myRotationText = \"Rotation\";\r\n        this.myScaleText = \"Scale\";\r\n\r\n        this.myComponentLabelTextScale = this.myLabelTextScale;\r\n        this.myComponentLabelCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myComponentLabelCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myComponentLabelCollisionExtents = PP.vec3_create(0.065, 0.0175, 1);\r\n        this.myComponentLabelCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this._myValuePanelDistanceFromVariableLabelPanel = 0.055;\r\n        this._myDistanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\r\n\r\n        this.myValueTextScale = PP.vec3_create(0.4, 0.4, 0.4);\r\n\r\n        this.myValueCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myValueCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myValueCollisionExtents = PP.vec3_create(0.065, 0.02, 1);\r\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myValuePanelsPositions = [];\r\n        this.myValuePanelsPositions[0] = PP.vec3_create(0, -this._myValuePanelDistanceFromVariableLabelPanel, 0);\r\n        for (let i = 1; i < 3; i++) {\r\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].slice(0);\r\n            this.myValuePanelsPositions[i][1] -= this._myDistanceBetweenValues;\r\n        }\r\n\r\n        let valuePanelLastPosition = this.myValuePanelsPositions[2][1];\r\n        this.myStepPanelPosition = [0, valuePanelLastPosition - this._myValuePanelDistanceFromVariableLabelPanel, 0];\r\n        this.myStepTextScale = this.myLabelTextScale;\r\n        this.myStepStartString = \"Step: \";\r\n\r\n        this.myStepCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myStepCursorTargetPosition[2] = this._myColliderZOffset - this.myStepPanelPosition[2];\r\n        this.myStepCollisionExtents = PP.vec3_create(0.065, 0.0175, 1);\r\n        this.myStepCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n    }\r\n\r\n    _initializeRuntimeSetupHook() {\r\n        this.myTextHoverScaleMultiplier = PP.vec3_create(1.25, 1.25, 1.25);\r\n\r\n        this.myEditThumbstickMinThreshold = 0.35;\r\n        this.myStepMultiplierStepPerSecond = 2.25;\r\n        this.myButtonEditDelay = 0;\r\n    }\r\n};", "PP.EasyTuneWidgetAdditionalSetup = class EasyTuneWidgetAdditionalSetup {\r\n    constructor() {\r\n        this.myHandedness = PP.ToolHandedness.NONE;\r\n        this.myShowOnStart = false;\r\n        this.myShowVisibilityButton = false;\r\n        this.myEnableAdditionalButtons = false;\r\n        this.myEnableGamepadScrollVariable = false;\r\n        this.myPlaneMaterial = null;\r\n        this.myTextMaterial = null;\r\n\r\n        this.myEnableVariablesImportExportButtons = false;\r\n        this.myVariablesImportCallback = null;   // Signature: callback()\r\n        this.myVariablesExportCallback = null;   // Signature: callback()\r\n    }\r\n};\r\n\r\nPP.EasyTuneWidget = class EasyTuneWidget {\r\n\r\n    constructor() {\r\n        this._myIsStarted = false;\r\n        this._myStartVariable = null;\r\n\r\n        this._myWidgetFrame = new PP.WidgetFrame(\"E\", 1);\r\n        this._myWidgetFrame.registerWidgetVisibleChangedEventListener(this, this._widgetVisibleChanged.bind(this));\r\n\r\n        this._mySetup = new PP.EasyTuneWidgetSetup();\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myWidgets = [];\r\n\r\n        this._myEasyTuneVariables = null;\r\n        this._myEasyTuneLastSize = 0;\r\n        this._myVariableNames = null;\r\n\r\n        this._myCurrentWidget = null;\r\n        this._myCurrentVariable = null;\r\n\r\n        this._myScrollVariableTimer = 0;\r\n\r\n        this._myGamepad = null;\r\n\r\n        this._myRefreshVariablesTimer = 0;\r\n\r\n        this._myDirty = false;\r\n    }\r\n\r\n    setActiveVariable(variableName) {\r\n        if (!this._myIsStarted) {\r\n            this._myStartVariable = variableName;\r\n        } else if (this._myEasyTuneVariables.has(variableName)) {\r\n            this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(variableName);\r\n            this._selectCurrentWidget();\r\n        } else {\r\n            console.log(\"Can't set easy tune active variable\");\r\n        }\r\n    }\r\n\r\n    refresh() {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            this._myDirty = true;\r\n        }\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this._myWidgetFrame.setVisible(visible);\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myWidgetFrame.isVisible();\r\n    }\r\n\r\n    start(parentObject, additionalSetup, easyTuneVariables) {\r\n        this._myRightGamepad = PP.myRightGamepad; //@EDIT get right gamepad here based on how you store it in your game\r\n        this._myLeftGamepad = PP.myLeftGamepad; //@EDIT get left gamepad here based on how you store it in your game\r\n        if (this._mySetup.myGamepadHandedness == PP.ToolHandedness.RIGHT) {\r\n            this._myGamepad = this._myRightGamepad;\r\n        } else if (this._mySetup.myGamepadHandedness == PP.ToolHandedness.LEFT) {\r\n            this._myGamepad = this._myLeftGamepad;\r\n        }\r\n\r\n        this._myIsStarted = true;\r\n\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myWidgetFrame.start(parentObject, additionalSetup);\r\n\r\n        this._myEasyTuneVariables = easyTuneVariables;\r\n        this._myEasyTuneLastSize = this._myEasyTuneVariables.length();\r\n        this._myVariableNames = this._myEasyTuneVariables.getEasyTuneVariablesNames();\r\n\r\n        if (this._myEasyTuneVariables.length() > 0) {\r\n            this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myVariableNames[0]);\r\n        }\r\n\r\n        if (this._myStartVariable) {\r\n            if (this._myEasyTuneVariables.has(this._myStartVariable)) {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myStartVariable);\r\n            } else {\r\n                console.log(\"Can't set easy tune active variable\");\r\n            }\r\n        }\r\n\r\n        this._initializeWidgets();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myWidgetFrame.update(dt);\r\n\r\n        if (this._myEasyTuneVariables.length() != this._myEasyTuneLastSize || this._myDirty) {\r\n            this._refreshEasyTuneVariables();\r\n        }\r\n\r\n        if (this._myWidgetFrame.myIsWidgetVisible && this._myEasyTuneVariables.length() > 0) {\r\n            if (this._mySetup.myRefreshVariablesDelay != null) {\r\n                this._myRefreshVariablesTimer += dt;\r\n                if (this._myRefreshVariablesTimer > this._mySetup.myRefreshVariablesDelay) {\r\n                    this._myRefreshVariablesTimer = 0;\r\n                    this._refreshEasyTuneVariables();\r\n                }\r\n            }\r\n\r\n            if (this._myCurrentWidget) {\r\n                this._myCurrentWidget.update(dt);\r\n            }\r\n\r\n            if (this._myAdditionalSetup.myEnableGamepadScrollVariable) {\r\n                this._updateGamepadScrollVariable(dt);\r\n            }\r\n        }\r\n\r\n        this._updateGamepadWidgetVisibility();\r\n\r\n        this._updateActiveVariable();\r\n    }\r\n\r\n    _initializeWidgets() {\r\n        let widgetParams = new PP.EasyTuneBaseWidgetParams();\r\n        widgetParams.myVariablesImportCallback = this._importVariables.bind(this);\r\n        widgetParams.myVariablesExportCallback = this._exportVariables.bind(this);\r\n\r\n        this._myWidgets[PP.EasyTuneVariableType.NONE] = new PP.EasyTuneNoneWidget(widgetParams);\r\n        this._myWidgets[PP.EasyTuneVariableType.NUMBER] = new PP.EasyTuneNumberArrayWidgetSelector(widgetParams, this._myGamepad);\r\n        this._myWidgets[PP.EasyTuneVariableType.BOOL] = new PP.EasyTuneBoolArrayWidgetSelector(widgetParams, this._myGamepad);\r\n        this._myWidgets[PP.EasyTuneVariableType.TRANSFORM] = new PP.EasyTuneTransformWidget(widgetParams, this._myGamepad);\r\n\r\n        for (let widget of this._myWidgets) {\r\n            if (widget != null) {\r\n                widget.start(this._myWidgetFrame.getWidgetObject(), this._myAdditionalSetup);\r\n                widget.setVisible(false);\r\n                widget.registerScrollVariableRequestEventListener(this, this._scrollVariable.bind(this));\r\n            }\r\n        }\r\n\r\n        this._selectCurrentWidget();\r\n    }\r\n\r\n    _selectCurrentWidget() {\r\n        if (this._myEasyTuneVariables.length() <= 0) {\r\n            return;\r\n        }\r\n\r\n        let prevWidget = null;\r\n        if (this._myCurrentWidget != null) {\r\n            prevWidget = this._myCurrentWidget.getWidget();\r\n        }\r\n\r\n        if (this._myCurrentVariable.myType in this._myWidgets) {\r\n            this._myCurrentWidget = this._myWidgets[this._myCurrentVariable.myType];\r\n        } else {\r\n            this._myCurrentWidget = this._myWidgets[PP.EasyTuneVariableType.NONE];\r\n        }\r\n\r\n        this._myCurrentWidget.setEasyTuneVariable(this._myCurrentVariable, this._createIndexString());\r\n        this._myCurrentWidget.getWidget().syncWidget(prevWidget);\r\n\r\n        if (prevWidget != null) {\r\n            prevWidget.setVisible(false);\r\n        }\r\n\r\n        this._myCurrentWidget.setVisible(this._myWidgetFrame.myIsWidgetVisible);\r\n    }\r\n\r\n    _refreshEasyTuneVariables() {\r\n        this._myVariableNames = this._myEasyTuneVariables.getEasyTuneVariablesNames();\r\n        this._myEasyTuneLastSize = this._myEasyTuneVariables.length();\r\n\r\n        if (this._myEasyTuneVariables.length() > 0) {\r\n            if (this._myCurrentVariable && this._myEasyTuneVariables.has(this._myCurrentVariable.myName)) {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myCurrentVariable.myName);\r\n            } else {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myVariableNames[0]);\r\n            }\r\n\r\n            this._selectCurrentWidget();\r\n        } else {\r\n            this._myCurrentVariable = null;\r\n            if (this._myCurrentWidget) {\r\n                this._myCurrentWidget.setVisible(false);\r\n                this._myCurrentWidget = null;\r\n            }\r\n        }\r\n\r\n        this._myDirty = false;\r\n    }\r\n\r\n    _updateGamepadWidgetVisibility() {\r\n        if (this._myGamepad) {\r\n            if ((this._myGamepad.getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressStart() && this._myGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).myIsPressed) ||\r\n                (this._myGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).isPressStart() && this._myGamepad.getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).myIsPressed)) {\r\n                this._toggleVisibility();\r\n            }\r\n        }\r\n    }\r\n\r\n    _toggleVisibility() {\r\n        this._myWidgetFrame.toggleVisibility();\r\n    }\r\n\r\n    _widgetVisibleChanged(visible) {\r\n        for (let widget of this._myWidgets) {\r\n            if (widget != null) {\r\n                widget.setVisible(false);\r\n            }\r\n        }\r\n\r\n        if (this._myCurrentWidget) {\r\n            if (this._myEasyTuneVariables.length() > 0) {\r\n                this._myCurrentWidget.setVisible(visible);\r\n            } else {\r\n                this._myCurrentWidget.setVisible(false);\r\n            }\r\n        }\r\n\r\n        if (visible) {\r\n            this._refreshEasyTuneVariables();\r\n        }\r\n    }\r\n\r\n    _updateGamepadScrollVariable(dt) {\r\n        if (this._myGamepad && (!this._mySetup.myScrollVariableButtonID || this._myGamepad.getButtonInfo(this._mySetup.myScrollVariableButtonID).myIsPressed)) {\r\n            let x = this._myGamepad.getAxesInfo().myAxes[0];\r\n            let y = this._myGamepad.getAxesInfo().myAxes[1];\r\n            if (Math.abs(x) > this._mySetup.myScrollVariableMinXThreshold && Math.abs(y) < this._mySetup.myScrollVariableMaxYThreshold) {\r\n                this._myScrollVariableTimer += dt;\r\n                while (this._myScrollVariableTimer > this._mySetup.myScrollVariableDelay) {\r\n                    this._myScrollVariableTimer -= this._mySetup.myScrollVariableDelay;\r\n                    this._scrollVariable(Math.sign(x));\r\n                }\r\n            } else {\r\n                this._myScrollVariableTimer = this._mySetup.myScrollVariableDelay;\r\n            }\r\n        } else {\r\n            this._myScrollVariableTimer = this._mySetup.myScrollVariableDelay;\r\n        }\r\n    }\r\n\r\n    _scrollVariable(amount) {\r\n        if (this._myEasyTuneVariables.length() <= 0) {\r\n            return;\r\n        }\r\n\r\n        let variableIndex = this._getVariableIndex(this._myCurrentVariable);\r\n        if (variableIndex >= 0) {\r\n            let newIndex = (((variableIndex + amount) % this._myVariableNames.length) + this._myVariableNames.length) % this._myVariableNames.length; //manage negative numbers\r\n            if (this._myEasyTuneVariables.has(this._myVariableNames[newIndex])) {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myVariableNames[newIndex]);\r\n                this._selectCurrentWidget();\r\n            } else {\r\n                this._refreshEasyTuneVariables();\r\n            }\r\n        } else {\r\n            this._refreshEasyTuneVariables();\r\n        }\r\n    }\r\n\r\n    _createIndexString() {\r\n        let indexString = \" (\";\r\n        let index = (this._getVariableIndex(this._myCurrentVariable) + 1).toString();\r\n        let length = (this._myEasyTuneVariables.length()).toString();\r\n        while (index.length < length.length) {\r\n            index = \"0\".concat(index);\r\n        }\r\n\r\n        indexString = indexString.concat(index).concat(\" - \").concat(length).concat(\")\");\r\n\r\n        return indexString;\r\n    }\r\n\r\n    _getVariableIndex(variable) {\r\n        let variableIndex = this._myVariableNames.indexOf(variable.myName);\r\n        return variableIndex;\r\n    }\r\n\r\n    _updateActiveVariable() {\r\n        this._myEasyTuneVariables.getEasyTuneVariables().forEach(function (value) {\r\n            value.myIsActive = false;\r\n        });\r\n\r\n        if (this._myWidgetFrame.myIsWidgetVisible && this._myCurrentVariable) {\r\n            this._myCurrentVariable.myIsActive = true;\r\n        }\r\n    }\r\n\r\n    _importVariables() {\r\n        this._myAdditionalSetup.myVariablesImportCallback(this._onImportSuccess.bind(this), this._onImportFailure.bind(this));\r\n    }\r\n\r\n    _exportVariables() {\r\n        this._myAdditionalSetup.myVariablesExportCallback(this._onExportSuccess.bind(this), this._onExportFailure.bind(this));\r\n    }\r\n\r\n    _onImportSuccess() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onImportSuccess();\r\n        }\r\n    }\r\n\r\n    _onImportFailure() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onImportFailure();\r\n        }\r\n    }\r\n\r\n    _onExportSuccess() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onExportSuccess();\r\n        }\r\n    }\r\n\r\n    _onExportFailure() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onExportFailure();\r\n        }\r\n    }\r\n};", "PP.EasyTuneWidgetSetup = class EasyTuneWidgetSetup {\r\n\r\n    constructor() {\r\n        this._initializeRuntimeSetup();\r\n    }\r\n\r\n    _initializeRuntimeSetup() {\r\n        this.myGamepadHandedness = PP.ToolHandedness.RIGHT;\r\n\r\n        this.myScrollVariableDelay = 0.5;\r\n        this.myScrollVariableMinXThreshold = 0.6;\r\n        this.myScrollVariableMaxYThreshold = 0.25;\r\n        this.myScrollVariableButtonID = null;\r\n\r\n        this.myRefreshVariablesDelay = null;\r\n    }\r\n};", "PP.EasyTuneVariables = class EasyTuneVariables {\r\n    constructor() {\r\n        this._myVariables = new Map();\r\n    }\r\n\r\n    add(variable) {\r\n        this._myVariables.set(variable.myName, variable);\r\n    }\r\n\r\n    remove(variableName) {\r\n        this._myVariables.delete(variableName);\r\n    }\r\n\r\n    get(variableName) {\r\n        let variable = this._myVariables.get(variableName);\r\n        if (variable) {\r\n            return variable.getValue();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    set(variableName, value, resetDefaultValue = false) {\r\n        let variable = this._myVariables.get(variableName);\r\n        if (variable) {\r\n            variable.setValue(value, resetDefaultValue);\r\n        }\r\n    }\r\n\r\n    has(variableName) {\r\n        return this._myVariables.has(variableName);\r\n    }\r\n\r\n    length() {\r\n        return this._myVariables.size;\r\n    }\r\n\r\n    isActive(variableName) {\r\n        let variable = this._myVariables.get(variableName);\r\n        if (variable) {\r\n            return variable.myIsActive;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getEasyTuneVariable(variableName) {\r\n        return this._myVariables.get(variableName);\r\n    }\r\n\r\n    getEasyTuneVariables() {\r\n        return Array.from(this._myVariables.values());\r\n    }\r\n\r\n    getEasyTuneVariablesNames() {\r\n        return Array.from(this._myVariables.keys());\r\n    }\r\n\r\n    fromJSON(json, resetDefaultValue = false) {\r\n        let objectJSON = JSON.parse(json);\r\n\r\n        for (let variable of this._myVariables.values()) {\r\n            let variableValueJSON = objectJSON[variable.myName];\r\n            if (variableValueJSON !== undefined) {\r\n                variable.fromJSON(variableValueJSON, resetDefaultValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let objectJSON = {};\r\n\r\n        for (let variable of this._myVariables.values()) {\r\n            objectJSON[variable.myName] = variable.toJSON();\r\n        }\r\n\r\n        return JSON.stringify(objectJSON);\r\n    }\r\n\r\n    registerValueChangedEventListener(variableName, callbackID, callback) {\r\n        this._myVariables.get(variableName).registerValueChangedEventListener(callbackID, callback);\r\n    }\r\n\r\n    unregisterValueChangedEventListener(variableName, callbackID, callback) {\r\n        this._myVariables.get(variableName).unregisterValueChangedEventListener(callbackID);\r\n    }\r\n};", "/*\r\nEasy Tune Variables Examples\r\n\r\nNumber:         PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Float\", 1.00, 0.1, 3));\r\nNumber Array:   PP.myEasyTuneVariables.add(new PP.EasyTuneNumberArray(\"Float Array\", [1.00, 2.00, 3.00], 0.1, 3));\r\nInt:            PP.myEasyTuneVariables.add(new PP.EasyTuneInt(\"Int\", 1, 1));\r\nInt Array:      PP.myEasyTuneVariables.add(new PP.EasyTuneIntArray(\"Int Array\", [1, 2, 3], 1));\r\nBool:           PP.myEasyTuneVariables.add(new PP.EasyTuneBool(\"Bool\", false));\r\nBool Array:     PP.myEasyTuneVariables.add(new PP.EasyTuneBoolArray(\"Bool Array\", [false, true, false]));\r\nTransform:      PP.myEasyTuneVariables.add(new PP.EasyTuneTransform(\"Transform\", PP.mat4_create(), true));\r\n*/\r\n\r\nPP.EasyTuneVariableType = {\r\n    NONE: 0,\r\n    NUMBER: 1,\r\n    BOOL: 2,\r\n    TRANSFORM: 3\r\n};\r\n\r\nPP.EasyTuneVariable = class EasyTuneVariable {\r\n    constructor(name, type) {\r\n        this.myName = name.slice(0);\r\n        this.myType = type;\r\n\r\n        this.myValue = null;\r\n        this.myDefaultValue = null;\r\n\r\n        this.myIsActive = false;\r\n\r\n        this._myValueChangedCallbacks = new Map();      // Signature: callback(name, value)\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue;\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        let oldValue = this.myValue;\r\n        this.myValue = value;\r\n\r\n        if (resetDefaultValue) {\r\n            PP.EasyTuneVariable.prototype.setDefaultValue.call(this, value);\r\n        }\r\n\r\n        PP.refreshEasyTuneWidget();\r\n\r\n        if (oldValue != value) {\r\n            this._triggerValueChangedCallback();\r\n        }\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        this.myDefaultValue = value;\r\n    }\r\n\r\n    fromJSON(valueJSON, resetDefaultValue = false) {\r\n        this.setValue(JSON.parse(valueJSON), resetDefaultValue);\r\n    }\r\n\r\n    toJSON() {\r\n        return JSON.stringify(this.getValue());\r\n    }\r\n\r\n    registerValueChangedEventListener(id, callback) {\r\n        this._myValueChangedCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterValueChangedEventListener(id) {\r\n        this._myValueChangedCallbacks.delete(id);\r\n    }\r\n\r\n    _triggerValueChangedCallback() {\r\n        if (this._myValueChangedCallbacks.size > 0) {\r\n            this._myValueChangedCallbacks.forEach(function (callback) { callback(this.myName, this.getValue()); }.bind(this));\r\n        }\r\n    }\r\n};\r\n\r\nPP.EasyTuneVariableArray = class EasyTuneVariableArray extends PP.EasyTuneVariable {\r\n    constructor(name, type, value) {\r\n        super(name, type);\r\n\r\n        PP.EasyTuneVariableArray.prototype.setValue.call(this, value, true);\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue.slice(0);\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        let oldValue = this.myValue;\r\n        this.myValue = value.slice(0);\r\n\r\n        if (resetDefaultValue) {\r\n            PP.EasyTuneVariableArray.prototype.setDefaultValue.call(this, value);\r\n        }\r\n\r\n        PP.refreshEasyTuneWidget();\r\n\r\n        if (oldValue == null || !oldValue.pp_equals(value)) {\r\n            this._triggerValueChangedCallback();\r\n        }\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        this.myDefaultValue = value.slice(0);\r\n    }\r\n};\r\n\r\n//NUMBER\r\n\r\nPP.EasyTuneNumberArray = class EasyTuneNumberArray extends PP.EasyTuneVariableArray {\r\n    constructor(name, value, stepPerSecond, decimalPlaces, min = null, max = null, editAllValuesTogether = false) {\r\n        super(name, PP.EasyTuneVariableType.NUMBER, value);\r\n\r\n        this.myDecimalPlaces = decimalPlaces;\r\n        this.myStepPerSecond = stepPerSecond;\r\n\r\n        this.myDefaultStepPerSecond = this.myStepPerSecond;\r\n\r\n        this.myMin = min;\r\n        this.myMax = max;\r\n\r\n        this.myEditAllValuesTogether = editAllValuesTogether;\r\n\r\n        this._clampValue(true);\r\n    }\r\n\r\n    setMax(max) {\r\n        this.myMax = max;\r\n        this._clampValue(false);\r\n    }\r\n\r\n    setMin(min) {\r\n        this.myMin = min;\r\n        this._clampValue(false);\r\n    }\r\n\r\n    _clampValue(resetDefaultValue) {\r\n        let clampedValue = this.myValue.vec_clamp(this.myMin, this.myMax);\r\n\r\n        if (!resetDefaultValue) {\r\n            let clampedDefaultValue = this.myDefaultValue.vec_clamp(this.myMin, this.myMax);\r\n            let defaultValueChanged = !clampedDefaultValue.vec_equals(this.myDefaultValue, 0.00001);\r\n            if (defaultValueChanged) {\r\n                PP.EasyTuneVariableArray.prototype.setDefaultValue.call(this, clampedDefaultValue);\r\n            }\r\n        }\r\n\r\n        PP.EasyTuneVariableArray.prototype.setValue.call(this, clampedValue, resetDefaultValue);\r\n    }\r\n};\r\n\r\nPP.EasyTuneNumber = class EasyTuneNumber extends PP.EasyTuneNumberArray {\r\n    constructor(name, value, stepPerSecond, decimalPlaces, min, max) {\r\n        super(name, [value], stepPerSecond, decimalPlaces, min, max);\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue[0];\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        super.setValue([value], resetDefaultValue);\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        super.setValue([value]);\r\n    }\r\n};\r\n\r\nPP.EasyTuneInt = class EasyTuneInt extends PP.EasyTuneNumber {\r\n    constructor(name, value, stepPerSecond, min, max) {\r\n        super(name, value, stepPerSecond, 0, min, max);\r\n    }\r\n};\r\n\r\nPP.EasyTuneIntArray = class EasyTuneIntArray extends PP.EasyTuneNumberArray {\r\n    constructor(name, value, stepPerSecond, min, max, editAllValuesTogether) {\r\n        let tempValue = value.slice(0);\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            tempValue[i] = Math.round(tempValue[i]);\r\n        }\r\n\r\n        super(name, tempValue, stepPerSecond, 0, min != null ? Math.round(min) : null, max != null ? Math.round(max) : max, editAllValuesTogether);\r\n    }\r\n};\r\n\r\n//BOOL\r\n\r\nPP.EasyTuneBoolArray = class EasyTuneBoolArray extends PP.EasyTuneVariableArray {\r\n    constructor(name, value) {\r\n        super(name, PP.EasyTuneVariableType.BOOL, value);\r\n    }\r\n};\r\n\r\nPP.EasyTuneBool = class EasyTuneBool extends PP.EasyTuneBoolArray {\r\n    constructor(name, value) {\r\n        super(name, [value]);\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue[0];\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        super.setValue([value], resetDefaultValue);\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        super.setValue([value]);\r\n    }\r\n};\r\n\r\n//EASY TUNE EASY TRANSFORM\r\n\r\nPP.EasyTuneTransform = class EasyTuneTransform extends PP.EasyTuneVariable {\r\n    constructor(name, value, scaleAsOne = true, positionStepPerSecond = 1, rotationStepPerSecond = 50, scaleStepPerSecond = 1) {\r\n        super(name, PP.EasyTuneVariableType.TRANSFORM);\r\n\r\n        this.myDecimalPlaces = 3;\r\n\r\n        this.myPosition = value.mat4_getPosition();\r\n        this.myRotation = value.mat4_getRotationDegrees();\r\n        this.myScale = value.mat4_getScale();\r\n\r\n        let decimalPlacesMultiplier = Math.pow(10, this.myDecimalPlaces);\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScale[i] = Math.max(this.myScale[i], 1 / decimalPlacesMultiplier);\r\n        }\r\n\r\n        this.myScaleAsOne = scaleAsOne;\r\n\r\n        this.myPositionStepPerSecond = positionStepPerSecond;\r\n        this.myRotationStepPerSecond = rotationStepPerSecond;\r\n        this.myScaleStepPerSecond = scaleStepPerSecond;\r\n\r\n        this.myDefaultPosition = this.myPosition.vec3_clone();\r\n        this.myDefaultRotation = this.myRotation.vec3_clone();\r\n        this.myDefaultScale = this.myScale.vec3_clone();\r\n\r\n        this.myDefaultPositionStepPerSecond = this.myPositionStepPerSecond;\r\n        this.myDefaultRotationStepPerSecond = this.myRotationStepPerSecond;\r\n        this.myDefaultScaleStepPerSecond = this.myScaleStepPerSecond;\r\n\r\n        this.myTransform = PP.mat4_create();\r\n        this.myTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\r\n\r\n        this.myTempTransform = PP.mat4_create();\r\n    }\r\n\r\n    getValue() {\r\n        this.myTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\r\n        return this.myTransform.slice(0);\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        this.myTempTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\r\n\r\n        value.mat4_getPosition(this.myPosition);\r\n        value.mat4_getRotationDegrees(this.myRotation);\r\n        value.mat4_getScale(this.myScale);\r\n\r\n        this.myTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\r\n\r\n        if (resetDefaultValue) {\r\n            PP.EasyTuneTransform.prototype.setDefaultValue.call(this, value);\r\n        }\r\n\r\n        PP.refreshEasyTuneWidget();\r\n\r\n        if (!this.myTempTransform.pp_equals(this.myTransform)) {\r\n            this._triggerValueChangedCallback();\r\n        }\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        this.myDefaultPosition = value.mat4_getPosition();\r\n        this.myDefaultRotation = value.mat4_getRotationDegrees();\r\n        this.myDefaultScale = value.mat4_getScale();\r\n    }\r\n\r\n    fromJSON(valueJSON, resetDefaultValue = false) {\r\n        this.setValue(JSON.parse(valueJSON), resetDefaultValue);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.getValue().vec_toString();\r\n    }\r\n};", "PP.myEasyTuneVariables = new PP.EasyTuneVariables();\r\n\r\nPP.myEasyTuneTarget = null;\r\n\r\n// fileURL can contain parameters inside brackets, like {param}\r\n// those parameters will be replaced with the same one on the current page url, like www.currentpage.com/?param=2\r\nPP.importEasyTuneVariables = function (fileURL = null, resetVariablesDefaultValueOnImport = false, onSuccessCallback = null, onFailureCallback = null) {\r\n    if (fileURL == null || fileURL.length == 0) {\r\n        if (navigator.clipboard) {\r\n            navigator.clipboard.readText().then(\r\n                function (clipboard) {\r\n                    PP.myEasyTuneVariables.fromJSON(clipboard, resetVariablesDefaultValueOnImport);\r\n\r\n                    PP.refreshEasyTuneWidget();\r\n\r\n                    if (onSuccessCallback != null) {\r\n                        onSuccessCallback();\r\n                    }\r\n\r\n                    console.log(\"Easy Tune Variables Imported from: clipboard\");\r\n                    console.log(clipboard);\r\n                }, function () {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while importing the easy tune variables from: clipboard\");\r\n                }\r\n            ).catch(function (reason) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while importing the easy tune variables from: clipboard\");\r\n                console.error(reason);\r\n            });\r\n        }\r\n    } else {\r\n        let replacedFileURL = PP._importExportEasyTuneVariablesReplaceFileURLParams(fileURL);\r\n\r\n        fetch(replacedFileURL).then(\r\n            function (response) {\r\n                if (response.ok) {\r\n                    response.text().then(\r\n                        function (text) {\r\n                            PP.myEasyTuneVariables.fromJSON(text, resetVariablesDefaultValueOnImport);\r\n\r\n                            PP.refreshEasyTuneWidget();\r\n\r\n                            if (onSuccessCallback != null) {\r\n                                onSuccessCallback();\r\n                            }\r\n\r\n                            console.log(\"Easy Tune Variables Imported from:\", replacedFileURL);\r\n                            console.log(text);\r\n                        },\r\n                        function (response) {\r\n                            if (onFailureCallback != null) {\r\n                                onFailureCallback();\r\n                            }\r\n\r\n                            console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n                            console.error(response);\r\n                        }\r\n                    );\r\n                } else {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n                    console.error(response);\r\n                }\r\n            },\r\n            function (response) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n                console.error(response);\r\n            }\r\n        ).catch(function (reason) {\r\n            if (onFailureCallback != null) {\r\n                onFailureCallback();\r\n            }\r\n\r\n            console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n            console.error(reason);\r\n        });\r\n    }\r\n\r\n    PP.refreshEasyTuneWidget();\r\n};\r\n\r\n// fileURL can contain parameters inside brackets, like {param}\r\n// those parameters will be replaced with the same one on the current page url, like www.currentpage.com/?param=2\r\nPP.exportEasyTuneVariables = function (fileURL = null, onSuccessCallback = null, onFailureCallback = null) {\r\n    let jsonVariables = PP.myEasyTuneVariables.toJSON();\r\n\r\n    if (fileURL == null || fileURL.length == 0) {\r\n        if (navigator.clipboard) {\r\n            navigator.clipboard.writeText(jsonVariables).then(\r\n                function () {\r\n                    if (onSuccessCallback != null) {\r\n                        onSuccessCallback();\r\n                    }\r\n\r\n                    console.log(\"Easy Tune Variables Exported to: clipboard\");\r\n                    console.log(jsonVariables);\r\n                },\r\n                function () {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while exporting the easy tune variables to: clipboard\");\r\n                }\r\n            ).catch(function (reason) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while exporting the easy tune variables to: clipboard\");\r\n                console.error(reason);\r\n            });\r\n        }\r\n    } else {\r\n        let replacedFileURL = PP._importExportEasyTuneVariablesReplaceFileURLParams(fileURL);\r\n\r\n        fetch(replacedFileURL, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: jsonVariables\r\n        }).then(\r\n            function (response) {\r\n                if (response.ok) {\r\n                    if (onSuccessCallback != null) {\r\n                        onSuccessCallback();\r\n                    }\r\n\r\n                    console.log(\"Easy Tune Variables Exported to:\", replacedFileURL);\r\n                    console.log(jsonVariables);\r\n                } else {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while exporting the easy tune variables to:\", replacedFileURL);\r\n                    console.error(response);\r\n                }\r\n            },\r\n            function (response) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while exporting the easy tune variables to:\", replacedFileURL);\r\n                console.error(response);\r\n            }\r\n        ).catch(function (reason) {\r\n            if (onFailureCallback != null) {\r\n                onFailureCallback();\r\n            }\r\n\r\n            console.error(\"An error occurred while exporting the easy tune variables to:\", replacedFileURL);\r\n            console.error(reason);\r\n        });\r\n    }\r\n};\r\n\r\nPP.mySetEasyTuneWidgetActiveVariableCallbacks = [];\r\nPP.setEasyTuneWidgetActiveVariable = function (variableName) {\r\n    for (let callback of PP.mySetEasyTuneWidgetActiveVariableCallbacks) {\r\n        callback(variableName);\r\n    }\r\n};\r\n\r\nPP.myRefreshEasyTuneWidgetCallbacks = [];\r\nPP.refreshEasyTuneWidget = function () {\r\n    for (let callback of PP.myRefreshEasyTuneWidgetCallbacks) {\r\n        callback();\r\n    }\r\n};\r\n\r\nPP._importExportEasyTuneVariablesReplaceFileURLParams = function (fileURL) {\r\n    let params = fileURL.match(/\\{.+?\\}/g);\r\n\r\n    if (params == null || params.length == 0) {\r\n        return fileURL;\r\n    }\r\n\r\n    for (let i = 0; i < params.length; i++) {\r\n        params[i] = params[i].replace(\"{\", \"\");\r\n        params[i] = params[i].replace(\"}\", \"\");\r\n    }\r\n\r\n    let urlSearchParams = new URL(window.location).searchParams;\r\n\r\n    let replacedFileURL = fileURL;\r\n\r\n    for (let param of params) {\r\n        let searchParamValue = urlSearchParams.get(param);\r\n        if (searchParamValue != null) {\r\n            replacedFileURL = replacedFileURL.replace(\"{\" + param + \"}\", searchParamValue);\r\n        }\r\n    }\r\n\r\n    return replacedFileURL;\r\n};", "WL.registerComponent('pp-easy-tune', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['none', 'left', 'right'], default: 'none' },\r\n    _myShowOnStart: { type: WL.Type.Bool, default: false },\r\n    _myShowVisibilityButton: { type: WL.Type.Bool, default: false },\r\n    _myEnableGamepadScrollVariable: { type: WL.Type.Bool, default: true },\r\n    _myEnableVariablesImportExportButtons: { type: WL.Type.Bool, default: false },\r\n    _myVariablesImportURL: { type: WL.Type.String, default: '' },   // the URL can contain parameters inside brackets, like {param}\r\n    _myVariablesExportURL: { type: WL.Type.String, default: '' },   // those parameters will be replaced with the same one on the current page url, like www.currentpage.com/?param=2\r\n    _myImportVariablesOnStart: { type: WL.Type.Bool, default: false },\r\n    _myResetVariablesDefaultValueOnImport: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init: function () {\r\n        this._myWidget = new PP.EasyTuneWidget();\r\n\r\n        PP.mySetEasyTuneWidgetActiveVariableCallbacks.push(function (variableName) {\r\n            this._myWidget.setActiveVariable(variableName);\r\n        }.bind(this));\r\n\r\n        PP.myRefreshEasyTuneWidgetCallbacks.push(function () {\r\n            this._myWidget.refresh();\r\n        }.bind(this));\r\n\r\n        this._myStarted = false;\r\n    },\r\n    start: function () {\r\n        let additionalSetup = new PP.EasyTuneWidgetAdditionalSetup();\r\n        additionalSetup.myHandedness = [null, 'left', 'right'][this._myHandedness];\r\n        additionalSetup.myShowOnStart = this._myShowOnStart;\r\n        additionalSetup.myShowVisibilityButton = this._myShowVisibilityButton;\r\n        additionalSetup.myEnableAdditionalButtons = true;\r\n        additionalSetup.myEnableGamepadScrollVariable = this._myEnableGamepadScrollVariable;\r\n        additionalSetup.myPlaneMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        additionalSetup.myTextMaterial = PP.myDefaultResources.myMaterials.myText.clone();\r\n\r\n        additionalSetup.myEnableVariablesImportExportButtons = this._myEnableVariablesImportExportButtons;\r\n        additionalSetup.myVariablesImportCallback = function (onSuccessCallback, onFailureCallback) {\r\n            PP.importEasyTuneVariables(this._myVariablesImportURL, this._myResetVariablesDefaultValueOnImport, onSuccessCallback, onFailureCallback);\r\n        }.bind(this);\r\n        additionalSetup.myVariablesExportCallback = function (onSuccessCallback, onFailureCallback) {\r\n            PP.exportEasyTuneVariables(this._myVariablesExportURL, onSuccessCallback, onFailureCallback);\r\n        }.bind(this);\r\n\r\n        this._myWidget.start(this.object, additionalSetup, PP.myEasyTuneVariables);\r\n\r\n        this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n        this._mySetVisibleNextUpdate = false;\r\n\r\n        this._myStarted = true;\r\n        this._myFirstUpdate = true;\r\n    },\r\n    update: function (dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n            if (this._myImportVariablesOnStart) {\r\n                PP.importEasyTuneVariables(this._myVariablesImportURL, this._myResetVariablesDefaultValueOnImport);\r\n            }\r\n        }\r\n\r\n        if (this._mySetVisibleNextUpdate) {\r\n            this._mySetVisibleNextUpdate = false;\r\n            this._myWidget.setVisible(false);\r\n            this._myWidget.setVisible(this._myWidgetVisibleBackup);\r\n        }\r\n\r\n        this._myWidget.update(dt);\r\n    },\r\n    onActivate() {\r\n        this._mySetVisibleNextUpdate = true;\r\n    },\r\n    onDeactivate() {\r\n        if (this._myStarted) {\r\n            this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n\r\n            this._myWidget.setVisible(false);\r\n        }\r\n    },\r\n});", "WL.registerComponent(\"pp-easy-tune-import-variables\", {\r\n    _myVariablesImportURL: { type: WL.Type.String, default: '' },\r\n    _myResetVariablesDefaultValueOnImport: { type: WL.Type.Bool, default: true }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myFirstUpdate = true;\r\n    },\r\n    update: function (dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n            PP.importEasyTuneVariables(this._myVariablesImportURL, this._myResetVariablesDefaultValueOnImport);\r\n        }\r\n    }\r\n});", "PP.WidgetFrameSetup = class WidgetFrameSetup {\r\n\r\n    constructor(widgetLetterID, buttonsColumnIndex) {\r\n\r\n        this._initializeBuildSetup(widgetLetterID, buttonsColumnIndex);\r\n        this._initializeRuntimeSetup();\r\n    }\r\n\r\n    _initializeBuildSetup(widgetLetterID, buttonsColumnIndex) {\r\n        //General\r\n        this.myBackgroundColor = [46 / 255, 46 / 255, 46 / 255, 1];\r\n\r\n        this.myCursorTargetCollisionCollider = 2; // box\r\n        this.myCursorTargetCollisionGroup = 7;\r\n        this.myCursorTargetCollisionThickness = 0.001;\r\n\r\n        this.myDefaultTextColor = [255 / 255, 255 / 255, 255 / 255, 1];\r\n\r\n        this.myTextAlignment = 2; // center\r\n        this.myTextJustification = 2; // middle\r\n        this.myTextColor = this.myDefaultTextColor;\r\n\r\n        this.myButtonTextScale = PP.vec3_create(0.18, 0.18, 0.18);\r\n\r\n        this.myVisibilityButtonBackgroundScale = PP.vec3_create(0.015, 0.015, 1);\r\n        this.myVisibilityButtonTextPosition = PP.vec3_create(0, 0, 0.007);\r\n        this.myVisibilityButtonTextScale = this.myButtonTextScale;\r\n\r\n        let distanceBetweenToolsVisibilityButtons = 0.01;\r\n        let buttonXOffset = this.myVisibilityButtonBackgroundScale[0] * (2 * buttonsColumnIndex) + distanceBetweenToolsVisibilityButtons * buttonsColumnIndex;\r\n\r\n        this.myVisibilityButtonPosition = [];\r\n        this.myVisibilityButtonPosition[PP.ToolHandedness.NONE] = {};\r\n        this.myVisibilityButtonPosition[PP.ToolHandedness.NONE].myPosition = [-0.3 + buttonXOffset, -0.205, 0.035];\r\n\r\n        this.myVisibilityButtonPosition[PP.ToolHandedness.LEFT] = {};\r\n        this.myVisibilityButtonPosition[PP.ToolHandedness.LEFT].myPosition = [-0.2 + buttonXOffset, 0.025, 0.015];\r\n\r\n        this.myVisibilityButtonPosition[PP.ToolHandedness.RIGHT] = {};\r\n        this.myVisibilityButtonPosition[PP.ToolHandedness.RIGHT].myPosition = [0.2 - buttonXOffset, 0.025, 0.015];\r\n\r\n        this.myVisibilityButtonText = widgetLetterID;\r\n\r\n        this.myVisibilityButtonCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myVisibilityButtonCursorTargetPosition[2] = this.myVisibilityButtonTextPosition[2];\r\n        this.myVisibilityButtonCollisionExtents = this.myVisibilityButtonBackgroundScale.slice(0);\r\n        this.myVisibilityButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myFlagButtonBackgroundScale = PP.vec3_create(0.0125, 0.0125, 1);\r\n        this.myFlagButtonTextPosition = PP.vec3_create(0, 0, 0.007);\r\n        this.myFlagButtonTextScale = PP.vec3_create(0.15, 0.15, 0.15);\r\n\r\n        let distanceBetweenFlagButtons = 0.0075;\r\n        let pinFlagIndex = 0;\r\n        let pinButtonYOffset = this.myVisibilityButtonBackgroundScale[1] + this.myFlagButtonBackgroundScale[1] + distanceBetweenFlagButtons +\r\n            this.myFlagButtonBackgroundScale[1] * (2 * pinFlagIndex) + distanceBetweenFlagButtons * pinFlagIndex;\r\n\r\n        this.myPinButtonPosition = [];\r\n        this.myPinButtonPosition[PP.ToolHandedness.NONE] = {};\r\n        this.myPinButtonPosition[PP.ToolHandedness.NONE].myPosition = this.myVisibilityButtonPosition[PP.ToolHandedness.NONE].myPosition.slice(0);\r\n        this.myPinButtonPosition[PP.ToolHandedness.NONE].myPosition[1] += pinButtonYOffset;\r\n\r\n        this.myPinButtonPosition[PP.ToolHandedness.LEFT] = {};\r\n        this.myPinButtonPosition[PP.ToolHandedness.LEFT].myPosition = this.myVisibilityButtonPosition[PP.ToolHandedness.LEFT].myPosition.slice(0);\r\n        this.myPinButtonPosition[PP.ToolHandedness.LEFT].myPosition[1] += pinButtonYOffset;\r\n\r\n        this.myPinButtonPosition[PP.ToolHandedness.RIGHT] = {};\r\n        this.myPinButtonPosition[PP.ToolHandedness.RIGHT].myPosition = this.myVisibilityButtonPosition[PP.ToolHandedness.RIGHT].myPosition.slice(0);\r\n        this.myPinButtonPosition[PP.ToolHandedness.RIGHT].myPosition[1] += pinButtonYOffset;\r\n\r\n        this.myPinButtonText = \"P\";\r\n\r\n        this.myPinButtonCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myPinButtonCursorTargetPosition[2] = this.myFlagButtonTextPosition[2];\r\n        this.myPinButtonCollisionExtents = this.myFlagButtonBackgroundScale.slice(0);\r\n        this.myPinButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n    }\r\n\r\n    _initializeRuntimeSetup() {\r\n        this._initializeObjectsTransforms();\r\n\r\n        this.myButtonHoverColor = [150 / 255, 150 / 255, 150 / 255, 1];\r\n        this.myButtonDisabledTextColor = this.myBackgroundColor;\r\n        this.myButtonDisabledBackgroundColor = [110 / 255, 110 / 255, 110 / 255, 1];\r\n    }\r\n\r\n    _initializeObjectsTransforms() {\r\n        this.myPivotObjectTransforms = this._createDefaultObjectTransforms();\r\n\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.LEFT].myRotation = PP.quat_create(-0.645, 0.425, 0.25, 0.584);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.LEFT].myRotation.quat_normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.LEFT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.RIGHT].myRotation = PP.quat_create(-0.645, -0.425, -0.25, 0.584);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.RIGHT].myRotation.quat_normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.RIGHT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.LEFT].myRotation = PP.quat_create(-0.645, 0.425, 0.25, 0.584);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.LEFT].myRotation.quat_normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.LEFT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.RIGHT].myRotation = PP.quat_create(-0.645, -0.425, -0.25, 0.584);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.RIGHT].myRotation.quat_normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.RIGHT].myRotation);\r\n\r\n        /*\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.LEFT].myPosition = PP.vec3_create(-0.04, 0.045, -0.055);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.LEFT].myRotation = PP.quat_create(0, 0.536, -0.43, 0.727);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.LEFT].myRotation.quat_normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.LEFT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.RIGHT].myPosition = PP.vec3_create(0.04, 0.045, -0.055);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.RIGHT].myRotation = PP.quat_create(0, -0.536, 0.43, 0.727);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.RIGHT].myRotation.quat_normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.RIGHT].myRotation);\r\n        */\r\n\r\n        this.myWidgetObjectTransforms = this._createDefaultObjectTransforms();\r\n\r\n        this.myWidgetObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.LEFT].myPosition = PP.vec3_create(0.1, 0.23, -0.02);\r\n        this.myWidgetObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.RIGHT].myPosition = PP.vec3_create(0.07, 0.23, -0.02);\r\n\r\n        this.myWidgetObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.LEFT].myPosition = PP.vec3_create(0.1, 0.23, -0.02);\r\n        this.myWidgetObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.RIGHT].myPosition = PP.vec3_create(0.07, 0.23, -0.02);\r\n\r\n        this._myPivotObjectDistanceFromNonVRHead = 0.6;\r\n    }\r\n\r\n    _createDefaultObjectTransforms() {\r\n        let defaultObjectTransforms = [];\r\n\r\n        for (let inputSourceTypeKey in PP.ToolInputSourceType) {\r\n            let inputSourceType = PP.ToolInputSourceType[inputSourceTypeKey];\r\n            defaultObjectTransforms[inputSourceType] = [];\r\n            for (let handednessKey in PP.ToolHandedness) {\r\n                let handedness = PP.ToolHandedness[handednessKey];\r\n                defaultObjectTransforms[inputSourceType][handedness] = {};\r\n                defaultObjectTransforms[inputSourceType][handedness].myPosition = PP.vec3_create(0, 0, 0);\r\n                defaultObjectTransforms[inputSourceType][handedness].myRotation = PP.quat_create(0, 0, 0, 1);\r\n            }\r\n        }\r\n\r\n        return defaultObjectTransforms;\r\n    }\r\n};", "\r\nPP.WidgetFrameUI = class WidgetFrameUI {\r\n\r\n    constructor() {\r\n        this._myInputSourceType = null;\r\n\r\n        this._myParentObject = null;\r\n        this._myIsPinned = false;\r\n\r\n        this._myWidgetVisible = true;\r\n        this._myVisibilityButtonVisible = true;\r\n    }\r\n\r\n    build(parentObject, setup, additionalSetup) {\r\n        this._myParentObject = parentObject;\r\n        this._mySetup = setup;\r\n        this._myAdditionalSetup = additionalSetup;\r\n        this._myPlaneMesh = PP.MeshUtils.createPlaneMesh();\r\n\r\n        this._createSkeleton();\r\n        this._setTransforms();\r\n        this._addComponents();\r\n\r\n        this._setTransformForNonVR();\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    setWidgetVisible(visible) {\r\n        this._myWidgetVisible = visible;\r\n        this.myFlagsButtonPanel.pp_setActiveHierarchy(visible);\r\n        if (visible) {\r\n            this._updateObjectsTransforms(true);\r\n        }\r\n    }\r\n\r\n    setVisibilityButtonVisible(visible) {\r\n        this._myVisibilityButtonVisible = visible;\r\n        this.myVisibilityButtonPanel.pp_setActiveHierarchy(visible);\r\n    }\r\n\r\n    setPinned(pinned) {\r\n        if (pinned != this._myIsPinned) {\r\n            this._myIsPinned = pinned;\r\n            if (this._myIsPinned) {\r\n                this.myPivotObject.pp_setParent(null);\r\n            } else {\r\n                this.myPivotObject.pp_setParent(this.myFixForwardObject);\r\n\r\n                if (!PP.XRUtils.isSessionActive()) {\r\n                    this._setTransformForNonVR();\r\n                }\r\n\r\n                this._updateObjectsTransforms(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        this._updateObjectsTransforms(false);\r\n    }\r\n\r\n    _updateObjectsTransforms(forceRefreshObjectsTransforms) {\r\n        if (PP.XRUtils.isSessionActive()) {\r\n            let inputSourceType = PP.InputUtils.getInputSourceTypeByHandedness(this._myAdditionalSetup.myHandedness);\r\n\r\n            if (inputSourceType != this._myInputSourceType || forceRefreshObjectsTransforms) {\r\n                this._myInputSourceType = inputSourceType;\r\n\r\n                if (!this._myIsPinned) {\r\n                    this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myPosition);\r\n                    this.myPivotObject.resetRotation();\r\n                    this.myPivotObject.rotateObject(this._mySetup.myPivotObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myRotation);\r\n\r\n                    this.myWidgetObject.setTranslationLocal(this._mySetup.myWidgetObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myPosition);\r\n                    this.myWidgetObject.resetRotation();\r\n                    this.myWidgetObject.rotateObject(this._mySetup.myWidgetObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myRotation);\r\n\r\n                    this.myVisibilityButtonPanel.setTranslationLocal(this._mySetup.myVisibilityButtonPosition[this._myAdditionalSetup.myHandedness].myPosition);\r\n                    this.myPinButtonPanel.setTranslationLocal(this._mySetup.myPinButtonPosition[this._myAdditionalSetup.myHandedness].myPosition);\r\n                }\r\n            }\r\n        } else {\r\n            this.myVisibilityButtonPanel.pp_setActiveHierarchy(this._myWidgetVisible || this._myVisibilityButtonVisible);\r\n        }\r\n    }\r\n\r\n    //Skeleton\r\n    _createSkeleton() {\r\n        this.myFixForwardObject = WL.scene.addObject(this._myParentObject);\r\n        this.myFixForwardObject.pp_rotateObject(PP.vec3_create(0, 180, 0));\r\n        this.myPivotObject = WL.scene.addObject(this.myFixForwardObject);\r\n        this.myWidgetObject = WL.scene.addObject(this.myPivotObject);\r\n\r\n        this.myVisibilityButtonPanel = WL.scene.addObject(this.myPivotObject);\r\n        this.myVisibilityButtonBackground = WL.scene.addObject(this.myVisibilityButtonPanel);\r\n        this.myVisibilityButtonText = WL.scene.addObject(this.myVisibilityButtonPanel);\r\n        this.myVisibilityButtonCursorTarget = WL.scene.addObject(this.myVisibilityButtonPanel);\r\n\r\n        this.myFlagsButtonPanel = WL.scene.addObject(this.myPivotObject);\r\n\r\n        this.myPinButtonPanel = WL.scene.addObject(this.myFlagsButtonPanel);\r\n        this.myPinButtonBackground = WL.scene.addObject(this.myPinButtonPanel);\r\n        this.myPinButtonText = WL.scene.addObject(this.myPinButtonPanel);\r\n        this.myPinButtonCursorTarget = WL.scene.addObject(this.myPinButtonPanel);\r\n\r\n        this.myNonVRParentObject = WL.scene.addObject(PP.myPlayerObjects.myNonVRCamera);\r\n        this.myNonVRParentObject.pp_translateLocal(PP.vec3_create(0, 0, -this._mySetup._myPivotObjectDistanceFromNonVRHead));\r\n        this.myNonVRParentObject.pp_lookToLocal(PP.vec3_create(0, 0, 1), PP.vec3_create(0, 1, 0));\r\n\r\n    }\r\n\r\n    //Transforms\r\n    _setTransforms() {\r\n        this.myPivotObject.setDirty();\r\n\r\n        this.myVisibilityButtonPanel.setTranslationLocal(this._mySetup.myVisibilityButtonPosition[this._myAdditionalSetup.myHandedness].myPosition);\r\n        this.myVisibilityButtonBackground.scale(this._mySetup.myVisibilityButtonBackgroundScale);\r\n        this.myVisibilityButtonText.setTranslationLocal(this._mySetup.myVisibilityButtonTextPosition);\r\n        this.myVisibilityButtonText.scale(this._mySetup.myVisibilityButtonTextScale);\r\n        this.myVisibilityButtonCursorTarget.setTranslationLocal(this._mySetup.myVisibilityButtonCursorTargetPosition);\r\n\r\n        this.myPinButtonPanel.setTranslationLocal(this._mySetup.myPinButtonPosition[this._myAdditionalSetup.myHandedness].myPosition);\r\n\r\n        this.myPinButtonBackground.scale(this._mySetup.myFlagButtonBackgroundScale);\r\n        this.myPinButtonText.setTranslationLocal(this._mySetup.myFlagButtonTextPosition);\r\n        this.myPinButtonText.scale(this._mySetup.myFlagButtonTextScale);\r\n        this.myPinButtonCursorTarget.setTranslationLocal(this._mySetup.myPinButtonCursorTargetPosition);\r\n    }\r\n\r\n    //Components\r\n    _addComponents() {\r\n        this.myVisibilityButtonBackgroundComponent = this.myVisibilityButtonBackground.addComponent('mesh');\r\n        this.myVisibilityButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myVisibilityButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myVisibilityButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myVisibilityButtonTextComponent = this.myVisibilityButtonText.addComponent('text');\r\n        this._setupButtonTextComponent(this.myVisibilityButtonTextComponent);\r\n        this.myVisibilityButtonTextComponent.text = this._mySetup.myVisibilityButtonText;\r\n\r\n        this.myVisibilityButtonCursorTargetComponent = this.myVisibilityButtonCursorTarget.addComponent('cursor-target');\r\n        this.myVisibilityButtonCollisionComponent = this.myVisibilityButtonCursorTarget.addComponent('collision');\r\n        this.myVisibilityButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myVisibilityButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myVisibilityButtonCollisionComponent.extents = this._mySetup.myVisibilityButtonCollisionExtents;\r\n\r\n        this.myPinButtonBackgroundComponent = this.myPinButtonBackground.addComponent('mesh');\r\n        this.myPinButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPinButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPinButtonBackgroundComponent.material.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n\r\n        this.myPinButtonTextComponent = this.myPinButtonText.addComponent('text');\r\n        this._setupButtonTextComponent(this.myPinButtonTextComponent);\r\n        this.myPinButtonTextComponent.material.color = this._mySetup.myButtonDisabledTextColor;\r\n        this.myPinButtonTextComponent.text = this._mySetup.myPinButtonText;\r\n\r\n        this.myPinButtonCursorTargetComponent = this.myPinButtonCursorTarget.addComponent('cursor-target');\r\n\r\n        this.myPinButtonCollisionComponent = this.myPinButtonCursorTarget.addComponent('collision');\r\n        this.myPinButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPinButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPinButtonCollisionComponent.extents = this._mySetup.myPinButtonCollisionExtents;\r\n    }\r\n\r\n    _setupButtonTextComponent(textComponent) {\r\n        textComponent.alignment = this._mySetup.myTextAlignment;\r\n        textComponent.justification = this._mySetup.myTextJustification;\r\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\r\n        textComponent.material.color = this._mySetup.myTextColor;\r\n        textComponent.text = \"\";\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        this.myVisibilityButtonPanel.pp_setActiveHierarchy(this._myVisibilityButtonVisible);\r\n\r\n        this._setTransformForVR();\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._setTransformForNonVR();\r\n    }\r\n\r\n    _setTransformForVR() {\r\n        this.myFixForwardObject.pp_setParent(this._myParentObject);\r\n\r\n        this.myFixForwardObject.pp_resetTransformLocal();\r\n        this.myFixForwardObject.pp_rotateObject(PP.vec3_create(0, 180, 0));\r\n\r\n        this._updateObjectsTransforms(true);\r\n    }\r\n\r\n    _setTransformForNonVR() {\r\n        if (!this._myIsPinned) {\r\n            this.myFixForwardObject.pp_setParent(this.myNonVRParentObject);\r\n            this.myFixForwardObject.pp_resetTransformLocal();\r\n\r\n            this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectTransforms[PP.ToolInputSourceType.NONE][PP.ToolHandedness.NONE].myPosition);\r\n            this.myPivotObject.resetRotation();\r\n            this.myPivotObject.rotateObject(this._mySetup.myPivotObjectTransforms[PP.ToolInputSourceType.NONE][PP.ToolHandedness.NONE].myRotation);\r\n\r\n            this.myWidgetObject.setTranslationLocal(this._mySetup.myWidgetObjectTransforms[PP.ToolInputSourceType.NONE][PP.ToolHandedness.NONE].myPosition);\r\n            this.myWidgetObject.resetRotation();\r\n            this.myWidgetObject.rotateObject(this._mySetup.myWidgetObjectTransforms[PP.ToolInputSourceType.NONE][PP.ToolHandedness.NONE].myRotation);\r\n\r\n            this.myVisibilityButtonPanel.setTranslationLocal(this._mySetup.myVisibilityButtonPosition[PP.ToolHandedness.NONE].myPosition);\r\n            this.myPinButtonPanel.setTranslationLocal(this._mySetup.myPinButtonPosition[PP.ToolHandedness.NONE].myPosition);\r\n        }\r\n    }\r\n};", "\r\nPP.WidgetFrame = class WidgetFrame {\r\n\r\n    constructor(widgetLetterID, buttonsColumnIndex) {\r\n        this.myIsWidgetVisible = true;\r\n        this.myIsPinned = false;\r\n\r\n        this._mySetup = new PP.WidgetFrameSetup(widgetLetterID, buttonsColumnIndex);\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myUI = new PP.WidgetFrameUI();\r\n        this._myShowVisibilityButton = false;\r\n\r\n        this._myWidgetVisibleChangedCallbacks = new Map();      // Signature: callback(isWidgetVisible)\r\n        this._myPinChangedCallbacks = new Map();                // Signature: callback(isPinned)\r\n    }\r\n\r\n    getWidgetObject() {\r\n        return this._myUI.myWidgetObject;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.myIsWidgetVisible = !visible;\r\n        this._toggleVisibility(false, true);\r\n    }\r\n\r\n    isVisible() {\r\n        return this.myIsWidgetVisible;\r\n    }\r\n\r\n    toggleVisibility() {\r\n        this._toggleVisibility(false, true);\r\n    }\r\n\r\n    togglePin() {\r\n        this._togglePin(false);\r\n    }\r\n\r\n    registerWidgetVisibleChangedEventListener(id, callback) {\r\n        this._myWidgetVisibleChangedCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterWidgetVisibleChangedEventListener(id) {\r\n        this._myWidgetVisibleChangedCallbacks.delete(id);\r\n    }\r\n\r\n    registerPinChangedEventListener(id, callback) {\r\n        this._myPinChangedCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterPinChangedEventListener(id) {\r\n        this._myPinChangedCallbacks.delete(id);\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myUI.build(parentObject, this._mySetup, additionalSetup);\r\n        this._myUI.setVisibilityButtonVisible(additionalSetup.myShowVisibilityButton);\r\n        this._myShowVisibilityButton = additionalSetup.myShowVisibilityButton;\r\n        if (!additionalSetup.myShowOnStart) {\r\n            this._toggleVisibility(false, false);\r\n        }\r\n\r\n        this._addListeners();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myUI.update(dt);\r\n    }\r\n\r\n    _addListeners() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myPinButtonCursorTargetComponent.addClickFunction(this._togglePin.bind(this, true));\r\n        ui.myPinButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPinButtonBackgroundComponent.material));\r\n        ui.myPinButtonCursorTargetComponent.addUnHoverFunction(this._pinUnHover.bind(this, ui.myPinButtonBackgroundComponent.material));\r\n\r\n        ui.myVisibilityButtonCursorTargetComponent.addClickFunction(this._toggleVisibility.bind(this, true, true));\r\n        ui.myVisibilityButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myVisibilityButtonBackgroundComponent.material));\r\n        ui.myVisibilityButtonCursorTargetComponent.addUnHoverFunction(this._visibilityUnHover.bind(this, ui.myVisibilityButtonBackgroundComponent.material));\r\n    }\r\n\r\n    _toggleVisibility(isButton, notify) {\r\n        this.myIsWidgetVisible = !this.myIsWidgetVisible;\r\n\r\n        this._myUI.setWidgetVisible(this.myIsWidgetVisible);\r\n\r\n        let textMaterial = this._myUI.myVisibilityButtonTextComponent.material;\r\n        let backgroundMaterial = this._myUI.myVisibilityButtonBackgroundComponent.material;\r\n        if (this.myIsWidgetVisible) {\r\n            textMaterial.color = this._mySetup.myDefaultTextColor;\r\n            if (!isButton) {\r\n                backgroundMaterial.color = this._mySetup.myBackgroundColor;\r\n            }\r\n        } else {\r\n            textMaterial.color = this._mySetup.myButtonDisabledTextColor;\r\n            if (!isButton) {\r\n                backgroundMaterial.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n            }\r\n        }\r\n\r\n        if (notify) {\r\n            for (let callback of this._myWidgetVisibleChangedCallbacks.values()) {\r\n                callback(this.myIsWidgetVisible);\r\n            }\r\n        }\r\n\r\n        this._myUI.setVisibilityButtonVisible(this._myShowVisibilityButton);\r\n    }\r\n\r\n    _togglePin(isButton) {\r\n        if (this.myIsWidgetVisible) {\r\n            this.myIsPinned = !this.myIsPinned;\r\n\r\n            this._myUI.setPinned(this.myIsPinned);\r\n\r\n            let textMaterial = this._myUI.myPinButtonTextComponent.material;\r\n            let backgroundMaterial = this._myUI.myPinButtonBackgroundComponent.material;\r\n            if (this.myIsPinned) {\r\n                textMaterial.color = this._mySetup.myDefaultTextColor;\r\n                if (!isButton) {\r\n                    backgroundMaterial.color = this._mySetup.myBackgroundColor;\r\n                }\r\n            } else {\r\n                textMaterial.color = this._mySetup.myButtonDisabledTextColor;\r\n                if (!isButton) {\r\n                    backgroundMaterial.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n                }\r\n            }\r\n\r\n            for (let callback of this._myPinChangedCallbacks.values()) {\r\n                callback(this.myIsPinned);\r\n            }\r\n        }\r\n    }\r\n\r\n    _genericHover(material) {\r\n        material.color = this._mySetup.myButtonHoverColor;\r\n    }\r\n\r\n    _visibilityUnHover(material) {\r\n        if (this.myIsWidgetVisible) {\r\n            material.color = this._mySetup.myBackgroundColor;\r\n        } else {\r\n            material.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n        }\r\n    }\r\n\r\n    _pinUnHover(material) {\r\n        if (this.myIsPinned) {\r\n            material.color = this._mySetup.myBackgroundColor;\r\n        } else {\r\n            material.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n        }\r\n    }\r\n};", "LocomotionUtils = {\r\n    EPSILON_NUMBER: Math.PP_EPSILON_NUMBER,\r\n    EPSILON_DEGREES: Math.PP_EPSILON_DEGREES,\r\n\r\n    computeSurfacePerceivedAngle: function () {\r\n        let forwardOnSurface = PP.vec3_create();\r\n        let verticalDirection = PP.vec3_create();\r\n        return function computeSurfacePerceivedAngle(surfaceNormal, forward, up, isGround = true) {\r\n            let surfacePerceivedAngle = 0;\r\n\r\n            verticalDirection.vec3_copy(up);\r\n            if (!isGround) {\r\n                verticalDirection.vec3_negate(verticalDirection);\r\n            }\r\n\r\n            let surfaceAngle = surfaceNormal.vec3_angle(verticalDirection);\r\n            if (surfaceAngle <= Math.PP_EPSILON_DEGREES) {\r\n                surfaceAngle = 0;\r\n            } else if (surfaceAngle >= 180 - Math.PP_EPSILON_DEGREES) {\r\n                surfaceAngle = 180;\r\n            }\r\n\r\n            forwardOnSurface = forward.vec3_projectOnPlaneAlongAxis(surfaceNormal, up, forwardOnSurface);\r\n            surfacePerceivedAngle = forwardOnSurface.vec3_angle(forward);\r\n\r\n            let isFartherOnUp = forwardOnSurface.vec3_isFartherAlongAxis(forward, up);\r\n            if ((!isFartherOnUp && isGround) || (isFartherOnUp && !isGround)) {\r\n                surfacePerceivedAngle *= -1;\r\n            }\r\n\r\n            if (Math.abs(surfacePerceivedAngle) >= surfaceAngle) {\r\n                if (surfaceAngle != 0 && surfaceAngle != 180) {\r\n                    surfacePerceivedAngle = surfaceAngle * Math.pp_sign(surfacePerceivedAngle);\r\n                } else {\r\n                    surfacePerceivedAngle = surfaceAngle;\r\n                }\r\n            }\r\n\r\n            return surfacePerceivedAngle;\r\n        };\r\n    }()\r\n};", "PlayerHeadManagerParams = class PlayerHeadManagerParams {\r\n    constructor() {\r\n        this.mySessionChangeResyncEnabled = false;\r\n\r\n        this.myBlurEndResyncEnabled = false;\r\n        this.myBlurEndResyncRotation = false;\r\n\r\n        this.myNextEnterSessionResyncHeight = false;\r\n        this.myEnterSessionResyncHeight = false;\r\n\r\n        this.myExitSessionResyncHeight = false;\r\n        this.myExitSessionResyncVerticalAngle = false;\r\n        this.myExitSessionRemoveRightTilt = false; // for now right tilt is removed even if this setting is false, if the vertical angle has to be adjusted\r\n        this.myExitSessionAdjustMaxVerticalAngle = false;\r\n        this.myExitSessionMaxVerticalAngle = 0;\r\n\r\n        this.myHeightOffsetVRWithFloor = null;\r\n        this.myHeightOffsetVRWithoutFloor = null;\r\n        this.myHeightOffsetNonVR = null;\r\n\r\n        this.myNextEnterSessionFloorHeight = null;\r\n        this.myEnterSessionFloorHeight = null;\r\n\r\n        this.myRotateFeetKeepUp = false;\r\n\r\n        this.myForeheadExtraHeight = 0;\r\n        // can be used to always add a bit of height, for example to compensate the fact \r\n        // that the default height is actually the eye height and you may want to also add a forehead offset\r\n\r\n        this.myDebugActive = false;\r\n    }\r\n};\r\n\r\n// could be intended as the generic player body manager (maybe with hands and stuff also)\r\nPlayerHeadManager = class PlayerHeadManager {\r\n    constructor(params = new PlayerHeadManagerParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myCurrentHead = PP.myPlayerObjects.myNonVRHead;\r\n\r\n        this._mySessionChangeResyncHeadTransform = null;\r\n        this._myBlurRecoverHeadTransform = null;\r\n        this._myCurrentHeadTransformQuat = PP.quat2_create();\r\n        this._myPreviousHeadTransformQuat = PP.quat2_create();\r\n\r\n        this._myDelaySessionChangeResyncCounter = 0; // needed because VR head takes some frames to get the tracked position\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n        this._myDelayBlurEndResyncTimer = new PP.Timer(5, false);\r\n        this._myVisibilityHidden = false;\r\n\r\n        this._mySessionActive = false;\r\n        this._mySessionBlurred = false;\r\n\r\n        this._myIsSyncedDelayCounter = 0;\r\n\r\n        // Setup\r\n\r\n        this._myResyncCounterFrames = 3;\r\n        this._myIsSyncedDelayCounterFrames = 1;\r\n    }\r\n\r\n    start() {\r\n        this._updateHeightOffset();\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._updateHeightOffset();\r\n    }\r\n\r\n    getPlayer() {\r\n        return PP.myPlayerObjects.myPlayer;\r\n    }\r\n\r\n    getHead() {\r\n        return this._myCurrentHead;\r\n    }\r\n\r\n    getHeightHead() {\r\n        return this.getHeightEyes() + this._myParams.myForeheadExtraHeight;\r\n    }\r\n\r\n    getHeightEyes() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getTransformFeetQuat(outTransformFeetQuat = PP.quat2_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getTransformHeadQuat(outTransformFeetQuat = PP.quat2_create()) {\r\n        return this.getHead().pp_getTransformQuat(outTransformFeetQuat);\r\n    }\r\n\r\n    getPositionFeet(outPositionFeet = PP.vec3_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getPositionHead(outPositionHead = PP.vec3_create()) {\r\n        return this._myCurrentHead.pp_getPosition(outPositionHead);\r\n    }\r\n\r\n    getRotationFeetQuat(outRotationFeetQuat = PP.quat_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getRotationHeadQuat(outRotationHeadQuat = PP.quat_create()) {\r\n        return this.getHead().pp_getRotationQuat(outRotationHeadQuat);\r\n    }\r\n\r\n    isSynced() {\r\n        return this._myIsSyncedDelayCounter == 0 && this._myDelaySessionChangeResyncCounter == 0 && this._myDelayBlurEndResyncCounter == 0 && !this._myDelayBlurEndResyncTimer.isRunning() && !this._mySessionBlurred;\r\n    }\r\n\r\n    setHeight(height, setOnlyForActiveOne = false) {\r\n        if (!setOnlyForActiveOne || !this._mySessionActive) {\r\n            this._myParams.myHeightOffsetNonVR = height;\r\n        }\r\n\r\n        if (!setOnlyForActiveOne || this._mySessionActive) {\r\n            this._myParams.myHeightOffsetVRWithoutFloor = height;\r\n\r\n            if (this._myParams.myHeightOffsetVRWithFloor == null) {\r\n                this._myParams.myHeightOffsetVRWithFloor = 0;\r\n            }\r\n            let isFloor = PP.XRUtils.isReferenceSpaceLocalFloor() || PP.XRUtils.isDeviceEmulated();\r\n            if (this._mySessionActive && isFloor) {\r\n                this._myParams.myHeightOffsetVRWithFloor = this._myParams.myHeightOffsetVRWithFloor + (height - this.getHeight());\r\n            } else if (!this._mySessionActive) {\r\n                this._myParams.myNextEnterSessionFloorHeight = height;\r\n            }\r\n        }\r\n\r\n        this._updateHeightOffset();\r\n    }\r\n\r\n    moveFeet(movement) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    moveHead(movement) {\r\n        this.moveFeet(movement);\r\n    }\r\n\r\n    teleportPositionHead(teleportPosition) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    teleportPositionFeet(teleportPosition) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    teleportPlayerToHeadTransformQuat(headTransformQuat) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    rotateFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        // implemented outside class definition \r\n    }\r\n\r\n    rotateHeadQuat(rotationQuat) {\r\n        // #TODO rotate feet with this and then rotate head freely if possible\r\n        // implemented outside class definition \r\n    }\r\n\r\n    canRotateFeet() {\r\n        return true;\r\n    }\r\n\r\n    canRotateHead() {\r\n        return !this._mySessionActive;\r\n    }\r\n\r\n    setRotationFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        // implemented outside class definition \r\n    }\r\n\r\n    setRotationHeadQuat() {\r\n        // implemented outside class definition \r\n    }\r\n\r\n    lookAtFeet(position, up = null, keepUpOverride = null) {\r\n        // implemented outside class definition \r\n    }\r\n\r\n    lookToFeet(direction, up = null, keepUpOverride = null) {\r\n        // implemented outside class definition \r\n    }\r\n\r\n    lookAtHead(position, up = null) {\r\n    }\r\n\r\n    lookToHead(direction, up = null) {\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myIsSyncedDelayCounter != 0) {\r\n            this._myIsSyncedDelayCounter--;\r\n            this._myIsSyncedDelayCounter = Math.max(0, this._myIsSyncedDelayCounter);\r\n        }\r\n\r\n        if (this._myDelaySessionChangeResyncCounter > 0) {\r\n            this._myDelaySessionChangeResyncCounter--;\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                this._sessionChangeResync();\r\n                this._myIsSyncedDelayCounter = this._myIsSyncedDelayCounterFrames;\r\n            }\r\n        }\r\n\r\n        if (this._myDelayBlurEndResyncCounter > 0 && !this._myDelayBlurEndResyncTimer.isRunning()) {\r\n            this._myDelayBlurEndResyncCounter--;\r\n            if (this._myDelayBlurEndResyncCounter == 0) {\r\n                this._blurEndResync();\r\n                this._myIsSyncedDelayCounter = this._myIsSyncedDelayCounterFrames;\r\n            }\r\n        }\r\n\r\n        // not really used since visibility hidden end is not considered a special case anymore\r\n        if (this._myDelayBlurEndResyncTimer.isRunning()) {\r\n            if (this._myDelayBlurEndResyncCounter > 0) {\r\n                this._myDelayBlurEndResyncCounter--;\r\n            } else {\r\n                this._myDelayBlurEndResyncTimer.update(dt);\r\n                if (this._myDelayBlurEndResyncTimer.isDone()) {\r\n                    this._blurEndResync();\r\n                    this._myIsSyncedDelayCounter = this._myIsSyncedDelayCounterFrames;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.isSynced()) {\r\n            this._myPreviousHeadTransformQuat.quat2_copy(this._myCurrentHeadTransformQuat);\r\n            this._myCurrentHead.pp_getTransformQuat(this._myCurrentHeadTransformQuat);\r\n        }\r\n\r\n        if (this._myParams.myDebugActive) {\r\n            this._debugUpdate(dt);\r\n        }\r\n    }\r\n\r\n    _debugUpdate(dt) {\r\n        PP.myDebugVisualManager.drawLineEnd(0, this.getPositionFeet(), this.getPositionHead(), PP.vec4_create(1, 0, 0, 1), 0.01);\r\n\r\n        console.error(this.getHeightEyes());\r\n    }\r\n};\r\n\r\nPlayerHeadManager.prototype.getHeightEyes = function () {\r\n    let headPosition = PP.vec3_create();\r\n    return function getHeightEyes() {\r\n        headPosition = this._myCurrentHead.pp_getPosition(headPosition);\r\n        let eyesHeight = this._getPositionHeight(headPosition);\r\n\r\n        return eyesHeight;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.getTransformFeetQuat = function () {\r\n    let feetPosition = PP.vec3_create();\r\n    let feetRotationQuat = PP.quat_create();\r\n    return function getTransformFeetQuat(outTransformFeetQuat = PP.quat2_create()) {\r\n        outTransformFeetQuat.quat2_setPositionRotationQuat(this.getPositionFeet(feetPosition), this.getRotationFeetQuat(feetRotationQuat));\r\n        return outTransformFeetQuat;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.getRotationFeetQuat = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let headForward = PP.vec3_create();\r\n    return function getRotationFeetQuat(outRotationFeetQuat = PP.quat_create()) {\r\n        playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n        headForward = this._myCurrentHead.pp_getForward(headForward);\r\n\r\n        // feet are considered to always be flat on the player up\r\n        let angleWithUp = headForward.vec3_angle(playerUp);\r\n        let mingAngle = 10;\r\n        if (angleWithUp < mingAngle) {\r\n            headForward = this._myCurrentHead.pp_getDown(headForward);\r\n        } else if (angleWithUp > 180 - mingAngle) {\r\n            headForward = this._myCurrentHead.pp_getUp(headForward);\r\n        }\r\n\r\n        headForward = headForward.vec3_removeComponentAlongAxis(playerUp, headForward);\r\n        headForward.vec3_normalize(headForward);\r\n\r\n        outRotationFeetQuat.quat_setUp(playerUp, headForward);\r\n        return outRotationFeetQuat;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.getPositionFeet = function () {\r\n    let headPosition = PP.vec3_create();\r\n    let playerUp = PP.vec3_create();\r\n    return function getPositionFeet(outPositionFeet = PP.vec3_create()) {\r\n        headPosition = this._myCurrentHead.pp_getPosition(headPosition);\r\n        let headHeight = this._getPositionHeight(headPosition);\r\n\r\n        playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n        outPositionFeet = headPosition.vec3_sub(playerUp.vec3_scale(headHeight, outPositionFeet), outPositionFeet);\r\n\r\n        return outPositionFeet;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.moveFeet = function (movement) {\r\n    PP.myPlayerObjects.myPlayer.pp_translate(movement);\r\n};\r\n\r\nPlayerHeadManager.prototype.rotateFeetQuat = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let rotationAxis = PP.vec3_create();\r\n    let currentHeadPosition = PP.vec3_create();\r\n    let currentFeetRotation = PP.quat_create();\r\n    let newFeetRotation = PP.quat_create();\r\n    let fixedNewFeetRotation = PP.quat_create();\r\n    let newFeetForward = PP.vec3_create();\r\n    let fixedRotation = PP.quat_create();\r\n    let newHeadPosition = PP.vec3_create();\r\n    let headAdjustmentMovement = PP.vec3_create();\r\n    return function rotateFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        let angle = rotationQuat.quat_getAngleRadians();\r\n        if (angle <= 0.00001) {\r\n            return;\r\n        }\r\n\r\n        currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n        playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n        rotationAxis = rotationQuat.quat_getAxis(rotationAxis);\r\n\r\n        if (!rotationAxis.vec3_isOnAxis(playerUp) &&\r\n            ((keepUpOverride == null && this._myParams.myFeetRotationKeepUp) || (keepUpOverride))) {\r\n            currentFeetRotation = this.getRotationFeetQuat(currentFeetRotation);\r\n\r\n            newFeetRotation = currentFeetRotation.quat_rotateQuat(rotationQuat, newFeetRotation);\r\n            newFeetForward = newFeetRotation.quat_getForward(newFeetForward);\r\n\r\n            fixedNewFeetRotation.quat_copy(newFeetRotation);\r\n            fixedNewFeetRotation.quat_setUp(playerUp, newFeetForward);\r\n\r\n            fixedRotation = currentFeetRotation.quat_rotationToQuat(fixedNewFeetRotation, fixedRotation);\r\n        } else {\r\n            fixedRotation.quat_copy(rotationQuat);\r\n        }\r\n\r\n        PP.myPlayerObjects.myPlayer.pp_rotateAroundQuat(fixedRotation, currentHeadPosition);\r\n\r\n        newHeadPosition = this._myCurrentHead.pp_getPosition(newHeadPosition);\r\n\r\n        headAdjustmentMovement = currentHeadPosition.vec3_sub(newHeadPosition, headAdjustmentMovement);\r\n        if (headAdjustmentMovement.vec3_length() > 0.00001) {\r\n            this.moveFeet(headAdjustmentMovement);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.rotateHeadQuat = function () {\r\n    let newHeadRotation = PP.quat_create();\r\n    let newHeadUp = PP.vec3_create();\r\n    return function rotateHeadQuat(rotationQuat) {\r\n        if (this.canRotateHead()) {\r\n            this._myCurrentHead.pp_rotateQuat(rotationQuat);\r\n            newHeadRotation = this._myCurrentHead.pp_getRotationQuat(newHeadRotation);\r\n\r\n            PP.myPlayerObjects.myHead.pp_setRotationQuat(newHeadRotation);\r\n\r\n            newHeadRotation = newHeadRotation.quat_rotateAxisRadians(Math.PI, newHeadRotation.quat_getUp(newHeadUp), newHeadRotation);\r\n            PP.myPlayerObjects.myNonVRCamera.pp_setRotationQuat(newHeadRotation);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.setRotationFeetQuat = function () {\r\n    let currentRotationQuat = PP.quat_create();\r\n    let rotationQuatToRotate = PP.quat_create();\r\n    return function setRotationFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        currentRotationQuat = this.getRotationFeetQuat(currentRotationQuat);\r\n        rotationQuatToRotate = currentRotationQuat.quat_rotationToQuat(rotationQuat, rotationQuatToRotate);\r\n        this.rotateFeetQuat(rotationQuatToRotate, keepUpOverride);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.setRotationHeadQuat = function () {\r\n    let currentRotationQuat = PP.quat_create();\r\n    let rotationQuatToRotate = PP.quat_create();\r\n    return function setRotationHeadQuat(rotationQuat) {\r\n        currentRotationQuat = this.getRotationHeadQuat(currentRotationQuat);\r\n        rotationQuatToRotate = currentRotationQuat.quat_rotationToQuat(rotationQuat, rotationQuatToRotate);\r\n        this.rotateHeadQuat(rotationQuatToRotate);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.teleportPositionHead = function () {\r\n    let currentHeadPosition = PP.vec3_create();\r\n    let teleportMovementToPerform = PP.vec3_create();\r\n    return function teleportPositionHead(teleportPosition) {\r\n        currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n        teleportMovementToPerform = teleportPosition.vec3_sub(currentHeadPosition, teleportMovementToPerform);\r\n        this.moveFeet(teleportMovementToPerform);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.teleportPositionFeet = function () {\r\n    let currentFeetPosition = PP.vec3_create();\r\n    let teleportMovementToPerform = PP.vec3_create();\r\n    return function teleportPositionFeet(teleportPosition) {\r\n        currentFeetPosition = this.getPositionFeet(currentFeetPosition);\r\n        teleportMovementToPerform = teleportPosition.vec3_sub(currentFeetPosition, teleportMovementToPerform);\r\n        this.moveFeet(teleportMovementToPerform);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.teleportPlayerToHeadTransformQuat = function () {\r\n    let headPosition = PP.vec3_create();\r\n    let playerUp = PP.vec3_create();\r\n    let flatCurrentPlayerPosition = PP.vec3_create();\r\n    let flatNewPlayerPosition = PP.vec3_create();\r\n    let teleportMovement = PP.vec3_create();\r\n    let playerForward = PP.vec3_create();\r\n    let headForward = PP.vec3_create();\r\n    let headForwardNegated = PP.vec3_create();\r\n    let rotationToPerform = PP.quat_create();\r\n    return function teleportPlayerToHeadTransformQuat(headTransformQuat) {\r\n        headPosition = headTransformQuat.quat2_getPosition(headPosition);\r\n\r\n        playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n        flatCurrentPlayerPosition = PP.myPlayerObjects.myPlayer.pp_getPosition(flatCurrentPlayerPosition).vec3_removeComponentAlongAxis(playerUp, flatCurrentPlayerPosition);\r\n        flatNewPlayerPosition = headPosition.vec3_removeComponentAlongAxis(playerUp, flatNewPlayerPosition);\r\n\r\n        teleportMovement = flatNewPlayerPosition.vec3_sub(flatCurrentPlayerPosition, teleportMovement);\r\n        PP.myPlayerObjects.myPlayer.pp_translate(teleportMovement);\r\n\r\n        playerForward = PP.myPlayerObjects.myPlayer.pp_getForward(playerForward);\r\n        headForward = headTransformQuat.quat2_getForward(headForward);\r\n        headForwardNegated = headForward.vec3_negate(headForwardNegated); // the head is rotated 180 degrees from the player for rendering reasons\r\n\r\n        rotationToPerform = playerForward.vec3_rotationToPivotedQuat(headForwardNegated, playerUp, rotationToPerform);\r\n\r\n        PP.myPlayerObjects.myPlayer.pp_rotateQuat(rotationToPerform);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.lookAtFeet = function () {\r\n    let direction = PP.vec3_create();\r\n    let feetPosition = PP.vec3_create();\r\n    return function lookAtFeet(position, up = null, keepUpOverride = null) {\r\n        feetPosition = this.getPositionFeet(feetPosition);\r\n        direction = position.vec3_sub(feetPosition, direction).vec3_normalize(direction);\r\n\r\n        this.lookToFeet(direction, up, keepUpOverride);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.lookToFeet = function () {\r\n    let feetRotation = PP.quat_create();\r\n    return function lookToFeet(direction, up = null, keepUpOverride = null) {\r\n        feetRotation = this.getRotationFeetQuat(feetRotation);\r\n        feetRotation.quat_setForward(direction, up);\r\n        this.setRotationFeetQuat(feetRotation, keepUpOverride);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.lookAtHead = function () {\r\n    let direction = PP.vec3_create();\r\n    let headPosition = PP.vec3_create();\r\n    return function lookAtHead(position, up = null) {\r\n        headPosition = this.getPositionHead(headPosition);\r\n        direction = position.vec3_sub(headPosition, direction).vec3_normalize(direction);\r\n\r\n        this.lookToHead(direction, up);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.lookToHead = function () {\r\n    let headRotation = PP.quat_create();\r\n    return function lookToHead(direction, up = null) {\r\n        headRotation = this.getRotationHeadQuat(headRotation);\r\n        headRotation.quat_setForward(direction, up);\r\n        this.setRotationHeadQuat(headRotation);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._getPositionHeight = function () {\r\n    let playerPosition = PP.vec3_create();\r\n    let playerUp = PP.vec3_create();\r\n    let heightVector = PP.vec3_create();\r\n    return function _getPositionHeight(position) {\r\n        playerPosition = PP.myPlayerObjects.myPlayer.pp_getPosition(playerPosition);\r\n        playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n\r\n        heightVector = position.vec3_sub(playerPosition, heightVector).vec3_componentAlongAxis(playerUp, heightVector);\r\n        let height = heightVector.vec3_length();\r\n        if (!playerUp.vec3_isConcordant(heightVector)) {\r\n            height = -height;\r\n        }\r\n\r\n        return height;\r\n    };\r\n}();\r\n\r\n// #TODO what happens if the player go in the blurred state before wle has loaded?\r\nPlayerHeadManager.prototype._onXRSessionStart = function () {\r\n    return function _onXRSessionStart(session) {\r\n        this._myBlurRecoverHeadTransform = null;\r\n        this._myVisibilityHidden = false;\r\n\r\n        this._myDelaySessionChangeResyncCounter = 0;\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n        this._myDelayBlurEndResyncTimer.reset();\r\n\r\n        session.requestReferenceSpace(WebXR.refSpace).then(function (referenceSpace) {\r\n            if (referenceSpace.addEventListener != null) {\r\n                referenceSpace.addEventListener(\"reset\", this._onViewReset.bind(this));\r\n            }\r\n        }.bind(this));\r\n\r\n        session.addEventListener('visibilitychange', function (event) {\r\n            if (event.session.visibilityState != \"visible\") {\r\n                if (!this._mySessionBlurred) {\r\n                    this._onXRSessionBlurStart(event.session);\r\n                }\r\n\r\n                this._myVisibilityHidden = session.visibilityState == \"hidden\";\r\n            } else {\r\n                if (this._mySessionBlurred) {\r\n                    this._onXRSessionBlurEnd(event.session);\r\n                }\r\n\r\n                this._myVisibilityHidden = false;\r\n            }\r\n        }.bind(this));\r\n\r\n        if (this._myParams.mySessionChangeResyncEnabled) {\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                let previousHeadObject = this._myCurrentHead;\r\n                this._mySessionChangeResyncHeadTransform = previousHeadObject.pp_getTransformQuat();\r\n            }\r\n\r\n            this._myDelaySessionChangeResyncCounter = this._myResyncCounterFrames;\r\n        } else {\r\n            this._myDelaySessionChangeResyncCounter = 0;\r\n            this._mySessionChangeResyncHeadTransform = null;\r\n        }\r\n\r\n        this._myCurrentHead = PP.myPlayerObjects.myVRHead;\r\n\r\n        this._mySessionActive = true;\r\n        this._mySessionBlurred = false;\r\n\r\n        this._updateHeightOffset();\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._onXRSessionEnd = function () {\r\n    return function _onXRSessionEnd(session) {\r\n        if (this._myParams.mySessionChangeResyncEnabled) {\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                let previousHeadTransform = this._myCurrentHead.pp_getTransformQuat();\r\n\r\n                if (this._myBlurRecoverHeadTransform != null) {\r\n                    previousHeadTransform = this._myBlurRecoverHeadTransform;\r\n                }\r\n\r\n                this._mySessionChangeResyncHeadTransform = previousHeadTransform;\r\n            }\r\n\r\n            this._myDelaySessionChangeResyncCounter = this._myResyncCounterFrames;\r\n        } else {\r\n            this._myDelaySessionChangeResyncCounter = 0;\r\n            this._mySessionChangeResyncHeadTransform = null;\r\n        }\r\n\r\n        this._myBlurRecoverHeadTransform = null;\r\n        this._myVisibilityHidden = false;\r\n\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n        this._myDelayBlurEndResyncTimer.reset();\r\n\r\n        this._myCurrentHead = PP.myPlayerObjects.myNonVRHead;\r\n\r\n        this._mySessionActive = false;\r\n        this._mySessionBlurred = false;\r\n\r\n        this._updateHeightOffset();\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._onXRSessionBlurStart = function () {\r\n    return function _onXRSessionBlurStart(session) {\r\n        if (this._myParams.myBlurEndResyncEnabled && this._myBlurRecoverHeadTransform == null && this._mySessionActive) {\r\n            if (this._myDelaySessionChangeResyncCounter > 0) {\r\n                this._myBlurRecoverHeadTransform = this._mySessionChangeResyncHeadTransform;\r\n            } else {\r\n                this._myBlurRecoverHeadTransform = this._myCurrentHead.pp_getTransformQuat();\r\n            }\r\n        } else if (!this._mySessionActive || !this._myParams.myBlurEndResyncEnabled) {\r\n            this._myBlurRecoverHeadTransform = null;\r\n        }\r\n\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n\r\n        this._mySessionBlurred = true;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._onXRSessionBlurEnd = function () {\r\n    return function _onXRSessionBlurEnd(session) {\r\n        if (this._myDelaySessionChangeResyncCounter == 0) {\r\n            if (this._myParams.myBlurEndResyncEnabled && this._myBlurRecoverHeadTransform != null && this._mySessionActive) {\r\n                this._myDelayBlurEndResyncCounter = this._myResyncCounterFrames;\r\n                if (this._myVisibilityHidden) {\r\n                    // this._myDelayBlurEndResyncTimer.start();\r\n\r\n                    // this was added because on the end of hidden u can have the resync delay cause of the guardian resync\r\n                    // but I just decided to skip this since it's not reliable and the guardian resync can happen in other cases\r\n                    // with no notification anyway\r\n                }\r\n            } else {\r\n                this._myBlurRecoverHeadTransform = null;\r\n                this._myDelayBlurEndResyncCounter = 0;\r\n            }\r\n        } else {\r\n            this._myDelaySessionChangeResyncCounter = this._myResyncCounterFrames;\r\n            this._myBlurRecoverHeadTransform = null;\r\n        }\r\n\r\n        this._mySessionBlurred = false;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._onViewReset = function () {\r\n    return function _onViewReset() {\r\n        if (this._mySessionActive && this.isSynced()) {\r\n            this.teleportPlayerToHeadTransformQuat(this._myPreviousHeadTransformQuat);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._blurEndResync = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let currentHeadPosition = PP.vec3_create();\r\n    let recoverHeadPosition = PP.vec3_create();\r\n    let flatCurrentHeadPosition = PP.vec3_create();\r\n    let flatRecoverHeadPosition = PP.vec3_create();\r\n    let recoverMovement = PP.vec3_create();\r\n    let recoverHeadForward = PP.vec3_create();\r\n    let currentHeadForward = PP.vec3_create();\r\n    let rotationToPerform = PP.quat_create();\r\n    return function _blurEndResync() {\r\n        if (this._myBlurRecoverHeadTransform != null) {\r\n            if (this._mySessionChangeResyncHeadTransform != null) {\r\n                this._myBlurRecoverHeadTransform = null;\r\n                this._sessionChangeResync();\r\n            } else {\r\n                playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n\r\n                currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n                recoverHeadPosition = this._myBlurRecoverHeadTransform.quat2_getPosition(recoverHeadPosition);\r\n\r\n                flatCurrentHeadPosition = currentHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatCurrentHeadPosition);\r\n                flatRecoverHeadPosition = recoverHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatRecoverHeadPosition);\r\n\r\n                recoverMovement = flatRecoverHeadPosition.vec3_sub(flatCurrentHeadPosition, recoverMovement);\r\n                this.moveFeet(recoverMovement);\r\n\r\n                recoverHeadForward = this._myBlurRecoverHeadTransform.quat2_getForward(recoverHeadForward);\r\n                currentHeadForward = this._myCurrentHead.pp_getForward(currentHeadForward);\r\n                rotationToPerform = currentHeadForward.vec3_rotationToPivotedQuat(recoverHeadForward, playerUp, rotationToPerform);\r\n\r\n                if (this._myParams.myBlurEndResyncRotation) {\r\n                    this.rotateFeetQuat(rotationToPerform);\r\n                }\r\n\r\n                this._myBlurRecoverHeadTransform = null;\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._sessionChangeResync = function () {\r\n    let currentHeadPosition = PP.vec3_create();\r\n    let resyncHeadPosition = PP.vec3_create();\r\n    let resyncHeadRotation = PP.quat_create();\r\n    let playerUp = PP.vec3_create();\r\n    let flatCurrentHeadPosition = PP.vec3_create();\r\n    let flatResyncHeadPosition = PP.vec3_create();\r\n    let resyncMovement = PP.vec3_create();\r\n    let resyncHeadForward = PP.vec3_create();\r\n    let resyncHeadUp = PP.vec3_create();\r\n    let resyncHeadRight = PP.vec3_create();\r\n    let playerPosition = PP.vec3_create();\r\n    let newPlayerPosition = PP.vec3_create();\r\n    let fixedHeadRight = PP.vec3_create();\r\n    let fixedHeadRightNegate = PP.vec3_create();\r\n    let fixedHeadUp = PP.vec3_create();\r\n    let fixedHeadForward = PP.vec3_create();\r\n    let fixedHeadRotation = PP.quat_create();\r\n    return function _sessionChangeResync() {\r\n        if (this._myBlurRecoverHeadTransform == null && this._mySessionChangeResyncHeadTransform != null) {\r\n            if (this._mySessionActive) {\r\n                currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n                resyncHeadPosition = this._mySessionChangeResyncHeadTransform.quat2_getPosition(resyncHeadPosition);\r\n                resyncHeadRotation = this._mySessionChangeResyncHeadTransform.quat2_getRotationQuat(resyncHeadRotation);\r\n\r\n                playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n\r\n                flatCurrentHeadPosition = currentHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatCurrentHeadPosition);\r\n                flatResyncHeadPosition = resyncHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatResyncHeadPosition);\r\n\r\n                resyncMovement = flatResyncHeadPosition.vec3_sub(flatCurrentHeadPosition, resyncMovement);\r\n                this.moveFeet(resyncMovement);\r\n\r\n                let isFloor = PP.XRUtils.isReferenceSpaceLocalFloor() || PP.XRUtils.isDeviceEmulated();\r\n                if (this._myParams.myEnterSessionResyncHeight || this._myParams.myNextEnterSessionResyncHeight) {\r\n                    this._myParams.myNextEnterSessionResyncHeight = false;\r\n                    let resyncHeadHeight = this._getPositionHeight(resyncHeadPosition);\r\n                    let currentHeadHeight = this._getPositionHeight(currentHeadPosition);\r\n\r\n                    this._myParams.myHeightOffsetVRWithoutFloor = resyncHeadHeight + this._myParams.myForeheadExtraHeight;\r\n                    if (this._myParams.myHeightOffsetVRWithFloor == null) {\r\n                        this._myParams.myHeightOffsetVRWithFloor = 0;\r\n                    }\r\n                    this._myParams.myHeightOffsetVRWithFloor = this._myParams.myHeightOffsetVRWithFloor + (resyncHeadHeight - currentHeadHeight);\r\n\r\n                    this._updateHeightOffset();\r\n                } else if (isFloor && (this._myParams.myNextEnterSessionFloorHeight != null || this._myParams.myEnterSessionFloorHeight != null)) {\r\n                    let floorHeight = (this._myParams.myNextEnterSessionFloorHeight != null) ? this._myParams.myNextEnterSessionFloorHeight : this._myParams.myEnterSessionFloorHeight;\r\n                    floorHeight -= this._myParams.myForeheadExtraHeight;\r\n                    let currentHeadHeight = this._getPositionHeight(currentHeadPosition);\r\n\r\n                    if (this._myParams.myHeightOffsetVRWithFloor == null) {\r\n                        this._myParams.myHeightOffsetVRWithFloor = 0;\r\n                    }\r\n                    this._myParams.myHeightOffsetVRWithFloor = this._myParams.myHeightOffsetVRWithFloor + (floorHeight - currentHeadHeight);\r\n\r\n                    this._updateHeightOffset();\r\n                }\r\n\r\n                this._resyncHeadRotationForward(resyncHeadRotation);\r\n            } else {\r\n                playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n\r\n                resyncHeadPosition = this._mySessionChangeResyncHeadTransform.quat2_getPosition(resyncHeadPosition);\r\n                flatResyncHeadPosition = resyncHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatResyncHeadPosition);\r\n\r\n                playerPosition = PP.myPlayerObjects.myPlayer.pp_getPosition(playerPosition);\r\n                newPlayerPosition = flatResyncHeadPosition.vec3_add(playerPosition.vec3_componentAlongAxis(playerUp, newPlayerPosition), newPlayerPosition);\r\n\r\n                PP.myPlayerObjects.myPlayer.pp_setPosition(newPlayerPosition);\r\n                PP.myPlayerObjects.myNonVRCamera.pp_resetPositionLocal();\r\n\r\n                if (this._myParams.myExitSessionResyncHeight) {\r\n                    let resyncHeadHeight = this._getPositionHeight(resyncHeadPosition);\r\n                    this._myParams.myHeightOffsetNonVR = resyncHeadHeight + this._myParams.myForeheadExtraHeight;\r\n                    this._updateHeightOffset();\r\n                }\r\n\r\n                resyncHeadRotation = this._mySessionChangeResyncHeadTransform.quat2_getRotationQuat(resyncHeadRotation);\r\n\r\n                if (this._myParams.myExitSessionRemoveRightTilt ||\r\n                    this._myParams.myExitSessionAdjustMaxVerticalAngle || !this._myParams.myExitSessionResyncVerticalAngle) {\r\n                    resyncHeadForward = resyncHeadRotation.quat_getForward(resyncHeadForward);\r\n                    resyncHeadUp = resyncHeadRotation.quat_getUp(resyncHeadUp);\r\n\r\n                    fixedHeadRight = resyncHeadForward.vec3_cross(playerUp, fixedHeadRight);\r\n                    fixedHeadRight.vec3_normalize(fixedHeadRight);\r\n\r\n                    if (!resyncHeadUp.vec3_isConcordant(playerUp)) {\r\n                        let angleForwardUp = resyncHeadForward.vec3_angle(playerUp);\r\n                        let negateAngle = 45;\r\n                        if (angleForwardUp > (180 - negateAngle) || angleForwardUp < negateAngle) {\r\n                            // this way I get a good fixed result for both head upside down and head rotated on forward\r\n                            // when the head is looking down and a bit backward (more than 135 degrees), I want the forward to actually\r\n                            // be the opposite because it's like u rotate back the head up and look forward again\r\n                            fixedHeadRight.vec3_negate(fixedHeadRight);\r\n                        }\r\n                    }\r\n\r\n                    if (fixedHeadRight.vec3_isZero(0.000001)) {\r\n                        fixedHeadRight = resyncHeadRotation.quat_getRight(fixedHeadRight);\r\n                    }\r\n\r\n                    fixedHeadUp = fixedHeadRight.vec3_cross(resyncHeadForward, fixedHeadUp);\r\n                    fixedHeadUp.vec3_normalize(fixedHeadUp);\r\n                    fixedHeadForward = fixedHeadUp.vec3_cross(fixedHeadRight, fixedHeadForward);\r\n                    fixedHeadForward.vec3_normalize(fixedHeadForward);\r\n\r\n                    fixedHeadRotation.quat_fromAxes(fixedHeadRight.vec3_negate(fixedHeadRightNegate), fixedHeadUp, fixedHeadForward);\r\n                    resyncHeadRotation.quat_copy(fixedHeadRotation);\r\n                }\r\n\r\n                if (this._myParams.myExitSessionAdjustMaxVerticalAngle || !this._myParams.myExitSessionResyncVerticalAngle) {\r\n                    resyncHeadUp = resyncHeadRotation.quat_getUp(resyncHeadUp);\r\n                    resyncHeadRight = resyncHeadRotation.quat_getRight(resyncHeadRight);\r\n\r\n                    let maxVerticalAngle = Math.max(0, this._myParams.myExitSessionMaxVerticalAngle - 0.0001);\r\n                    if (!this._myParams.myExitSessionResyncVerticalAngle) {\r\n                        maxVerticalAngle = 0;\r\n                    }\r\n\r\n                    let angleWithUp = Math.pp_angleClamp(resyncHeadUp.vec3_angleSigned(playerUp, resyncHeadRight));\r\n                    if (Math.abs(angleWithUp) > maxVerticalAngle) {\r\n                        let fixAngle = (Math.abs(angleWithUp) - maxVerticalAngle) * Math.pp_sign(angleWithUp);\r\n                        resyncHeadRotation = resyncHeadRotation.quat_rotateAxis(fixAngle, resyncHeadRight, resyncHeadRotation);\r\n                    }\r\n                }\r\n\r\n                this.setRotationHeadQuat(resyncHeadRotation);\r\n            }\r\n\r\n            if (this._mySessionActive) {\r\n                this._myParams.myNextEnterSessionFloorHeight = null;\r\n                this._myFirstEnterSessionResyncDone = true;\r\n            }\r\n\r\n            this._mySessionChangeResyncHeadTransform = null;\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._resyncHeadRotationForward = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let resyncHeadForward = PP.vec3_create();\r\n    let resyncHeadUp = PP.vec3_create();\r\n    let fixedResyncHeadRotation = PP.quat_create();\r\n    return function _resyncHeadRotationForward(resyncHeadRotation) {\r\n        playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n        resyncHeadForward = resyncHeadRotation.quat_getForward(resyncHeadForward);\r\n        resyncHeadUp = resyncHeadRotation.quat_getUp(resyncHeadUp);\r\n        fixedResyncHeadRotation.quat_copy(resyncHeadRotation);\r\n        fixedResyncHeadRotation.quat_setUp(playerUp, resyncHeadForward);\r\n\r\n        if (!resyncHeadUp.vec3_isConcordant(playerUp)) {\r\n            //if it was upside down, it's like it has to rotate the neck back up,so the forward is actually on the opposite side\r\n            fixedResyncHeadRotation.quat_rotateAxis(180, playerUp, fixedResyncHeadRotation);\r\n        }\r\n\r\n        this.setRotationFeetQuat(fixedResyncHeadRotation);\r\n        return;\r\n    }\r\n}();\r\n\r\nPlayerHeadManager.prototype._updateHeightOffset = function () {\r\n    return function _updateHeightOffset() {\r\n        if (this._mySessionActive) {\r\n            if (PP.XRUtils.isDeviceEmulated()) {\r\n                this._setPlayerPivotHeightOffset(0, 0);\r\n            } else if (PP.XRUtils.isReferenceSpaceLocalFloor()) {\r\n                this._setPlayerPivotHeightOffset(this._myParams.myHeightOffsetVRWithFloor, 0);\r\n            } else {\r\n                this._setPlayerPivotHeightOffset(this._myParams.myHeightOffsetVRWithoutFloor, this._myParams.myForeheadExtraHeight);\r\n            }\r\n        } else {\r\n            this._setPlayerPivotHeightOffset(this._myParams.myHeightOffsetNonVR, this._myParams.myForeheadExtraHeight);\r\n        }\r\n    }\r\n}();\r\n\r\nPlayerHeadManager.prototype._setPlayerPivotHeightOffset = function () {\r\n    let playerPivotPosition = PP.vec3_create();\r\n    return function _setPlayerPivotHeightOffset(offset, amountToRemove) {\r\n        if (offset != null) {\r\n            playerPivotPosition = PP.myPlayerObjects.myPlayerPivot.pp_getPositionLocal(playerPivotPosition);\r\n            PP.myPlayerObjects.myPlayerPivot.pp_setPositionLocal([playerPivotPosition[0], offset - amountToRemove, playerPivotPosition[2]]);\r\n        }\r\n    }\r\n}();\r\n\r\n\r\nObject.defineProperty(PlayerHeadManager.prototype, \"getHeightEyes\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"getTransformFeetQuat\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"getPositionFeet\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"moveFeet\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"rotateFeetQuat\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"rotateHeadQuat\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"teleportPositionHead\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"teleportPositionFeet\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"teleportPlayerToHeadTransformQuat\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_getPositionHeight\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onXRSessionStart\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onXRSessionEnd\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onXRSessionBlurStart\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onXRSessionBlurEnd\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onViewReset\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_blurEndResync\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_sessionChangeResync\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_setPlayerPivotHeightOffset\", { enumerable: false });", "PlayerTransformManagerSyncFlag = {\r\n    BODY_COLLIDING: 0,\r\n    HEAD_COLLIDING: 1,\r\n    FAR: 2,\r\n    FLOATING: 3\r\n};\r\n\r\nPlayerTransformManagerParams = class PlayerTransformManagerParams {\r\n    constructor() {\r\n        this.myPlayerHeadManager = null;\r\n\r\n        this.myMovementCollisionCheckParams = null;\r\n        this.myTeleportCollisionCheckParams = null; // can be left null and will be generated from the movement one\r\n        this.myTeleportCollisionCheckParamsCopyFromMovement = false;\r\n        this.myTeleportCollisionCheckParamsCheck360 = false;\r\n\r\n        // sync for vr and non vr\r\n        this.mySyncEnabledFlagMap = new Map();\r\n        this.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, true);\r\n        this.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, true);\r\n        this.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.FAR, true);\r\n        this.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, true);\r\n\r\n        this.mySyncPositionFlagMap = new Map();\r\n        this.mySyncPositionFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, true);\r\n        this.mySyncPositionFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, false);\r\n        this.mySyncPositionFlagMap.set(PlayerTransformManagerSyncFlag.FAR, true);\r\n        this.mySyncPositionFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, true);\r\n\r\n        this.mySyncPositionHeadFlagMap = new Map();\r\n        this.mySyncPositionHeadFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, false);\r\n        this.mySyncPositionHeadFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, true);\r\n        this.mySyncPositionHeadFlagMap.set(PlayerTransformManagerSyncFlag.FAR, false);\r\n        this.mySyncPositionHeadFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, false);\r\n\r\n        this.mySyncRotationFlagMap = new Map();\r\n        this.mySyncRotationFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, true);\r\n        this.mySyncRotationFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, false);\r\n        this.mySyncRotationFlagMap.set(PlayerTransformManagerSyncFlag.FAR, true);\r\n        this.mySyncRotationFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, true);\r\n\r\n        this.mySyncHeightFlagMap = new Map();\r\n        this.mySyncHeightFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, true);\r\n        this.mySyncHeightFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, false);\r\n        this.mySyncHeightFlagMap.set(PlayerTransformManagerSyncFlag.FAR, true);\r\n        this.mySyncHeightFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, true);\r\n\r\n        this.myIsLeaningValidAboveDistance = false;\r\n        this.myLeaningValidDistance = 0;\r\n\r\n        // settings for both hop and lean\r\n        this.myIsFloatingValidIfVerticalMovement = false;\r\n        this.myIsFloatingValidIfVerticalMovementAndRealOnGround = false; //#TODO this is more an override\r\n        this.myIsFloatingValidIfRealOnGround = false;\r\n        this.myIsFloatingValidIfSteepGround = false;\r\n        this.myIsFloatingValidIfVerticalMovementAndSteepGround = false;\r\n\r\n        this.myFloatingSplitCheckEnabled = false;\r\n        this.myFloatingSplitCheckMaxLength = 0;\r\n        this.myFloatingSplitCheckMaxSteps = null;\r\n        this.myFloatingSplitCheckStepEqualLength = false;\r\n        this.myFloatingSplitCheckStepEqualLengthMinLength = 0;\r\n\r\n        this.myIsMaxDistanceFromRealToSyncEnabled = false;\r\n        this.myMaxDistanceFromRealToSync = 0;\r\n        // max distance to resync valid with head, if you head is further do not resync\r\n\r\n        this.myHeadRadius = 0;\r\n        this.myHeadCollisionBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myHeadCollisionObjectsToIgnore = [];\r\n\r\n        this.myRotateOnlyIfSynced = false;\r\n        this.myResetRealResetRotationIfUpChanged = true;\r\n\r\n        // this.myDistanceToStartApplyGravityWhenFloating = 0; // this should be moved outisde, that is, if it is floating stop gravity\r\n\r\n        // set valid if head synced (head manager)\r\n\r\n        this.myRealMovementAllowVerticalAdjustments = false;\r\n        // this true means that the real movement should also snap on ground or fix the vertical to pop from it\r\n        // you may want this if u want that while real moving u can also climb stairs\r\n\r\n        // real movement apply vertical snap or not (other option to apply gravity) \r\n        // (gravity inside this class?) only when movement is applied not for head only)\r\n\r\n        this.myUpdateRealPositionValid = false;\r\n        this.myUpdatePositionValid = false;\r\n\r\n        this.myMinHeight = null;\r\n        this.myMaxHeight = null;\r\n\r\n        // these and the callbacks does not makes much sense\r\n        // the colliding things are made to not sync the real position, but if the height is below and the body is not colliding\r\n        // there is not reason not to resync, even if u put the real back on the valid the height will stay the same\r\n        // if someone puts the head in the ground, there is no way for me to resync and make the head pop out sadly\r\n        // in this case u either accept that u can move without seeing, or stop moving until the obscure is on\r\n        this.myIsBodyCollidingWhenHeightBelowValue = null; // could be removed and added with the custom check callback if u want it\r\n        this.myIsBodyCollidingWhenHeightAboveValue = null;\r\n\r\n        this.myIsBodyCollidingExtraCheckCallback = null;      // Signature: callback(transformManager) -> bool\r\n        this.myIsLeaningExtraCheckCallback = null;            // Signature: callback(transformManager) -> bool\r\n        this.myIsHoppingExtraCheckCallback = null;            // Signature: callback(transformManager) -> bool\r\n        this.myIsFarExtraCheckCallback = null;                // Signature: callback(transformManager) -> bool\r\n\r\n        this.myResetToValidOnEnterSession = false;\r\n        this.myResetToValidOnExitSession = false;\r\n\r\n        this.myAlwaysResetRealPositionNonVR = false;\r\n        this.myAlwaysResetRealRotationNonVR = false;\r\n        this.myAlwaysResetRealHeightNonVR = false;\r\n\r\n        this.myAlwaysResetRealPositionVR = false;\r\n        this.myAlwaysResetRealRotationVR = false;\r\n        this.myAlwaysResetRealHeightVR = false;\r\n\r\n        this.myNeverResetRealPositionNonVR = false;\r\n        this.myNeverResetRealRotationNonVR = false;\r\n        this.myNeverResetRealHeightNonVR = false;\r\n\r\n        this.myNeverResetRealPositionVR = false;\r\n        this.myNeverResetRealRotationVR = false;\r\n        this.myNeverResetRealHeightVR = false;\r\n\r\n        this.myResetRealOnMove = false;\r\n        this.myResetRealOnTeleport = false;\r\n\r\n        this.mySyncPositionDisabled = false;\r\n\r\n        this.myDebugActive = false;\r\n    }\r\n};\r\n\r\nPlayerTransformManager = class PlayerTransformManager {\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myRealMovementCollisionCheckParams = null;\r\n        this._generateRealMovementParamsFromMovementParams();\r\n\r\n        this._myCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myRealCollisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n        if (this._myParams.myTeleportCollisionCheckParamsCopyFromMovement) {\r\n            this._generateTeleportParamsFromMovementParams();\r\n        }\r\n\r\n        this._myHeadCollisionCheckParams = null;\r\n        this._setupHeadCollisionCheckParams();\r\n\r\n        this._myValidPosition = PP.vec3_create();\r\n        this._myValidRotationQuat = new PP.quat_create();\r\n        this._myValidHeight = 0;\r\n        this._myValidPositionHead = PP.vec3_create();\r\n\r\n        this._myIsBodyColliding = false;\r\n        this._myIsHeadColliding = false;\r\n        this._myIsLeaning = false;\r\n        this._myIsHopping = false;\r\n        this._myIsFar = false;\r\n\r\n        this._myLastValidMovementDirection = PP.vec3_create();\r\n        this._myIsRealPositionValid = false;\r\n        this._myIsPositionValid = false;\r\n\r\n        this._myResetRealOnSynced = false;\r\n    }\r\n\r\n    start() {\r\n        this.resetToReal(true);\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(true, WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this, false));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    // update should be before to check the new valid transform and if the head new transform is fine\r\n    // then update movements, so that they will use the proper transform\r\n    // pre/post update?\r\n    // for sliding if previous frame no horizontal movement then reset sliding on pre update\r\n    // in generale capire come fare per risolvere i problemi quando c'\u00E8 un move solo verticale che sputtana i dati dello sliding precedente\r\n    // che servono per far slidare bene anche dopo, magari un flag per dire non aggiornare le cose relative al movimento orizzontale\r\n    // o un move check solo verticale\r\n    update(dt) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    move(movement, outCollisionRuntimeParams = null, forceMove = false) {\r\n        // collision runtime will copy the result, so that u can use that for later reference like if it was sliding\r\n        // maybe there should be a way to sum all the things happened for proper movement in a summary runtime\r\n        // or maybe the move should be done once per frame, or at least in theory\r\n\r\n        // collision check and move\r\n\r\n        // move should move the valid transform, but also move the player object so that they head, even is colliding is dragged with it\r\n        // also teleport, should get the difference from previous and move the player object, this will keep the relative position head-to-valid\r\n\r\n        // implemented outside class definition\r\n    }\r\n\r\n    teleportPosition(position, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        // collision check and teleport, if force teleport teleport in any case\r\n        // use current valid rotation\r\n\r\n        // implemented outside class definition\r\n    }\r\n\r\n    teleportTransformQuat(transformQuat, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        // collision check and teleport, if force teleport teleport in any case\r\n\r\n        // implemented outside class definition\r\n    }\r\n\r\n    rotateQuat(rotationQuat) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    setRotationQuat(rotationQuat) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    setHeight(height, forceSet = false) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getPlayer() {\r\n        return this._myParams.myPlayerHeadManager.getPlayer();\r\n    }\r\n\r\n    getHead() {\r\n        return this._myParams.myPlayerHeadManager.getHead();\r\n    }\r\n\r\n    getTransformQuat(outTransformQuat = PP.quat2_create()) {\r\n        return outTransformQuat.quat2_setPositionRotationQuat(this.getPosition(), this.getRotationQuat());\r\n    }\r\n\r\n    getPosition(outPosition = PP.vec3_create()) {\r\n        return outPosition.vec3_copy(this._myValidPosition);\r\n    }\r\n\r\n    getRotationQuat(outRotation = PP.quat_create()) {\r\n        return outRotation.quat_copy(this._myValidRotationQuat);\r\n    }\r\n\r\n    getPositionHead(outPosition = PP.vec3_create()) {\r\n        return outPosition.vec3_copy(this._myValidPositionHead);\r\n    }\r\n\r\n    getTransformHeadQuat(outTransformQuat = PP.quat2_create()) {\r\n        return outTransformQuat.quat2_setPositionRotationQuat(this.getPositionHead(), this.getRotationQuat());\r\n    }\r\n\r\n    getHeight() {\r\n        return this._myValidHeight;\r\n    }\r\n\r\n    getTransformRealQuat(outTransformQuat = PP.quat2_create()) {\r\n        return this.getPlayerHeadManager().getTransformFeetQuat(outTransformQuat);\r\n    }\r\n\r\n    getTransformHeadRealQuat(outTransformQuat = PP.quat2_create()) {\r\n        return this.getPlayerHeadManager().getTransformHeadQuat(outTransformQuat);\r\n    }\r\n\r\n    getPositionReal(outPosition = PP.vec3_create()) {\r\n        return this.getPlayerHeadManager().getPositionFeet(outPosition);\r\n    }\r\n\r\n    getPositionHeadReal(outPosition = PP.vec3_create()) {\r\n        return this.getPlayerHeadManager().getPositionHead(outPosition);\r\n    }\r\n\r\n    getRotationRealQuat(outRotation = PP.quat_create()) {\r\n        return this.getPlayerHeadManager().getRotationFeetQuat(outRotation);\r\n    }\r\n\r\n    getHeightReal() {\r\n        return this._myParams.myPlayerHeadManager.getHeightHead();\r\n    }\r\n\r\n    isSynced(syncFlagMap = null) {\r\n        let isBodyColliding = this.isBodyColliding() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.BODY_COLLIDING));\r\n        let isHeadColliding = this.isHeadColliding() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.HEAD_COLLIDING));\r\n        let isFar = this.isFar() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.FAR));\r\n        let isFloating = this.isFloating() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.FLOATING));\r\n        return !isBodyColliding && !isHeadColliding && !isFar && !isFloating;\r\n    }\r\n\r\n    resetReal(resetPosition = true, resetRotation = true, resetHeight = true, updateRealFlags = false) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    updateReal() {\r\n        this._updateReal(0, false);\r\n    }\r\n\r\n    resetToReal(updateRealFlags = false) {\r\n        this._myValidPosition = this.getPositionReal(this._myValidPosition);\r\n        this._myValidPositionHead = this.getPositionHeadReal(this._myValidPositionHead);\r\n        this._myValidRotationQuat = this.getRotationRealQuat(this._myValidRotationQuat);\r\n        this._myValidHeight = Math.pp_clamp(this.getHeightReal(), this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n\r\n        if (updateRealFlags) {\r\n            this._updateReal(0, false);\r\n        }\r\n    }\r\n\r\n    isBodyColliding() {\r\n        return this._myIsBodyColliding;\r\n    }\r\n\r\n    isHeadColliding() {\r\n        return this._myIsHeadColliding;\r\n    }\r\n\r\n    isFloating() {\r\n        return this.isLeaning() || this.isHopping();\r\n    }\r\n\r\n    isHopping() {\r\n        return this._myIsHopping;\r\n    }\r\n\r\n    isLeaning() {\r\n        return this._myIsLeaning;\r\n    }\r\n\r\n    isHopping() {\r\n        return this._myIsHopping;\r\n    }\r\n\r\n    isFar() {\r\n        return this._myIsFar;\r\n    }\r\n\r\n    getDistanceToReal() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getDistanceToRealHead() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getPlayerHeadManager() {\r\n        return this._myParams.myPlayerHeadManager;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    getMovementCollisionCheckParams() {\r\n        return this._myParams.myMovementCollisionCheckParams;\r\n    }\r\n\r\n    getTeleportCollisionCheckParams() {\r\n        return this._myParams.myTeleportCollisionCheckParams;\r\n    }\r\n\r\n    collisionCheckParamsUpdated() {\r\n        if (this._myParams.myTeleportCollisionCheckParamsCopyFromMovement) {\r\n            this._generateTeleportParamsFromMovementParams();\r\n        }\r\n\r\n        this._generateRealMovementParamsFromMovementParams();\r\n    }\r\n\r\n    isPositionValid() {\r\n        return this._myIsPositionValid;\r\n    }\r\n\r\n    isRealPositionValid() {\r\n        return this._myIsRealPositionValid;\r\n    }\r\n\r\n    getCollisionRuntimeParams() {\r\n        return this._myCollisionRuntimeParams;\r\n    }\r\n\r\n    getRealCollisionRuntimeParams() {\r\n        return this._myRealCollisionRuntimeParams;\r\n    }\r\n\r\n    _updateCollisionHeight() {\r\n        let validHeight = this.getHeight();\r\n        let realHeight = Math.pp_clamp(this.getHeightReal(), this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n\r\n        this._myParams.myMovementCollisionCheckParams.myHeight = validHeight;\r\n        this._myParams.myTeleportCollisionCheckParams.myHeight = validHeight;\r\n\r\n        this._myRealMovementCollisionCheckParams.myHeight = realHeight;\r\n    }\r\n\r\n    _setupHeadCollisionCheckParams() {\r\n        this._myHeadCollisionCheckParams = new CollisionCheckParams();\r\n        let params = this._myHeadCollisionCheckParams;\r\n\r\n        params.myRadius = this._myParams.myHeadRadius;\r\n        params.myDistanceFromFeetToIgnore = 0;\r\n        params.myDistanceFromHeadToIgnore = 0;\r\n\r\n        params.mySplitMovementEnabled = true;\r\n        params.mySplitMovementMaxLength = 0.5;\r\n        params.mySplitMovementMaxStepsEnabled = true;\r\n        params.mySplitMovementMaxSteps = 2;\r\n        params.mySplitMovementStopWhenHorizontalMovementCanceled = true;\r\n        params.mySplitMovementStopWhenVerticalMovementCanceled = true;\r\n\r\n        params.myHorizontalMovementCheckEnabled = true;\r\n        params.myHorizontalMovementRadialStepAmount = 1;\r\n        params.myHorizontalMovementCheckDiagonalOutward = true;\r\n        params.myHorizontalMovementCheckDiagonalInward = true;\r\n        params.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = true;\r\n        params.myHorizontalMovementCheckVerticalDiagonalUpwardInward = true;\r\n\r\n        params.myHorizontalPositionCheckEnabled = true;\r\n        params.myHalfConeAngle = 180;\r\n        params.myHalfConeSliceAmount = 3;\r\n        params.myCheckConeBorder = true;\r\n        params.myCheckConeRay = true;\r\n        params.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = false;\r\n        params.myHorizontalPositionCheckVerticalDirectionType = 0;\r\n\r\n        params.myHeight = params.myRadius; // on purpose the height \"radius\" is half, to avoid hitting before with head than body collision (through height)\r\n        params.myPositionOffsetLocal.vec3_set(0, -params.myRadius / 2, 0)\r\n\r\n        params.myCheckHeight = true;\r\n        params.myCheckHeightVerticalMovement = true;\r\n        params.myCheckHeightVerticalPosition = true;\r\n        params.myHeightCheckStepAmountMovement = 2;\r\n        params.myHeightCheckStepAmountPosition = 2;\r\n        params.myCheckHeightTopMovement = true;\r\n        params.myCheckHeightTopPosition = true;\r\n        params.myCheckVerticalStraight = true;\r\n\r\n        params.myCheckVerticalFixedForwardEnabled = true;\r\n        params.myCheckVerticalFixedForward = PP.vec3_create(0, 0, 1);\r\n\r\n        params.myCheckHorizontalFixedForwardEnabled = true;\r\n        params.myCheckHorizontalFixedForward = PP.vec3_create(0, 0, 1);\r\n\r\n        params.myVerticalMovementCheckEnabled = true;\r\n        params.myVerticalPositionCheckEnabled = true;\r\n\r\n        params.myGroundCircumferenceAddCenter = true;\r\n        params.myGroundCircumferenceSliceAmount = 6;\r\n        params.myGroundCircumferenceStepAmount = 2;\r\n        params.myGroundCircumferenceRotationPerStep = 30;\r\n        params.myFeetRadius = params.myRadius;\r\n\r\n        params.myHorizontalBlockLayerFlags.copy(this._myParams.myHeadCollisionBlockLayerFlags);\r\n        params.myHorizontalObjectsToIgnore.pp_copy(this._myParams.myHeadCollisionObjectsToIgnore);\r\n        params.myVerticalBlockLayerFlags.copy(this._myParams.myHeadCollisionBlockLayerFlags);\r\n        params.myVerticalObjectsToIgnore.pp_copy(this._myParams.myHeadCollisionObjectsToIgnore);\r\n\r\n        params.myDebugActive = false;\r\n\r\n        params.myDebugHorizontalMovementActive = true;\r\n        params.myDebugHorizontalPositionActive = false;\r\n        params.myDebugVerticalMovementActive = false;\r\n        params.myDebugVerticalPositionActive = false;\r\n        params.myDebugSlidingActive = false;\r\n        params.myDebugGroundInfoActive = false;\r\n        params.myDebugCeilingInfoActive = false;\r\n        params.myDebugRuntimeParamsActive = false;\r\n        params.myDebugMovementActive = false;\r\n    }\r\n\r\n    _generateTeleportParamsFromMovementParams() {\r\n        if (this._myParams.myTeleportCollisionCheckParams == null) {\r\n            this._myParams.myTeleportCollisionCheckParams = new CollisionCheckParams();\r\n        }\r\n\r\n        if (this._myParams.myTeleportCollisionCheckParamsCheck360) {\r\n            this._myParams.myTeleportCollisionCheckParams = CollisionCheckUtils.generate360TeleportParamsFromMovementParams(this._myParams.myMovementCollisionCheckParams, this._myParams.myTeleportCollisionCheckParams);\r\n        } else {\r\n            this._myParams.myTeleportCollisionCheckParams.copy(this._myParams.myMovementCollisionCheckParams);\r\n        }\r\n    }\r\n\r\n    _generateRealMovementParamsFromMovementParams() {\r\n        if (this._myRealMovementCollisionCheckParams == null) {\r\n            this._myRealMovementCollisionCheckParams = new CollisionCheckParams();\r\n        }\r\n\r\n        let params = this._myRealMovementCollisionCheckParams;\r\n        params.copy(this._myParams.myMovementCollisionCheckParams);\r\n\r\n        params.mySplitMovementEnabled = true;\r\n        params.mySplitMovementMaxLength = 0.5;\r\n        params.mySplitMovementMaxStepsEnabled = true;\r\n        params.mySplitMovementMaxSteps = 2;\r\n        params.mySplitMovementStopWhenHorizontalMovementCanceled = true;\r\n        params.mySplitMovementStopWhenVerticalMovementCanceled = true;\r\n\r\n        params.mySlidingEnabled = false;\r\n\r\n        if (!this._myParams.myRealMovementAllowVerticalAdjustments) {\r\n            params.mySnapOnGroundEnabled = false;\r\n            params.mySnapOnCeilingEnabled = false;\r\n            params.myGroundPopOutEnabled = false;\r\n            params.myCeilingPopOutEnabled = false;\r\n            params.myAdjustVerticalMovementWithGroundAngleDownhill = false;\r\n            params.myAdjustVerticalMovementWithGroundAngleUphill = false;\r\n            params.myAdjustVerticalMovementWithCeilingAngleDownhill = false;\r\n            params.myAdjustVerticalMovementWithCeilingAngleUphill = false;\r\n            params.myAdjustHorizontalMovementWithGroundAngleDownhill = false;\r\n            params.myAdjustHorizontalMovementWithCeilingAngleDownhill = false;\r\n            params.myVerticalMovementReduceEnabled = false;\r\n        }\r\n\r\n        //params.myHorizontalMovementGroundAngleIgnoreHeight = 0.1 * 3;\r\n        //params.myHorizontalMovementCeilingAngleIgnoreHeight = 0.1 * 3;\r\n\r\n        params.myIsOnGroundIfInsideHit = true;\r\n\r\n        params.myDebugActive = false;\r\n\r\n        params.myDebugHorizontalMovementActive = false;\r\n        params.myDebugHorizontalPositionActive = false;\r\n        params.myDebugVerticalMovementActive = false;\r\n        params.myDebugVerticalPositionActive = false;\r\n        params.myDebugSlidingActive = false;\r\n        params.myDebugGroundInfoActive = true;\r\n        params.myDebugCeilingInfoActive = true;\r\n        params.myDebugRuntimeParamsActive = false;\r\n        params.myDebugMovementActive = false;\r\n    }\r\n\r\n    _onXRSessionStart(manualStart, session) {\r\n        if (this._myParams.myResetToValidOnEnterSession) {\r\n            this._myResetRealOnSynced = true;\r\n        }\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        if (this._myParams.myResetToValidOnExitSession) {\r\n            this._myResetRealOnSynced = true;\r\n        }\r\n    }\r\n\r\n    _debugUpdate(dt) {\r\n        PP.myDebugVisualManager.drawPoint(0, this._myValidPosition, PP.vec4_create(1, 0, 0, 1), 0.05);\r\n        PP.myDebugVisualManager.drawLineEnd(0, this._myValidPosition, this.getPositionReal(), PP.vec4_create(1, 0, 0, 1), 0.05);\r\n        PP.myDebugVisualManager.drawLine(0, this._myValidPosition, this._myValidRotationQuat.quat_getForward(), 0.15, PP.vec4_create(0, 1, 0, 1), 0.025);\r\n\r\n        PP.myDebugVisualManager.drawPoint(0, this._myValidPositionHead, PP.vec4_create(1, 1, 0, 1), 0.05);\r\n    }\r\n};\r\n\r\nPlayerTransformManager.prototype.getDistanceToReal = function () {\r\n    let realPosition = PP.vec3_create();\r\n    return function getDistanceToReal() {\r\n        realPosition = this.getPositionReal(realPosition);\r\n        return realPosition.vec3_distance(this.getPosition());\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.getDistanceToRealHead = function () {\r\n    let realPosition = PP.vec3_create();\r\n    return function getDistanceToRealHead() {\r\n        realPosition = this.getPositionHeadReal(realPosition);\r\n        return realPosition.vec3_distance(this.getPositionHead());\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.resetReal = function () {\r\n    let realUp = PP.vec3_create();\r\n    let validUp = PP.vec3_create();\r\n    let position = PP.vec3_create();\r\n    let rotationQuat = PP.quat_create();\r\n    return function resetReal(resetPosition = true, resetRotation = true, resetHeight = true, updateRealFlags = false) {\r\n        let playerHeadManager = this.getPlayerHeadManager();\r\n\r\n        if (resetPosition) {\r\n            playerHeadManager.teleportPositionFeet(this.getPosition(position));\r\n        }\r\n\r\n        realUp = this.getPlayerHeadManager().getRotationFeetQuat(rotationQuat).quat_getUp(realUp);\r\n        validUp = this.getRotationQuat(rotationQuat).quat_getUp(validUp);\r\n\r\n        if (resetRotation || (realUp.vec3_angle(validUp) > Math.PP_EPSILON_DEGREES && this._myParams.myResetRealResetRotationIfUpChanged)) {\r\n            playerHeadManager.setRotationFeetQuat(this.getRotationQuat(rotationQuat), false);\r\n        }\r\n\r\n        if (resetHeight) {\r\n            playerHeadManager.setHeight(this.getHeight(), true);\r\n        }\r\n\r\n        if (updateRealFlags) {\r\n            this._updateReal(0, false);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.update = function () {\r\n    let transformQuat = PP.quat2_create();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    let transformUp = PP.vec3_create();\r\n    let horizontalDirection = PP.vec3_create();\r\n    let rotationQuat = PP.quat_create();\r\n    return function update(dt) {\r\n        //#TODO this should update ground and ceiling info but not sliding info        \r\n\r\n        if (this._myResetRealOnSynced) {\r\n            if (this.getPlayerHeadManager().isSynced()) {\r\n                this._myResetRealOnSynced = false;\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._updateReal(dt);\r\n\r\n        if (this._myParams.myUpdatePositionValid) {\r\n            transformQuat = this.getTransformQuat(transformQuat);\r\n            transformUp = transformQuat.quat2_getUp(transformUp);\r\n            rotationQuat = transformQuat.quat2_getRotationQuat(rotationQuat);\r\n            horizontalDirection = this._myLastValidMovementDirection.vec3_removeComponentAlongAxis(transformUp, horizontalDirection);\r\n            if (!horizontalDirection.vec3_isZero(0.00001)) {\r\n                horizontalDirection.vec3_normalize(horizontalDirection);\r\n                rotationQuat.quat_setForward(horizontalDirection);\r\n                transformQuat.quat2_setRotationQuat(rotationQuat);\r\n            }\r\n            let debugBackup = this._myParams.myMovementCollisionCheckParams.myDebugActive;\r\n            this._myParams.myMovementCollisionCheckParams.myDebugActive = false;\r\n            CollisionCheckGlobal.positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, collisionRuntimeParams);\r\n            this._myParams.myMovementCollisionCheckParams.myDebugActive = debugBackup;\r\n            this._myIsPositionValid = collisionRuntimeParams.myIsPositionOk;\r\n        }\r\n\r\n        if (this._myParams.myDebugActive) {\r\n            this._debugUpdate(dt);\r\n        }\r\n    }\r\n}();\r\n\r\nPlayerTransformManager.prototype._updateReal = function () {\r\n    let movementToCheck = PP.vec3_create();\r\n    let position = PP.vec3_create();\r\n    let positionReal = PP.vec3_create();\r\n    let transformQuat = PP.quat2_create();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n    let newPosition = PP.vec3_create();\r\n    let newPositionHead = PP.vec3_create();\r\n    let movementStep = PP.vec3_create();\r\n    let currentMovementStep = PP.vec3_create();\r\n    let transformUp = PP.vec3_create();\r\n    let verticalMovement = PP.vec3_create();\r\n    let movementChecked = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    let floatingTransformQuat = PP.quat2_create();\r\n    let horizontalDirection = PP.vec3_create();\r\n    let rotationQuat = PP.quat_create();\r\n    return function _updateReal(dt, resetRealEnabled = true) {\r\n        // check if new head is ok and update the data\r\n        // if head is not synced (blurred or session changing) avoid this and keep last valid\r\n        if (this.getPlayerHeadManager().isSynced()) {\r\n            this._updateCollisionHeight();\r\n\r\n            this._myIsBodyColliding = false;\r\n            this._myIsHeadColliding = false;\r\n            this._myIsLeaning = false;\r\n            this._myIsHopping = false;\r\n            this._myIsFar = false;\r\n\r\n            movementToCheck = this.getPositionReal(positionReal).vec3_sub(this.getPosition(position), movementToCheck);\r\n            if (movementToCheck.vec3_length() > 0.0001) {\r\n                this._myLastValidMovementDirection = movementToCheck.vec3_normalize(this._myLastValidMovementDirection); //TEMP direction\r\n            }\r\n\r\n            // Far\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.FAR)) {\r\n                if (this._myParams.myIsMaxDistanceFromRealToSyncEnabled && movementToCheck.vec3_length() > this._myParams.myMaxDistanceFromRealToSync) {\r\n                    this._myIsFar = true;\r\n                } else if (this._myParams.myIsFarExtraCheckCallback != null && this._myParams.myIsFarExtraCheckCallback(this)) {\r\n                    this._myIsFar = true;\r\n                }\r\n            }\r\n\r\n            // Body Colliding\r\n            collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n            collisionRuntimeParams.myIsOnGround = true; //#TODO temp as long as surface infos are not actually updated\r\n            transformQuat = this.getTransformQuat(transformQuat);\r\n            newPosition.vec3_copy(this._myValidPosition);\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.BODY_COLLIDING)) {\r\n                CollisionCheckGlobal.move(movementToCheck, transformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    if (Math.pp_clamp(this._myRealMovementCollisionCheckParams.myHeight, this._myParams.myIsBodyCollidingWhenHeightBelowValue,\r\n                        this._myParams.myIsBodyCollidingWhenHeightAboveValue) != this._myRealMovementCollisionCheckParams.myHeight) {\r\n                        this._myIsBodyColliding = true;\r\n                    } else {\r\n                        if (this._myParams.myIsBodyCollidingExtraCheckCallback != null && this._myParams.myIsBodyCollidingExtraCheckCallback(this)) {\r\n                            this._myIsBodyColliding = true;\r\n                        } else {\r\n                            this._myIsBodyColliding = false;\r\n                            newPosition.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this._myIsBodyColliding = true;\r\n                }\r\n            }\r\n\r\n            // Floating \r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.FLOATING)) {\r\n\r\n                if (!this._myIsBodyColliding) {\r\n                    movementToCheck = newPosition.vec3_sub(position, movementToCheck);\r\n                } else {\r\n                    movementToCheck = positionReal.vec3_sub(position, movementToCheck);\r\n                }\r\n\r\n                collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n                floatingTransformQuat.quat2_setPositionRotationQuat(this._myValidPosition, this._myValidRotationQuat);\r\n                CollisionCheckGlobal.updateSurfaceInfo(floatingTransformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n                //#TODO utilizzare on ground del body gia calcolato, ma ora non c'\u00E8 quindi va bene cos\u00EC\r\n\r\n                if (collisionRuntimeParams.myIsOnGround) {\r\n                    transformUp = transformQuat.quat2_getUp(transformUp);\r\n                    verticalMovement = movementToCheck.vec3_componentAlongAxis(transformUp);\r\n                    let isVertical = !verticalMovement.vec3_isZero(0.00001);\r\n                    if (!isVertical || !this._myParams.myIsFloatingValidIfVerticalMovement) {\r\n                        let movementStepAmount = 1;\r\n                        movementStep.vec3_copy(movementToCheck);\r\n                        if (!movementToCheck.vec3_isZero(0.00001) && this._myParams.myFloatingSplitCheckEnabled) {\r\n                            let equalStepLength = movementToCheck.vec3_length() / this._myParams.myFloatingSplitCheckMaxSteps;\r\n                            if (!this._myParams.myFloatingSplitCheckStepEqualLength || equalStepLength < this._myParams.myFloatingSplitCheckStepEqualLengthMinLength) {\r\n                                let maxLength = this._myParams.myFloatingSplitCheckStepEqualLength ? this._myParams.myFloatingSplitCheckStepEqualLengthMinLength : this._myParams.myFloatingSplitCheckMaxLength;\r\n                                movementStepAmount = Math.ceil(movementToCheck.vec3_length() / maxLength);\r\n                                if (movementStepAmount > 1) {\r\n                                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(maxLength, movementStep);\r\n                                    movementStepAmount = (this._myParams.myFloatingSplitCheckMaxSteps != null) ? Math.min(movementStepAmount, this._myParams.myFloatingSplitCheckMaxSteps) : movementStepAmount;\r\n                                }\r\n\r\n                                movementStepAmount = Math.max(1, movementStepAmount);\r\n\r\n                                if (movementStepAmount == 1) {\r\n                                    movementStep.vec3_copy(movementToCheck);\r\n                                }\r\n                            } else {\r\n                                movementStepAmount = this._myParams.myFloatingSplitCheckMaxSteps;\r\n                                if (movementStepAmount > 1) {\r\n                                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(equalStepLength, movementStep);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let isOnValidGroundAngle = collisionRuntimeParams.myGroundAngle <= this._myRealMovementCollisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n\r\n                        movementChecked.vec3_zero();\r\n                        newFeetPosition.vec3_copy(this._myValidPosition);\r\n                        collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n\r\n                        let atLeastOneNotOnGround = false;\r\n                        let isOneOnGroundBetweenNoGround = false;\r\n                        let isLastOnGround = false;\r\n                        let isOneOnSteepGround = false;\r\n\r\n                        for (let i = 0; i < movementStepAmount; i++) {\r\n                            if (movementStepAmount == 1 || i != movementStepAmount - 1) {\r\n                                currentMovementStep.vec3_copy(movementStep);\r\n                            } else {\r\n                                currentMovementStep = movementToCheck.vec3_sub(movementChecked, currentMovementStep);\r\n                            }\r\n\r\n                            newFeetPosition = newFeetPosition.vec3_add(currentMovementStep, newFeetPosition);\r\n                            floatingTransformQuat.quat2_setPositionRotationQuat(newFeetPosition, this._myValidRotationQuat);\r\n                            collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n                            CollisionCheckGlobal.updateSurfaceInfo(floatingTransformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n                            movementChecked = movementChecked.vec3_add(currentMovementStep, movementChecked);\r\n\r\n                            if (!collisionRuntimeParams.myIsOnGround) {\r\n                                atLeastOneNotOnGround = true;\r\n                            } else {\r\n                                if (collisionRuntimeParams.myGroundAngle > this._myRealMovementCollisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n                                    isOneOnSteepGround = true;\r\n                                }\r\n\r\n                                if (atLeastOneNotOnGround) {\r\n                                    isOneOnGroundBetweenNoGround = true;\r\n                                }\r\n\r\n                                if (i == movementStepAmount - 1) {\r\n                                    isLastOnGround = true;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let isFloatingOnSteepGroundFail = isOneOnSteepGround && isOnValidGroundAngle &&\r\n                            !this._myParams.myIsFloatingValidIfSteepGround && (!isVertical || !this._myParams.myIsFloatingValidIfVerticalMovementAndSteepGround);\r\n                        if (atLeastOneNotOnGround || isFloatingOnSteepGroundFail) {\r\n                            if (isOneOnGroundBetweenNoGround) {\r\n                                this._myIsHopping = true;\r\n                            } else {\r\n                                this._myIsLeaning = true;\r\n                            }\r\n                        } else {\r\n                            this._myIsLeaning = false;\r\n                            this._myIsHopping = false;\r\n\r\n                            if (this._myParams.myIsLeaningExtraCheckCallback != null && this._myParams.myIsLeaningExtraCheckCallback(this)) {\r\n                                this._myIsLeaning = true;\r\n                            } else if (this._myParams.myIsHoppingExtraCheckCallback != null && this._myParams.myIsHoppingExtraCheckCallback(this)) {\r\n                                this._myIsHopping = true;\r\n                            }\r\n                        }\r\n\r\n                        if (this._myIsLeaning) {\r\n                            let distance = movementToCheck.vec3_length();\r\n                            if (this._myParams.myIsLeaningValidAboveDistance && distance > this._myParams.myLeaningValidDistance) {\r\n                                this._myIsLeaning = false;\r\n                            }\r\n                        }\r\n\r\n                        if (this._myIsLeaning || this._myIsHopping) {\r\n                            if (isLastOnGround && this._myParams.myIsFloatingValidIfRealOnGround) {\r\n                                this._myIsLeaning = false;\r\n                                this._myIsHopping = false;\r\n                            } else if (isLastOnGround && isVertical && this._myParams.myIsFloatingValidIfVerticalMovementAndRealOnGround) {\r\n                                this._myIsLeaning = false;\r\n                                this._myIsHopping = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Head Colliding\r\n            movementToCheck = this.getPositionHeadReal(positionReal).vec3_sub(this.getPositionHead(position), movementToCheck);\r\n            collisionRuntimeParams.reset();\r\n            transformQuat = this.getTransformHeadQuat(transformQuat); // get eyes transform\r\n            newPositionHead.vec3_copy(this._myValidPositionHead);\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.HEAD_COLLIDING)) {\r\n                CollisionCheckGlobal.move(movementToCheck, transformQuat, this._myHeadCollisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    this._myIsHeadColliding = false;\r\n                    newPositionHead.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n                } else {\r\n                    this._myIsHeadColliding = true;\r\n                }\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncPositionFlagMap) && !this._myParams.mySyncPositionDisabled) {\r\n                this._myValidPosition.vec3_copy(newPosition);\r\n                //reset real position dato che la posizione new potrebbe essere quella influenzata da snap\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncPositionHeadFlagMap)) {\r\n                this._myValidPositionHead = this.getPositionHeadReal(newPositionHead);\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncRotationFlagMap)) {\r\n                this._myValidRotationQuat = this.getRotationRealQuat(this._myValidRotationQuat);\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncHeightFlagMap)) {\r\n                this._myValidHeight = this._myRealMovementCollisionCheckParams.myHeight;\r\n                this._updateCollisionHeight();\r\n            }\r\n\r\n            if (resetRealEnabled) { //no\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    let resetPosition = (this.isSynced(this._myParams.mySyncPositionFlagMap) || this._myParams.myAlwaysResetRealPositionVR) && !this._myParams.myNeverResetRealPositionVR;\r\n                    let resetRotation = (this.isSynced(this._myParams.mySyncRotationFlagMap) || this._myParams.myAlwaysResetRealRotationVR) && !this._myParams.myNeverResetRealRotationVR;\r\n                    let resetHeight = (this.isSynced(this._myParams.mySyncHeightFlagMap) || this._myParams.myAlwaysResetRealHeightVR) && !this._myParams.myNeverResetRealHeightVR;\r\n                    this.resetReal(resetPosition, resetRotation, resetHeight, false);\r\n                } else {\r\n                    let resetPosition = (this.isSynced(this._myParams.mySyncPositionFlagMap) || this._myParams.myAlwaysResetRealPositionNonVR) && !this._myParams.myNeverResetRealPositionNonVR;\r\n                    let resetRotation = (this.isSynced(this._myParams.mySyncRotationFlagMap) || this._myParams.myAlwaysResetRealRotationNonVR) && !this._myParams.myNeverResetRealRotationNonVR;\r\n                    let resetHeight = (this.isSynced(this._myParams.mySyncHeightFlagMap) || this._myParams.myAlwaysResetRealHeightNonVR) && !this._myParams.myNeverResetRealHeightNonVR;\r\n                    this.resetReal(resetPosition, resetRotation, resetHeight, false);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myUpdateRealPositionValid) {\r\n                transformQuat = this.getTransformRealQuat(transformQuat);\r\n                transformUp = transformQuat.quat2_getUp(transformUp);\r\n                rotationQuat = transformQuat.quat2_getRotationQuat(rotationQuat);\r\n                horizontalDirection = this._myLastValidMovementDirection.vec3_removeComponentAlongAxis(transformUp, horizontalDirection);\r\n                if (!horizontalDirection.vec3_isZero(0.00001)) {\r\n                    horizontalDirection.vec3_normalize(horizontalDirection);\r\n                    rotationQuat.quat_setForward(horizontalDirection);\r\n                    transformQuat.quat2_setRotationQuat(rotationQuat);\r\n                }\r\n\r\n                let debugBackup = this._myParams.myMovementCollisionCheckParams.myDebugActive;\r\n                this._myParams.myMovementCollisionCheckParams.myDebugActive = false;\r\n                CollisionCheckGlobal.positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myRealCollisionRuntimeParams);\r\n                this._myIsRealPositionValid = this._myRealCollisionRuntimeParams.myIsPositionOk;\r\n                this._myParams.myMovementCollisionCheckParams.myDebugActive = debugBackup;\r\n            }\r\n        }\r\n    }\r\n}();\r\n\r\nPlayerTransformManager.prototype.move = function () {\r\n    let transformQuat = PP.quat2_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    return function move(movement, outCollisionRuntimeParams = null, forceMove = false) {\r\n        transformQuat = this.getTransformQuat(transformQuat);\r\n\r\n        CollisionCheckGlobal.move(movement, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myCollisionRuntimeParams);\r\n        if (outCollisionRuntimeParams != null) {\r\n            outCollisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n        }\r\n\r\n        if (!forceMove) {\r\n            fixedMovement.vec3_copy(this._myCollisionRuntimeParams.myFixedMovement);\r\n        } else {\r\n            fixedMovement.vec3_copy(movement);\r\n        }\r\n\r\n        if (!fixedMovement.vec3_isZero(0.00001)) {\r\n            this._myValidPosition.vec3_add(fixedMovement, this._myValidPosition);\r\n            this.getPlayerHeadManager().moveFeet(fixedMovement);\r\n        }\r\n\r\n        // this make reset happens even for gravity, maybe u should do it manually\r\n        if (this._myParams.myResetRealOnMove) {\r\n            if (!this.isSynced()) {\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        //#TODO add move callback\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.teleportPosition = function () {\r\n    let teleportTransformQuat = PP.quat2_create();\r\n    return function teleportPosition(teleportPosition, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        teleportTransformQuat = this.getTransformQuat(teleportTransformQuat);\r\n        teleportTransformQuat.quat2_setPosition(teleportPosition);\r\n        this.teleportTransformQuat(teleportTransformQuat, outCollisionRuntimeParams, forceTeleport);\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.teleportTransformQuat = function () {\r\n    let currentPosition = PP.vec3_create();\r\n    let teleportPositionVec = PP.vec3_create();\r\n    let teleportRotation = PP.quat_create();\r\n    let rotatedTransformQuat = PP.quat2_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    return function teleportTransformQuat(teleportTransformQuat, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        currentPosition = this.getPosition(currentPosition);\r\n        teleportPositionVec = teleportTransformQuat.quat2_getPosition(teleportPositionVec);\r\n        teleportRotation = teleportTransformQuat.quat2_getRotationQuat(teleportRotation);\r\n\r\n        rotatedTransformQuat.quat2_setPositionRotationQuat(currentPosition, teleportRotation);\r\n\r\n        CollisionCheckGlobal.teleport(teleportPositionVec, rotatedTransformQuat, this._myParams.myTeleportCollisionCheckParams, this._myCollisionRuntimeParams);\r\n        if (outCollisionRuntimeParams != null) {\r\n            outCollisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n        }\r\n\r\n        fixedMovement.vec3_zero();\r\n        if (!forceTeleport) {\r\n            if (!this._myCollisionRuntimeParams.myTeleportCanceled) {\r\n                fixedMovement = this._myCollisionRuntimeParams.myFixedTeleportPosition.vec3_sub(currentPosition, fixedMovement);\r\n                this.getPlayerHeadManager().setRotationFeetQuat(teleportRotation);\r\n            }\r\n        } else {\r\n            fixedMovement = teleportPositionVec.vec3_sub(currentPosition, fixedMovement);\r\n            this.getPlayerHeadManager().setRotationFeetQuat(teleportRotation);\r\n        }\r\n\r\n        if (!fixedMovement.vec3_isZero(0.00001)) {\r\n            this._myValidPosition.vec3_add(fixedMovement, this._myValidPosition);\r\n            this.getPlayerHeadManager().moveFeet(fixedMovement);\r\n        }\r\n\r\n        if (this._myParams.myResetRealOnTeleport) {\r\n            if (!this.isSynced()) {\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        //#TODO add teleport callback\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.rotateQuat = function () {\r\n    return function rotateQuat(rotationQuat) {\r\n        this._myValidRotationQuat.quat_rotateQuat(rotationQuat, this._myValidRotationQuat);\r\n        this.getPlayerHeadManager().rotateFeetQuat(rotationQuat);\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.setRotationQuat = function () {\r\n    let rotationToPerform = PP.quat_create();\r\n    return function setRotationQuat(rotationQuat) {\r\n        rotationToPerform = this._myValidRotationQuat.quat_rotationToQuat(rotationQuat, rotationToPerform);\r\n        this.rotateQuat(rotationToPerform);\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.setHeight = function () {\r\n    let transformQuat = PP.quat2_create();\r\n    return function setHeight(height, forceSet = false) {\r\n        let fixedHeight = Math.pp_clamp(height, this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n        let previousHeight = this.getHeight();\r\n\r\n        this._myValidHeight = fixedHeight;\r\n        this._updateCollisionHeight();\r\n\r\n        transformQuat = this.getTransformQuat(transformQuat);\r\n\r\n        CollisionCheckGlobal.positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myCollisionRuntimeParams);\r\n\r\n        if (this._myCollisionRuntimeParams.myIsPositionOk || forceSet) {\r\n            this.getPlayerHeadManager().setHeight(this.getHeight(), true);\r\n        } else {\r\n            this._myValidHeight = previousHeight;\r\n        }\r\n\r\n        this._updateCollisionHeight();\r\n    };\r\n}();\r\n\r\n//sliding info, surface info, update", "PlayerLocomotionRotateParams = class PlayerLocomotionRotateParams {\r\n    constructor() {\r\n        this.myPlayerHeadManager = null;\r\n\r\n        this.myMaxRotationSpeed = 0;\r\n        this.myIsSnapTurn = false;\r\n        this.mySnapTurnOnlyVR = false;\r\n\r\n        this.mySmoothSnapActive = true;\r\n        this.mySmoothSnapSpeedDegrees = 240;\r\n\r\n        this.myRotationMinStickIntensityThreshold = 0;\r\n        this.mySnapTurnActivateThreshold = 0;\r\n        this.mySnapTurnResetThreshold = 0;\r\n\r\n        this.myClampVerticalAngle = true;\r\n        this.myMaxVerticalAngle = 0;\r\n\r\n        this.myHandedness = PP.Handedness.RIGHT;\r\n    }\r\n};\r\n\r\nPlayerLocomotionRotate = class PlayerLocomotionRotate {\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._mySnapCharge = false;\r\n\r\n        this._mySmoothSnapHorizontalRunning = false;\r\n        this._mySmoothSnapHorizontalAngleToPerform = 0;\r\n\r\n        this._mySmoothSnapVerticalRunning = false;\r\n        this._mySmoothSnapVerticalAngleToPerform = 0;\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Smooth Speed\", this._myParams.mySmoothSnapSpeedDegrees, 10, 3, 0));\r\n    }\r\n\r\n    start() {\r\n    }\r\n\r\n    stop() {\r\n        this._mySmoothSnapHorizontalRunning = false;\r\n        this._mySmoothSnapHorizontalAngleToPerform = 0;\r\n\r\n        this._mySmoothSnapVerticalRunning = false;\r\n        this._mySmoothSnapVerticalAngleToPerform = 0;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myParams.mySmoothSnapSpeedDegrees = PP.myEasyTuneVariables.get(\"Teleport Smooth Speed\");\r\n\r\n        this._rotateHeadHorizontally(dt);\r\n\r\n        if (this._myParams.myPlayerHeadManager.canRotateHead()) {\r\n            this._rotateHeadVertically(dt);\r\n        }\r\n    }\r\n};\r\n\r\nPlayerLocomotionRotate.prototype._rotateHeadHorizontally = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let headRotation = PP.quat_create();\r\n    return function _rotateHeadHorizontally(dt) {\r\n        playerUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        headRotation.quat_identity();\r\n\r\n        let axes = PP.myGamepads[this._myParams.myHandedness].getAxesInfo().getAxes();\r\n\r\n        if (!this._myParams.myIsSnapTurn || (this._myParams.mySnapTurnOnlyVR && !PP.XRUtils.isSessionActive())) {\r\n            if (Math.abs(axes[0]) > this._myParams.myRotationMinStickIntensityThreshold) {\r\n                let rotationIntensity = -axes[0];\r\n                let speed = Math.pp_lerp(0, this._myParams.myMaxRotationSpeed, Math.abs(rotationIntensity)) * Math.pp_sign(rotationIntensity);\r\n\r\n                headRotation.quat_fromAxis(speed * dt, playerUp);\r\n            }\r\n        } else {\r\n            if (!this._mySnapCharge) {\r\n                if (Math.abs(axes.vec2_length()) < this._myParams.mySnapTurnResetThreshold) {\r\n                    this._mySnapCharge = true;\r\n                }\r\n            } else if (!this._mySmoothSnapHorizontalRunning) {\r\n                if (Math.abs(axes[0]) > this._myParams.mySnapTurnActivateThreshold) {\r\n                    let angleToRotate = -Math.pp_sign(axes[0]) * this._myParams.mySnapTurnAngle;\r\n\r\n                    if (!this._myParams.mySmoothSnapActive) {\r\n                        headRotation.quat_fromAxis(angleToRotate, playerUp);\r\n                    } else {\r\n                        this._mySmoothSnapHorizontalRunning = true;\r\n                        this._mySmoothSnapHorizontalAngleToPerform = angleToRotate;\r\n                    }\r\n\r\n                    this._mySnapCharge = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._mySmoothSnapHorizontalRunning) {\r\n            let angleToRotate = Math.pp_sign(this._mySmoothSnapHorizontalAngleToPerform) * (this._myParams.mySmoothSnapSpeedDegrees * dt);\r\n            if (Math.abs(angleToRotate) > Math.abs(this._mySmoothSnapHorizontalAngleToPerform) - LocomotionUtils.EPSILON_NUMBER) {\r\n                angleToRotate = this._mySmoothSnapHorizontalAngleToPerform;\r\n            }\r\n\r\n            headRotation.quat_fromAxis(angleToRotate, playerUp);\r\n            this._mySmoothSnapHorizontalAngleToPerform -= angleToRotate;\r\n\r\n            if (Math.abs(this._mySmoothSnapHorizontalAngleToPerform) < LocomotionUtils.EPSILON_NUMBER) {\r\n                this._mySmoothSnapHorizontalRunning = false;\r\n                this._mySmoothSnapHorizontalAngleToPerform = 0;\r\n            }\r\n        }\r\n\r\n        if (headRotation.quat_getAngle() > LocomotionUtils.EPSILON_DEGREES) {\r\n            if (PP.myGamepads[PP.InputUtils.getOppositeHandedness(this._myParams.myHandedness)].getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n                this._myParams.myPlayerHeadManager.rotateFeetQuat(headRotation);\r\n            } else {\r\n                this._myParams.myPlayerTransformManager.rotateQuat(headRotation);\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionRotate.prototype._rotateHeadVertically = function () {\r\n    let headForward = PP.vec3_create();\r\n    let headUp = PP.vec3_create();\r\n    let referenceUp = PP.vec3_create();\r\n    let referenceUpNegate = PP.vec3_create();\r\n    let referenceRight = PP.vec3_create();\r\n    let newUp = PP.vec3_create();\r\n    let headRotation = PP.quat_create();\r\n    return function _rotateHeadVertically(dt) {\r\n        let head = this._myParams.myPlayerHeadManager.getHead();\r\n\r\n        headForward = head.pp_getForward(headForward);\r\n        headUp = head.pp_getUp(headUp);\r\n\r\n        referenceUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(referenceUp);\r\n        referenceUpNegate = referenceUp.vec3_negate(referenceUpNegate);\r\n        referenceRight = headForward.vec3_cross(referenceUp, referenceRight);\r\n\r\n        let minAngle = 1;\r\n        if (headForward.vec3_angle(referenceUp) < minAngle) {\r\n            referenceRight = headUp.vec3_negate(referenceRight).vec3_cross(referenceUp, referenceRight);\r\n        } else if (headForward.vec3_angle(referenceUpNegate) < minAngle) {\r\n            referenceRight = headUp.vec3_cross(referenceUp, referenceRight);\r\n        } else if (!headUp.vec3_isConcordant(referenceUp)) {\r\n            referenceRight.vec3_negate(referenceRight);\r\n        }\r\n\r\n        referenceRight.vec3_normalize(referenceRight);\r\n\r\n        let axes = PP.myGamepads[this._myParams.myHandedness].getAxesInfo().getAxes();\r\n        let angleToRotate = 0;\r\n\r\n        if (!this._myParams.myIsSnapTurn || (this._myParams.mySnapTurnOnlyVR && !PP.XRUtils.isSessionActive())) {\r\n            if (Math.abs(axes[1]) > this._myParams.myRotationMinStickIntensityThreshold) {\r\n                let rotationIntensity = axes[1];\r\n                angleToRotate = Math.pp_lerp(0, this._myParams.myMaxRotationSpeed, Math.abs(rotationIntensity)) * Math.pp_sign(rotationIntensity) * dt;\r\n            }\r\n        } else {\r\n            if (!this._mySnapCharge) {\r\n                if (Math.abs(axes.vec2_length()) < this._myParams.mySnapTurnResetThreshold) {\r\n                    this._mySnapCharge = true;\r\n                }\r\n            } else if (!this._mySmoothSnapVerticalRunning) {\r\n                if (Math.abs(axes[1]) > this._myParams.mySnapTurnActivateThreshold) {\r\n                    angleToRotate = Math.pp_sign(axes[1]) * this._myParams.mySnapTurnAngle;\r\n\r\n                    // adjust rotation to closest snap step\r\n\r\n                    let angleWithUp = Math.pp_angleClamp(headUp.vec3_angleSigned(referenceUp, referenceRight));\r\n                    let snapStep = Math.round(angleWithUp / this._myParams.mySnapTurnAngle);\r\n\r\n                    let snapAngle = Math.pp_angleClamp(snapStep * this._myParams.mySnapTurnAngle);\r\n                    let angleToAlign = -Math.pp_angleDistanceSigned(angleWithUp, snapAngle);\r\n\r\n                    if (Math.abs(angleToAlign) > 1) {\r\n                        if (Math.pp_sign(angleToRotate) == Math.pp_sign(angleToAlign)) {\r\n                            angleToRotate = angleToAlign;\r\n                        } else {\r\n                            angleToRotate = (-Math.pp_sign(angleToAlign) * this._myParams.mySnapTurnAngle) + angleToAlign;\r\n                        }\r\n                    } else if (Math.abs(angleToAlign) > LocomotionUtils.EPSILON_DEGREES) {\r\n                        angleToRotate += angleToAlign;\r\n                    }\r\n\r\n                    if (this._myParams.mySmoothSnapActive) {\r\n                        this._mySmoothSnapVerticalRunning = true;\r\n                        this._mySmoothSnapVerticalAngleToPerform = angleToRotate;\r\n                    }\r\n\r\n                    this._mySnapCharge = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._mySmoothSnapVerticalRunning) {\r\n            angleToRotate = Math.pp_sign(this._mySmoothSnapVerticalAngleToPerform) * (this._myParams.mySmoothSnapSpeedDegrees * dt);\r\n            if (Math.abs(angleToRotate) > Math.abs(this._mySmoothSnapVerticalAngleToPerform) - LocomotionUtils.EPSILON_NUMBER) {\r\n                angleToRotate = this._mySmoothSnapVerticalAngleToPerform;\r\n            }\r\n\r\n            this._mySmoothSnapVerticalAngleToPerform -= angleToRotate;\r\n\r\n            if (Math.abs(this._mySmoothSnapVerticalAngleToPerform) < LocomotionUtils.EPSILON_NUMBER) {\r\n                this._mySmoothSnapVerticalRunning = false;\r\n                this._mySmoothSnapVerticalAngleToPerform = 0;\r\n            }\r\n        }\r\n\r\n        if (angleToRotate != 0) {\r\n            headRotation.quat_fromAxis(angleToRotate, referenceRight);\r\n            this._myParams.myPlayerHeadManager.rotateHeadQuat(headRotation);\r\n\r\n            if (this._myParams.myClampVerticalAngle) {\r\n                let maxVerticalAngle = this._myParams.myMaxVerticalAngle - 0.0001;\r\n                newUp = head.pp_getUp(newUp);\r\n                let angleWithUp = Math.pp_angleClamp(newUp.vec3_angleSigned(referenceUp, referenceRight));\r\n                if (Math.abs(angleWithUp) > maxVerticalAngle) {\r\n                    let fixAngle = (Math.abs(angleWithUp) - maxVerticalAngle) * Math.pp_sign(angleWithUp);\r\n                    headRotation.quat_fromAxis(fixAngle, referenceRight);\r\n                    this._myParams.myPlayerHeadManager.rotateHeadQuat(headRotation);\r\n                }\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PlayerLocomotionRotate.prototype, \"_rotateHeadHorizontally\", { enumerable: false });\r\nObject.defineProperty(PlayerLocomotionRotate.prototype, \"_rotateHeadVertically\", { enumerable: false });", "\r\n\r\nPlayerLocomotionMovementRuntimeParams = class PlayerLocomotionMovementRuntimeParams {\r\n    constructor() {\r\n        this.myIsFlying = false;\r\n        this.myCollisionRuntimeParams = null;\r\n\r\n        this.myIsTeleportDetecting = false;\r\n        this.myIsTeleporting = false;\r\n        this.myTeleportJustPerformed = false;\r\n    }\r\n};\r\n\r\nPlayerLocomotionMovement = class PlayerLocomotionMovement {\r\n    constructor(locomotionRuntimeParams) {\r\n        this._myLocomotionRuntimeParams = locomotionRuntimeParams;\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    stop() {\r\n\r\n    }\r\n\r\n    canStop() {\r\n        return true;\r\n    }\r\n};", "PlayerLocomotionSmoothParams = class PlayerLocomotionSmoothParams {\r\n    constructor() {\r\n        this.myPlayerHeadManager = null;\r\n        this.myPlayerTransformManager = null;\r\n\r\n        this.myCollisionCheckParams = null;\r\n\r\n        this.myMaxSpeed = 0;\r\n\r\n        this.myMovementMinStickIntensityThreshold = 0;\r\n\r\n        this.myFlyEnabled = false;\r\n        this.myMinAngleToFlyUpNonVR = 0;\r\n        this.myMinAngleToFlyDownNonVR = 0;\r\n        this.myMinAngleToFlyUpVR = 0;\r\n        this.myMinAngleToFlyDownVR = 0;\r\n        this.myMinAngleToFlyRight = 0;\r\n\r\n        this.myGravityAcceleration = 0;\r\n\r\n        this.myVRDirectionReferenceType = PlayerLocomotionDirectionReferenceType.HEAD;\r\n        this.myVRDirectionReferenceObject = null;\r\n\r\n        this.myHandedness = PP.Handedness.LEFT;\r\n    }\r\n};\r\n\r\nPlayerLocomotionSmooth = class PlayerLocomotionSmooth extends PlayerLocomotionMovement {\r\n    constructor(params, locomotionRuntimeParams) {\r\n        super(locomotionRuntimeParams);\r\n\r\n        this._myParams = params;\r\n\r\n        this._myDirectionReference = PP.myPlayerObjects.myHead;\r\n\r\n        this._myStickIdleTimer = new PP.Timer(0.25, false);\r\n\r\n        let directionConverterNonVRParams = new PP.Direction2DTo3DConverterParams();\r\n        directionConverterNonVRParams.myAutoUpdateFlyForward = this._myParams.myFlyEnabled;\r\n        directionConverterNonVRParams.myAutoUpdateFlyRight = this._myParams.myFlyEnabled;\r\n        directionConverterNonVRParams.myMinAngleToFlyForwardUp = this._myParams.myMinAngleToFlyUpNonVR;\r\n        directionConverterNonVRParams.myMinAngleToFlyForwardDown = this._myParams.myMinAngleToFlyDownNonVR;\r\n        directionConverterNonVRParams.myMinAngleToFlyRightUp = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterNonVRParams.myMinAngleToFlyRightDown = this._myParams.myMinAngleToFlyRight;\r\n\r\n        let directionConverterVRParams = new PP.Direction2DTo3DConverterParams();\r\n        directionConverterVRParams.myAutoUpdateFlyForward = this._myParams.myFlyEnabled;\r\n        directionConverterVRParams.myAutoUpdateFlyRight = this._myParams.myFlyEnabled;\r\n        directionConverterVRParams.myMinAngleToFlyForwardUp = this._myParams.myMinAngleToFlyUpVR;\r\n        directionConverterVRParams.myMinAngleToFlyForwardDown = this._myParams.myMinAngleToFlyDownVR;\r\n        directionConverterVRParams.myMinAngleToFlyRightUp = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterVRParams.myMinAngleToFlyRightDown = this._myParams.myMinAngleToFlyRight;\r\n\r\n        this._myDirectionConverterNonVR = new PP.Direction2DTo3DConverter(directionConverterNonVRParams);\r\n        this._myDirectionConverterVR = new PP.Direction2DTo3DConverter(directionConverterVRParams);\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterNonVR;\r\n\r\n        this._myLocomotionRuntimeParams.myIsFlying = false;\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    update(dt) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPlayerLocomotionSmooth.prototype.update = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let headMovement = PP.vec3_create();\r\n    let direction = PP.vec3_create();\r\n    let directionOnUp = PP.vec3_create();\r\n    let verticalMovement = PP.vec3_create();\r\n    let feetTransformQuat = PP.quat2_create();\r\n\r\n    let directionReferenceTransformQuat = PP.quat2_create();\r\n    return function update(dt) {\r\n        playerUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        headMovement.vec3_zero();\r\n\r\n        let axes = PP.myGamepads[this._myParams.myHandedness].getAxesInfo().getAxes();\r\n        axes[0] = Math.abs(axes[0]) > this._myParams.myMovementMinStickIntensityThreshold ? axes[0] : 0;\r\n        axes[1] = Math.abs(axes[1]) > this._myParams.myMovementMinStickIntensityThreshold ? axes[1] : 0;\r\n\r\n        if (!axes.vec2_isZero()) {\r\n            this._myStickIdleTimer.start();\r\n\r\n            direction = this._myCurrentDirectionConverter.convertTransformQuat(axes, this._myDirectionReference.pp_getTransformQuat(directionReferenceTransformQuat), playerUp, direction);\r\n\r\n            if (!direction.vec3_isZero()) {\r\n                this._myLocomotionRuntimeParams.myIsFlying = this._myLocomotionRuntimeParams.myIsFlying || direction.vec3_componentAlongAxis(playerUp, directionOnUp).vec3_length() > 0.000001;\r\n                if (!this._myLocomotionRuntimeParams.myIsFlying) {\r\n                    direction = direction.vec3_removeComponentAlongAxis(playerUp, direction);\r\n                }\r\n\r\n                let movementIntensity = axes.vec2_length();\r\n                if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.SELECT).isPressed()) {\r\n                    movementIntensity = 0.1;\r\n                }\r\n                let speed = Math.pp_lerp(0, this._myParams.myMaxSpeed, movementIntensity);\r\n\r\n                if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsSliding) {\r\n\r\n                    //speed = Math.pp_lerp(speed * 0.05, speed, 1 - Math.abs(this._myLocomotionRuntimeParams.myCollisionRuntimeParams.mySlidingMovementAngle) / 90);\r\n                    //speed = speed * 0.1;\r\n                    speed = speed / 2;\r\n                }\r\n\r\n                headMovement = direction.vec3_scale(speed * dt, headMovement);\r\n            }\r\n        } else {\r\n            if (this._myStickIdleTimer.isRunning()) {\r\n                this._myStickIdleTimer.update(dt);\r\n                if (this._myStickIdleTimer.isDone()) {\r\n                    this._myCurrentDirectionConverter.resetFly();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.SQUEEZE).isPressed()) {\r\n            if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).isPressed()) {\r\n                verticalMovement = playerUp.vec3_scale(this._myParams.myMaxSpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                this._myLocomotionRuntimeParams.myIsFlying = true;\r\n            } else if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n                verticalMovement = playerUp.vec3_scale(-this._myParams.myMaxSpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                this._myLocomotionRuntimeParams.myIsFlying = true;\r\n            }\r\n        }\r\n\r\n        if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressEnd(2)) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = false;\r\n        }\r\n\r\n        if (PP.myGamepads[PP.InputUtils.getOppositeHandedness(this._myParams.myHandedness)].getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n            if (!PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressed()) {\r\n                if (!this._myLocomotionRuntimeParams.myIsFlying && false) {\r\n                    let gravity = -2;\r\n                    verticalMovement = playerUp.vec3_scale(gravity * dt, verticalMovement);\r\n                    headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                }\r\n\r\n                if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.SQUEEZE).isPressed()) {\r\n                    headMovement.vec3_zero();\r\n                }\r\n\r\n                feetTransformQuat = this._myParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n\r\n                globalDT = dt;\r\n                CollisionCheckGlobal.move(headMovement, feetTransformQuat, this._myParams.myCollisionCheckParams, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n                headMovement.vec3_copy(this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myFixedMovement);\r\n            }\r\n\r\n            if (!headMovement.vec3_isZero(0.000001)) {\r\n                this._myParams.myPlayerHeadManager.moveFeet(headMovement);\r\n            }\r\n        } else {\r\n            if (!PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressed()) {\r\n                if (!this._myLocomotionRuntimeParams.myIsFlying) {\r\n                    let gravity = -2;\r\n                    verticalMovement = playerUp.vec3_scale(gravity * dt, verticalMovement);\r\n                    headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                }\r\n\r\n                if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.SQUEEZE).isPressed()) {\r\n                    headMovement.vec3_zero();\r\n                }\r\n\r\n                feetTransformQuat = this._myParams.myPlayerTransformManager.getTransformQuat(feetTransformQuat);\r\n\r\n                globalDT = dt;\r\n                this._myParams.myPlayerTransformManager.move(headMovement, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n            } else {\r\n                this._myParams.myPlayerTransformManager.move(headMovement, this._myLocomotionRuntimeParams.myCollisionRuntimeParams, true);\r\n            }\r\n        }\r\n\r\n        if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = false;\r\n            this._myCurrentDirectionConverter.resetFly();\r\n        }\r\n    };\r\n}();\r\n\r\nglobalDT = 0;\r\n\r\nPlayerLocomotionSmooth.prototype._onXRSessionStart = function () {\r\n    return function _onXRSessionStart(session) {\r\n        switch (this._myParams.myVRDirectionReferenceType) {\r\n            case 0:\r\n                this._myDirectionReference = PP.myPlayerHeadManager.myHead;\r\n                break;\r\n            case 1:\r\n                this._myDirectionReference = PP.myPlayerObjects.myHands[this._myParams.myHandedness];\r\n                break;\r\n            case 2:\r\n                this._myDirectionReference = this._myParams.myVRDirectionReferenceObject;\r\n                break;\r\n        }\r\n\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterVR;\r\n        this._myCurrentDirectionConverter.resetFly();\r\n    };\r\n}();\r\n\r\nPlayerLocomotionSmooth.prototype._onXRSessionEnd = function () {\r\n    let playerUp = PP.vec3_create();\r\n    return function _onXRSessionEnd(session) {\r\n        this._myDirectionReference = PP.myPlayerObjects.myHead;\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterNonVR;\r\n\r\n        this._myCurrentDirectionConverter.resetFly();\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PlayerLocomotionSmooth.prototype, \"update\", { enumerable: false });\r\nObject.defineProperty(PlayerLocomotionSmooth.prototype, \"_onXRSessionStart\", { enumerable: false });\r\nObject.defineProperty(PlayerLocomotionSmooth.prototype, \"_onXRSessionEnd\", { enumerable: false });", "// even if this can be sued to generally fade, it should be called collision obscure to hint that is meant for collision obscuring\r\n\r\n// occlude\r\nPlayerObscureManagerParams = class PlayerObscureManagerParams {\r\n    constructor() {\r\n        this.myPlayerTransformManager = null;\r\n\r\n        this.myObscureObject = null;\r\n        this.myObscureMaterial = null;\r\n        this.myObscureRadius = 0;\r\n\r\n        this.myObscureFadeOutSeconds = 0.1;\r\n        this.myObscureFadeInSeconds = 0.1;\r\n\r\n        this.myObscureFadeEasingFunction = PP.EasingFunction.linear;\r\n\r\n        this.myDistanceToStartObscureWhenHeadColliding = 0;\r\n        this.myDistanceToStartObscureWhenBodyColliding = 0;\r\n        this.myDistanceToStartObscureWhenFloating = 0;\r\n        this.myDistanceToStartObscureWhenFar = 0;\r\n\r\n        this.myRelativeDistanceToMaxObscureWhenHeadColliding = 0; // relative to the start distance, 1 means that in 1 meters after it started it will be completely obscured\r\n        this.myRelativeDistanceToMaxObscureWhenBodyColliding = 0;\r\n        this.myRelativeDistanceToMaxObscureWhenFloating = 0;\r\n        this.myRelativeDistanceToMaxObscureWhenFar = 0;\r\n\r\n        this.myObscureLevelRelativeDistanceEasingFunction = PP.EasingFunction.linear;\r\n    }\r\n};\r\n\r\nPlayerObscureManager = class PlayerObscureManager {\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myObscureMaterial = null;\r\n        this._myObscureParentObject = null;\r\n\r\n        this._myCurrentObscureLevel = 0;\r\n        this._myTargetObscureLevel = 0;\r\n        this._myLastTargetObscureLevel = null;\r\n        this._myLastIsFadingIn = null;\r\n\r\n        this._myFadeTimer = new PP.Timer(0, false);\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \" Obscure\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n\r\n        this._myFSM.addState(\"inactive\");\r\n        this._myFSM.addState(\"idle\", this._idleUpdate.bind(this));\r\n        this._myFSM.addState(\"fading\", this._fadingUpdate.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"inactive\", \"end\", this._setObscureLevel.bind(this, 0));\r\n\r\n        this._myFSM.addTransition(\"inactive\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"fading\", \"fade\", this._startFading.bind(this));\r\n        this._myFSM.addTransition(\"fading\", \"idle\", \"done\", this._fadingDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"inactive\", \"inactive\", \"stop\", this._setObscureLevel.bind(this, 0));\r\n        this._myFSM.addTransition(\"idle\", \"inactive\", \"stop\", this._setObscureLevel.bind(this, 0));\r\n        this._myFSM.addTransition(\"fading\", \"inactive\", \"stop\", this._setObscureLevel.bind(this, 0));\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._setupVisuals();\r\n\r\n        this._myFSM.perform(\"end\");\r\n    }\r\n\r\n    start() {\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    stop() {\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    update(dt) {\r\n        this._updateObscured();\r\n\r\n        this._myFSM.update(dt);\r\n\r\n        this._setObscureVisible(this.isObscured());\r\n    }\r\n\r\n    isStarted() {\r\n        return !this._myFSM.isInState(\"inactive\");\r\n    }\r\n\r\n    isObscured() {\r\n        return this._myCurrentObscureLevel > 0;\r\n    }\r\n\r\n    isFading() {\r\n        return this._myFSM.isInState(\"fading\");\r\n    }\r\n\r\n    isFadingIn() {\r\n        return this.isFading() && this._myCurrentObscureLevel > this._myTargetObscureLevel;\r\n    }\r\n\r\n    isFadingOut() {\r\n        return this.isFading() && this._myCurrentObscureLevel <= this._myTargetObscureLevel;\r\n    }\r\n\r\n    getObscureLevel() {\r\n        return this._myCurrentObscureLevel;\r\n    }\r\n\r\n    getTargetObscureLevel() {\r\n        return this._myTargetObscureLevel;\r\n    }\r\n\r\n    getCurrentObscureLevel() {\r\n        this._myCurrentObscureLevel;\r\n    }\r\n\r\n    obscureLevelOverride(obscureLevel, instantFade = false) {\r\n        this._myObscurelevelOverride = obscureLevel;\r\n\r\n        if (instantFade && this.isStarted()) {\r\n            this._setObscureLevel(obscureLevel);\r\n        }\r\n    }\r\n\r\n    resetObscureLevelOverride() {\r\n        this._myObscurelevelOverride = null;\r\n    }\r\n\r\n    _idleUpdate(dt) {\r\n        if (Math.abs(this._myTargetObscureLevel - this._myCurrentObscureLevel) > Math.PP_EPSILON_NUMBER) {\r\n            this._myFSM.perform(\"fade\");\r\n        }\r\n    }\r\n\r\n    _fadingUpdate(dt) {\r\n        if (Math.abs(this._myTargetObscureLevel - this._myCurrentObscureLevel) <= Math.PP_EPSILON_NUMBER) {\r\n            this._myFSM.perform(\"done\");\r\n            return;\r\n        }\r\n\r\n        if (this._myLastTargetObscureLevel != this._myTargetObscureLevel) {\r\n            this._refreshFadeTimer();\r\n            this._myLastTargetObscureLevel = this._myTargetObscureLevel;\r\n        }\r\n\r\n        this._myFadeTimer.update(dt);\r\n\r\n        let newObscureLevel = this._myParams.myObscureFadeEasingFunction(this._myFadeTimer.getPercentage());\r\n\r\n        let isFadingIn = this._myCurrentObscureLevel > this._myTargetObscureLevel;\r\n        if (!isFadingIn) {\r\n            newObscureLevel = Math.min(newObscureLevel, this._myTargetObscureLevel);\r\n        } else {\r\n            newObscureLevel = Math.pp_clamp(1 - newObscureLevel, 0, 1);\r\n            newObscureLevel = Math.max(newObscureLevel, this._myTargetObscureLevel);\r\n        }\r\n\r\n        this._setObscureAlpha(newObscureLevel);\r\n        this._myCurrentObscureLevel = newObscureLevel;\r\n\r\n        if (Math.abs(this._myTargetObscureLevel - this._myCurrentObscureLevel) <= Math.PP_EPSILON_NUMBER || this._myFadeTimer.isDone()) {\r\n            this._myFSM.perform(\"done\");\r\n        }\r\n    }\r\n\r\n    _startFading() {\r\n        this._myLastTargetObscureLevel = null;\r\n        this._myLastIsFadingIn = null;\r\n    }\r\n\r\n    _fadingDone() {\r\n        this._setObscureLevel(this._myTargetObscureLevel);\r\n    }\r\n\r\n    _refreshFadeTimer() {\r\n        let isFadingIn = this._myCurrentObscureLevel > this._myTargetObscureLevel;\r\n\r\n        if (this._myLastIsFadingIn != isFadingIn) {\r\n            this._setFadeTimerToObscureLevel(isFadingIn);\r\n        }\r\n\r\n        this._myLastIsFadingIn = isFadingIn;\r\n    }\r\n\r\n    _setFadeTimerToObscureLevel(isFadingIn) {\r\n        let percentage = 0;\r\n        let closestPercentage = 0;\r\n        let steps = 1000;\r\n        let increment = 1 / steps;\r\n\r\n        while (percentage < 1) {\r\n            if (Math.abs(this._myParams.myObscureFadeEasingFunction(percentage) - this._myCurrentObscureLevel) <\r\n                Math.abs(this._myParams.myObscureFadeEasingFunction(closestPercentage) - this._myCurrentObscureLevel)) {\r\n                closestPercentage = percentage;\r\n            }\r\n\r\n            percentage += increment;\r\n        }\r\n\r\n        if (Math.abs(this._myParams.myObscureFadeEasingFunction(1) - this._myCurrentObscureLevel) <\r\n            Math.abs(this._myParams.myObscureFadeEasingFunction(closestPercentage) - this._myCurrentObscureLevel)) {\r\n            closestPercentage = 1;\r\n        }\r\n\r\n        if (isFadingIn) {\r\n            this._myFadeTimer.start(this._myParams.myObscureFadeInSeconds);\r\n            this._myFadeTimer.setPercentage(Math.pp_clamp(1 - closestPercentage, 0, 1));\r\n        } else {\r\n            this._myFadeTimer.start(this._myParams.myObscureFadeOutSeconds);\r\n            this._myFadeTimer.setPercentage(Math.pp_clamp(closestPercentage, 0, 1));\r\n        }\r\n    }\r\n\r\n    _setObscureLevel(obscureLevel) {\r\n        this._myTargetObscureLevel = obscureLevel;\r\n        this._myCurrentObscureLevel = obscureLevel;\r\n        this._setObscureAlpha(obscureLevel);\r\n        this._setObscureVisible(this.isObscured());\r\n    }\r\n\r\n    _setObscureAlpha(alpha) {\r\n        if (this._myParams.myObscureObject == null) {\r\n            PP.MaterialUtils.setAlpha(this._myObscureMaterial, alpha);\r\n        } else {\r\n            PP.MaterialUtils.setObjectAlpha(this._myParams.myObscureObject, alpha);\r\n        }\r\n    }\r\n\r\n    _updateObscured() {\r\n        this._myTargetObscureLevel = 0;\r\n\r\n        if (this._myObscurelevelOverride != null) {\r\n            this._myTargetObscureLevel = this._myObscurelevelOverride;\r\n        } else {\r\n            if (this._myParams.myPlayerTransformManager.isHeadColliding()) {\r\n                let distance = this._myParams.myPlayerTransformManager.getDistanceToRealHead();\r\n                let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenHeadColliding;\r\n                if (relativeDistance >= 0) {\r\n                    let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenHeadColliding, 0, 1);\r\n                    let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                    this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myPlayerTransformManager.isBodyColliding()) {\r\n                let distance = this._myParams.myPlayerTransformManager.getDistanceToReal();\r\n                let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenBodyColliding;\r\n                if (relativeDistance >= 0) {\r\n                    let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenBodyColliding, 0, 1);\r\n                    let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                    this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myPlayerTransformManager.isFloating()) {\r\n                let distance = this._myParams.myPlayerTransformManager.getDistanceToReal();\r\n                let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenFloating;\r\n                if (relativeDistance >= 0) {\r\n                    let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenFloating, 0, 1);\r\n                    let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                    this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myPlayerTransformManager.isFar()) {\r\n                let distance = this._myParams.myPlayerTransformManager.getDistanceToReal();\r\n                let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenFar;\r\n                if (relativeDistance >= 0) {\r\n                    let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenFar, 0, 1);\r\n                    let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                    this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _setupVisuals() {\r\n        this._myObscureMaterial = null;\r\n        if (this._myParams.myObscureMaterial != null) {\r\n            this._myObscureMaterial = this._myParams.myObscureMaterial;\r\n        } else {\r\n            this._myObscureMaterial = PP.myDefaultResources.myMaterials.myFlatTransparentNoDepth.clone();\r\n            this._myObscureMaterial.color = PP.vec4_create(0, 0, 0, 1);\r\n        }\r\n\r\n        this._myObscureParentObject = PP.myVisualData.myRootObject.pp_addObject();\r\n\r\n        let obscureVisualParams = new PP.VisualMeshParams();\r\n        obscureVisualParams.myMesh = PP.myDefaultResources.myMeshes.myInvertedSphere;\r\n        obscureVisualParams.myMaterial = (this._myParams.myObscureMaterial != null) ? this._myParams.myObscureMaterial : this._myObscureMaterial;\r\n        obscureVisualParams.myParent = this._myObscureParentObject;\r\n        obscureVisualParams.myIsLocal = true;\r\n        obscureVisualParams.myTransform.mat4_setScale(PP.vec3_create(this._myParams.myObscureRadius, this._myParams.myObscureRadius, this._myParams.myObscureRadius));\r\n        this._myObscureVisual = new PP.VisualMesh(obscureVisualParams);\r\n\r\n        if (this._myParams.myObscureObject != null) {\r\n            this._myParams.myObscureObject.pp_setParent(this._myObscureParentObject, false);\r\n            this._myParams.myObscureObject.pp_resetTransformLocal();\r\n        }\r\n\r\n        this._setObscureVisible(false);\r\n    }\r\n\r\n    _setObscureVisible(visible) {\r\n        if (this._myParams.myObscureObject == null) {\r\n            this._myObscureVisual.setVisible(visible);\r\n        } else {\r\n            this._myObscureVisual.setVisible(false);\r\n            this._myParams.myObscureObject.pp_setActive(visible);\r\n        }\r\n\r\n        if (visible) {\r\n            this._myObscureParentObject.pp_setParent(this._myParams.myPlayerTransformManager.getHead(), false);\r\n        } else {\r\n            this._myObscureParentObject.pp_setParent(null, false);\r\n        }\r\n    }\r\n};", "PlayerLocomotionDirectionReferenceType = {\r\n    HEAD: 0,\r\n    HAND: 1,\r\n    CUSTOM_OBJECT: 2,\r\n};\r\n\r\ntransformManager = null;\r\n\r\nPlayerLocomotionParams = class PlayerLocomotionParams {\r\n    constructor() {\r\n        this.myMaxSpeed = 0;\r\n        this.myMaxRotationSpeed = 0;\r\n\r\n        this.myCharacterRadius = 0;\r\n\r\n        this.myIsSnapTurn = false;\r\n        this.mySnapTurnOnlyVR = false;\r\n        this.mySnapTurnAngle = 0;\r\n        this.mySnapTurnSpeedDegrees = 0;\r\n\r\n        this.myFlyEnabled = false;\r\n        this.myMinAngleToFlyUpNonVR = 0;\r\n        this.myMinAngleToFlyDownNonVR = 0;\r\n        this.myMinAngleToFlyUpVR = 0;\r\n        this.myMinAngleToFlyDownVR = 0;\r\n        this.myMinAngleToFlyRight = 0;\r\n\r\n        this.myMainHand = PP.Handedness.LEFT;\r\n\r\n        this.myVRDirectionReferenceType = PlayerLocomotionDirectionReferenceType.HEAD;\r\n        this.myVRDirectionReferenceObject = null;\r\n\r\n        this.myTeleportParableStartReferenceObject = null;\r\n\r\n        this.myForeheadExtraHeight = 0;\r\n\r\n        this.myTeleportPositionObject = null;\r\n    }\r\n};\r\n\r\n// #TODO add lerped snap on vertical over like half a second to avoid the \"snap effect\"\r\n// this could be done by detatching the actual vertical position of the player from the collision real one when a snap is detected above a certain threshold\r\n// with a timer, after which the vertical position is just copied, while during the detatching is lerped toward the collision vertical one\r\nPlayerLocomotion = class PlayerLocomotion {\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myCollisionCheckParamsMovement = new CollisionCheckParams();\r\n        this._setupCollisionCheckParamsMovement();\r\n        this._myCollisionCheckParamsTeleport = null;\r\n        this._setupCollisionCheckParamsTeleport();\r\n\r\n\r\n        this._myCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myMovementRuntimeParams = new PlayerLocomotionMovementRuntimeParams();\r\n        this._myMovementRuntimeParams.myCollisionRuntimeParams = this._myCollisionRuntimeParams;\r\n\r\n        {\r\n            let params = new PlayerHeadManagerParams();\r\n\r\n            params.mySessionChangeResyncEnabled = true;\r\n\r\n            params.myBlurEndResyncEnabled = true;\r\n            params.myBlurEndResyncRotation = true;\r\n\r\n            //params.myNextEnterSessionFloorHeight = 3;\r\n            params.myEnterSessionResyncHeight = false;\r\n            params.myExitSessionResyncHeight = false;\r\n            params.myExitSessionResyncVerticalAngle = true;\r\n            params.myExitSessionRemoveRightTilt = true;\r\n            params.myExitSessionAdjustMaxVerticalAngle = true;\r\n            params.myExitSessionMaxVerticalAngle = 90;\r\n\r\n            params.myHeightOffsetVRWithFloor = 0;\r\n            params.myHeightOffsetVRWithoutFloor = 1.75;\r\n            params.myHeightOffsetNonVR = 1.75;\r\n\r\n            params.myForeheadExtraHeight = this._myParams.myForeheadExtraHeight;\r\n\r\n            params.myFeetRotationKeepUp = true;\r\n\r\n            params.myDebugActive = false;\r\n\r\n            this._myPlayerHeadManager = new PlayerHeadManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PlayerTransformManagerParams();\r\n\r\n            params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n\r\n            params.myMovementCollisionCheckParams = this._myCollisionCheckParamsMovement;\r\n            params.myTeleportCollisionCheckParams = null;\r\n            params.myTeleportCollisionCheckParamsCopyFromMovement = true;\r\n            params.myTeleportCollisionCheckParamsCheck360 = true;\r\n\r\n            params.myHeadCollisionBlockLayerFlags.copy(params.myMovementCollisionCheckParams.myHorizontalBlockLayerFlags);\r\n            params.myHeadCollisionBlockLayerFlags.add(params.myMovementCollisionCheckParams.myVerticalBlockLayerFlags);\r\n            params.myHeadCollisionObjectsToIgnore.pp_copy(params.myMovementCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n            let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n            for (let objectToIgnore of params.myMovementCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n                params.myHeadCollisionObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n            }\r\n\r\n            params.myCollisionRuntimeParams = this._myCollisionRuntimeParams;\r\n\r\n            params.myHeadRadius = 0.15;\r\n\r\n            params.myIsMaxDistanceFromRealToSyncEnabled = true;\r\n            params.myMaxDistanceFromRealToSync = 100;\r\n\r\n            params.myIsFloatingValidIfVerticalMovement = false;\r\n            params.myIsFloatingValidIfVerticalMovementAndRealOnGround = false;\r\n            params.myIsFloatingValidIfSteepGround = false;\r\n            params.myIsFloatingValidIfVerticalMovementAndSteepGround = false;\r\n            params.myIsFloatingValidIfRealOnGround = false;\r\n            params.myIsLeaningValidAboveDistance = true;\r\n            params.myLeaningValidDistance = 2;\r\n            params.myFloatingSplitCheckEnabled = true;\r\n            params.myFloatingSplitCheckMaxLength = 0.2;\r\n            params.myFloatingSplitCheckMaxSteps = 5;\r\n            params.myRealMovementAllowVerticalAdjustments = false;\r\n\r\n            params.myUpdateRealPositionValid = true;\r\n            params.myUpdatePositionValid = true;\r\n\r\n            params.myIsBodyCollidingWhenHeightBelowValue = null;\r\n            params.myIsBodyCollidingWhenHeightAboveValue = null;\r\n\r\n            params.myResetToValidOnEnterSession = true;\r\n            params.myResetToValidOnExitSession = true;\r\n\r\n            params.myAlwaysResetRealPositionNonVR = true;\r\n            params.myAlwaysResetRealRotationNonVR = true;\r\n            params.myAlwaysResetRealHeightNonVR = true;\r\n\r\n            params.myAlwaysResetRealPositionVR = false;\r\n            params.myAlwaysResetRealRotationVR = false;\r\n            params.myAlwaysResetRealHeightVR = false;\r\n\r\n            params.myNeverResetRealPositionNonVR = false;\r\n            params.myNeverResetRealRotationNonVR = true;\r\n            params.myNeverResetRealHeightNonVR = false;\r\n\r\n            params.myNeverResetRealPositionVR = false;\r\n            params.myNeverResetRealRotationVR = false;\r\n            params.myNeverResetRealHeightVR = true;\r\n\r\n            params.myResetRealOnMove = true;\r\n\r\n            params.myDebugActive = true;\r\n\r\n            this._myPlayerTransformManager = new PlayerTransformManager(params);\r\n\r\n            transformManager = this._myPlayerTransformManager;\r\n        }\r\n\r\n        {\r\n            let params = new PlayerObscureManagerParams();\r\n\r\n            params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n            params.myObscureObject = null;\r\n            params.myObscureMaterial = null;\r\n            params.myObscureRadius = 0.1;\r\n\r\n            params.myObscureFadeOutSeconds = 0.25;\r\n            params.myObscureFadeInSeconds = 0.25;\r\n\r\n            params.myObscureFadeEasingFunction = PP.EasingFunction.linear;\r\n            params.myObscureLevelRelativeDistanceEasingFunction = PP.EasingFunction.linear;\r\n\r\n            params.myDistanceToStartObscureWhenBodyColliding = 0.2;\r\n            params.myDistanceToStartObscureWhenHeadColliding = 0;\r\n            params.myDistanceToStartObscureWhenFloating = 1;\r\n            params.myDistanceToStartObscureWhenFar = 1;\r\n\r\n            params.myRelativeDistanceToMaxObscureWhenBodyColliding = 0.5;\r\n            params.myRelativeDistanceToMaxObscureWhenHeadColliding = 0.1;\r\n            params.myRelativeDistanceToMaxObscureWhenFloating = 5;\r\n            params.myRelativeDistanceToMaxObscureWhenFar = 5;\r\n\r\n            this._myPlayerObscureManager = new PlayerObscureManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PlayerLocomotionRotateParams();\r\n\r\n            params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n            params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n            params.myMaxRotationSpeed = this._myParams.myMaxRotationSpeed;\r\n            params.myIsSnapTurn = this._myParams.myIsSnapTurn;\r\n            params.mySnapTurnOnlyVR = this._myParams.mySnapTurnOnlyVR;\r\n            params.mySnapTurnAngle = this._myParams.mySnapTurnAngle;\r\n\r\n            if (this._myParams.mySnapTurnSpeedDegrees > LocomotionUtils.EPSILON_NUMBER) {\r\n                params.mySmoothSnapActive = true;\r\n                params.mySmoothSnapSpeedDegrees = this._myParams.mySnapTurnSpeedDegrees;\r\n            } else {\r\n                params.mySmoothSnapActive = false;\r\n            }\r\n\r\n            params.myRotationMinStickIntensityThreshold = 0.1;\r\n            params.mySnapTurnActivateThreshold = 0.5;\r\n            params.mySnapTurnResetThreshold = 0.4;\r\n\r\n            params.myClampVerticalAngle = true;\r\n            params.myMaxVerticalAngle = 90;\r\n\r\n            this._myPlayerLocomotionRotate = new PlayerLocomotionRotate(params);\r\n\r\n            params.myHandedness = PP.InputUtils.getOppositeHandedness(this._myParams.myMainHand);\r\n        }\r\n\r\n        {\r\n            {\r\n                let params = new PlayerLocomotionSmoothParams();\r\n\r\n                params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n                params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n                params.myCollisionCheckParams = this._myCollisionCheckParamsMovement;\r\n\r\n                params.myHandedness = this._myParams.myMainHand;\r\n\r\n                params.myMaxSpeed = this._myParams.myMaxSpeed;\r\n\r\n                params.myMovementMinStickIntensityThreshold = 0.1;\r\n\r\n                params.myFlyEnabled = this._myParams.myFlyEnabled;\r\n                params.myMinAngleToFlyUpNonVR = this._myParams.myMinAngleToFlyUpNonVR;\r\n                params.myMinAngleToFlyDownNonVR = this._myParams.myMinAngleToFlyDownNonVR;\r\n                params.myMinAngleToFlyUpVR = this._myParams.myMinAngleToFlyUpVR;\r\n                params.myMinAngleToFlyDownVR = this._myParams.myMinAngleToFlyDownVR;\r\n                params.myMinAngleToFlyRight = this._myParams.myMinAngleToFlyRight;\r\n\r\n                params.myGravityAcceleration = -20;\r\n\r\n                params.myVRDirectionReferenceType = this._myParams.myVRDirectionReferenceType;\r\n                params.myVRDirectionReferenceObject = this._myParams.myVRDirectionReferenceObject;\r\n\r\n                this._myPlayerLocomotionSmooth = new PlayerLocomotionSmooth(params, this._myMovementRuntimeParams);\r\n            }\r\n\r\n            {\r\n                let params = new PlayerLocomotionTeleportParams();\r\n\r\n                params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n                params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n                params.myCollisionCheckParams = this._myCollisionCheckParamsTeleport;\r\n\r\n                params.myHandedness = this._myParams.myMainHand;\r\n\r\n                params.myDetectionParams.myMaxDistance = 3;\r\n                params.myDetectionParams.myMaxHeightDifference = 4;\r\n                params.myDetectionParams.myGroundAngleToIgnoreUpward = this._myCollisionCheckParamsMovement.myGroundAngleToIgnore;\r\n                params.myDetectionParams.myMustBeOnGround = true;\r\n\r\n                params.myDetectionParams.myTeleportBlockLayerFlags.setAllFlagsActive(true);\r\n                params.myDetectionParams.myTeleportFloorLayerFlags.setAllFlagsActive(true);\r\n\r\n                params.myDetectionParams.myTeleportFeetPositionMustBeVisible = false;\r\n                params.myDetectionParams.myTeleportHeadPositionMustBeVisible = false;\r\n                params.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible = true;\r\n\r\n                params.myDetectionParams.myTeleportParableStartReferenceObject = this._myParams.myTeleportParableStartReferenceObject;\r\n\r\n                params.myDetectionParams.myVisibilityBlockLayerFlags.setAllFlagsActive(true);\r\n\r\n                params.myVisualizerParams.myTeleportPositionObject = this._myParams.myTeleportPositionObject;\r\n\r\n                params.myPerformTeleportAsMovement = false;\r\n                params.myTeleportAsMovementRemoveVerticalMovement = true;\r\n                params.myTeleportAsMovementExtraVerticalMovementPerMeter = -2;\r\n\r\n                params.myGravityAcceleration = 0;\r\n\r\n                params.myDebugActive = false;\r\n                params.myDebugDetectActive = true;\r\n                params.myDebugShowActive = true;\r\n                params.myDebugVisibilityActive = false;\r\n\r\n                this._myPlayerLocomotionTeleport = new PlayerLocomotionTeleport(params, this._myMovementRuntimeParams);\r\n            }\r\n        }\r\n\r\n        this._setupLocomotionMovementFSM();\r\n\r\n        this._myIdle = false;\r\n    }\r\n\r\n    start() {\r\n        this._fixAlmostUp();\r\n\r\n        this._myPlayerHeadManager.start();\r\n        this._myPlayerTransformManager.start();\r\n\r\n        this._myPlayerObscureManager.start();\r\n\r\n        this._myPlayerLocomotionRotate.start();\r\n\r\n        this._myLocomotionMovementFSM.perform(\"start\");\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerHeadManager.update(dt);\r\n        this._myPlayerTransformManager.update(dt);\r\n\r\n        if (PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressEnd(2)) {\r\n            if (this._myLocomotionMovementFSM.isInState(\"smooth\") && this._myPlayerLocomotionSmooth.canStop()) {\r\n                this._myLocomotionMovementFSM.perform(\"next\");\r\n            } else if (this._myLocomotionMovementFSM.isInState(\"teleport\") && this._myPlayerLocomotionTeleport.canStop()) {\r\n                this._myLocomotionMovementFSM.perform(\"next\");\r\n            }\r\n        }\r\n\r\n        if (this._myPlayerHeadManager.isSynced()) {\r\n\r\n            this._updateCollisionHeight();\r\n\r\n            if (!this._myIdle) {\r\n                this._myPlayerLocomotionRotate.update(dt);\r\n                this._myLocomotionMovementFSM.update(dt);\r\n            }\r\n        }\r\n\r\n        //this._myPlayerObscureManager.update(dt);\r\n        if (PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.SELECT).isPressEnd(2)) {\r\n            if (this._myPlayerObscureManager.isFading()) {\r\n                this._myPlayerObscureManager.obscureLevelOverride(this._myPlayerObscureManager.isFadingOut() ? Math.pp_random(0, 0) : Math.pp_random(1, 1));\r\n            } else {\r\n                this._myPlayerObscureManager.obscureLevelOverride(this._myPlayerObscureManager.isObscured() ? Math.pp_random(0, 0) : Math.pp_random(1, 1));\r\n            }\r\n        }\r\n    }\r\n\r\n    setIdle(idle) {\r\n        this._myIdle = idle;\r\n\r\n        if (idle) {\r\n            this._myLocomotionMovementFSM.perform(\"idle\");\r\n        } else {\r\n            this._myLocomotionMovementFSM.perform(\"start\");\r\n        }\r\n    }\r\n\r\n    _updateCollisionHeight() {\r\n        this._myCollisionCheckParamsMovement.myHeight = this._myPlayerHeadManager.getHeightHead();\r\n        if (this._myCollisionCheckParamsMovement.myHeight <= 0.000001) {\r\n            this._myCollisionCheckParamsMovement.myHeight = 0;\r\n        }\r\n        this._myCollisionCheckParamsTeleport.myHeight = this._myCollisionCheckParamsMovement.myHeight;\r\n    }\r\n\r\n    _setupCollisionCheckParamsMovement() {\r\n        this._myCollisionCheckParamsMovement.mySplitMovementEnabled = false;\r\n        this._myCollisionCheckParamsMovement.mySplitMovementMaxLength = 0;\r\n\r\n        this._myCollisionCheckParamsMovement.myRadius = this._myParams.myCharacterRadius;\r\n        this._myCollisionCheckParamsMovement.myDistanceFromFeetToIgnore = 0.1;\r\n        this._myCollisionCheckParamsMovement.myDistanceFromHeadToIgnore = 0.1;\r\n\r\n        //this._myCollisionCheckParamsMovement.myPositionOffsetLocal.vec3_set(0, 1, 0)\r\n        //this._myCollisionCheckParamsMovement.myRotationOffsetLocalQuat.quat_fromAxis(45, PP.vec3_create(1, 1, 0).vec3_normalize());\r\n\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementStepEnabled = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementStepMaxLength = 0;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementRadialStepAmount = 1;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckDiagonalOutward = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckDiagonalInward = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckStraight = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckHorizontalBorder = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalStraight = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalDiagonalUpwardInward = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalDiagonalDownwardInward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalStraightDiagonalUpward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalStraightDiagonalDownward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementHorizontalStraightCentralCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = true;\r\n\r\n        this._myCollisionCheckParamsMovement.myHorizontalPositionCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myHalfConeAngle = 60;\r\n        this._myCollisionCheckParamsMovement.myHalfConeSliceAmount = 2;\r\n        this._myCollisionCheckParamsMovement.myCheckConeBorder = true;\r\n        this._myCollisionCheckParamsMovement.myCheckConeRay = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalPositionCheckVerticalDirectionType = 2; // somewhat expensive, 2 times the check for the vertical check of the horizontal movement!\r\n\r\n        this._myCollisionCheckParamsMovement.myVerticalMovementCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myVerticalPositionCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myVerticalMovementReduceEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myFeetRadius = 0.1;\r\n        this._myCollisionCheckParamsMovement.myAdjustVerticalMovementWithGroundAngleDownhill = true;\r\n        this._myCollisionCheckParamsMovement.myAdjustVerticalMovementWithGroundAngleUphill = true;\r\n        this._myCollisionCheckParamsMovement.myAdjustVerticalMovementWithCeilingAngleUphill = true;\r\n        this._myCollisionCheckParamsMovement.myAdjustHorizontalMovementWithGroundAngleDownhill = false;\r\n        this._myCollisionCheckParamsMovement.myAdjustHorizontalMovementWithCeilingAngleDownhill = false;\r\n        this._myCollisionCheckParamsMovement.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = 30;\r\n\r\n        this._myCollisionCheckParamsMovement.mySnapOnGroundEnabled = true;\r\n        this._myCollisionCheckParamsMovement.mySnapOnGroundExtraDistance = 0.1;\r\n        this._myCollisionCheckParamsMovement.mySnapOnCeilingEnabled = false;\r\n        this._myCollisionCheckParamsMovement.mySnapOnCeilingExtraDistance = 0.1;\r\n\r\n        this._myCollisionCheckParamsMovement.myGroundPopOutEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myGroundPopOutExtraDistance = 0.1;\r\n        this._myCollisionCheckParamsMovement.myCeilingPopOutEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myCeilingPopOutExtraDistance = 0.1;\r\n\r\n        this._myCollisionCheckParamsMovement.myGroundCircumferenceAddCenter = true;\r\n        this._myCollisionCheckParamsMovement.myGroundCircumferenceSliceAmount = 8;\r\n        this._myCollisionCheckParamsMovement.myGroundCircumferenceStepAmount = 2;\r\n        this._myCollisionCheckParamsMovement.myGroundCircumferenceRotationPerStep = 22.5;\r\n        this._myCollisionCheckParamsMovement.myVerticalAllowHitInsideCollisionIfOneOk = true;\r\n\r\n        this._myCollisionCheckParamsMovement.myCheckHeight = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightVerticalMovement = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightVerticalPosition = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightTopMovement = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightTopPosition = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightConeOnCollision = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightConeOnCollisionKeepHit = false;\r\n        this._myCollisionCheckParamsMovement.myHeightCheckStepAmountMovement = 2;\r\n        this._myCollisionCheckParamsMovement.myHeightCheckStepAmountPosition = 2;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalFixedForwardEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalFixedForward = PP.vec3_create(0, 0, 1);\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalBothDirection = true;\r\n\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalStraight = true;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalRayOutward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalRayInward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalBorderOutward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalBorderInward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalBorderRayOutward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalBorderRayInward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalSearchFartherVerticalHit = false;\r\n\r\n        this._myCollisionCheckParamsMovement.myGroundAngleToIgnore = 30;\r\n        this._myCollisionCheckParamsMovement.myCeilingAngleToIgnore = 30;\r\n\r\n        //this._myCollisionCheckParamsMovement.myHorizontalMovementGroundAngleIgnoreHeight = 0.1 * 3;\r\n        //this._myCollisionCheckParamsMovement.myHorizontalMovementCeilingAngleIgnoreHeight = 0.1 * 3;\r\n        //this._myCollisionCheckParamsMovement.myHorizontalPositionGroundAngleIgnoreHeight = 0.1;\r\n        //this._myCollisionCheckParamsMovement.myHorizontalPositionCeilingAngleIgnoreHeight = 0.1;\r\n\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = 0.1;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = 0.1;\r\n\r\n        this._myCollisionCheckParamsMovement.myHeight = 1;\r\n\r\n        this._myCollisionCheckParamsMovement.myComputeGroundInfoEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myComputeCeilingInfoEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myDistanceToBeOnGround = 0.001;\r\n        this._myCollisionCheckParamsMovement.myDistanceToComputeGroundInfo = 0.1;\r\n        this._myCollisionCheckParamsMovement.myDistanceToBeOnCeiling = 0.001;\r\n        this._myCollisionCheckParamsMovement.myDistanceToComputeCeilingInfo = 0.1;\r\n        this._myCollisionCheckParamsMovement.myVerticalFixToBeOnGround = 0;\r\n        this._myCollisionCheckParamsMovement.myVerticalFixToComputeGroundInfo = 0;\r\n        this._myCollisionCheckParamsMovement.myVerticalFixToBeOnCeiling = 0;\r\n        this._myCollisionCheckParamsMovement.myVerticalFixToComputeCeilingInfo = 0;\r\n\r\n        this._myCollisionCheckParamsMovement.myMustStayOnGround = false;\r\n        this._myCollisionCheckParamsMovement.myMustStayOnCeiling = false;\r\n        this._myCollisionCheckParamsMovement.myRegatherGroundInfoOnSurfaceCheckFail = true;\r\n        this._myCollisionCheckParamsMovement.myRegatherCeilingInfoOnSurfaceCheckFail = true;\r\n        //this._myCollisionCheckParamsMovement.myExtraMovementCheckCallback = function () { return [0, 0, 0.01]; }\r\n\r\n        this._myCollisionCheckParamsMovement.mySlidingEnabled = true;\r\n        this._myCollisionCheckParamsMovement.mySlidingHorizontalMovementCheckBetterNormal = true;\r\n        this._myCollisionCheckParamsMovement.mySlidingMaxAttempts = 4;\r\n        this._myCollisionCheckParamsMovement.mySlidingCheckBothDirections = true;        // expensive, 2 times the check for the whole horizontal movement!\r\n        this._myCollisionCheckParamsMovement.mySlidingFlickeringPreventionType = 1;      // expensive, 2 times the check for the whole horizontal movement!\r\n        this._myCollisionCheckParamsMovement.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = true;\r\n        this._myCollisionCheckParamsMovement.mySlidingFlickerPreventionCheckAnywayCounter = 4;\r\n        this._myCollisionCheckParamsMovement.mySlidingAdjustSign90Degrees = true;\r\n\r\n        this._myCollisionCheckParamsMovement.myHorizontalBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this._myCollisionCheckParamsMovement.myHorizontalBlockLayerFlags.setAllFlagsActive(true);\r\n        let physXComponents = PP.myPlayerObjects.myPlayer.pp_getComponentsHierarchy(\"physx\");\r\n        for (let physXComponent of physXComponents) {\r\n            this._myCollisionCheckParamsMovement.myHorizontalObjectsToIgnore.pp_pushUnique(physXComponent.object, (first, second) => first.pp_equals(second));\r\n        }\r\n\r\n        this._myCollisionCheckParamsMovement.myVerticalBlockLayerFlags.copy(this._myCollisionCheckParamsMovement.myHorizontalBlockLayerFlags);\r\n        this._myCollisionCheckParamsMovement.myVerticalObjectsToIgnore.pp_copy(this._myCollisionCheckParamsMovement.myHorizontalObjectsToIgnore);\r\n\r\n        this._myCollisionCheckParamsMovement.myDebugActive = false;\r\n\r\n        this._myCollisionCheckParamsMovement.myDebugHorizontalMovementActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugHorizontalPositionActive = true;\r\n        this._myCollisionCheckParamsMovement.myDebugVerticalMovementActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugVerticalPositionActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugSlidingActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugGroundInfoActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugCeilingInfoActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugRuntimeParamsActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugMovementActive = false;\r\n    }\r\n\r\n    _setupCollisionCheckParamsTeleport() {\r\n        this._myCollisionCheckParamsTeleport = CollisionCheckUtils.generate360TeleportParamsFromMovementParams(this._myCollisionCheckParamsMovement);\r\n\r\n        // increased so to let teleport on steep slopes from above (from below is fixed through detection myGroundAngleToIgnoreUpward)\r\n        this._myCollisionCheckParamsTeleport.myGroundAngleToIgnore = 60;\r\n        this._myCollisionCheckParamsTeleport.myTeleportMustBeOnIgnorableGroundAngle = true;\r\n        this._myCollisionCheckParamsTeleport.myTeleportMustBeOnGround = true;\r\n\r\n        /*\r\n        this._myCollisionCheckParamsTeleport.myExtraTeleportCheckCallback = function (\r\n            offsetTeleportPosition, endPosition, feetPosition, transformUp, transformForward, height,\r\n            collisionCheckParams, prevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition\r\n\r\n        ) {\r\n            let isTeleportingUpward = endPosition.vec3_isFartherAlongAxis(feetPosition, transformUp);\r\n            if (isTeleportingUpward) {\r\n                collisionRuntimeParams.myTeleportCanceled = collisionRuntimeParams.myGroundAngle > 30 + 0.0001;\r\n                console.error(collisionRuntimeParams.myTeleportCanceled);\r\n            }\r\n\r\n            return newFeetPosition;\r\n        }*/\r\n\r\n        // this is needed for when u want to perform the teleport as a movement\r\n        // maybe this should be another set of collsion check params copied from the smooth ones?\r\n        // when you teleport as move, u check with the teleport for the position, and this other params for the move, so that u can use a smaller\r\n        // cone, and sliding if desired\r\n        // if nothing is specified it's copied from the teleport and if greater than 90 cone is tuned down, and also the below settings are applied\r\n\r\n        // you could also do this if u want to perform the teleport as movement, instead of using the smooth\r\n        // but this will make even the final teleport check be halved\r\n        //this._myCollisionCheckParamsTeleport.myHalfConeAngle = 90;\r\n        //this._myCollisionCheckParamsTeleport.myHalfConeSliceAmount = 3;\r\n        //this._myCollisionCheckParamsTeleport.myCheckHorizontalFixedForwardEnabled = false;\r\n        //this._myCollisionCheckParamsTeleport.mySplitMovementEnabled = true;\r\n        //this._myCollisionCheckParamsTeleport.mySplitMovementMaxLength = 0.2;\r\n\r\n        //this._myCollisionCheckParamsTeleport.myDebugActive = true;\r\n    }\r\n\r\n    _fixAlmostUp() {\r\n        // get rotation on y and adjust if it's slightly tilted when it's almsot 0,1,0\r\n\r\n        let defaultUp = PP.vec3_create(0, 1, 0);\r\n        let angleWithDefaultUp = PP.myPlayerObjects.myPlayer.pp_getUp().vec3_angle(defaultUp);\r\n        if (angleWithDefaultUp < 1) {\r\n            let forward = PP.myPlayerObjects.myPlayer.pp_getForward();\r\n            let flatForward = forward.vec3_clone();\r\n            flatForward[1] = 0;\r\n\r\n            let defaultForward = PP.vec3_create(0, 0, 1);\r\n            let angleWithDefaultForward = defaultForward.vec3_angleSigned(flatForward, defaultUp);\r\n\r\n            PP.myPlayerObjects.myPlayer.pp_resetRotation();\r\n            PP.myPlayerObjects.myPlayer.pp_rotateAxis(angleWithDefaultForward, defaultUp);\r\n        }\r\n    }\r\n\r\n    _setupLocomotionMovementFSM() {\r\n        this._myLocomotionMovementFSM = new PP.FSM();\r\n        this._myLocomotionMovementFSM.setDebugLogActive(true, \"Locomotion Movement\");\r\n\r\n        this._myLocomotionMovementFSM.addState(\"init\");\r\n        this._myLocomotionMovementFSM.addState(\"smooth\", (dt) => this._myPlayerLocomotionSmooth.update(dt));\r\n        this._myLocomotionMovementFSM.addState(\"teleport\", (dt) => this._myPlayerLocomotionTeleport.update(dt));\r\n        this._myLocomotionMovementFSM.addState(\"idleSmooth\");\r\n        this._myLocomotionMovementFSM.addState(\"idleTeleport\");\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"init\", \"smooth\", \"start\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"smooth\", \"teleport\", \"next\", function () {\r\n            this._myPlayerLocomotionSmooth.stop();\r\n            this._myPlayerLocomotionTeleport.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"teleport\", \"smooth\", \"next\", function () {\r\n            this._myPlayerLocomotionTeleport.stop();\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"smooth\", \"idleSmooth\", \"idle\", function () {\r\n            this._myPlayerLocomotionSmooth.stop();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"teleport\", \"idleTeleport\", \"idle\", function () {\r\n            this._myPlayerLocomotionTeleport.stop();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"idleSmooth\", \"smooth\", \"start\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"idleTeleport\", \"teleport\", \"start\", function () {\r\n            this._myPlayerLocomotionTeleport.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.init(\"init\");\r\n    }\r\n};", "WL.registerComponent('player-locomotion', {\r\n    _myMaxSpeed: { type: WL.Type.Float, default: 2 },\r\n    _myMaxRotationSpeed: { type: WL.Type.Float, default: 100 },\r\n    _myCharacterRadius: { type: WL.Type.Float, default: 0.3 },\r\n    _myIsSnapTurn: { type: WL.Type.Bool, default: true },\r\n    _mySnapTurnOnlyVR: { type: WL.Type.Bool, default: true },\r\n    _mySnapTurnAngle: { type: WL.Type.Float, default: 30 },\r\n    _mySnapTurnSpeedDegrees: { type: WL.Type.Float, default: 0 },\r\n    _myFlyEnabled: { type: WL.Type.Bool, default: false },\r\n    _myMinAngleToFlyUpNonVR: { type: WL.Type.Float, default: 30 },\r\n    _myMinAngleToFlyDownNonVR: { type: WL.Type.Float, default: 50 },\r\n    _myMinAngleToFlyUpVR: { type: WL.Type.Float, default: 60 },\r\n    _myMinAngleToFlyDownVR: { type: WL.Type.Float, default: 1 },\r\n    _myMinAngleToFlyRight: { type: WL.Type.Float, default: 30 },\r\n    _myMainHand: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myVRDirectionReferenceType: { type: WL.Type.Enum, values: ['head', 'hand', 'custom object'], default: 'hand' },\r\n    _myVRDirectionReferenceObject: { type: WL.Type.Object },\r\n    _myTeleportParableStartReferenceObject: { type: WL.Type.Object },\r\n    _myTeleportPositionObject: { type: WL.Type.Object },\r\n    _myUseCleanedVersion: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init() {\r\n    },\r\n    start() {\r\n        CollisionCheckGlobal = new CollisionCheck();\r\n        let params = new PlayerLocomotionParams();\r\n        params.myMaxSpeed = this._myMaxSpeed;\r\n        params.myMaxRotationSpeed = this._myMaxRotationSpeed;\r\n\r\n        params.myCharacterRadius = this._myCharacterRadius;\r\n\r\n        params.myIsSnapTurn = this._myIsSnapTurn;\r\n        params.mySnapTurnOnlyVR = this._mySnapTurnOnlyVR;\r\n        params.mySnapTurnAngle = this._mySnapTurnAngle;\r\n        params.mySnapTurnSpeedDegrees = this._mySnapTurnSpeedDegrees;\r\n\r\n        params.myFlyEnabled = this._myFlyEnabled || Global.myFromAbove;\r\n        params.myMinAngleToFlyUpNonVR = this._myMinAngleToFlyUpNonVR;\r\n        params.myMinAngleToFlyDownNonVR = this._myMinAngleToFlyDownNonVR;\r\n        params.myMinAngleToFlyUpVR = this._myMinAngleToFlyUpVR;\r\n        params.myMinAngleToFlyDownVR = this._myMinAngleToFlyDownVR;\r\n        params.myMinAngleToFlyRight = this._myMinAngleToFlyRight;\r\n\r\n        params.myMainHand = PP.InputUtils.getHandednessByIndex(this._myMainHand);\r\n\r\n        params.myVRDirectionReferenceType = this._myVRDirectionReferenceType;\r\n        params.myVRDirectionReferenceObject = this._myVRDirectionReferenceObject;\r\n\r\n        params.myTeleportParableStartReferenceObject = this._myTeleportParableStartReferenceObject;\r\n\r\n        params.myForeheadExtraHeight = 0.1;\r\n\r\n        params.myTeleportPositionObject = this._myTeleportPositionObject;\r\n\r\n        if (this._myUseCleanedVersion) {\r\n            this._myPlayerLocomotion = new CleanedPlayerLocomotion(params);\r\n        } else {\r\n            this._myPlayerLocomotion = new PlayerLocomotion(params);\r\n        }\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Float 1\", 0.15, 0.5, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumberArray(\"Float Array 1\", [1, 2, 3], 0.5, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneTransform(\"Transform 1\", PP.mat4_create()));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneBool(\"Bool 1\", false));\r\n\r\n        this._myStartCounter = 1;\r\n\r\n        this._myPlayerLocomotion.start();\r\n        Global.myPlayer = this._myPlayerLocomotion._myPlayerTransformManager;\r\n    },\r\n    update(dt) {\r\n        if (Global.myReady) {\r\n            if (this._myStartCounter > 0) {\r\n                this._myStartCounter--;\r\n                if (this._myStartCounter == 0) {\r\n                    if (Global.myIsMazeverseTime) {\r\n                        if (Math.pp_randomInt(0, 50) == 0) {\r\n                            //console.error(\"FLY\");\r\n                            this._myPlayerLocomotion._myParams.myFlyEnabled = true;\r\n                            this._myPlayerLocomotion._myPlayerLocomotionSmooth._myParams.myFlyEnabled = true;\r\n                        }\r\n                    }\r\n\r\n                    Global.myPlayerLocomotion = this._myPlayerLocomotion;\r\n                    Global.myPlayer.resetReal(true, false, false, true);\r\n                    Global.myPlayer.resetHeadToReal();\r\n\r\n                    let cell = Global.myMaze.getCellsByType(LR.MazeItemType.PLAYER_START);\r\n\r\n                    if (cell != null && cell.length > 0) {\r\n                        this._myPlayerLocomotion._myPlayerTransformManager.teleportPosition(cell[0].myCellPosition, null, true);\r\n\r\n                        if (Global.myMaze.getCellsByType(LR.MazeItemType.BIG_TREE) != null && Global.myMaze.getCellsByType(LR.MazeItemType.BIG_TREE).length > 0) {\r\n                            let rotationQuat = Global.lookBigTreeAligned(this._myPlayerLocomotion._myPlayerTransformManager.getPosition());\r\n                            this._myPlayerLocomotion._myPlayerTransformManager.setRotationQuat(rotationQuat);\r\n                        }\r\n\r\n                        Global.myPlayer.resetReal(true, false, false, true);\r\n                        Global.myPlayer.resetHeadToReal();\r\n                    }\r\n                }\r\n            } else {\r\n                _myTotalRaycasts = 0; // #TODO debug stuff, remove later\r\n\r\n                this._myPlayerLocomotion.update(dt);\r\n            }\r\n        } else {\r\n            this._myPlayerLocomotion._myPlayerHeadManager.update(dt);\r\n        }\r\n\r\n        //_myTotalRaycastsMax = Math.max(_myTotalRaycasts, _myTotalRaycastsMax);\r\n        //console.error(_myTotalRaycastsMax);\r\n        //console.error(_myTotalRaycasts);\r\n    },\r\n    onActivate() {\r\n        if (this._myPlayerLocomotion != null) {\r\n            this._myPlayerLocomotion.setIdle(false);\r\n        }\r\n    },\r\n    onDeactivate() {\r\n        if (this._myPlayerLocomotion != null) {\r\n            this._myPlayerLocomotion.setIdle(true);\r\n        }\r\n    }\r\n});\r\n\r\nCollisionCheckGlobal = null;", "PlayerLocomotionTeleportParable = class PlayerLocomotionTeleportParable {\r\n    constructor() {\r\n        this._myStartPosition = PP.vec3_create();\r\n\r\n        this._myForward = PP.vec3_create();\r\n        this._myUp = PP.vec3_create();\r\n\r\n        this._mySpeed = 0;\r\n        this._myGravity = 0;\r\n        this._myStepLength = 0;\r\n    }\r\n\r\n    setStartPosition(startPosition) {\r\n        this._myStartPosition.vec3_copy(startPosition);\r\n    }\r\n\r\n    setForward(forward) {\r\n        this._myForward.vec3_copy(forward);\r\n    }\r\n\r\n    setUp(up) {\r\n        this._myUp.vec3_copy(up);\r\n    }\r\n\r\n    setSpeed(speed) {\r\n        this._mySpeed = speed;\r\n    }\r\n\r\n    setGravity(gravity) {\r\n        this._myGravity = gravity;\r\n    }\r\n\r\n    setStepLength(stepLength) {\r\n        this._myStepLength = stepLength;\r\n    }\r\n\r\n    getPosition(positionIndex, outPosition = PP.vec3_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getDistance(positionIndex) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getPositionIndexByDistance(distance) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getPositionByDistance(distance, outPosition = PP.vec3_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getDistanceOverFlatDistance(flatDistance, maxParableDistance) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getFlatDistanceOverDistance(distance) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPlayerLocomotionTeleportParable.prototype.getPosition = function () {\r\n    let forwardPosition = PP.vec3_create();\r\n    let upPosition = PP.vec3_create();\r\n    return function getPosition(positionIndex, outPosition = PP.vec3_create()) {\r\n        let deltaTimePerStep = this._myStepLength / this._mySpeed;\r\n\r\n        let elapsedTime = deltaTimePerStep * positionIndex;\r\n\r\n        forwardPosition = this._myForward.vec3_scale(this._mySpeed * elapsedTime, forwardPosition);\r\n        forwardPosition = forwardPosition.vec3_add(this._myStartPosition, forwardPosition);\r\n\r\n        upPosition = this._myUp.vec3_scale(this._myGravity * elapsedTime * elapsedTime / 2, upPosition);\r\n\r\n        outPosition = forwardPosition.vec3_add(upPosition, outPosition);\r\n\r\n        return outPosition;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getDistance = function () {\r\n    let currentPosition = PP.vec3_create();\r\n    let prevPosition = PP.vec3_create();\r\n    return function getDistance(positionIndex) {\r\n        let distance = 0;\r\n        prevPosition.vec3_copy(this._myStartPosition);\r\n\r\n        for (let i = 1; i <= positionIndex; i++) {\r\n            currentPosition = this.getPosition(i, currentPosition);\r\n            distance += currentPosition.vec3_distance(prevPosition);\r\n\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return distance;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getPositionIndexByDistance = function () {\r\n    let currentPosition = PP.vec3_create();\r\n    let prevPosition = PP.vec3_create();\r\n    return function getPositionIndexByDistance(distance) {\r\n        let currentDistance = 0;\r\n        let currentIndex = 0;\r\n        prevPosition = this.getPosition(currentIndex, prevPosition);\r\n\r\n        while (currentDistance < distance) {\r\n            currentPosition = this.getPosition(currentIndex + 1, currentPosition);\r\n            currentDistance += currentPosition.vec3_distance(prevPosition);\r\n            currentIndex++;\r\n\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return Math.max(0, currentIndex - 1);\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getPositionByDistance = function () {\r\n    let currentPosition = PP.vec3_create();\r\n    let prevPosition = PP.vec3_create();\r\n    let prevToCurrent = PP.vec3_create();\r\n    return function getPositionIndexByDistance(distance, outPosition = PP.vec3_create()) {\r\n        let currentDistance = 0;\r\n        let currentIndex = 0;\r\n        let found = false;\r\n\r\n        prevPosition = this.getPosition(currentIndex, prevPosition);\r\n        while (!found) {\r\n            currentPosition = this.getPosition(currentIndex + 1, currentPosition);\r\n            currentDistance += currentPosition.vec3_distance(prevPosition);\r\n            currentIndex++;\r\n\r\n            if (currentDistance > distance) {\r\n                let lengthToRemove = currentDistance - distance;\r\n                prevToCurrent = currentPosition.vec3_sub(prevPosition, prevToCurrent);\r\n                let lengthToAdd = prevToCurrent.vec3_length() - lengthToRemove;\r\n                prevToCurrent.vec3_normalize(prevToCurrent);\r\n\r\n                outPosition = prevPosition.vec3_add(prevToCurrent.vec3_scale(lengthToAdd, outPosition), outPosition);\r\n                found = true;\r\n            }\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return outPosition;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getDistanceOverFlatDistance = function () {\r\n    let currentPosition = PP.vec3_create();\r\n    let flatCurrentPosition = PP.vec3_create();\r\n    let flatStartPosition = PP.vec3_create();\r\n    let prevPosition = PP.vec3_create();\r\n    let prevToCurrent = PP.vec3_create();\r\n    let startToCurrentFlat = PP.vec3_create();\r\n    return function getDistanceOverFlatDistance(flatDistance, maxParableDistance) {\r\n        if (flatDistance < 0.00001) {\r\n            return 0;\r\n        }\r\n\r\n        let currentDistance = 0;\r\n        let currentIndex = 0;\r\n        flatStartPosition = this._myStartPosition.vec3_removeComponentAlongAxis(this._myUp, flatStartPosition);\r\n        prevPosition = this.getPosition(currentIndex, prevPosition);\r\n\r\n        let distanceOverFlatDistance = 0;\r\n\r\n        while (currentDistance <= maxParableDistance) {\r\n            currentPosition = this.getPosition(currentIndex + 1, currentPosition);\r\n            currentDistance += currentPosition.vec3_distance(prevPosition);\r\n            currentIndex++;\r\n\r\n            flatCurrentPosition = currentPosition.vec3_removeComponentAlongAxis(this._myUp, flatCurrentPosition);\r\n            startToCurrentFlat = flatCurrentPosition.vec3_sub(flatStartPosition, startToCurrentFlat);\r\n            let currentFlatDistance = startToCurrentFlat.vec3_length();\r\n            if (currentFlatDistance >= flatDistance) {\r\n                let flatDifference = currentFlatDistance - flatDistance;\r\n                prevToCurrent = currentPosition.vec3_sub(prevPosition, prevToCurrent);\r\n                let angleWithFlat = prevToCurrent.vec3_angleRadians(startToCurrentFlat);\r\n                let cos = Math.cos(angleWithFlat);\r\n                let lengthToRemove = prevToCurrent.vec3_length();\r\n                if (cos != 0) {\r\n                    lengthToRemove = flatDifference / Math.cos(angleWithFlat);\r\n                }\r\n\r\n                distanceOverFlatDistance = currentDistance - lengthToRemove;\r\n                break;\r\n\r\n            } else {\r\n                distanceOverFlatDistance = currentDistance;\r\n            }\r\n\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return Math.min(maxParableDistance, distanceOverFlatDistance);\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getFlatDistanceOverDistance = function () {\r\n    let positionByDistance = PP.vec3_create();\r\n    let flatPositionByDistance = PP.vec3_create();\r\n    let flatStartPosition = PP.vec3_create();\r\n    return function getFlatDistanceOverDistance(distance) {\r\n        positionByDistance = this.getPositionByDistance(distance, positionByDistance);\r\n\r\n        flatPositionByDistance = positionByDistance.vec3_removeComponentAlongAxis(this._myUp, flatPositionByDistance);\r\n        flatStartPosition = this._myStartPosition.vec3_removeComponentAlongAxis(this._myUp, flatStartPosition);\r\n\r\n        return flatStartPosition.vec3_distance(flatPositionByDistance);\r\n    };\r\n}();", "PlayerLocomotionTeleportState = class PlayerLocomotionTeleportState extends PP.State {\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super();\r\n\r\n        this._myLocomotionRuntimeParams = locomotionRuntimeParams;\r\n\r\n        this._myTeleportParams = teleportParams;\r\n        this._myTeleportRuntimeParams = teleportRuntimeParams;\r\n\r\n        this._myTeleportAsMovementFailed = false;\r\n    }\r\n};\r\n\r\nPlayerLocomotionTeleportState.prototype._checkTeleport = function () {\r\n    return function _checkTeleport(teleportPosition, feetTransformQuat, collisionRuntimeParams, checkTeleportCollisionRuntimeParams = null) {\r\n        CollisionCheckGlobal.teleport(teleportPosition, feetTransformQuat, this._myTeleportParams.myCollisionCheckParams, collisionRuntimeParams);\r\n        if (checkTeleportCollisionRuntimeParams != null) {\r\n            checkTeleportCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportState.prototype._checkTeleportAsMovement = function () {\r\n    let checkTeleportMovementCollisionRuntimeParams = new CollisionRuntimeParams();\r\n    let feetRotationQuat = PP.quat_create();\r\n    let feetPosition = PP.vec3_create();\r\n    let feetUp = PP.vec3_create();\r\n    let teleportFeetForward = PP.vec3_create();\r\n    let teleportFeetRotationQuat = PP.quat_create();\r\n    let teleportFeetTransformQuat = PP.quat2_create();\r\n\r\n    let currentFeetPosition = PP.vec3_create();\r\n    let fixedTeleportPosition = PP.vec3_create();\r\n\r\n    let teleportMovement = PP.vec3_create();\r\n    let extraVerticalMovement = PP.vec3_create();\r\n    let movementToTeleportPosition = PP.vec3_create();\r\n    let movementFeetTransformQuat = PP.quat2_create();\r\n    return function _checkTeleportAsMovement(teleportPosition, feetTransformQuat, collisionRuntimeParams, checkTeleportCollisionRuntimeParams) {\r\n        feetPosition = feetTransformQuat.quat2_getPosition(feetPosition);\r\n        feetRotationQuat = feetTransformQuat.quat2_getRotationQuat(feetRotationQuat);\r\n\r\n        // first try a normal teleport\r\n        feetUp = feetRotationQuat.quat_getUp(feetUp);\r\n        teleportFeetForward = teleportPosition.vec3_sub(feetPosition, teleportFeetForward).vec3_removeComponentAlongAxis(feetUp, teleportFeetForward);\r\n        teleportFeetForward.vec3_normalize(teleportFeetForward);\r\n        if (teleportFeetForward.vec3_isZero(0.00001)) {\r\n            teleportFeetForward = feetRotationQuat.quat_getForward(teleportFeetForward);\r\n        }\r\n\r\n        teleportFeetRotationQuat.quat_setUp(feetUp, teleportFeetForward);\r\n        teleportFeetTransformQuat.quat2_setPositionRotationQuat(feetPosition, teleportFeetRotationQuat);\r\n\r\n        this._checkTeleport(teleportPosition, teleportFeetTransformQuat, collisionRuntimeParams, checkTeleportCollisionRuntimeParams);\r\n\r\n        // if teleport is ok then we can check movement knowing we have to move toward the teleported position (which has also snapped/fixed the position)\r\n        if (!collisionRuntimeParams.myTeleportCanceled) {\r\n            let teleportMovementValid = false;\r\n\r\n            checkTeleportMovementCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n            fixedTeleportPosition.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n            currentFeetPosition.vec3_copy(feetPosition);\r\n            for (let i = 0; i < this._myTeleportParams.myTeleportAsMovementMaxSteps; i++) {\r\n                teleportMovement = fixedTeleportPosition.vec3_sub(currentFeetPosition, teleportMovement);\r\n\r\n                if (this._myTeleportParams.myTeleportAsMovementRemoveVerticalMovement) {\r\n                    teleportMovement = teleportMovement.vec3_removeComponentAlongAxis(feetUp, teleportMovement);\r\n                }\r\n\r\n                if (this._myTeleportParams.myTeleportAsMovementExtraVerticalMovementPerMeter != 0) {\r\n                    let meters = teleportMovement.vec3_length();\r\n                    let extraVerticalMovementValue = meters * this._myTeleportParams.myTeleportAsMovementExtraVerticalMovementPerMeter;\r\n                    extraVerticalMovement = feetUp.vec3_scale(extraVerticalMovementValue, extraVerticalMovement);\r\n                    teleportMovement = teleportMovement.vec3_add(extraVerticalMovement, teleportMovement);\r\n                }\r\n\r\n                movementFeetTransformQuat.quat2_setPositionRotationQuat(currentFeetPosition, feetRotationQuat);\r\n                CollisionCheckGlobal.move(teleportMovement, movementFeetTransformQuat, this._myTeleportParams.myCollisionCheckParams, checkTeleportMovementCollisionRuntimeParams);\r\n\r\n                if (!checkTeleportMovementCollisionRuntimeParams.myHorizontalMovementCanceled && !checkTeleportMovementCollisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    movementToTeleportPosition = fixedTeleportPosition.vec3_sub(checkTeleportMovementCollisionRuntimeParams.myNewPosition, movementToTeleportPosition);\r\n                    //console.error(movementToTeleportPosition.vec3_length());\r\n                    if (movementToTeleportPosition.vec3_length() < this._myTeleportParams.myTeleportAsMovementMaxDistanceFromTeleportPosition + 0.00001) {\r\n                        teleportMovementValid = true;\r\n                        break;\r\n                    } else {\r\n                        teleportMovement.vec3_copy(movementToTeleportPosition);\r\n                        currentFeetPosition.vec3_copy(checkTeleportMovementCollisionRuntimeParams.myNewPosition);\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!teleportMovementValid) {\r\n                collisionRuntimeParams.myTeleportCanceled = true;\r\n            }\r\n\r\n            this._myTeleportAsMovementFailed = !teleportMovementValid;\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportState.prototype._teleportToPosition = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let feetTransformQuat = PP.quat2_create();\r\n    let newFeetTransformQuat = PP.quat2_create();\r\n    let newFeetRotationQuat = PP.quat_create();\r\n    let teleportRotation = PP.quat_create();\r\n    return function _teleportToPosition(teleportPosition, rotationOnUp, collisionRuntimeParams, forceTeleport = false) {\r\n        this._myTeleportAsMovementFailed = false;\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n        newFeetRotationQuat = feetTransformQuat.quat2_getRotationQuat(newFeetRotationQuat);\r\n        if (rotationOnUp != 0) {\r\n            newFeetRotationQuat = newFeetRotationQuat.quat_rotateAxis(rotationOnUp, playerUp, newFeetRotationQuat);\r\n        }\r\n\r\n        newFeetTransformQuat.quat2_setPositionRotationQuat(teleportPosition, newFeetRotationQuat);\r\n\r\n        if (PP.myGamepads[PP.InputUtils.getOppositeHandedness(this._myTeleportParams.myHandedness)].getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n            CollisionCheckGlobal.positionCheck(true, newFeetTransformQuat, this._myTeleportParams.myCollisionCheckParams, collisionRuntimeParams);\r\n\r\n            this._myTeleportParams.myPlayerHeadManager.teleportPositionFeet(teleportPosition);\r\n            if (rotationOnUp != 0) {\r\n                teleportRotation.quat_fromAxis(rotationOnUp, playerUp);\r\n                this._myTeleportParams.myPlayerHeadManager.rotateFeetQuat(teleportRotation);\r\n            }\r\n        } else {\r\n            //should teleport then rotate\r\n            this._myTeleportParams.myPlayerTransformManager.teleportTransformQuat(newFeetTransformQuat, collisionRuntimeParams, forceTeleport);\r\n        }\r\n    };\r\n}();", "PlayerLocomotionTeleportDetectionVisualizerParams = class PlayerLocomotionTeleportDetectionVisualizerParams {\r\n    constructor() {\r\n        this.myTeleportParableValidMaterial = null;\r\n        this.myTeleportParableInvalidMaterial = null;\r\n\r\n        this.myTeleportPositionObject = null;\r\n\r\n        this.myTeleportParableLineEndOffset = 0.05;\r\n        this.myTeleportParableMinVerticalDistanceToShowVerticalLine = 0.25;\r\n\r\n        this.myTeleportParablePositionUpOffset = 0.05;\r\n\r\n        this.myTeleportParablePositionVisualAlignOnSurface = true;\r\n\r\n        this.myVisualTeleportPositionLerpActive = true;\r\n        this.myVisualTeleportPositionLerpFactor = 10;\r\n        this.myVisualTeleportPositionMinDistanceToResetLerp = 0.005;\r\n        this.myVisualTeleportPositionMinDistanceToLerp = 0.15;\r\n        this.myVisualTeleportPositionMaxDistanceToLerp = 5;\r\n\r\n        this.myVisualTeleportPositionMinDistanceToCloseLerpFactor = 0.02;\r\n        this.myVisualTeleportPositionCloseLerpFactor = 30;\r\n\r\n        this.myVisualTeleportPositionMinAngleDistanceToResetLerp = 0.1;\r\n        this.myVisualTeleportPositionMinAngleDistanceToLerp = 1;\r\n        this.myVisualTeleportPositionMaxAngleDistanceToLerp = 180;\r\n    }\r\n};\r\n\r\nPlayerLocomotionTeleportDetectionVisualizer = class PlayerLocomotionTeleportDetectionVisualizer {\r\n    constructor(teleportParams, teleportRuntimeParams, detectionRuntimeParams) {\r\n        this._myDetectionRuntimeParams = detectionRuntimeParams;\r\n\r\n        this._myTeleportParams = teleportParams;\r\n        this._myTeleportRuntimeParams = teleportRuntimeParams;\r\n\r\n        this._myVisualTeleportTransformQuatReset = true;\r\n        this._myVisualTeleportTransformQuat = PP.quat2_create();\r\n        this._myVisualTeleportTransformPositionLerping = false;\r\n        this._myVisualTeleportTransformRotationLerping = false;\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Min Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToLerp, 1, 3, 0));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Max Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxDistanceToLerp, 1, 3, 0));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Min Angle Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToLerp, 10, 3, 0));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Max Angle Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxAngleDistanceToLerp, 10, 3, 0));\r\n\r\n        this._setupVisuals();\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    end() {\r\n        this._myVisualTeleportTransformQuatReset = true;\r\n        this._myVisualTeleportTransformPositionLerping = false;\r\n        this._myVisualTeleportTransformRotationLerping = false;\r\n\r\n        this._hideTeleportPosition();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToLerp = PP.myEasyTuneVariables.get(\"Teleport Min Distance Lerp\");\r\n        this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxDistanceToLerp = PP.myEasyTuneVariables.get(\"Teleport Max Distance Lerp\");\r\n        this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToLerp = PP.myEasyTuneVariables.get(\"Teleport Min Angle Distance Lerp\");\r\n        this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxAngleDistanceToLerp = PP.myEasyTuneVariables.get(\"Teleport Max Angle Distance Lerp\");\r\n\r\n        if (this._myDetectionRuntimeParams.myTeleportDetectionValid) {\r\n            this._showTeleportPosition(dt);\r\n        } else {\r\n            this._myVisualTeleportTransformQuatReset = true;\r\n            this._myVisualTeleportTransformPositionLerping = false;\r\n            this._myVisualTeleportTransformRotationLerping = false;\r\n            this._hideTeleportPosition();\r\n        }\r\n    }\r\n\r\n    _showTeleportPosition(dt) {\r\n        this._hideTeleportPosition();\r\n\r\n        this._showTeleportParable(dt);\r\n    }\r\n\r\n    _hideTeleportPosition() {\r\n        for (let visualLine of this._myValidVisualLines) {\r\n            visualLine.setVisible(false);\r\n        }\r\n\r\n        for (let visualLine of this._myInvalidVisualLines) {\r\n            visualLine.setVisible(false);\r\n        }\r\n\r\n        this._myValidVisualPoint.setVisible(false);\r\n        this._myInvalidVisualPoint.setVisible(false);\r\n\r\n        this._myValidVisualVerticalLine.setVisible(false);\r\n\r\n        this._myValidVisualTeleportPositionTorus.setVisible(false);\r\n        this._myValidVisualTeleportPositionTorusInner.setVisible(false);\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportPositionObject != null) {\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setActive(false);\r\n        }\r\n    }\r\n\r\n    _addVisualLines(amount) {\r\n        for (let i = 0; i < amount; i++) {\r\n            {\r\n                let visualParams = new PP.VisualLineParams();\r\n\r\n                if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                    visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n                } else {\r\n                    visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n                }\r\n\r\n                this._myValidVisualLines.push(new PP.VisualLine(visualParams));\r\n            }\r\n\r\n            {\r\n                let visualParams = new PP.VisualLineParams();\r\n\r\n                if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                    visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableInvalidMaterial;\r\n                } else {\r\n                    visualParams.myMaterial = this._myTeleportParableInvalidMaterial;\r\n                }\r\n\r\n                this._myInvalidVisualLines.push(new PP.VisualLine(visualParams));\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nPlayerLocomotionTeleportDetectionVisualizer.prototype._setupVisuals = function () {\r\n    let innerTorusPosition = PP.vec3_create();\r\n    return function _setupVisuals() {\r\n        this._myTeleportParableValidMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        this._myTeleportParableValidMaterial.color = PP.vec4_create(190 / 255, 20 / 255, 60 / 255, 1);\r\n        this._myTeleportParableInvalidMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        this._myTeleportParableInvalidMaterial.color = PP.vec4_create(225 / 255, 175 / 255, 55 / 255, 1);\r\n\r\n        this._myValidVisualLines = [];\r\n        this._myInvalidVisualLines = [];\r\n        this._addVisualLines(30);\r\n\r\n        {\r\n            let visualParams = new PP.VisualPointParams();\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n            }\r\n\r\n            this._myValidVisualPoint = new PP.VisualPoint(visualParams);\r\n        }\r\n\r\n        {\r\n            let visualParams = new PP.VisualPointParams();\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableInvalidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableInvalidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableInvalidMaterial;\r\n            }\r\n\r\n            this._myInvalidVisualPoint = new PP.VisualPoint(visualParams);\r\n        }\r\n\r\n        {\r\n            let visualParams = new PP.VisualLineParams();\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n            }\r\n\r\n            this._myValidVisualVerticalLine = new PP.VisualLine(visualParams);\r\n        }\r\n\r\n        this._myVisualTeleportPositionObject = PP.myVisualData.myRootObject.pp_addObject();\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Torus Radius\", 0.175, 0.1, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneInt(\"Teleport Torus Segments\", 24, 1));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Torus Thickness\", 0.02, 0.1, 3));\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Torus Inner Radius\", 0.04, 0.1, 3));\r\n\r\n        {\r\n            let visualParams = new PP.VisualTorusParams();\r\n            visualParams.myRadius = PP.myEasyTuneVariables.get(\"Teleport Torus Radius\");\r\n            visualParams.mySegmentsAmount = PP.myEasyTuneVariables.get(\"Teleport Torus Segments\");\r\n            visualParams.mySegmentThickness = PP.myEasyTuneVariables.get(\"Teleport Torus Thickness\");\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n            }\r\n\r\n            visualParams.myParent = this._myVisualTeleportPositionObject;\r\n            visualParams.myIsLocal = true;\r\n\r\n            this._myValidVisualTeleportPositionTorus = new PP.VisualTorus(visualParams);\r\n        }\r\n\r\n        {\r\n            let visualParams = new PP.VisualTorusParams();\r\n            visualParams.myRadius = PP.myEasyTuneVariables.get(\"Teleport Torus Inner Radius\");\r\n            visualParams.mySegmentsAmount = PP.myEasyTuneVariables.get(\"Teleport Torus Segments\");\r\n            visualParams.mySegmentThickness = PP.myEasyTuneVariables.get(\"Teleport Torus Thickness\");\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n            }\r\n\r\n            visualParams.myParent = this._myVisualTeleportPositionObject;\r\n            visualParams.myIsLocal = true;\r\n\r\n            let visualTorusParams = this._myValidVisualTeleportPositionTorus.getParams();\r\n\r\n            let innerTorusCenter = (visualTorusParams.myRadius - (visualTorusParams.mySegmentThickness / 2)) / 2;\r\n            innerTorusPosition.vec3_set(0, 0, innerTorusCenter);\r\n\r\n            visualParams.myTransform.mat4_setPosition(innerTorusPosition);\r\n\r\n            this._myValidVisualTeleportPositionTorusInner = new PP.VisualTorus(visualParams);\r\n        }\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportPositionObject != null) {\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setParent(this._myVisualTeleportPositionObject);\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_resetTransformLocal();\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setActive(false);\r\n        }\r\n\r\n        this._hideTeleportPosition();\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionVisualizer.prototype._showTeleportParable = function () {\r\n    let currentPosition = PP.vec3_create();\r\n    let nextPosition = PP.vec3_create();\r\n\r\n    let playerUp = PP.vec3_create();\r\n    let upDifference = PP.vec3_create();\r\n    return function _showTeleportParable(dt) {\r\n        let showParableDistance = Math.max(this._myDetectionRuntimeParams.myParableDistance - this._myTeleportParams.myVisualizerParams.myTeleportParableLineEndOffset);\r\n        let lastParableIndex = this._myDetectionRuntimeParams.myParable.getPositionIndexByDistance(showParableDistance);\r\n        let lastParableIndexDistance = this._myDetectionRuntimeParams.myParable.getDistance(lastParableIndex);\r\n\r\n        if (lastParableIndex + 1 > this._myValidVisualLines.length) {\r\n            this._addVisualLines(lastParableIndex + 1, this._myValidVisualLines.length);\r\n        }\r\n\r\n        for (let i = 0; i <= lastParableIndex; i++) {\r\n            currentPosition = this._myDetectionRuntimeParams.myParable.getPosition(i, currentPosition);\r\n            nextPosition = this._myDetectionRuntimeParams.myParable.getPosition(i + 1, nextPosition);\r\n\r\n            let visuaLine = (this._myDetectionRuntimeParams.myTeleportPositionValid) ? this._myValidVisualLines[i] : this._myInvalidVisualLines[i];\r\n\r\n            let currentVisualLineParams = visuaLine.getParams();\r\n\r\n            if (i == lastParableIndex) {\r\n                let stepLength = Math.max(0, showParableDistance - lastParableIndexDistance);\r\n                nextPosition = nextPosition.vec3_sub(currentPosition, nextPosition).vec3_normalize(nextPosition);\r\n                nextPosition = currentPosition.vec3_add(nextPosition.vec3_scale(stepLength, nextPosition), nextPosition);\r\n            }\r\n\r\n            currentVisualLineParams.setStartEnd(currentPosition, nextPosition);\r\n            currentVisualLineParams.myThickness = 0.005;\r\n\r\n            visuaLine.paramsUpdated();\r\n            visuaLine.setVisible(true);\r\n\r\n            if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugShowActive) {\r\n                PP.myDebugVisualManager.drawPoint(0, currentPosition, PP.vec4_create(1, 0, 0, 1), 0.01);\r\n            }\r\n        }\r\n\r\n        let visualPoint = (this._myDetectionRuntimeParams.myTeleportPositionValid) ? this._myValidVisualPoint : this._myInvalidVisualPoint;\r\n        let visualPointParams = visualPoint.getParams();\r\n        visualPointParams.myPosition.vec3_copy(nextPosition);\r\n        visualPointParams.myRadius = 0.01;\r\n        visualPoint.paramsUpdated();\r\n        visualPoint.setVisible(true);\r\n\r\n        if (this._myDetectionRuntimeParams.myTeleportPositionValid) {\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n            upDifference = nextPosition.vec3_sub(this._myTeleportRuntimeParams.myTeleportPosition, upDifference).vec3_componentAlongAxis(playerUp, upDifference);\r\n            let upDistance = upDifference.vec3_length();\r\n            if (upDistance >= this._myTeleportParams.myVisualizerParams.myTeleportParableMinVerticalDistanceToShowVerticalLine) {\r\n                let lineLength = Math.min(upDistance - this._myTeleportParams.myVisualizerParams.myTeleportParableMinVerticalDistanceToShowVerticalLine, this._myTeleportParams.myVisualizerParams.myTeleportParableMinVerticalDistanceToShowVerticalLine);\r\n\r\n                let visualLineParams = this._myValidVisualVerticalLine.getParams();\r\n\r\n                visualLineParams.myStart.vec3_copy(nextPosition);\r\n                visualLineParams.myDirection = playerUp.vec3_negate(visualLineParams.myDirection);\r\n                visualLineParams.myLength = lineLength;\r\n                visualLineParams.myThickness = 0.005;\r\n\r\n                this._myValidVisualVerticalLine.paramsUpdated();\r\n                this._myValidVisualVerticalLine.setVisible(true);\r\n\r\n            }\r\n\r\n            this._showTeleportParablePosition(dt);\r\n        } else {\r\n            this._myVisualTeleportTransformQuatReset = true;\r\n            this._myVisualTeleportTransformPositionLerping = false;\r\n            this._myVisualTeleportTransformRotationLerping = false;\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionVisualizer.prototype._showTeleportParablePosition = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let feetTransformQuat = PP.quat2_create();\r\n    let feetRotationQuat = PP.quat_create();\r\n\r\n    let visualPosition = PP.vec3_create();\r\n    let visualForward = PP.vec3_create();\r\n    let visualRotationQuat = PP.quat_create();\r\n\r\n    let currentVisualTeleportTransformQuat = PP.quat2_create();\r\n    let currentVisualTeleportPosition = PP.vec3_create();\r\n    let currentVisualTeleportRotationQuat = PP.quat_create();\r\n    let differenceRotationQuat = PP.quat_create();\r\n\r\n    return function _showTeleportParablePosition(dt) {\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n        feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n        feetRotationQuat = feetTransformQuat.quat2_getRotationQuat(feetRotationQuat);\r\n        feetRotationQuat = feetRotationQuat.quat_rotateAxis(this._myTeleportRuntimeParams.myTeleportRotationOnUp, playerUp, feetRotationQuat);\r\n        visualForward = feetRotationQuat.quat_getForward(visualForward);\r\n\r\n        visualPosition = this._myTeleportRuntimeParams.myTeleportPosition.vec3_add(playerUp.vec3_scale(this._myTeleportParams.myVisualizerParams.myTeleportParablePositionUpOffset, visualPosition), visualPosition);\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportParablePositionVisualAlignOnSurface) {\r\n            visualRotationQuat.quat_setUp(this._myDetectionRuntimeParams.myTeleportSurfaceNormal, visualForward);\r\n        } else {\r\n            visualRotationQuat.quat_setUp(playerUp, visualForward);\r\n        }\r\n\r\n        this._myVisualTeleportTransformQuat.quat2_setPositionRotationQuat(visualPosition, visualRotationQuat);\r\n\r\n        if (this._myVisualTeleportTransformQuatReset || !this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionLerpActive) {\r\n            this._myVisualTeleportPositionObject.pp_setTransformQuat(this._myVisualTeleportTransformQuat);\r\n            this._myVisualTeleportTransformQuatReset = false;\r\n        } else {\r\n            currentVisualTeleportTransformQuat = this._myVisualTeleportPositionObject.pp_getTransformQuat(currentVisualTeleportTransformQuat);\r\n            currentVisualTeleportPosition = currentVisualTeleportTransformQuat.quat2_getPosition(currentVisualTeleportPosition);\r\n            currentVisualTeleportRotationQuat = currentVisualTeleportTransformQuat.quat2_getRotationQuat(currentVisualTeleportRotationQuat);\r\n            currentVisualTeleportRotationQuat.quat_rotationToQuat(visualRotationQuat, differenceRotationQuat);\r\n\r\n            let positionDistance = currentVisualTeleportPosition.vec3_distance(visualPosition);\r\n            let rotationAngleDistance = differenceRotationQuat.quat_getAngle();\r\n\r\n            if ((!this._myVisualTeleportTransformPositionLerping || positionDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToResetLerp) &&\r\n                (positionDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToLerp ||\r\n                    positionDistance > this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxDistanceToLerp)) {\r\n                this._myVisualTeleportTransformPositionLerping = false;\r\n                currentVisualTeleportPosition.vec3_copy(visualPosition);\r\n            } else {\r\n                this._myVisualTeleportTransformPositionLerping = true;\r\n\r\n                let interpolationValue = this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionLerpFactor * dt;\r\n                if (positionDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToCloseLerpFactor) {\r\n                    interpolationValue = this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionCloseLerpFactor * dt;\r\n                }\r\n                currentVisualTeleportPosition.vec3_lerp(visualPosition, interpolationValue, currentVisualTeleportPosition);\r\n            }\r\n\r\n            if ((!this._myVisualTeleportTransformRotationLerping || rotationAngleDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToResetLerp) &&\r\n                (rotationAngleDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToLerp ||\r\n                    positionDistance > this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxAngleDistanceToLerp)) {\r\n                this._myVisualTeleportTransformRotationLerping = false;\r\n                currentVisualTeleportRotationQuat.quat_copy(visualRotationQuat);\r\n            } else {\r\n                let interpolationValue = this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionLerpFactor * dt;\r\n\r\n                this._myVisualTeleportTransformRotationLerping = true;\r\n                currentVisualTeleportRotationQuat.quat_slerp(visualRotationQuat, interpolationValue, currentVisualTeleportRotationQuat);\r\n            }\r\n\r\n            currentVisualTeleportTransformQuat.quat2_setPositionRotationQuat(currentVisualTeleportPosition, currentVisualTeleportRotationQuat);\r\n            this._myVisualTeleportPositionObject.pp_setTransformQuat(currentVisualTeleportTransformQuat);\r\n        }\r\n\r\n        {\r\n            let visualParams = this._myValidVisualTeleportPositionTorus.getParams();\r\n            visualParams.myRadius = PP.myEasyTuneVariables.get(\"Teleport Torus Radius\");\r\n            visualParams.mySegmentsAmount = PP.myEasyTuneVariables.get(\"Teleport Torus Segments\");\r\n            visualParams.mySegmentThickness = PP.myEasyTuneVariables.get(\"Teleport Torus Thickness\");\r\n\r\n            this._myValidVisualTeleportPositionTorus.paramsUpdated();\r\n        }\r\n\r\n        {\r\n            let visualParams = this._myValidVisualTeleportPositionTorusInner.getParams();\r\n            visualParams.myRadius = PP.myEasyTuneVariables.get(\"Teleport Torus Inner Radius\");\r\n            visualParams.mySegmentsAmount = PP.myEasyTuneVariables.get(\"Teleport Torus Segments\");\r\n            visualParams.mySegmentThickness = PP.myEasyTuneVariables.get(\"Teleport Torus Thickness\");\r\n\r\n            this._myValidVisualTeleportPositionTorusInner.paramsUpdated();\r\n        }\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportPositionObject == null) {\r\n            this._myValidVisualTeleportPositionTorus.setVisible(true);\r\n            this._myValidVisualTeleportPositionTorusInner.setVisible(true);\r\n        } else {\r\n            this._myValidVisualTeleportPositionTorus.setVisible(false);\r\n            this._myValidVisualTeleportPositionTorusInner.setVisible(false);\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setActive(true);\r\n        }\r\n\r\n        if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugShowActive) {\r\n            PP.myDebugVisualManager.drawPoint(0, this._myTeleportRuntimeParams.myTeleportPosition, PP.vec4_create(0, 0, 1, 1), 0.02);\r\n        }\r\n    };\r\n}();", "PlayerLocomotionTeleportDetectionParams = class PlayerLocomotionTeleportDetectionParams {\r\n    constructor() {\r\n        this.myMaxDistance = 0;\r\n        this.myMaxHeightDifference = 0;\r\n        this.myGroundAngleToIgnoreUpward = 0;\r\n        // this can be used to make it so the teleport position is valid on a steeper angle when going downward by setting the higher value on the collision params\r\n        // and then use this to specify that when going upward u want it to be less, basically to be able to teleprot down a cliff even on a steep ground\r\n        // that would not let you go up\r\n        this.myMustBeOnGround = false;\r\n\r\n        this.myTeleportBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myTeleportFloorLayerFlags = new PP.PhysicsLayerFlags();\r\n\r\n        this.myParableForwardMinAngleToBeValidUp = 30;\r\n        this.myParableForwardMinAngleToBeValidDown = 0;\r\n\r\n        this.myTeleportParableStartReferenceObject = null;\r\n\r\n        // used if reference is null\r\n        this.myTeleportParableStartPositionOffset = PP.vec3_create(0, -0.04, 0.08);\r\n        this.myTeleportParableStartRotationOffset = PP.vec3_create(30, 0, 0);\r\n\r\n        this.myTeleportParableSpeed = 15;\r\n        this.myTeleportParableGravity = -30;\r\n        this.myTeleportParableStepLength = 0.25;\r\n\r\n        this.myRotationOnUpMinStickIntensity = 0.5;\r\n        this.myRotationOnUpActive = false;\r\n\r\n        this.myTeleportFeetPositionMustBeVisible = false;\r\n        this.myTeleportHeadPositionMustBeVisible = false;\r\n        this.myTeleportHeadOrFeetPositionMustBeVisible = false; // wins over previous parameters\r\n\r\n        this.myVisibilityCheckRadius = 0.05;\r\n        this.myVisibilityCheckFeetPositionVerticalOffset = 0.1;\r\n        this.myVisibilityCheckDistanceFromHitThreshold = 0.1;\r\n        this.myVisibilityCheckCircumferenceSliceAmount = 6;\r\n        this.myVisibilityCheckCircumferenceStepAmount = 1;\r\n        this.myVisibilityCheckCircumferenceRotationPerStep = 30;\r\n        this.myVisibilityBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n    }\r\n};\r\n\r\nPlayerLocomotionTeleportDetectionRuntimeParams = class PlayerLocomotionTeleportDetectionRuntimeParams {\r\n    constructor() {\r\n        this.myTeleportDetectionValid = false;\r\n        this.myTeleportPositionValid = false;\r\n        this.myTeleportSurfaceNormal = PP.vec3_create();\r\n\r\n        this.myParable = new PlayerLocomotionTeleportParable();\r\n    }\r\n};\r\n\r\nPlayerLocomotionTeleportDetectionState = class PlayerLocomotionTeleportDetectionState extends PlayerLocomotionTeleportState {\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myDetectionRuntimeParams = new PlayerLocomotionTeleportDetectionRuntimeParams();\r\n\r\n        this._myVisualizer = new PlayerLocomotionTeleportDetectionVisualizer(this._myTeleportParams, this._myTeleportRuntimeParams, this._myDetectionRuntimeParams);\r\n\r\n        this._myTeleportRotationOnUpNext = 0;\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Parable Steps\", this._myTeleportParams.myDetectionParams.myTeleportParableStepLength, 1, 3, 0.01));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Parable Gravity\", this._myTeleportParams.myDetectionParams.myTeleportParableGravity, 10, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Parable Speed\", this._myTeleportParams.myDetectionParams.myTeleportParableSpeed, 10, 3, 0));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Max Distance\", this._myTeleportParams.myDetectionParams.myMaxDistance, 10, 3, 0));\r\n    }\r\n\r\n    start() {\r\n        this._myLocomotionRuntimeParams.myIsTeleportDetecting = true;\r\n        this._myTeleportRuntimeParams.myTeleportRotationOnUp = 0;\r\n        this._myTeleportRotationOnUpNext = 0;\r\n\r\n        this._myDetectionRuntimeParams.myParable.setSpeed(this._myTeleportParams.myDetectionParams.myTeleportParableSpeed);\r\n        this._myDetectionRuntimeParams.myParable.setGravity(this._myTeleportParams.myDetectionParams.myTeleportParableGravity);\r\n        this._myDetectionRuntimeParams.myParable.setStepLength(this._myTeleportParams.myDetectionParams.myTeleportParableStepLength);\r\n\r\n        Global.myPlayer.resetReal(true, false, false);\r\n        Global.myPlayer.resetHeadToReal();\r\n\r\n        this._myVisualizer.start();\r\n    }\r\n\r\n    end() {\r\n        this._myLocomotionRuntimeParams.myIsTeleportDetecting = false;\r\n        this._myVisualizer.end();\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._detectTeleportPosition();\r\n\r\n        this._myVisualizer.update(dt);\r\n\r\n        if (this._confirmTeleport()) {\r\n            if (this._myDetectionRuntimeParams.myTeleportPositionValid) {\r\n                fsm.perform(\"teleport\");\r\n            } else {\r\n                fsm.perform(\"cancel\");\r\n            }\r\n        } else if (this._cancelTeleport()) {\r\n            fsm.perform(\"cancel\");\r\n        }\r\n    }\r\n\r\n    _confirmTeleport() {\r\n        let confirmTeleport = false;\r\n\r\n        if (!PP.XRUtils.isSessionActive()) {\r\n            if (PP.myMouse.isInsideView()) {\r\n                confirmTeleport = PP.myMouse.isButtonPressEnd(PP.MouseButtonID.MIDDLE);\r\n            }\r\n        } else {\r\n            let axes = PP.myGamepads[this._myTeleportParams.myHandedness].getAxesInfo().getAxes();\r\n            if (axes.vec2_length() <= this._myTeleportParams.myStickIdleThreshold) {\r\n                confirmTeleport = true;\r\n            }\r\n        }\r\n\r\n        return confirmTeleport;\r\n    }\r\n\r\n    _cancelTeleport() {\r\n        let cancelTeleport = false;\r\n\r\n        if (!PP.XRUtils.isSessionActive()) {\r\n            cancelTeleport = PP.myMouse.isButtonPressEnd(PP.MouseButtonID.RIGHT) || !PP.myMouse.isInsideView();\r\n        } else {\r\n            cancelTeleport = PP.myGamepads[this._myTeleportParams.myHandedness].getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressed();\r\n        }\r\n\r\n        if (Global.myCancelTeleport > 0) {\r\n            Global.myCancelTeleport = 0;\r\n            cancelTeleport = true;\r\n        }\r\n\r\n        return cancelTeleport;\r\n    }\r\n\r\n    _detectTeleportPosition() {\r\n        this._myDetectionRuntimeParams.myParable.setSpeed(PP.myEasyTuneVariables.get(\"Parable Speed\"));\r\n        this._myDetectionRuntimeParams.myParable.setGravity(PP.myEasyTuneVariables.get(\"Parable Gravity\"));\r\n        this._myDetectionRuntimeParams.myParable.setStepLength(PP.myEasyTuneVariables.get(\"Parable Steps\"));\r\n        this._myTeleportParams.myDetectionParams.myMaxDistance = Global.mySetup.myLocomotionSetup.myTeleportDistance;\r\n\r\n        if (PP.XRUtils.isSessionActive()) {\r\n            this._detectTeleportRotationVR();\r\n            this._detectTeleportPositionVR();\r\n        } else {\r\n            this._myTeleportRuntimeParams.myTeleportRotationOnUp = 0;\r\n            this._myTeleportRotationOnUpNext = 0;\r\n            this._detectTeleportPositionNonVR();\r\n        }\r\n    }\r\n};\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._detectTeleportPositionNonVR = function () {\r\n    let mousePosition = PP.vec3_create();\r\n    let mouseDirection = PP.vec3_create();\r\n\r\n    let playerUp = PP.vec3_create();\r\n    return function _detectTeleportPositionNonVR(dt) {\r\n        this._myDetectionRuntimeParams.myTeleportPositionValid = false;\r\n        this._myDetectionRuntimeParams.myTeleportDetectionValid = true;\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        PP.myMouse.getOriginWorld(mousePosition);\r\n        PP.myMouse.getDirectionWorld(mouseDirection);\r\n\r\n        this._detectTeleportPositionParable(mousePosition, mouseDirection, playerUp);\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._detectTeleportPositionVR = function () {\r\n    let teleportStartTransformLocal = PP.quat2_create();\r\n    let teleportStartTransformWorld = PP.quat2_create();\r\n\r\n    let teleportStartPosition = PP.vec3_create();\r\n    let teleportDirection = PP.vec3_create();\r\n\r\n    let playerUp = PP.vec3_create();\r\n    let playerUpNegate = PP.vec3_create();\r\n    return function _detectTeleportPositionVR(dt) {\r\n        this._myDetectionRuntimeParams.myTeleportPositionValid = false;\r\n        this._myDetectionRuntimeParams.myTeleportDetectionValid = false;\r\n\r\n        if (this._myTeleportParams.myDetectionParams.myTeleportParableStartReferenceObject == null) {\r\n            let referenceObject = PP.myPlayerObjects.myHands[this._myTeleportParams.myHandedness];\r\n\r\n            teleportStartTransformLocal.quat2_setPositionRotationDegrees(this._myTeleportParams.myDetectionParams.myTeleportParableStartPositionOffset, this._myTeleportParams.myDetectionParams.myTeleportParableStartRotationOffset);\r\n            teleportStartTransformWorld = referenceObject.pp_convertTransformObjectToWorldQuat(teleportStartTransformLocal, teleportStartTransformWorld);\r\n        } else {\r\n            let referenceObject = this._myTeleportParams.myDetectionParams.myTeleportParableStartReferenceObject;\r\n\r\n            referenceObject.pp_getTransformQuat(teleportStartTransformWorld);\r\n        }\r\n\r\n        teleportStartPosition = teleportStartTransformWorld.quat2_getPosition(teleportStartPosition);\r\n        teleportDirection = teleportStartTransformWorld.quat2_getForward(teleportDirection);\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n        playerUpNegate = playerUp.vec3_negate(playerUpNegate);\r\n\r\n        if (teleportDirection.vec3_angle(playerUp) >= this._myTeleportParams.myDetectionParams.myParableForwardMinAngleToBeValidUp &&\r\n            teleportDirection.vec3_angle(playerUpNegate) >= this._myTeleportParams.myDetectionParams.myParableForwardMinAngleToBeValidDown\r\n        ) {\r\n            this._myDetectionRuntimeParams.myTeleportDetectionValid = true;\r\n        }\r\n\r\n        if (this._myDetectionRuntimeParams.myTeleportDetectionValid) {\r\n            this._detectTeleportPositionParable(teleportStartPosition, teleportDirection, playerUp);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._detectTeleportPositionParable = function () {\r\n    let parablePosition = PP.vec3_create();\r\n    let prevParablePosition = PP.vec3_create();\r\n    let parableFinalPosition = PP.vec3_create();\r\n\r\n    let raycastSetup = new PP.RaycastSetup();\r\n    let raycastResult = new PP.RaycastResults();\r\n\r\n    let parableHitPosition = PP.vec3_create();\r\n    let parableHitNormal = PP.vec3_create();\r\n\r\n    let verticalHitOrigin = PP.vec3_create();\r\n    let verticalHitDirection = PP.vec3_create();\r\n\r\n    let flatTeleportHorizontalHitNormal = PP.vec3_create();\r\n    let flatParableHitNormal = PP.vec3_create();\r\n    let flatParableDirectionNegate = PP.vec3_create();\r\n\r\n    let teleportCollisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n    return function _detectTeleportPositionParable(startPosition, direction, up) {\r\n        this._myDetectionRuntimeParams.myParable.setStartPosition(startPosition);\r\n        this._myDetectionRuntimeParams.myParable.setForward(direction);\r\n        this._myDetectionRuntimeParams.myParable.setUp(up);\r\n\r\n        let currentPositionIndex = 1;\r\n        let positionFlatDistance = 0;\r\n        let positionParableDistance = 0;\r\n        prevParablePosition = this._myDetectionRuntimeParams.myParable.getPosition(currentPositionIndex - 1, prevParablePosition);\r\n\r\n        raycastSetup.myIgnoreHitsInsideCollision = true;\r\n        raycastSetup.myBlockLayerFlags.setMask(this._myTeleportParams.myDetectionParams.myTeleportBlockLayerFlags.getMask());\r\n\r\n        raycastSetup.myObjectsToIgnore.pp_copy(this._myTeleportParams.myCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n        for (let objectToIgnore of this._myTeleportParams.myCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n            raycastSetup.myObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n        }\r\n\r\n        let maxParableDistance = this._myTeleportParams.myDetectionParams.myMaxDistance * 2;\r\n\r\n        do {\r\n            parablePosition = this._myDetectionRuntimeParams.myParable.getPosition(currentPositionIndex, parablePosition);\r\n\r\n            raycastSetup.myOrigin.vec3_copy(prevParablePosition);\r\n            raycastSetup.myDirection = parablePosition.vec3_sub(prevParablePosition, raycastSetup.myDirection);\r\n            raycastSetup.myDistance = raycastSetup.myDirection.vec3_length();\r\n            raycastSetup.myDirection.vec3_normalize(raycastSetup.myDirection);\r\n\r\n            raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n            if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n            }\r\n\r\n            prevParablePosition.vec3_copy(parablePosition);\r\n            positionFlatDistance = parablePosition.vec3_sub(startPosition, parablePosition).vec3_removeComponentAlongAxis(up, parablePosition).vec3_length();\r\n            positionParableDistance = this._myDetectionRuntimeParams.myParable.getDistance(currentPositionIndex);\r\n\r\n            currentPositionIndex++;\r\n        } while (\r\n            positionFlatDistance <= this._myTeleportParams.myDetectionParams.myMaxDistance &&\r\n            positionParableDistance <= maxParableDistance &&\r\n            !raycastResult.isColliding());\r\n\r\n        let maxParableDistanceOverFlatDistance = this._myDetectionRuntimeParams.myParable.getDistanceOverFlatDistance(this._myTeleportParams.myDetectionParams.myMaxDistance, maxParableDistance);\r\n\r\n        let fixedPositionParableDistance = positionParableDistance;\r\n        if (positionParableDistance > maxParableDistanceOverFlatDistance || positionParableDistance > maxParableDistance) {\r\n            fixedPositionParableDistance = Math.min(maxParableDistanceOverFlatDistance, maxParableDistance);\r\n        }\r\n\r\n        this._myDetectionRuntimeParams.myParableDistance = fixedPositionParableDistance;\r\n\r\n        let hitCollisionValid = false;\r\n\r\n        let bottomCheckMaxLength = 100;\r\n\r\n        if (raycastResult.isColliding()) {\r\n            let hit = raycastResult.myHits.pp_first();\r\n\r\n            let hitParableDistance = positionParableDistance - (raycastSetup.myDistance - hit.myDistance);\r\n\r\n            if (hitParableDistance <= fixedPositionParableDistance) {\r\n                hitCollisionValid = true;\r\n\r\n                this._myDetectionRuntimeParams.myParableDistance = hitParableDistance;\r\n\r\n                teleportCollisionRuntimeParams.reset();\r\n                this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n\r\n                parableHitPosition.vec3_copy(hit.myPosition);\r\n                parableHitNormal.vec3_copy(hit.myNormal);\r\n\r\n                if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                    verticalHitOrigin = hit.myPosition.vec3_add(hit.myNormal.vec3_scale(0.01, verticalHitOrigin), verticalHitOrigin);\r\n                    verticalHitDirection = up.vec3_negate(verticalHitDirection);\r\n\r\n                    raycastSetup.myOrigin.vec3_copy(verticalHitOrigin);\r\n                    raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                    raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                    raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                    if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                        PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n                    }\r\n\r\n                    if (raycastResult.isColliding()) {\r\n                        let hit = raycastResult.myHits.pp_first();\r\n\r\n                        teleportCollisionRuntimeParams.reset();\r\n                        this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                        this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                        this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n\r\n                        if (!this._myDetectionRuntimeParams.myTeleportPositionValid &&\r\n                            !this._myTeleportAsMovementFailed &&\r\n                            teleportCollisionRuntimeParams.myTeleportCanceled &&\r\n                            teleportCollisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            flatTeleportHorizontalHitNormal = teleportCollisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, flatTeleportHorizontalHitNormal);\r\n\r\n                            if (!flatTeleportHorizontalHitNormal.vec3_isZero(0.00001)) {\r\n                                flatTeleportHorizontalHitNormal.vec3_normalize(flatTeleportHorizontalHitNormal);\r\n\r\n                                let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                                raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatTeleportHorizontalHitNormal.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                                raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                                raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                                raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                                if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                                    PP.myDebugVisualManager.drawPoint(0, raycastSetup.myOrigin, PP.vec4_create(0, 0, 0, 1), 0.03);\r\n                                    PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n                                }\r\n\r\n                                if (raycastResult.isColliding()) {\r\n                                    let hit = raycastResult.myHits.pp_first();\r\n\r\n                                    teleportCollisionRuntimeParams.reset();\r\n                                    this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                                    this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                                    this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //console.error(\"2\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                        }\r\n\r\n                        if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                            flatParableHitNormal = parableHitNormal.vec3_removeComponentAlongAxis(up, flatParableHitNormal);\r\n                            if (!flatParableHitNormal.vec3_isZero(0.00001)) {\r\n                                flatParableHitNormal.vec3_normalize(flatParableHitNormal);\r\n\r\n                                let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                                raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatParableHitNormal.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                                raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                                raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                                raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                                if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                                    PP.myDebugVisualManager.drawPoint(0, raycastSetup.myOrigin, PP.vec4_create(0, 0, 0, 1), 0.03);\r\n                                    PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n                                }\r\n\r\n                                if (raycastResult.isColliding()) {\r\n                                    let hit = raycastResult.myHits.pp_first();\r\n\r\n                                    teleportCollisionRuntimeParams.reset();\r\n                                    this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                                    this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                                    this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //console.error(\"3\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                        }\r\n\r\n                        if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                            flatParableDirectionNegate = direction.vec3_negate(flatParableDirectionNegate).vec3_removeComponentAlongAxis(up, flatParableDirectionNegate).vec3_normalize(flatParableDirectionNegate);\r\n\r\n                            if (!flatParableDirectionNegate.vec3_isZero(0.00001)) {\r\n                                flatParableDirectionNegate.vec3_normalize(flatParableDirectionNegate);\r\n\r\n                                let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                                raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatParableDirectionNegate.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                                raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                                raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                                raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                                if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                                    PP.myDebugVisualManager.drawPoint(0, raycastSetup.myOrigin, PP.vec4_create(0, 0, 0, 1), 0.03);\r\n                                    PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n                                }\r\n\r\n                                if (raycastResult.isColliding()) {\r\n                                    let hit = raycastResult.myHits.pp_first();\r\n\r\n                                    teleportCollisionRuntimeParams.reset();\r\n                                    this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                                    this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                                    this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //console.error(\"4\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                        }\r\n                    }\r\n                } else {\r\n                    //console.error(\"1\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                }\r\n            }\r\n        }\r\n\r\n        //console.error(\"-\");\r\n\r\n        if (!hitCollisionValid) {\r\n            parableFinalPosition = this._myDetectionRuntimeParams.myParable.getPositionByDistance(this._myDetectionRuntimeParams.myParableDistance, parableFinalPosition);\r\n\r\n            verticalHitOrigin.vec3_copy(parableFinalPosition);\r\n            verticalHitDirection = up.vec3_negate(verticalHitDirection);\r\n\r\n            raycastSetup.myOrigin.vec3_copy(verticalHitOrigin);\r\n            raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n            raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n            raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n            if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n            }\r\n\r\n            if (raycastResult.isColliding()) {\r\n                let hit = raycastResult.myHits.pp_first();\r\n\r\n                teleportCollisionRuntimeParams.reset();\r\n                this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n\r\n                if (!this._myDetectionRuntimeParams.myTeleportPositionValid &&\r\n                    !this._myTeleportAsMovementFailed &&\r\n                    teleportCollisionRuntimeParams.myTeleportCanceled &&\r\n                    teleportCollisionRuntimeParams.myIsCollidingHorizontally) {\r\n                    flatTeleportHorizontalHitNormal = teleportCollisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, flatTeleportHorizontalHitNormal);\r\n\r\n                    if (!flatTeleportHorizontalHitNormal.vec3_isZero(0.00001)) {\r\n                        flatTeleportHorizontalHitNormal.vec3_normalize(flatTeleportHorizontalHitNormal);\r\n\r\n                        let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                        raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatTeleportHorizontalHitNormal.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                        raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                        raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                        raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                        if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                            PP.myDebugVisualManager.drawPoint(0, raycastSetup.myOrigin, PP.vec4_create(0, 0, 0, 1), 0.03);\r\n                            PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n                        }\r\n\r\n                        if (raycastResult.isColliding()) {\r\n                            let hit = raycastResult.myHits.pp_first();\r\n\r\n                            teleportCollisionRuntimeParams.reset();\r\n                            this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                            this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                            this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                    flatParableDirectionNegate = direction.vec3_negate(flatParableDirectionNegate).vec3_removeComponentAlongAxis(up, flatParableDirectionNegate).vec3_normalize(flatParableDirectionNegate);\r\n\r\n                    if (!flatParableDirectionNegate.vec3_isZero(0.00001)) {\r\n                        flatParableDirectionNegate.vec3_normalize(flatParableDirectionNegate);\r\n\r\n                        let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                        raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatParableDirectionNegate.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                        raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                        raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                        raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                        if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                            PP.myDebugVisualManager.drawPoint(0, raycastSetup.myOrigin, PP.vec4_create(0, 0, 0, 1), 0.03);\r\n                            PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n                        }\r\n\r\n                        if (raycastResult.isColliding()) {\r\n                            let hit = raycastResult.myHits.pp_first();\r\n\r\n                            teleportCollisionRuntimeParams.reset();\r\n                            this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                            this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                            this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._detectTeleportRotationVR = function () {\r\n    let axesVec3 = PP.vec3_create();\r\n    let axesForward = PP.vec3_create(0, 0, 1);\r\n    let axesUp = PP.vec3_create(0, 1, 0);\r\n    return function _detectTeleportRotationVR(dt) {\r\n        let axes = PP.myGamepads[this._myTeleportParams.myHandedness].getAxesInfo().getAxes();\r\n\r\n        if (axes.vec2_length() > this._myTeleportParams.myDetectionParams.myRotationOnUpMinStickIntensity) {\r\n            this._myTeleportRuntimeParams.myTeleportRotationOnUp = this._myTeleportRotationOnUpNext;\r\n\r\n            axesVec3.vec3_set(axes[0], 0, axes[1]);\r\n            this._myTeleportRotationOnUpNext = axesVec3.vec3_angleSigned(axesForward, axesUp);\r\n        }\r\n\r\n        if (!this._myTeleportParams.myDetectionParams.myRotationOnUpActive) {\r\n            this._myTeleportRuntimeParams.myTeleportRotationOnUp = 0;\r\n            this._myTeleportRotationOnUpNext = 0;\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._isTeleportHitValid = function () {\r\n    let raycastSetup = new PP.RaycastSetup();\r\n    let raycastResult = new PP.RaycastResults();\r\n\r\n    let playerUp = PP.vec3_create();\r\n    return function _isTeleportHitValid(hit, rotationOnUp, checkTeleportCollisionRuntimeParams) {\r\n        let isValid = false;\r\n\r\n        this._myTeleportAsMovementFailed = false;\r\n\r\n        if (hit.isValid() && !hit.myIsInsideCollision) {\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n            if (true || hit.myNormal.vec3_isConcordant(playerUp)) {\r\n                // #TODO when the flags on the physx will be available just check that the hit object physx has the floor flag\r\n\r\n                raycastSetup.myObjectsToIgnore.pp_copy(this._myTeleportParams.myCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n                raycastSetup.myIgnoreHitsInsideCollision = true;\r\n                raycastSetup.myBlockLayerFlags.setMask(this._myTeleportParams.myDetectionParams.myTeleportFloorLayerFlags.getMask());\r\n\r\n                let distanceToCheck = 0.01;\r\n                raycastSetup.myOrigin = hit.myPosition.vec3_add(hit.myNormal.vec3_scale(distanceToCheck, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                raycastSetup.myDirection = hit.myNormal.vec3_negate(raycastSetup.myDirection);\r\n                raycastSetup.myDistance = distanceToCheck * 1.25;\r\n                raycastSetup.myDirection.vec3_normalize(raycastSetup.myDirection);\r\n\r\n                raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                if (raycastResult.isColliding()) {\r\n                    let floorHit = raycastResult.myHits.pp_first();\r\n                    if (floorHit.myObject.pp_equals(hit.myObject)) {\r\n                        isValid = this._isTeleportPositionValid(hit.myPosition, rotationOnUp, checkTeleportCollisionRuntimeParams);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._isTeleportPositionValid = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let feetTransformQuat = PP.quat2_create();\r\n    let feetRotationQuat = PP.quat_create();\r\n    let feetPosition = PP.vec3_create();\r\n    let differenceOnUpVector = PP.vec3_create();\r\n    let teleportCheckCollisionRuntimeParams = new CollisionRuntimeParams();\r\n    return function _isTeleportPositionValid(teleportPosition, rotationOnUp, checkTeleportCollisionRuntimeParams) {\r\n        let isValid = false;\r\n\r\n        let positionVisible = this._isTeleportPositionVisible(teleportPosition);\r\n\r\n        if (positionVisible) {\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n            feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n            feetPosition = feetTransformQuat.quat2_getPosition(feetPosition);\r\n            if (rotationOnUp != 0) {\r\n                feetRotationQuat = feetTransformQuat.quat2_getRotationQuat(feetRotationQuat);\r\n                feetRotationQuat = feetRotationQuat.quat_rotateAxis(rotationOnUp, playerUp, feetRotationQuat);\r\n                feetTransformQuat.quat2_setPositionRotationQuat(feetPosition, feetRotationQuat);\r\n            }\r\n\r\n            let differenceOnUp = teleportPosition.vec3_sub(feetPosition, differenceOnUpVector).vec3_componentAlongAxis(playerUp, differenceOnUpVector).vec3_length();\r\n\r\n            if (differenceOnUp < this._myTeleportParams.myDetectionParams.myMaxHeightDifference + 0.00001) {\r\n                let teleportCheckValid = false;\r\n                teleportCheckCollisionRuntimeParams.copy(this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n\r\n                if (!this._myTeleportParams.myPerformTeleportAsMovement) {\r\n                    this._checkTeleport(teleportPosition, feetTransformQuat, teleportCheckCollisionRuntimeParams, checkTeleportCollisionRuntimeParams);\r\n                } else {\r\n                    this._checkTeleportAsMovement(teleportPosition, feetTransformQuat, teleportCheckCollisionRuntimeParams, checkTeleportCollisionRuntimeParams);\r\n                }\r\n\r\n                if (!teleportCheckCollisionRuntimeParams.myTeleportCanceled) {\r\n                    teleportCheckValid = true;\r\n                }\r\n\r\n                if (teleportCheckValid && (!this._myTeleportParams.myDetectionParams.myMustBeOnGround || teleportCheckCollisionRuntimeParams.myIsOnGround)) {\r\n\r\n                    let groundAngleValid = true;\r\n                    let isTeleportingUpward = teleportCheckCollisionRuntimeParams.myNewPosition.vec3_isFartherAlongAxis(feetPosition, playerUp);\r\n                    if (isTeleportingUpward) {\r\n                        groundAngleValid = teleportCheckCollisionRuntimeParams.myGroundAngle < this._myTeleportParams.myDetectionParams.myGroundAngleToIgnoreUpward + 0.0001;\r\n                    }\r\n\r\n                    if (groundAngleValid) {\r\n                        isValid = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n}();", "PlayerLocomotionTeleportDetectionState.prototype._isTeleportPositionVisible = function () {\r\n    let playerUp = PP.vec3_create();\r\n\r\n    let offsetFeetTeleportPosition = PP.vec3_create();\r\n    let headTeleportPosition = PP.vec3_create();\r\n    return function _isTeleportPositionVisible(teleportPosition) {\r\n        let isVisible = true;\r\n\r\n        if (this._myTeleportParams.myDetectionParams.myTeleportFeetPositionMustBeVisible ||\r\n            this._myTeleportParams.myDetectionParams.myTeleportHeadPositionMustBeVisible ||\r\n            this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible) {\r\n\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n            let isHeadVisible = false;\r\n            let isFeetVisible = false;\r\n\r\n            if (this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible ||\r\n                this._myTeleportParams.myDetectionParams.myTeleportHeadPositionMustBeVisible) {\r\n                let headheight = this._myTeleportParams.myPlayerHeadManager.getHeightHead();\r\n                headTeleportPosition = teleportPosition.vec3_add(playerUp.vec3_scale(headheight, headTeleportPosition), headTeleportPosition);\r\n                isHeadVisible = this._isPositionVisible(headTeleportPosition);\r\n            } else {\r\n                isHeadVisible = true;\r\n            }\r\n\r\n            if (this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible && isHeadVisible) {\r\n                isFeetVisible = true;\r\n            } else {\r\n                if (this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible ||\r\n                    (this._myTeleportParams.myDetectionParams.myTeleportFeetPositionMustBeVisible && isHeadVisible)) {\r\n                    offsetFeetTeleportPosition = teleportPosition.vec3_add(playerUp.vec3_scale(this._myTeleportParams.myDetectionParams.myVisibilityCheckFeetPositionVerticalOffset, offsetFeetTeleportPosition), offsetFeetTeleportPosition);\r\n                    isFeetVisible = this._isPositionVisible(offsetFeetTeleportPosition);\r\n                } else {\r\n                    isFeetVisible = true;\r\n                }\r\n            }\r\n\r\n            isVisible = isHeadVisible && isFeetVisible;\r\n        }\r\n\r\n        return isVisible;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._isPositionVisible = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let standardUp = PP.vec3_create(0, 1, 0);\r\n    let standardForward = PP.vec3_create(0, 0, 1);\r\n    let referenceUp = PP.vec3_create();\r\n    let headPosition = PP.vec3_create();\r\n    let direction = PP.vec3_create();\r\n    let fixedRight = PP.vec3_create();\r\n    let fixedForward = PP.vec3_create();\r\n    let fixedUp = PP.vec3_create();\r\n    let raycastEndPosition = PP.vec3_create();\r\n\r\n    let raycastSetup = new PP.RaycastSetup();\r\n    let raycastResult = new PP.RaycastResults();\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n    return function _isPositionVisible(position) {\r\n        let isVisible = true;\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        let currentHead = this._myTeleportParams.myPlayerHeadManager.getHead();\r\n        headPosition = currentHead.pp_getPosition(headPosition);\r\n        direction = position.vec3_sub(headPosition, direction).vec3_normalize(direction);\r\n\r\n        referenceUp.vec3_copy(standardUp);\r\n        if (direction.vec3_angle(standardUp) < 0.0001) {\r\n            referenceUp.vec3_copy(standardForward);\r\n        }\r\n\r\n        fixedRight = direction.vec3_cross(referenceUp, fixedRight);\r\n        fixedUp = fixedRight.vec3_cross(direction, fixedUp);\r\n        fixedForward.vec3_copy(direction);\r\n\r\n        fixedUp.vec3_normalize(fixedUp);\r\n        fixedForward.vec3_normalize(fixedForward);\r\n\r\n        let checkPositions = this._getVisibilityCheckPositions(headPosition, fixedUp, fixedForward);\r\n\r\n        let distance = headPosition.vec3_distance(position);\r\n\r\n        for (let checkPosition of checkPositions) {\r\n            raycastSetup.myOrigin.vec3_copy(checkPosition);\r\n            raycastSetup.myDirection.vec3_copy(fixedForward);\r\n            raycastSetup.myDistance = distance;\r\n\r\n            raycastSetup.myBlockLayerFlags.setMask(this._myTeleportParams.myDetectionParams.myVisibilityBlockLayerFlags.getMask());\r\n\r\n            raycastSetup.myObjectsToIgnore.pp_copy(this._myTeleportParams.myCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n            for (let objectToIgnore of this._myTeleportParams.myCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n                raycastSetup.myObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n            }\r\n\r\n            raycastSetup.myIgnoreHitsInsideCollision = true;\r\n\r\n            raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n            if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugVisibilityActive) {\r\n                PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n            }\r\n\r\n            if (raycastResult.isColliding()) {\r\n                raycastEndPosition = checkPosition.vec3_add(fixedForward.vec3_scale(distance, raycastEndPosition), raycastEndPosition);\r\n                let hit = raycastResult.myHits.pp_first();\r\n\r\n                if (this._myTeleportParams.myDetectionParams.myVisibilityCheckDistanceFromHitThreshold == 0 || hit.myPosition.vec3_distance(raycastEndPosition) > this._myTeleportParams.myDetectionParams.myVisibilityCheckDistanceFromHitThreshold + 0.00001) {\r\n                    isVisible = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isVisible;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._getVisibilityCheckPositions = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(PP.vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let currentDirection = PP.vec3_create();\r\n    return function _getVisibilityCheckPositions(position, up, forward) {\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        {\r\n            let tempCheckPosition = _localGetCachedCheckPosition();\r\n            tempCheckPosition.vec3_copy(position);\r\n            checkPositions.push(tempCheckPosition);\r\n        }\r\n\r\n        let radiusStep = this._myTeleportParams.myDetectionParams.myVisibilityCheckRadius / this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceStepAmount;\r\n        let sliceAngle = 360 / this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceSliceAmount;\r\n        let currentStepRotation = 0;\r\n        for (let i = 0; i < this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceStepAmount; i++) {\r\n            let currentRadius = radiusStep * (i + 1);\r\n\r\n            currentDirection = up.vec3_rotateAxis(currentStepRotation, forward, currentDirection);\r\n            for (let j = 0; j < this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceSliceAmount; j++) {\r\n                let tempCheckPosition = _localGetCachedCheckPosition();\r\n                let sliceDirection = currentDirection.vec3_rotateAxis(sliceAngle * j, forward, tempCheckPosition);\r\n                checkPositions.push(position.vec3_add(sliceDirection.vec3_scale(currentRadius, sliceDirection), sliceDirection));\r\n            }\r\n\r\n            currentStepRotation += this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceRotationPerStep;\r\n        }\r\n\r\n        return checkPositions;\r\n    };\r\n}();", "PlayerLocomotionTeleportTeleportType = {\r\n    INSTANT: 0,\r\n    BLINK: 1,\r\n    SHIFT: 2,\r\n};\r\n\r\nPlayerLocomotionTeleportTeleportParams = class PlayerLocomotionTeleportTeleportParams {\r\n    constructor() {\r\n        this.myTeleportType = PlayerLocomotionTeleportTeleportType.SHIFT;\r\n\r\n        this.myBlinkFadeOutSeconds = 0.1;\r\n        this.myBlinkFadeInSeconds = 0.1;\r\n        this.myBlinkWaitSeconds = 0.1;\r\n        this.myBlinkSphereColor = PP.vec3_create();\r\n        this.myBlinkSphereScale = 0.1;\r\n\r\n        this.myShiftMovementSeconds = 0.15;\r\n        this.myShiftMovementSecondsMultiplierOverDistanceFunction = null;\r\n        this.myShiftMovementEasingFunction = PP.EasingFunction.easeInOut;\r\n\r\n        this.myShiftRotateSeconds = 1;\r\n        this.myShiftRotateSecondsMultiplierOverAngleFunction = null;\r\n        this.myShiftRotateEasingFunction = PP.EasingFunction.easeOut;\r\n        this.myShiftRotateStartAfterMovementPercentage = 0.7;\r\n\r\n        this.myShiftRotateSecondsMultiplierOverAngleFunction = function (angle) {\r\n            return PP.EasingFunction.easeOut(angle / 180);\r\n        };\r\n    }\r\n};\r\n\r\nPlayerLocomotionTeleportTeleportState = class PlayerLocomotionTeleportTeleportState extends PlayerLocomotionTeleportState {\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"Locomotion Teleport Teleport\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\");\r\n\r\n        this._myBlinkState = new PlayerLocomotionTeleportTeleportBlinkState(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n        this._myShiftState = new PlayerLocomotionTeleportTeleportShiftState(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myFSM.addState(\"instant_teleport\", this._instantUpdate.bind(this));\r\n        this._myFSM.addState(\"blink_teleport\", this._myBlinkState);\r\n        this._myFSM.addState(\"shift_teleport\", this._myShiftState);\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"instant_teleport\", \"start_instant\");\r\n        this._myFSM.addTransition(\"idle\", \"blink_teleport\", \"start_blink\");\r\n        this._myFSM.addTransition(\"idle\", \"shift_teleport\", \"start_shift\");\r\n\r\n        this._myFSM.addTransition(\"instant_teleport\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n        this._myFSM.addTransition(\"blink_teleport\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n        this._myFSM.addTransition(\"shift_teleport\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"instant_teleport\", \"idle\", \"stop\", this._instantStop.bind(this));\r\n        this._myFSM.addTransition(\"blink_teleport\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"shift_teleport\", \"idle\", \"stop\");\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    start(fsm) {\r\n        this._myParentFSM = fsm;\r\n\r\n        switch (this._myTeleportParams.myTeleportParams.myTeleportType) {\r\n            case PlayerLocomotionTeleportTeleportType.INSTANT:\r\n                this._myFSM.perform(\"start_instant\");\r\n                break;\r\n            case PlayerLocomotionTeleportTeleportType.BLINK:\r\n                this._myFSM.perform(\"start_blink\");\r\n                break;\r\n            case PlayerLocomotionTeleportTeleportType.SHIFT:\r\n                this._myFSM.perform(\"start_shift\");\r\n                break;\r\n            default:\r\n                this._myFSM.perform(\"start_instant\");\r\n        }\r\n    }\r\n\r\n    end() {\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    completeTeleport() {\r\n        this._myFSM.perform(\"stop\");\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myTeleportRuntimeParams.myTeleportRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n    }\r\n\r\n    _instantUpdate(dt, fsm) {\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myTeleportRuntimeParams.myTeleportRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = true;\r\n        fsm.perform(\"done\");\r\n    }\r\n\r\n    _instantStop(fsm) {\r\n        this._instantUpdate(0, fsm);\r\n    }\r\n\r\n    _completeTeleport() {\r\n        fsm.perform(\"stop\");\r\n    }\r\n\r\n    _teleportDone() {\r\n        Global.myPlayer.resetReal(true, false, false);\r\n        Global.myPlayer.resetHeadToReal();\r\n\r\n        this._myParentFSM.performDelayed(\"done\");\r\n    }\r\n};", "PlayerLocomotionTeleportTeleportBlinkState = class PlayerLocomotionTeleportTeleportBlinkState extends PlayerLocomotionTeleportState {\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myBlinkSphere = WL.scene.addObject(null);\r\n        this._myBlinkSphereMeshComponent = this._myBlinkSphere.pp_addComponent(\"mesh\");\r\n        this._myBlinkSphereMeshComponent.mesh = PP.myDefaultResources.myMeshes.myInvertedSphere;\r\n        this._myBlinkSphereMeshComponent.material = PP.myDefaultResources.myMaterials.myFlatTransparentNoDepth.clone();\r\n        this._myBlinkSphereMaterialColor = [\r\n            this._myTeleportParams.myTeleportParams.myBlinkSphereColor[0] / 255,\r\n            this._myTeleportParams.myTeleportParams.myBlinkSphereColor[1] / 255,\r\n            this._myTeleportParams.myTeleportParams.myBlinkSphereColor[2] / 255,\r\n            0];\r\n\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n\r\n        this._myBlinkSphere.pp_resetTransformLocal();\r\n        this._myBlinkSphere.pp_setScaleLocal(this._myTeleportParams.myTeleportParams.myBlinkSphereScale);\r\n        this._myBlinkSphere.pp_setActive(false);\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"Locomotion Teleport Teleport Blink\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\");\r\n\r\n        this._myFSM.addState(\"fade_out\", this._fadeOutUpdate.bind(this));\r\n        this._myFSM.addState(\"wait\", new PP.TimerState(this._myTeleportParams.myTeleportParams.myBlinkWaitSeconds, \"done\"));\r\n        this._myFSM.addState(\"fade_in\", this._fadeInUpdate.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"fade_out\", \"teleport\", this._startFadeOut.bind(this));\r\n        this._myFSM.addTransition(\"fade_out\", \"wait\", \"done\", this._teleport.bind(this));\r\n        this._myFSM.addTransition(\"wait\", \"fade_in\", \"done\", this._startFadeIn.bind(this));\r\n        this._myFSM.addTransition(\"fade_in\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"fade_out\", \"idle\", \"stop\", this._stop.bind(this, true));\r\n        this._myFSM.addTransition(\"wait\", \"idle\", \"stop\", this._stop.bind(this, false));\r\n        this._myFSM.addTransition(\"fade_in\", \"idle\", \"stop\", this._stop.bind(this, false));\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n\r\n        this._myFadeInTimer = new PP.Timer(this._myTeleportParams.myTeleportParams.myBlinkFadeInSeconds);\r\n        this._myFadeOutTimer = new PP.Timer(this._myTeleportParams.myTeleportParams.myBlinkFadeOutSeconds);\r\n        this._myFadeOutAlphaOverTime = new PP.NumberOverValue(0, 1, 0, 1);\r\n        this._myFadeInAlphaOverTime = new PP.NumberOverValue(1, 0, 0, 1);\r\n    }\r\n\r\n    start(fsm) {\r\n        this._myParentFSM = fsm;\r\n\r\n        this._myFSM.perform(\"teleport\");\r\n    }\r\n\r\n    end() {\r\n        this._myBlinkSphere.pp_setActive(false);\r\n        this._myBlinkSphere.pp_setParent(null, false);\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myBlinkSphere.pp_setParent(this._myTeleportParams.myPlayerHeadManager.getHead(), false);\r\n\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    _startFadeOut() {\r\n        this._myFadeOutTimer.start();\r\n        this._myBlinkSphereMaterialColor[3] = 0;\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n        this._myBlinkSphere.pp_setActive(true);\r\n\r\n        //this._myLocomotionRuntimeParams.myIsTeleporting = true;\r\n    }\r\n\r\n    _startFadeIn() {\r\n        this._myFadeInTimer.start();\r\n    }\r\n\r\n    _fadeOutUpdate(dt, fsm) {\r\n        this._myFadeOutTimer.update(dt);\r\n\r\n        let alpha = this._myFadeOutAlphaOverTime.get(this._myFadeOutTimer.getPercentage());\r\n        this._myBlinkSphereMaterialColor[3] = alpha;\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n\r\n        if (this._myFadeOutTimer.isDone()) {\r\n            fsm.perform(\"done\");\r\n        }\r\n    }\r\n\r\n    _fadeInUpdate(dt, fsm) {\r\n        this._myFadeInTimer.update(dt);\r\n\r\n        let alpha = this._myFadeInAlphaOverTime.get(this._myFadeInTimer.getPercentage());\r\n        this._myBlinkSphereMaterialColor[3] = alpha;\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n\r\n        if (this._myFadeInTimer.isDone()) {\r\n            fsm.perform(\"done\");\r\n        }\r\n    }\r\n\r\n    _teleportDone() {\r\n        this._myBlinkSphere.pp_setActive(false);\r\n\r\n        this._myParentFSM.performDelayed(\"done\");\r\n    }\r\n\r\n    _stop(teleport) {\r\n        this._myBlinkSphere.pp_setActive(false);\r\n\r\n        if (teleport) {\r\n            this._teleport();\r\n        }\r\n    }\r\n\r\n    _teleport() {\r\n        //this._myLocomotionRuntimeParams.myIsTeleporting = false;\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = true;\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myTeleportRuntimeParams.myTeleportRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n    }\r\n};", "PlayerLocomotionTeleportTeleportShiftState = class PlayerLocomotionTeleportTeleportShiftState extends PlayerLocomotionTeleportState {\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"Locomotion Teleport Teleport Shift\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\");\r\n\r\n        this._myFSM.addState(\"shifting\", this._shiftingUpdate.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"shifting\", \"teleport\", this._startShifting.bind(this));\r\n        this._myFSM.addTransition(\"shifting\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"shifting\", \"idle\", \"stop\", this._stop.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n\r\n        this._myShiftMovementTimer = new PP.Timer(this._myTeleportParams.myTeleportParams.myShiftMovementSeconds);\r\n        this._myShiftRotateTimer = new PP.Timer(this._myTeleportParams.myTeleportParams.myShiftRotateSeconds, false);\r\n\r\n        this._myFeetStartPosition = new PP.vec3_create();\r\n\r\n        this._myCurrentRotationOnUp = 0;\r\n        this._myStartRotationOnUp = 0;\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Shift Movement Seconds\", this._myTeleportParams.myTeleportParams.myShiftMovementSeconds, 0.5, 3, 0));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Shift Rotate Seconds\", this._myTeleportParams.myTeleportParams.myShiftRotateSeconds, 0.5, 3, 0));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Shift Rotate Start Percentage\", this._myTeleportParams.myTeleportParams.myShiftRotateStartAfterMovementPercentage, 0.5, 3, 0, 1));\r\n\r\n        this._mySteps = [];\r\n        //this._mySteps[1] = PP.myAudioManager.createAudioPlayer(AudioID.PASSO_2);\r\n        //this._mySteps[2] = PP.myAudioManager.createAudioPlayer(AudioID.PASSO_3);\r\n    }\r\n\r\n    start(fsm) {\r\n        this._myParentFSM = fsm;\r\n\r\n        this._myFSM.perform(\"teleport\");\r\n    }\r\n\r\n    end() {\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myTeleportParams.myTeleportParams.myShiftMovementSeconds = PP.myEasyTuneVariables.get(\"Shift Movement Seconds\");\r\n        this._myTeleportParams.myTeleportParams.myShiftRotateSeconds = PP.myEasyTuneVariables.get(\"Shift Rotate Seconds\");\r\n        this._myTeleportParams.myTeleportParams.myShiftRotateStartAfterMovementPercentage = PP.myEasyTuneVariables.get(\"Shift Rotate Start Percentage\");\r\n\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    _startShifting() {\r\n        if (this._mySteps.length == 0) {\r\n            this._mySteps[0] = PP.myAudioManager.createAudioPlayer(AudioID.PASSO_1);\r\n        }\r\n\r\n        let player = Math.pp_randomPick(this._mySteps);\r\n        player.setPosition(this._myTeleportRuntimeParams.myTeleportPosition);\r\n        player.setPitch(Math.pp_random(1 - 0.35, 1 + 0.15));\r\n        player.play();\r\n\r\n        if (Global.myUnmute) {\r\n            Global.myUnmute = false;\r\n            Howler.mute(false);\r\n        }\r\n\r\n        this._myTeleportParams.myPlayerTransformManager.getParams().mySyncPositionDisabled = true;\r\n\r\n        this._myLocomotionRuntimeParams.myIsTeleporting = true;\r\n        this._myFeetStartPosition = this._myTeleportParams.myPlayerHeadManager.getPositionFeet(this._myFeetStartPosition);\r\n\r\n        this._myShiftMovementTimer.start(this._myTeleportParams.myTeleportParams.myShiftMovementSeconds);\r\n\r\n        if (this._myTeleportParams.myTeleportParams.myShiftMovementSecondsMultiplierOverDistanceFunction) {\r\n            let distance = this._myTeleportRuntimeParams.myTeleportPosition.vec3_distance(this._myFeetStartPosition);\r\n            let multiplier = this._myTeleportParams.myTeleportParams.myShiftMovementSecondsMultiplierOverDistanceFunction(distance);\r\n            this._myShiftMovementTimer.start(this._myTeleportParams.myTeleportParams.myShiftMovementSeconds * multiplier);\r\n        }\r\n\r\n        this._myShiftRotateTimer.reset(this._myTeleportParams.myTeleportParams.myShiftRotateSeconds);\r\n        if (this._myTeleportParams.myTeleportParams.myShiftRotateSecondsMultiplierOverAngleFunction) {\r\n            let multiplier = this._myTeleportParams.myTeleportParams.myShiftRotateSecondsMultiplierOverAngleFunction(Math.abs(this._myTeleportRuntimeParams.myTeleportRotationOnUp));\r\n            this._myShiftRotateTimer.reset(this._myTeleportParams.myTeleportParams.myShiftRotateSeconds * multiplier);\r\n        }\r\n\r\n        this._myStartRotationOnUp = this._myTeleportRuntimeParams.myTeleportRotationOnUp;\r\n        this._myCurrentRotationOnUp = 0;\r\n    }\r\n\r\n    _stop() {\r\n        this._teleport();\r\n    }\r\n\r\n    _teleportDone() {\r\n        this._teleport();\r\n        this._myParentFSM.performDelayed(\"done\");\r\n    }\r\n\r\n    _teleport() {\r\n        this._myTeleportParams.myPlayerTransformManager.getParams().mySyncPositionDisabled = false;\r\n        //this._myLocomotionRuntimeParams.myIsTeleporting = false;\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = true;\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myStartRotationOnUp - this._myCurrentRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n    }\r\n};\r\n\r\nPlayerLocomotionTeleportTeleportShiftState.prototype._shiftingUpdate = function () {\r\n    let movementToTeleportFeet = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    return function _shiftingUpdate(dt, fsm) {\r\n        this._myShiftMovementTimer.update(dt);\r\n        this._myShiftRotateTimer.update(dt);\r\n\r\n        if (this._myShiftRotateTimer.isDone() && this._myShiftMovementTimer.isDone()) {\r\n            fsm.perform(\"done\");\r\n        } else {\r\n            newFeetPosition.vec3_copy(this._myTeleportRuntimeParams.myTeleportPosition);\r\n\r\n            if (this._myShiftMovementTimer.isStarted() || this._myShiftMovementTimer.isJustDone()) {\r\n\r\n                let interpolationValue = this._myTeleportParams.myTeleportParams.myShiftMovementEasingFunction(this._myShiftMovementTimer.getPercentage());\r\n\r\n                if (interpolationValue >= this._myTeleportParams.myTeleportParams.myShiftRotateStartAfterMovementPercentage && !this._myShiftRotateTimer.isStarted()) {\r\n                    this._myShiftRotateTimer.start();\r\n                    this._myShiftRotateTimer.update(dt);\r\n                }\r\n\r\n                movementToTeleportFeet = this._myTeleportRuntimeParams.myTeleportPosition.vec3_sub(this._myFeetStartPosition, movementToTeleportFeet);\r\n                movementToTeleportFeet.vec3_scale(interpolationValue, movementToTeleportFeet);\r\n                newFeetPosition = this._myFeetStartPosition.vec3_add(movementToTeleportFeet, newFeetPosition);\r\n            }\r\n\r\n            let rotationOnUp = 0;\r\n            if (this._myShiftRotateTimer.isRunning() || this._myShiftRotateTimer.isJustDone()) {\r\n                let interpolationValue = this._myTeleportParams.myTeleportParams.myShiftRotateEasingFunction(this._myShiftRotateTimer.getPercentage());\r\n\r\n                let newCurrentRotationOnUp = this._myStartRotationOnUp * interpolationValue;\r\n                rotationOnUp = newCurrentRotationOnUp - this._myCurrentRotationOnUp;\r\n\r\n                this._myCurrentRotationOnUp = newCurrentRotationOnUp;\r\n            }\r\n\r\n            this._teleportToPosition(newFeetPosition, rotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams, true);\r\n\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PlayerLocomotionTeleportTeleportShiftState.prototype, \"_shiftingUpdate\", { enumerable: false });", "PlayerLocomotionTeleportParams = class PlayerLocomotionTeleportParams {\r\n    constructor() {\r\n        this.myPlayerHeadManager = null;\r\n\r\n        this.myCollisionCheckParams = null;\r\n\r\n        this.myDetectionParams = new PlayerLocomotionTeleportDetectionParams();\r\n        this.myVisualizerParams = new PlayerLocomotionTeleportDetectionVisualizerParams();\r\n        this.myTeleportParams = new PlayerLocomotionTeleportTeleportParams();\r\n\r\n        this.myHandedness = PP.Handedness.LEFT;\r\n\r\n        this.myPerformTeleportAsMovement = false;\r\n        this.myTeleportAsMovementMaxDistanceFromTeleportPosition = 0.001;\r\n        this.myTeleportAsMovementMaxSteps = 2;\r\n        // when checking teleport as movement u may need to move more times to get to the position due to snap and gravity\r\n        // this specifies how many movement u can try to get to the teleport position\r\n\r\n        this.myTeleportAsMovementRemoveVerticalMovement = true;\r\n        // this can be used to remove the vertical movement from the difference from the current and teleport position so that u can apply just\r\n        // the gravity as vertical movement\r\n        this.myTeleportAsMovementExtraVerticalMovementPerMeter = 1; // this simulate the gravity for the teleport movement\r\n\r\n        this.myStickIdleThreshold = 0.1;\r\n\r\n        this.myAdjustPositionEveryFrame = false;\r\n        this.myGravityAcceleration = 0;\r\n\r\n        this.myDebugActive = false;\r\n        this.myDebugDetectActive = false;\r\n        this.myDebugShowActive = false;\r\n        this.myDebugVisibilityActive = false;\r\n    }\r\n};\r\n\r\nPlayerLocomotionTeleportRuntimeParams = class PlayerLocomotionTeleportRuntimeParams {\r\n    constructor() {\r\n        this.myTeleportPosition = PP.vec3_create();\r\n        this.myTeleportRotationOnUp = 0;\r\n    }\r\n};\r\n\r\nPlayerLocomotionTeleport = class PlayerLocomotionTeleport extends PlayerLocomotionMovement {\r\n    constructor(teleportParams, locomotionRuntimeParams) {\r\n        super(locomotionRuntimeParams);\r\n\r\n        this._myTeleportParams = teleportParams;\r\n        this._myTeleportRuntimeParams = new PlayerLocomotionTeleportRuntimeParams();\r\n\r\n        this._myStickIdleCharge = true;\r\n        this._myGravitySpeed = 0;\r\n\r\n        this._myDetectionState = new PlayerLocomotionTeleportDetectionState(this._myTeleportParams, this._myTeleportRuntimeParams, this._myLocomotionRuntimeParams);\r\n        this._myTeleportState = new PlayerLocomotionTeleportTeleportState(this._myTeleportParams, this._myTeleportRuntimeParams, this._myLocomotionRuntimeParams);\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"Locomotion Teleport\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\", this._idleUpdate.bind(this));\r\n        this._myFSM.addState(\"detect\", this._myDetectionState);\r\n        this._myFSM.addState(\"teleport\", this._myTeleportState);\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"detect\", \"detect\");\r\n        this._myFSM.addTransition(\"detect\", \"teleport\", \"teleport\");\r\n        this._myFSM.addTransition(\"detect\", \"idle\", \"cancel\");\r\n        this._myFSM.addTransition(\"teleport\", \"idle\", \"done\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"detect\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"teleport\", \"idle\", \"stop\", this._completeTeleport.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    start() {\r\n        this._myGravitySpeed = 0;\r\n    }\r\n\r\n    stop() {\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    canStop() {\r\n        return this._myFSM.isInState(\"idle\");\r\n    }\r\n\r\n    update(dt) {\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = false;\r\n\r\n        this._myFSM.update(dt);\r\n\r\n        // no gravity if teleporting\r\n        if (this._myTeleportParams.myAdjustPositionEveryFrame || this._myTeleportParams.myGravityAcceleration != 0) {\r\n            this._applyGravity(dt);\r\n        }\r\n\r\n        if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = false;\r\n        }\r\n    }\r\n\r\n    _idleUpdate(dt) {\r\n        if (this._startDetecting()) {\r\n            this._myFSM.perform(\"detect\");\r\n        }\r\n    }\r\n\r\n    _startDetecting() {\r\n        let startDetecting = false;\r\n\r\n        if (!PP.XRUtils.isSessionActive()) {\r\n            startDetecting = PP.myMouse.isButtonPressStart(PP.MouseButtonID.MIDDLE) && PP.myMouse.isTargetingRenderCanvas();\r\n        } else {\r\n            let axes = PP.myGamepads[this._myTeleportParams.myHandedness].getAxesInfo().getAxes();\r\n\r\n            if (axes.vec2_length() <= this._myTeleportParams.myStickIdleThreshold) {\r\n                this._myStickIdleCharge = true;\r\n            }\r\n\r\n            if (this._myStickIdleCharge && axes[1] >= 0.75) {\r\n                this._myStickIdleCharge = false;\r\n                startDetecting = true;\r\n            }\r\n        }\r\n\r\n        return startDetecting;\r\n    }\r\n\r\n    _completeTeleport() {\r\n        this._myTeleportState.completeTeleport();\r\n    }\r\n};\r\n\r\nPlayerLocomotionTeleport.prototype._applyGravity = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let gravityMovement = PP.vec3_create();\r\n    let feetTransformQuat = PP.quat2_create();\r\n    return function _applyGravity(dt) {\r\n        // if gravity is zero it's still important to move to remain snapped and gather proper surface data even when not teleporting\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        this._myGravitySpeed += this._myTeleportParams.myGravityAcceleration * dt;\r\n        gravityMovement = playerUp.vec3_scale(this._myGravitySpeed * dt, gravityMovement);\r\n\r\n        if (this._myLocomotionRuntimeParams.myIsFlying) {\r\n            gravityMovement.vec3_zero();\r\n        }\r\n\r\n        feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n        CollisionCheckGlobal.move(gravityMovement, feetTransformQuat, this._myTeleportParams.myCollisionCheckParams, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n        if (!this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myVerticalMovementCanceled) {\r\n            this._myTeleportParams.myPlayerHeadManager.teleportPositionFeet(this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myNewPosition);\r\n        }\r\n\r\n        if (this._myGravitySpeed > 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnCeiling ||\r\n            this._myGravitySpeed < 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myGravitySpeed = 0;\r\n        }\r\n    };\r\n}();", "CleanedPlayerLocomotion = class CleanedPlayerLocomotion {\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myCollisionCheckParamsMovement = new CollisionCheckParams();\r\n        this._setupCollisionCheckParamsMovement();\r\n        this._myCollisionCheckParamsTeleport = null;\r\n        this._setupCollisionCheckParamsTeleport();\r\n\r\n        this._myCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myMovementRuntimeParams = new PlayerLocomotionMovementRuntimeParams();\r\n        this._myMovementRuntimeParams.myCollisionRuntimeParams = this._myCollisionRuntimeParams;\r\n\r\n        {\r\n            let params = new PlayerHeadManagerParams();\r\n\r\n            params.mySessionChangeResyncEnabled = true;\r\n\r\n            params.myBlurEndResyncEnabled = true;\r\n            params.myBlurEndResyncRotation = true;\r\n\r\n            //params.myNextEnterSessionFloorHeight = 3;\r\n            params.myEnterSessionResyncHeight = false;\r\n            params.myExitSessionResyncHeight = false;\r\n            params.myExitSessionResyncVerticalAngle = true;\r\n            params.myExitSessionRemoveRightTilt = true;\r\n            params.myExitSessionAdjustMaxVerticalAngle = true;\r\n            params.myExitSessionMaxVerticalAngle = 90;\r\n\r\n            params.myHeightOffsetVRWithFloor = 0;\r\n            params.myHeightOffsetVRWithoutFloor = 1.75;\r\n            params.myHeightOffsetNonVR = 1.75;\r\n\r\n            params.myForeheadExtraHeight = this._myParams.myForeheadExtraHeight;\r\n\r\n            params.myFeetRotationKeepUp = true;\r\n\r\n            params.myDebugActive = false;\r\n\r\n            this._myPlayerHeadManager = new PlayerHeadManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PlayerTransformManagerParams();\r\n\r\n            params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n\r\n            params.myMovementCollisionCheckParams = this._myCollisionCheckParamsMovement;\r\n            params.myTeleportCollisionCheckParams = null;\r\n            params.myTeleportCollisionCheckParamsCopyFromMovement = true;\r\n            params.myTeleportCollisionCheckParamsCheck360 = true;\r\n\r\n            params.myHeadCollisionBlockLayerFlags.copy(params.myMovementCollisionCheckParams.myHorizontalBlockLayerFlags);\r\n            params.myHeadCollisionBlockLayerFlags.add(params.myMovementCollisionCheckParams.myVerticalBlockLayerFlags);\r\n            params.myHeadCollisionObjectsToIgnore.pp_copy(params.myMovementCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n            let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n            for (let objectToIgnore of params.myMovementCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n                params.myHeadCollisionObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n            }\r\n\r\n            params.myCollisionRuntimeParams = this._myCollisionRuntimeParams;\r\n\r\n            params.myHeadRadius = 0.075;\r\n\r\n            params.myIsMaxDistanceFromRealToSyncEnabled = true;\r\n            params.myMaxDistanceFromRealToSync = 100;\r\n\r\n            params.myIsFloatingValidIfVerticalMovement = false;\r\n            params.myIsFloatingValidIfVerticalMovementAndRealOnGround = false;\r\n            params.myIsFloatingValidIfSteepGround = false;\r\n            params.myIsFloatingValidIfVerticalMovementAndSteepGround = false;\r\n            params.myIsFloatingValidIfRealOnGround = false;\r\n            params.myIsLeaningValidAboveDistance = true;\r\n            params.myLeaningValidDistance = 2;\r\n            params.myFloatingSplitCheckEnabled = true;\r\n            params.myFloatingSplitCheckMaxLength = 0.2;\r\n            params.myFloatingSplitCheckMaxSteps = 5;\r\n            params.myRealMovementAllowVerticalAdjustments = false;\r\n\r\n            params.myUpdateRealPositionValid = true;\r\n            params.myUpdatePositionValid = true;\r\n\r\n            params.myIsBodyCollidingWhenHeightBelowValue = null;\r\n            params.myIsBodyCollidingWhenHeightAboveValue = null;\r\n\r\n            params.myResetToValidOnEnterSession = true;\r\n            params.myResetToValidOnExitSession = true;\r\n\r\n            params.myAlwaysResetRealPositionNonVR = true;\r\n            params.myAlwaysResetRealRotationNonVR = true;\r\n            params.myAlwaysResetRealHeightNonVR = true;\r\n\r\n            params.myAlwaysResetRealPositionVR = false;\r\n            params.myAlwaysResetRealRotationVR = false;\r\n            params.myAlwaysResetRealHeightVR = false;\r\n\r\n            params.myNeverResetRealPositionNonVR = false;\r\n            params.myNeverResetRealRotationNonVR = true;\r\n            params.myNeverResetRealHeightNonVR = false;\r\n\r\n            params.myNeverResetRealPositionVR = false;\r\n            params.myNeverResetRealRotationVR = false;\r\n            params.myNeverResetRealHeightVR = true;\r\n\r\n            params.myResetRealOnMove = false;\r\n\r\n            params.myDebugActive = false;\r\n\r\n            this._myPlayerTransformManager = new CleanedPlayerTransformManager(params);\r\n\r\n            transformManager = this._myPlayerTransformManager;\r\n        }\r\n\r\n        {\r\n            let params = new PlayerObscureManagerParams();\r\n\r\n            params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n            params.myObscureObject = null;\r\n            params.myObscureMaterial = null;\r\n            params.myObscureRadius = 0.1;\r\n\r\n            params.myObscureFadeOutSeconds = 0.15;\r\n            params.myObscureFadeInSeconds = 0.15;\r\n\r\n            params.myObscureFadeEasingFunction = PP.EasingFunction.linear;\r\n            params.myObscureLevelRelativeDistanceEasingFunction = PP.EasingFunction.linear;\r\n\r\n            params.myDistanceToStartObscureWhenBodyColliding = 0.5;\r\n            params.myDistanceToStartObscureWhenHeadColliding = 0;\r\n            params.myDistanceToStartObscureWhenFloating = 2220.35;\r\n            params.myDistanceToStartObscureWhenFar = 0.5;\r\n\r\n            params.myRelativeDistanceToMaxObscureWhenBodyColliding = 0.5;\r\n            params.myRelativeDistanceToMaxObscureWhenHeadColliding = 0;\r\n            params.myRelativeDistanceToMaxObscureWhenFloating = 0.5;\r\n            params.myRelativeDistanceToMaxObscureWhenFar = 0.5;\r\n\r\n            this._myPlayerObscureManager = new PlayerObscureManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PlayerLocomotionRotateParams();\r\n\r\n            params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n            params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n            params.myMaxRotationSpeed = this._myParams.myMaxRotationSpeed;\r\n            params.myIsSnapTurn = this._myParams.myIsSnapTurn;\r\n            params.mySnapTurnOnlyVR = this._myParams.mySnapTurnOnlyVR;\r\n            params.mySnapTurnAngle = this._myParams.mySnapTurnAngle;\r\n\r\n            if (this._myParams.mySnapTurnSpeedDegrees > LocomotionUtils.EPSILON_NUMBER) {\r\n                params.mySmoothSnapActive = true;\r\n                params.mySmoothSnapSpeedDegrees = this._myParams.mySnapTurnSpeedDegrees;\r\n            } else {\r\n                params.mySmoothSnapActive = false;\r\n            }\r\n\r\n            params.myRotationMinStickIntensityThreshold = 0.1;\r\n            params.mySnapTurnActivateThreshold = 0.5;\r\n            params.mySnapTurnResetThreshold = 0.4;\r\n\r\n            params.myClampVerticalAngle = true;\r\n            params.myMaxVerticalAngle = 90;\r\n\r\n            this._myPlayerLocomotionRotate = new PlayerLocomotionRotate(params);\r\n\r\n            params.myHandedness = PP.InputUtils.getOppositeHandedness(this._myParams.myMainHand);\r\n        }\r\n\r\n        {\r\n            {\r\n                let params = new PlayerLocomotionSmoothParams();\r\n\r\n                params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n                params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n                params.myCollisionCheckParams = this._myCollisionCheckParamsMovement;\r\n\r\n                params.myHandedness = this._myParams.myMainHand;\r\n\r\n                params.myMaxSpeed = this._myParams.myMaxSpeed;\r\n\r\n                params.myMovementMinStickIntensityThreshold = 0.1;\r\n\r\n                params.myFlyEnabled = this._myParams.myFlyEnabled;\r\n                params.myMinAngleToFlyUpNonVR = this._myParams.myMinAngleToFlyUpNonVR;\r\n                params.myMinAngleToFlyDownNonVR = this._myParams.myMinAngleToFlyDownNonVR;\r\n                params.myMinAngleToFlyUpVR = this._myParams.myMinAngleToFlyUpVR;\r\n                params.myMinAngleToFlyDownVR = this._myParams.myMinAngleToFlyDownVR;\r\n                params.myMinAngleToFlyRight = this._myParams.myMinAngleToFlyRight;\r\n\r\n                params.myGravityAcceleration = -20;\r\n\r\n                params.myVRDirectionReferenceType = this._myParams.myVRDirectionReferenceType;\r\n                params.myVRDirectionReferenceObject = this._myParams.myVRDirectionReferenceObject;\r\n\r\n                this._myPlayerLocomotionSmooth = new CleanedPlayerLocomotionSmooth(params, this._myMovementRuntimeParams);\r\n            }\r\n\r\n            {\r\n                let params = new PlayerLocomotionTeleportParams();\r\n\r\n                params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n                params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n                params.myCollisionCheckParams = this._myCollisionCheckParamsTeleport;\r\n\r\n                params.myHandedness = this._myParams.myMainHand;\r\n\r\n                params.myDetectionParams.myMaxDistance = 3;\r\n                params.myDetectionParams.myMaxHeightDifference = 0.5;\r\n                params.myDetectionParams.myGroundAngleToIgnoreUpward = this._myCollisionCheckParamsMovement.myGroundAngleToIgnore;\r\n                params.myDetectionParams.myMustBeOnGround = true;\r\n\r\n                params.myDetectionParams.myTeleportBlockLayerFlags.setFlagActive(0, true);\r\n                params.myDetectionParams.myTeleportBlockLayerFlags.setFlagActive(4, true);\r\n                params.myDetectionParams.myTeleportBlockLayerFlags.setFlagActive(5, true);\r\n                params.myDetectionParams.myTeleportFloorLayerFlags.copy(params.myDetectionParams.myTeleportBlockLayerFlags);\r\n\r\n                params.myDetectionParams.myTeleportFeetPositionMustBeVisible = false;\r\n                params.myDetectionParams.myTeleportHeadPositionMustBeVisible = false;\r\n                params.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible = true;\r\n\r\n                params.myDetectionParams.myTeleportParableStartReferenceObject = this._myParams.myTeleportParableStartReferenceObject;\r\n\r\n                params.myDetectionParams.myVisibilityBlockLayerFlags.copy(params.myDetectionParams.myTeleportBlockLayerFlags);\r\n\r\n                params.myVisualizerParams.myTeleportPositionObject = this._myParams.myTeleportPositionObject;\r\n\r\n                params.myPerformTeleportAsMovement = false;\r\n                params.myTeleportAsMovementRemoveVerticalMovement = true;\r\n                params.myTeleportAsMovementExtraVerticalMovementPerMeter = -2;\r\n\r\n                params.myGravityAcceleration = 0;\r\n\r\n                params.myDebugActive = false;\r\n                params.myDebugDetectActive = true;\r\n                params.myDebugShowActive = true;\r\n                params.myDebugVisibilityActive = false;\r\n\r\n                this._myPlayerLocomotionTeleport = new PlayerLocomotionTeleport(params, this._myMovementRuntimeParams);\r\n            }\r\n        }\r\n\r\n        this._setupLocomotionMovementFSM();\r\n\r\n        this._myIdle = false;\r\n    }\r\n\r\n    start() {\r\n        this._fixAlmostUp();\r\n\r\n        this._myPlayerHeadManager.start();\r\n        this._myPlayerTransformManager.start();\r\n\r\n        this._myPlayerObscureManager.start();\r\n\r\n        this._myPlayerLocomotionRotate.start();\r\n\r\n        this._myLocomotionMovementFSM.perform(\"start\");\r\n    }\r\n\r\n    canStop() {\r\n        let canStop = false;\r\n\r\n        if (this._myLocomotionMovementFSM.isInState(\"smooth\") && this._myPlayerLocomotionSmooth.canStop()) {\r\n            canStop = true;\r\n        } else if (this._myLocomotionMovementFSM.isInState(\"teleport\") && this._myPlayerLocomotionTeleport.canStop()) {\r\n            canStop = true;\r\n        }\r\n\r\n        return canStop;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerHeadManager.update(dt);\r\n        this._myPlayerTransformManager.update(dt);\r\n\r\n        if (PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressEnd(2)) {\r\n            if (this._myLocomotionMovementFSM.isInState(\"smooth\") && this._myPlayerLocomotionSmooth.canStop()) {\r\n\r\n                if (Global.myGoogleAnalytics) {\r\n                    gtag(\"event\", \"switch_teleport\", {\r\n                        \"value\": 1\r\n                    });\r\n                }\r\n                this._myLocomotionMovementFSM.perform(\"next\");\r\n            } else if (this._myLocomotionMovementFSM.isInState(\"teleport\") && this._myPlayerLocomotionTeleport.canStop()) {\r\n                this._myLocomotionMovementFSM.perform(\"next\");\r\n\r\n                if (Global.myGoogleAnalytics) {\r\n                    gtag(\"event\", \"switch_smooth\", {\r\n                        \"value\": 1\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myPlayerHeadManager.isSynced()) {\r\n\r\n            this._updateCollisionHeight();\r\n\r\n            if (!this._myIdle) {\r\n                this._myPlayerLocomotionRotate.update(dt);\r\n                this._myLocomotionMovementFSM.update(dt);\r\n            }\r\n        }\r\n\r\n        this._myPlayerObscureManager.update(dt);\r\n\r\n        if (!this._myParams.myFlyEnabled) {\r\n            let maxHeight = 0;\r\n            let position = Global.myPlayer.getPosition();\r\n            if (position[1] > maxHeight) {\r\n                let fixedPosition = position.vec3_clone();\r\n                fixedPosition[1] = maxHeight;\r\n                Global.myPlayer.teleportPosition(fixedPosition, null, true);\r\n            }\r\n        }\r\n\r\n        this._myCollisionCheckParamsTeleport.myHorizontalObjectsToIgnore.pp_copy(this._myPlayerTransformManager._myParams.myMovementCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n        this._myCollisionCheckParamsTeleport.myVerticalObjectsToIgnore.pp_copy(this._myPlayerTransformManager._myParams.myMovementCollisionCheckParams.myVerticalObjectsToIgnore);\r\n    }\r\n\r\n    setIdle(idle) {\r\n        this._myIdle = idle;\r\n\r\n        if (idle) {\r\n            this._myLocomotionMovementFSM.perform(\"idle\");\r\n        } else {\r\n            this._myLocomotionMovementFSM.perform(\"start\");\r\n        }\r\n    }\r\n\r\n    _updateCollisionHeight() {\r\n        this._myCollisionCheckParamsMovement.myHeight = this._myPlayerHeadManager.getHeightHead();\r\n        if (this._myCollisionCheckParamsMovement.myHeight <= 0.000001) {\r\n            this._myCollisionCheckParamsMovement.myHeight = 0;\r\n        }\r\n        this._myCollisionCheckParamsTeleport.myHeight = this._myCollisionCheckParamsMovement.myHeight;\r\n    }\r\n\r\n    _setupCollisionCheckParamsMovement() {\r\n        let simplifiedParams = new PP.CharacterColliderSetupSimplifiedCreationParams();\r\n\r\n        simplifiedParams.myHeight = 1.75;\r\n        simplifiedParams.myRadius = this._myParams.myCharacterRadius;\r\n\r\n        simplifiedParams.myAccuracyLevel = PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel.MEDIUM;\r\n\r\n        simplifiedParams.myIsPlayer = true;\r\n\r\n        simplifiedParams.myCheckOnlyFeet = true;\r\n\r\n        simplifiedParams.myAverageSpeed = this._myParams.myMaxSpeed;\r\n\r\n        simplifiedParams.myCanFly = false;\r\n\r\n        simplifiedParams.myShouldSlideAgainstWall = true;\r\n\r\n        simplifiedParams.myCollectGroundInfo = true;\r\n        simplifiedParams.myShouldSnapOnGround = true;\r\n        simplifiedParams.myMaxDistanceToSnapOnGround = 0.3;\r\n        simplifiedParams.myMaxWalkableGroundAngle = 70;\r\n        simplifiedParams.myMaxWalkableGroundStepHeight = 0.3;\r\n        simplifiedParams.myShouldNotFallFromEdges = false;\r\n\r\n        simplifiedParams.myHorizontalCheckBlockLayerFlags.setFlagActive(0, true);\r\n        simplifiedParams.myHorizontalCheckBlockLayerFlags.setFlagActive(4, true);\r\n        simplifiedParams.myHorizontalCheckBlockLayerFlags.setFlagActive(5, true);\r\n        let physXComponents = PP.myPlayerObjects.myPlayer.pp_getComponentsHierarchy(\"physx\");\r\n        for (let physXComponent of physXComponents) {\r\n            simplifiedParams.myHorizontalCheckObjectsToIgnore.pp_pushUnique(physXComponent.object, (first, second) => first.pp_equals(second));\r\n        }\r\n        simplifiedParams.myVerticalCheckBlockLayerFlags.copy(simplifiedParams.myHorizontalCheckBlockLayerFlags);\r\n        simplifiedParams.myVerticalCheckObjectsToIgnore.pp_copy(simplifiedParams.myHorizontalCheckObjectsToIgnore);\r\n\r\n        simplifiedParams.myHorizontalCheckDebugActive = false;\r\n        simplifiedParams.myVerticalCheckDebugActive = false;\r\n\r\n        let colliderSetup = PP.CharacterColliderUtils.createCharacterColliderSetupSimplified(simplifiedParams);\r\n\r\n        colliderSetup.myVerticalCheckSetup.myVerticalPositionCheckEnabled = false;\r\n        colliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices = 3;\r\n\r\n        this._myCollisionCheckParamsMovement = PP.CollisionCheckBridge.convertCharacterColliderSetupToCollisionCheckParams(colliderSetup, this._myCollisionCheckParamsMovement);\r\n    }\r\n\r\n    _setupCollisionCheckParamsTeleport() {\r\n        this._myCollisionCheckParamsTeleport = CollisionCheckUtils.generate360TeleportParamsFromMovementParams(this._myCollisionCheckParamsMovement);\r\n\r\n        // increased so to let teleport on steep slopes from above (from below is fixed through detection myGroundAngleToIgnoreUpward)\r\n        this._myCollisionCheckParamsTeleport.myGroundAngleToIgnore = 61;\r\n        this._myCollisionCheckParamsTeleport.myTeleportMustBeOnIgnorableGroundAngle = true;\r\n        this._myCollisionCheckParamsTeleport.myTeleportMustBeOnGround = true;\r\n\r\n        /*\r\n        this._myCollisionCheckParamsTeleport.myExtraTeleportCheckCallback = function (\r\n            offsetTeleportPosition, endPosition, feetPosition, transformUp, transformForward, height,\r\n            collisionCheckParams, prevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition\r\n\r\n        ) {\r\n            let isTeleportingUpward = endPosition.vec3_isFartherAlongAxis(feetPosition, transformUp);\r\n            if (isTeleportingUpward) {\r\n                collisionRuntimeParams.myTeleportCanceled = collisionRuntimeParams.myGroundAngle > 30 + 0.0001;\r\n                console.error(collisionRuntimeParams.myTeleportCanceled);\r\n            }\r\n\r\n            return newFeetPosition;\r\n        }*/\r\n\r\n        // this is needed for when u want to perform the teleport as a movement\r\n        // maybe this should be another set of collsion check params copied from the smooth ones?\r\n        // when you teleport as move, u check with the teleport for the position, and this other params for the move, so that u can use a smaller\r\n        // cone, and sliding if desired\r\n        // if nothing is specified it's copied from the teleport and if greater than 90 cone is tuned down, and also the below settings are applied\r\n\r\n        // you could also do this if u want to perform the teleport as movement, instead of using the smooth\r\n        // but this will make even the final teleport check be halved\r\n        //this._myCollisionCheckParamsTeleport.myHalfConeAngle = 90;\r\n        //this._myCollisionCheckParamsTeleport.myHalfConeSliceAmount = 3;\r\n        //this._myCollisionCheckParamsTeleport.myCheckHorizontalFixedForwardEnabled = false;\r\n        //this._myCollisionCheckParamsTeleport.mySplitMovementEnabled = true;\r\n        //this._myCollisionCheckParamsTeleport.mySplitMovementMaxLength = 0.2;\r\n\r\n        //this._myCollisionCheckParamsTeleport.myDebugActive = true;\r\n    }\r\n\r\n    _fixAlmostUp() {\r\n        // get rotation on y and adjust if it's slightly tilted when it's almsot 0,1,0\r\n\r\n        let defaultUp = PP.vec3_create(0, 1, 0);\r\n        let angleWithDefaultUp = PP.myPlayerObjects.myPlayer.pp_getUp().vec3_angle(defaultUp);\r\n        if (angleWithDefaultUp < 1) {\r\n            let forward = PP.myPlayerObjects.myPlayer.pp_getForward();\r\n            let flatForward = forward.vec3_clone();\r\n            flatForward[1] = 0;\r\n\r\n            let defaultForward = PP.vec3_create(0, 0, 1);\r\n            let angleWithDefaultForward = defaultForward.vec3_angleSigned(flatForward, defaultUp);\r\n\r\n            PP.myPlayerObjects.myPlayer.pp_resetRotation();\r\n            PP.myPlayerObjects.myPlayer.pp_rotateAxis(angleWithDefaultForward, defaultUp);\r\n        }\r\n    }\r\n\r\n    _setupLocomotionMovementFSM() {\r\n        this._myLocomotionMovementFSM = new PP.FSM();\r\n        this._myLocomotionMovementFSM.setDebugLogActive(true, \"Locomotion Movement\");\r\n\r\n        this._myLocomotionMovementFSM.addState(\"init\");\r\n        this._myLocomotionMovementFSM.addState(\"smooth\", (dt) => this._myPlayerLocomotionSmooth.update(dt));\r\n        this._myLocomotionMovementFSM.addState(\"teleport\", (dt) => this._myPlayerLocomotionTeleport.update(dt));\r\n        this._myLocomotionMovementFSM.addState(\"idleSmooth\");\r\n        this._myLocomotionMovementFSM.addState(\"idleTeleport\");\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"init\", \"smooth\", \"start\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"smooth\", \"teleport\", \"next\", function () {\r\n            this._myPlayerLocomotionSmooth.stop();\r\n            this._myPlayerLocomotionTeleport.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"teleport\", \"smooth\", \"next\", function () {\r\n            this._myPlayerLocomotionTeleport.stop();\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"smooth\", \"idleSmooth\", \"idle\", function () {\r\n            this._myPlayerLocomotionSmooth.stop();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"teleport\", \"idleTeleport\", \"idle\", function () {\r\n            this._myPlayerLocomotionTeleport.stop();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"idleSmooth\", \"smooth\", \"start\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"idleTeleport\", \"teleport\", \"start\", function () {\r\n            this._myPlayerLocomotionTeleport.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.init(\"init\");\r\n    }\r\n};", "CleanedPlayerLocomotionSmooth = class CleanedPlayerLocomotionSmooth extends PlayerLocomotionMovement {\r\n    constructor(params, locomotionRuntimeParams) {\r\n        super(locomotionRuntimeParams);\r\n\r\n        this._myParams = params;\r\n\r\n        this._myDirectionReference = PP.myPlayerObjects.myHead;\r\n\r\n        this._myStickIdleTimer = new PP.Timer(0.25, false);\r\n\r\n        let directionConverterNonVRParams = new PP.Direction2DTo3DConverterParams();\r\n        directionConverterNonVRParams.myAutoUpdateFlyForward = this._myParams.myFlyEnabled;\r\n        directionConverterNonVRParams.myAutoUpdateFlyRight = this._myParams.myFlyEnabled;\r\n        directionConverterNonVRParams.myMinAngleToFlyForwardUp = this._myParams.myMinAngleToFlyUpNonVR;\r\n        directionConverterNonVRParams.myMinAngleToFlyForwardDown = this._myParams.myMinAngleToFlyDownNonVR;\r\n        directionConverterNonVRParams.myMinAngleToFlyRightUp = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterNonVRParams.myMinAngleToFlyRightDown = this._myParams.myMinAngleToFlyRight;\r\n\r\n        let directionConverterVRParams = new PP.Direction2DTo3DConverterParams();\r\n        directionConverterVRParams.myAutoUpdateFlyForward = this._myParams.myFlyEnabled;\r\n        directionConverterVRParams.myAutoUpdateFlyRight = this._myParams.myFlyEnabled;\r\n        directionConverterVRParams.myMinAngleToFlyForwardUp = this._myParams.myMinAngleToFlyUpVR;\r\n        directionConverterVRParams.myMinAngleToFlyForwardDown = this._myParams.myMinAngleToFlyDownVR;\r\n        directionConverterVRParams.myMinAngleToFlyRightUp = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterVRParams.myMinAngleToFlyRightDown = this._myParams.myMinAngleToFlyRight;\r\n\r\n        this._myDirectionConverterNonVR = new PP.Direction2DTo3DConverter(directionConverterNonVRParams);\r\n        this._myDirectionConverterVR = new PP.Direction2DTo3DConverter(directionConverterVRParams);\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterNonVR;\r\n\r\n        if (Global.myFromAbove) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = true;\r\n        }\r\n\r\n        this._myGravitySpeed = 0;\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n\r\n        this._myStepDelay = 0.8;\r\n        this._myStepTimer = new PP.Timer(this._myStepDelay);\r\n        let delay = this._myStepDelay / 5;\r\n        this._myStepTimer.start(Math.max(0, Math.pp_random(delay - 0.1, delay + 0.05)));\r\n        this._StepRemove = false;\r\n\r\n        this._mySteps = [];\r\n        this.stepCounter = 0;\r\n        //this._mySteps[1] = PP.myAudioManager.createAudioPlayer(AudioID.PASSO_3);        \r\n\r\n        this._myNonVRPlayingTimer = new PP.Timer(30);\r\n        this._myTimeMoving = 0;\r\n        this._myTimeMovingStep = [1, 2, 3, 5, 10, 20, 30, 60];\r\n        this._myTimeMovingStepIndex = 0;\r\n    }\r\n\r\n    update(dt) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nCleanedPlayerLocomotionSmooth.prototype.update = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let headMovement = PP.vec3_create();\r\n    let direction = PP.vec3_create();\r\n    let directionOnUp = PP.vec3_create();\r\n    let verticalMovement = PP.vec3_create();\r\n    let feetTransformQuat = PP.quat2_create();\r\n\r\n    let directionReferenceTransformQuat = PP.quat2_create();\r\n    return function update(dt) {\r\n        this._myParams.myMaxSpeed = Global.mySetup.myLocomotionSetup.mySpeed;\r\n\r\n        playerUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        headMovement.vec3_zero();\r\n\r\n        let axes = PP.myGamepads[this._myParams.myHandedness].getAxesInfo().getAxes();\r\n        axes[0] = Math.abs(axes[0]) > this._myParams.myMovementMinStickIntensityThreshold ? axes[0] : 0;\r\n        axes[1] = Math.abs(axes[1]) > this._myParams.myMovementMinStickIntensityThreshold ? axes[1] : 0;\r\n\r\n        let horizontalMovement = false;\r\n        let speedUsed = 0;\r\n        if (!axes.vec2_isZero()) {\r\n            this._myStickIdleTimer.start();\r\n\r\n            direction = this._myCurrentDirectionConverter.convertTransformQuat(axes, this._myDirectionReference.pp_getTransformQuat(directionReferenceTransformQuat), playerUp, direction);\r\n\r\n            if (!direction.vec3_isZero()) {\r\n                this._myLocomotionRuntimeParams.myIsFlying = this._myLocomotionRuntimeParams.myIsFlying || direction.vec3_componentAlongAxis(playerUp, directionOnUp).vec3_length() > 0.000001;\r\n                if (!this._myLocomotionRuntimeParams.myIsFlying) {\r\n                    direction = direction.vec3_removeComponentAlongAxis(playerUp, direction);\r\n                }\r\n\r\n                let movementIntensity = axes.vec2_length();\r\n                let speed = Math.pp_lerp(0, this._myParams.myMaxSpeed, movementIntensity);\r\n                if (this._myParams.myFlyEnabled && PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.SQUEEZE).isPressed()) {\r\n                    speed = 20;\r\n                }\r\n\r\n                headMovement = direction.vec3_scale(speed * dt, headMovement);\r\n\r\n                horizontalMovement = true;\r\n                speedUsed = speed;\r\n            }\r\n        } else {\r\n            if (this._myStickIdleTimer.isRunning()) {\r\n                this._myStickIdleTimer.update(dt);\r\n                if (this._myStickIdleTimer.isDone()) {\r\n                    this._myCurrentDirectionConverter.resetFly();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myParams.myFlyEnabled) {\r\n            if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).isPressed()) {\r\n                let speed = Math.pp_lerp(0, this._myParams.myMaxSpeed, 1);\r\n                if (this._myParams.myFlyEnabled && PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.SQUEEZE).isPressed()) {\r\n                    speed = 20;\r\n                }\r\n                verticalMovement = playerUp.vec3_scale(speed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                this._myLocomotionRuntimeParams.myIsFlying = true;\r\n            } else if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n                let speed = Math.pp_lerp(0, this._myParams.myMaxSpeed, 1);\r\n                if (this._myParams.myFlyEnabled && PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.SQUEEZE).isPressed()) {\r\n                    speed = 20;\r\n                }\r\n                verticalMovement = playerUp.vec3_scale(-speed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                this._myLocomotionRuntimeParams.myIsFlying = true;\r\n            }\r\n\r\n            if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressEnd(2)) {\r\n                this._myLocomotionRuntimeParams.myIsFlying = false;\r\n            }\r\n        }\r\n\r\n        if (true || !PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressed()) {\r\n            if (!this._myLocomotionRuntimeParams.myIsFlying) {\r\n                this._myGravitySpeed += this._myParams.myGravityAcceleration * dt;\r\n                verticalMovement = playerUp.vec3_scale(this._myGravitySpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n            }\r\n\r\n            feetTransformQuat = this._myParams.myPlayerTransformManager.getTransformQuat(feetTransformQuat);\r\n\r\n            globalDT = dt;\r\n            this._myParams.myPlayerTransformManager.move(headMovement, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n            if (horizontalMovement) {\r\n                this._myParams.myPlayerTransformManager.resetReal(true, false, false);\r\n                Global.myPlayer.resetHeadToReal();\r\n            }\r\n\r\n            if (horizontalMovement && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myFixedMovement.vec3_length() > 0.00001) {\r\n\r\n                this._myTimeMoving += dt;\r\n                if (this._myTimeMovingStepIndex < this._myTimeMovingStep.length && this._myTimeMoving > this._myTimeMovingStep[this._myTimeMovingStepIndex] * 60) {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"moving_for_\" + this._myTimeMovingStep[this._myTimeMovingStepIndex] + \"_minutes_\" + (Global.mySessionStarted ? \"vr\" : \"non_vr\"), {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                    this._myTimeMovingStepIndex++;\r\n                }\r\n\r\n                if (this._myNonVRPlayingTimer.isRunning()) {\r\n                    this._myNonVRPlayingTimer.update(dt);\r\n                    if (this._myNonVRPlayingTimer.isDone()) {\r\n                        if (Global.myGoogleAnalytics) {\r\n                            if (!Global.mySessionStarted) {\r\n                                gtag(\"event\", \"moving_non_vr\", {\r\n                                    \"value\": 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this._myStepTimer.update(dt);\r\n\r\n                if (this._myStepTimer.isDone()) {\r\n                    this._StepRemove = true;\r\n                    let delay = Math.pp_lerp(this._myStepDelay * 2, this._myStepDelay, speedUsed / this._myParams.myMaxSpeed);\r\n                    this._myStepTimer.start(Math.pp_random(delay - 0.1, delay + 0.05));\r\n\r\n                    if (this._mySteps.length == 0) {\r\n                        this._mySteps[0] = PP.myAudioManager.createAudioPlayer(AudioID.PASSO_1);\r\n                    }\r\n\r\n                    this.stepCounter = this.stepCounter + 1;\r\n                    this.stepCounter = this.stepCounter % this._mySteps.length;\r\n                    let player = this._mySteps[this.stepCounter];\r\n                    player = Math.pp_randomPick(this._mySteps);\r\n                    let horizontalDirection = this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myFixedMovement.vec3_removeComponentAlongAxis([0, 1, 0]).vec3_normalize();\r\n                    player.setPosition(this._myParams.myPlayerTransformManager.getPosition().vec3_add(horizontalDirection.vec3_scale(0.2)));\r\n                    player.setPitch(Math.pp_random(1 - 0.35, 1 + 0.15));\r\n                    player.play();\r\n                }\r\n\r\n                if (Global.myUnmute) {\r\n                    Global.myUnmute = false;\r\n                    Howler.mute(false);\r\n                }\r\n            } else {\r\n                if (this._StepRemove) {\r\n                    this._myStepTimer.update(dt);\r\n                    if (this._myStepTimer.isDone()) {\r\n                        this._StepRemove = false;\r\n                        let delay = this._myStepDelay / 5;\r\n                        this._myStepTimer.start(Math.max(0, Math.pp_random(delay - 0.1, delay + 0.05)));\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._myGravitySpeed > 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnCeiling ||\r\n                this._myGravitySpeed < 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n                this._myGravitySpeed = 0;\r\n            }\r\n        }\r\n\r\n        if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = false;\r\n            this._myCurrentDirectionConverter.resetFly();\r\n        }\r\n    };\r\n}();\r\n\r\nglobalDT = 0;\r\n\r\nCleanedPlayerLocomotionSmooth.prototype._onXRSessionStart = function () {\r\n    return function _onXRSessionStart(session) {\r\n        switch (this._myParams.myVRDirectionReferenceType) {\r\n            case 0:\r\n                this._myDirectionReference = PP.myPlayerObjects.myHead;\r\n                break;\r\n            case 1:\r\n                this._myDirectionReference = PP.myPlayerObjects.myHands[this._myParams.myHandedness];\r\n                break;\r\n            case 2:\r\n                this._myDirectionReference = this._myParams.myVRDirectionReferenceObject;\r\n                break;\r\n        }\r\n\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterVR;\r\n        this._myCurrentDirectionConverter.resetFly();\r\n    };\r\n}();\r\n\r\nCleanedPlayerLocomotionSmooth.prototype._onXRSessionEnd = function () {\r\n    let playerUp = PP.vec3_create();\r\n    return function _onXRSessionEnd(session) {\r\n        this._myDirectionReference = PP.myPlayerObjects.myHead;\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterNonVR;\r\n\r\n        this._myCurrentDirectionConverter.resetFly();\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CleanedPlayerLocomotionSmooth.prototype, \"update\", { enumerable: false });\r\nObject.defineProperty(CleanedPlayerLocomotionSmooth.prototype, \"_onXRSessionStart\", { enumerable: false });\r\nObject.defineProperty(CleanedPlayerLocomotionSmooth.prototype, \"_onXRSessionEnd\", { enumerable: false });", "CleanedPlayerTransformManager = class CleanedPlayerTransformManager {\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myRealMovementCollisionCheckParams = null;\r\n        this._generateRealMovementParamsFromMovementParams();\r\n\r\n        this._myCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myRealCollisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n        if (this._myParams.myTeleportCollisionCheckParamsCopyFromMovement) {\r\n            this._generateTeleportParamsFromMovementParams();\r\n        }\r\n\r\n        this._myHeadCollisionCheckParams = null;\r\n        this._setupHeadCollisionCheckParams();\r\n\r\n        this._myValidPosition = PP.vec3_create();\r\n        this._myValidRotationQuat = new PP.quat_create();\r\n        this._myValidHeight = 0;\r\n        this._myValidPositionHead = PP.vec3_create();\r\n\r\n        this._myIsBodyColliding = false;\r\n        this._myIsHeadColliding = false;\r\n        this._myIsLeaning = false;\r\n        this._myIsHopping = false;\r\n        this._myIsFar = false;\r\n\r\n        this._myLastValidMovementDirection = PP.vec3_create();\r\n        this._myIsRealPositionValid = false;\r\n        this._myIsPositionValid = false;\r\n\r\n        this._myResetRealOnSynced = false;\r\n    }\r\n\r\n    start() {\r\n        this.resetToReal(true);\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(true, WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this, false));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    // update should be before to check the new valid transform and if the head new transform is fine\r\n    // then update movements, so that they will use the proper transform\r\n    // pre/post update?\r\n    // for sliding if previous frame no horizontal movement then reset sliding on pre update\r\n    // in generale capire come fare per risolvere i problemi quando c'\u00E8 un move solo verticale che sputtana i dati dello sliding precedente\r\n    // che servono per far slidare bene anche dopo, magari un flag per dire non aggiornare le cose relative al movimento orizzontale\r\n    // o un move check solo verticale\r\n    update(dt) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    move(movement, outCollisionRuntimeParams = null, forceMove = false) {\r\n        // collision runtime will copy the result, so that u can use that for later reference like if it was sliding\r\n        // maybe there should be a way to sum all the things happened for proper movement in a summary runtime\r\n        // or maybe the move should be done once per frame, or at least in theory\r\n\r\n        // collision check and move\r\n\r\n        // move should move the valid transform, but also move the player object so that they head, even is colliding is dragged with it\r\n        // also teleport, should get the difference from previous and move the player object, this will keep the relative position head-to-valid\r\n\r\n        // implemented outside class definition\r\n    }\r\n\r\n    teleportPosition(position, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        // collision check and teleport, if force teleport teleport in any case\r\n        // use current valid rotation\r\n\r\n        // implemented outside class definition\r\n    }\r\n\r\n    teleportTransformQuat(transformQuat, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        // collision check and teleport, if force teleport teleport in any case\r\n\r\n        // implemented outside class definition\r\n    }\r\n\r\n    rotateQuat(rotationQuat) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    setRotationQuat(rotationQuat) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    setHeight(height, forceSet = false) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getPlayer() {\r\n        return this._myParams.myPlayerHeadManager.getPlayer();\r\n    }\r\n\r\n    getHead() {\r\n        return this._myParams.myPlayerHeadManager.getHead();\r\n    }\r\n\r\n    getTransformQuat(outTransformQuat = PP.quat2_create()) {\r\n        return outTransformQuat.quat2_setPositionRotationQuat(this.getPosition(), this.getRotationQuat());\r\n    }\r\n\r\n    getPosition(outPosition = PP.vec3_create()) {\r\n        return outPosition.vec3_copy(this._myValidPosition);\r\n    }\r\n\r\n    getRotationQuat(outRotation = PP.quat_create()) {\r\n        return outRotation.quat_copy(this._myValidRotationQuat);\r\n    }\r\n\r\n    getPositionHead(outPosition = PP.vec3_create()) {\r\n        return outPosition.vec3_copy(this._myValidPositionHead);\r\n    }\r\n\r\n    getTransformHeadQuat(outTransformQuat = PP.quat2_create()) {\r\n        return outTransformQuat.quat2_setPositionRotationQuat(this.getPositionHead(), this.getRotationQuat());\r\n    }\r\n\r\n    getHeight() {\r\n        return this._myValidHeight;\r\n    }\r\n\r\n    getTransformRealQuat(outTransformQuat = PP.quat2_create()) {\r\n        return this.getPlayerHeadManager().getTransformFeetQuat(outTransformQuat);\r\n    }\r\n\r\n    getTransformHeadRealQuat(outTransformQuat = PP.quat2_create()) {\r\n        return this.getPlayerHeadManager().getTransformHeadQuat(outTransformQuat);\r\n    }\r\n\r\n    getPositionReal(outPosition = PP.vec3_create()) {\r\n        return this.getPlayerHeadManager().getPositionFeet(outPosition);\r\n    }\r\n\r\n    getPositionHeadReal(outPosition = PP.vec3_create()) {\r\n        return this.getPlayerHeadManager().getPositionHead(outPosition);\r\n    }\r\n\r\n    getRotationRealQuat(outRotation = PP.quat_create()) {\r\n        return this.getPlayerHeadManager().getRotationFeetQuat(outRotation);\r\n    }\r\n\r\n    getHeightReal() {\r\n        return this._myParams.myPlayerHeadManager.getHeightHead();\r\n    }\r\n\r\n    isSynced(syncFlagMap = null) {\r\n        let isBodyColliding = this.isBodyColliding() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.BODY_COLLIDING));\r\n        let isHeadColliding = this.isHeadColliding() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.HEAD_COLLIDING));\r\n        let isFar = this.isFar() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.FAR));\r\n        let isFloating = this.isFloating() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.FLOATING));\r\n        return !isBodyColliding && !isHeadColliding && !isFar && !isFloating;\r\n    }\r\n\r\n    resetReal(resetPosition = true, resetRotation = true, resetHeight = true, updateRealFlags = false) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    updateReal() {\r\n        this._updateReal(0, false);\r\n    }\r\n\r\n    resetToReal(updateRealFlags = false) {\r\n        this._myValidPosition = this.getPositionReal(this._myValidPosition);\r\n        this._myValidPositionHead = this.getPositionHeadReal(this._myValidPositionHead);\r\n        this._myValidRotationQuat = this.getRotationRealQuat(this._myValidRotationQuat);\r\n        this._myValidHeight = Math.pp_clamp(this.getHeightReal(), this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n\r\n        if (updateRealFlags) {\r\n            this._updateReal(0, false);\r\n        }\r\n    }\r\n\r\n    resetHeadToReal() {\r\n        this._myValidPositionHead = this.getPositionHeadReal(this._myValidPositionHead);\r\n    }\r\n\r\n    isBodyColliding() {\r\n        return this._myIsBodyColliding;\r\n    }\r\n\r\n    isHeadColliding() {\r\n        return this._myIsHeadColliding;\r\n    }\r\n\r\n    isFloating() {\r\n        return this.isLeaning() || this.isHopping();\r\n    }\r\n\r\n    isHopping() {\r\n        return this._myIsHopping;\r\n    }\r\n\r\n    isLeaning() {\r\n        return this._myIsLeaning;\r\n    }\r\n\r\n    isHopping() {\r\n        return this._myIsHopping;\r\n    }\r\n\r\n    isFar() {\r\n        return this._myIsFar;\r\n    }\r\n\r\n    getDistanceToReal() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getDistanceToRealHead() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getPlayerHeadManager() {\r\n        return this._myParams.myPlayerHeadManager;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    getMovementCollisionCheckParams() {\r\n        return this._myParams.myMovementCollisionCheckParams;\r\n    }\r\n\r\n    getTeleportCollisionCheckParams() {\r\n        return this._myParams.myTeleportCollisionCheckParams;\r\n    }\r\n\r\n    collisionCheckParamsUpdated() {\r\n        if (this._myParams.myTeleportCollisionCheckParamsCopyFromMovement) {\r\n            this._generateTeleportParamsFromMovementParams();\r\n        }\r\n\r\n        this._generateRealMovementParamsFromMovementParams();\r\n    }\r\n\r\n    isPositionValid() {\r\n        return this._myIsPositionValid;\r\n    }\r\n\r\n    isRealPositionValid() {\r\n        return this._myIsRealPositionValid;\r\n    }\r\n\r\n    getCollisionRuntimeParams() {\r\n        return this._myCollisionRuntimeParams;\r\n    }\r\n\r\n    getRealCollisionRuntimeParams() {\r\n        return this._myRealCollisionRuntimeParams;\r\n    }\r\n\r\n    _updateCollisionHeight() {\r\n        let validHeight = this.getHeight();\r\n        let realHeight = Math.pp_clamp(this.getHeightReal(), this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n\r\n        this._myParams.myMovementCollisionCheckParams.myHeight = validHeight;\r\n        this._myParams.myTeleportCollisionCheckParams.myHeight = validHeight;\r\n\r\n        this._myRealMovementCollisionCheckParams.myHeight = realHeight;\r\n    }\r\n\r\n    _setupHeadCollisionCheckParams() {\r\n        this._myHeadCollisionCheckParams = new CollisionCheckParams();\r\n        let params = this._myHeadCollisionCheckParams;\r\n\r\n        params.myRadius = this._myParams.myHeadRadius;\r\n        params.myDistanceFromFeetToIgnore = 0;\r\n        params.myDistanceFromHeadToIgnore = 0;\r\n\r\n        params.mySplitMovementEnabled = true;\r\n        params.mySplitMovementMaxLength = 0.5;\r\n        params.mySplitMovementMaxStepsEnabled = true;\r\n        params.mySplitMovementMaxSteps = 2;\r\n        params.mySplitMovementStopWhenHorizontalMovementCanceled = true;\r\n        params.mySplitMovementStopWhenVerticalMovementCanceled = true;\r\n\r\n        params.myHorizontalMovementCheckEnabled = true;\r\n        params.myHorizontalMovementRadialStepAmount = 1;\r\n        params.myHorizontalMovementCheckDiagonalOutward = true;\r\n        params.myHorizontalMovementCheckDiagonalInward = true;\r\n        params.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = true;\r\n        params.myHorizontalMovementCheckVerticalDiagonalUpwardInward = true;\r\n\r\n        params.myHorizontalPositionCheckEnabled = true;\r\n        params.myHalfConeAngle = 180;\r\n        params.myHalfConeSliceAmount = 3;\r\n        params.myCheckConeBorder = true;\r\n        params.myCheckConeRay = true;\r\n        params.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = false;\r\n        params.myHorizontalPositionCheckVerticalDirectionType = 0;\r\n\r\n        params.myHeight = params.myRadius; // on purpose the height \"radius\" is half, to avoid hitting before with head than body collision (through height)\r\n        params.myPositionOffsetLocal.vec3_set(0, 0.05, 0)\r\n\r\n        params.myCheckHeight = true;\r\n        params.myCheckHeightVerticalMovement = true;\r\n        params.myCheckHeightVerticalPosition = true;\r\n        params.myHeightCheckStepAmountMovement = 1;\r\n        params.myHeightCheckStepAmountPosition = 1;\r\n        params.myCheckHeightTopMovement = true;\r\n        params.myCheckHeightTopPosition = true;\r\n        params.myCheckVerticalStraight = true;\r\n\r\n        params.myCheckVerticalFixedForwardEnabled = true;\r\n        params.myCheckVerticalFixedForward = PP.vec3_create(0, 0, 1);\r\n\r\n        params.myCheckHorizontalFixedForwardEnabled = true;\r\n        params.myCheckHorizontalFixedForward = PP.vec3_create(0, 0, 1);\r\n\r\n        params.myVerticalMovementCheckEnabled = true;\r\n        params.myVerticalPositionCheckEnabled = true;\r\n\r\n        params.myGroundCircumferenceAddCenter = true;\r\n        params.myGroundCircumferenceSliceAmount = 6;\r\n        params.myGroundCircumferenceStepAmount = 2;\r\n        params.myGroundCircumferenceRotationPerStep = 30;\r\n        params.myFeetRadius = params.myRadius;\r\n\r\n        params.myHorizontalBlockLayerFlags.copy(this._myParams.myHeadCollisionBlockLayerFlags);\r\n        params.myHorizontalObjectsToIgnore.pp_copy(this._myParams.myHeadCollisionObjectsToIgnore);\r\n        params.myVerticalBlockLayerFlags.copy(this._myParams.myHeadCollisionBlockLayerFlags);\r\n        params.myVerticalObjectsToIgnore.pp_copy(this._myParams.myHeadCollisionObjectsToIgnore);\r\n\r\n        params.myDebugActive = false;\r\n\r\n        params.myDebugHorizontalMovementActive = true;\r\n        params.myDebugHorizontalPositionActive = false;\r\n        params.myDebugVerticalMovementActive = false;\r\n        params.myDebugVerticalPositionActive = false;\r\n        params.myDebugSlidingActive = false;\r\n        params.myDebugGroundInfoActive = false;\r\n        params.myDebugCeilingInfoActive = false;\r\n        params.myDebugRuntimeParamsActive = false;\r\n        params.myDebugMovementActive = false;\r\n    }\r\n\r\n    _generateTeleportParamsFromMovementParams() {\r\n        if (this._myParams.myTeleportCollisionCheckParams == null) {\r\n            this._myParams.myTeleportCollisionCheckParams = new CollisionCheckParams();\r\n        }\r\n\r\n        if (this._myParams.myTeleportCollisionCheckParamsCheck360) {\r\n            this._myParams.myTeleportCollisionCheckParams = CollisionCheckUtils.generate360TeleportParamsFromMovementParams(this._myParams.myMovementCollisionCheckParams, this._myParams.myTeleportCollisionCheckParams);\r\n        } else {\r\n            this._myParams.myTeleportCollisionCheckParams.copy(this._myParams.myMovementCollisionCheckParams);\r\n        }\r\n    }\r\n\r\n    _generateRealMovementParamsFromMovementParams() {\r\n        if (this._myRealMovementCollisionCheckParams == null) {\r\n            this._myRealMovementCollisionCheckParams = new CollisionCheckParams();\r\n        }\r\n\r\n        let params = this._myRealMovementCollisionCheckParams;\r\n        params.copy(this._myParams.myMovementCollisionCheckParams);\r\n\r\n        params.mySplitMovementEnabled = true;\r\n        params.mySplitMovementMaxLength = 0.5;\r\n        params.mySplitMovementMaxStepsEnabled = true;\r\n        params.mySplitMovementMaxSteps = 2;\r\n        params.mySplitMovementStopWhenHorizontalMovementCanceled = true;\r\n        params.mySplitMovementStopWhenVerticalMovementCanceled = true;\r\n\r\n        params.mySlidingEnabled = false;\r\n\r\n        if (!this._myParams.myRealMovementAllowVerticalAdjustments) {\r\n            params.mySnapOnGroundEnabled = false;\r\n            params.mySnapOnCeilingEnabled = false;\r\n            params.myGroundPopOutEnabled = false;\r\n            params.myCeilingPopOutEnabled = false;\r\n            params.myAdjustVerticalMovementWithGroundAngleDownhill = false;\r\n            params.myAdjustVerticalMovementWithGroundAngleUphill = false;\r\n            params.myAdjustVerticalMovementWithCeilingAngleDownhill = false;\r\n            params.myAdjustVerticalMovementWithCeilingAngleUphill = false;\r\n            params.myAdjustHorizontalMovementWithGroundAngleDownhill = false;\r\n            params.myAdjustHorizontalMovementWithCeilingAngleDownhill = false;\r\n            params.myVerticalMovementReduceEnabled = false;\r\n        }\r\n\r\n        //params.myHorizontalMovementGroundAngleIgnoreHeight = 0.1 * 3;\r\n        //params.myHorizontalMovementCeilingAngleIgnoreHeight = 0.1 * 3;\r\n\r\n        params.myIsOnGroundIfInsideHit = true;\r\n\r\n        params.myDebugActive = false;\r\n\r\n        params.myDebugHorizontalMovementActive = false;\r\n        params.myDebugHorizontalPositionActive = false;\r\n        params.myDebugVerticalMovementActive = false;\r\n        params.myDebugVerticalPositionActive = false;\r\n        params.myDebugSlidingActive = false;\r\n        params.myDebugGroundInfoActive = true;\r\n        params.myDebugCeilingInfoActive = true;\r\n        params.myDebugRuntimeParamsActive = false;\r\n        params.myDebugMovementActive = false;\r\n    }\r\n\r\n    _onXRSessionStart(manualStart, session) {\r\n        if (this._myParams.myResetToValidOnEnterSession) {\r\n            this._myResetRealOnSynced = true;\r\n        }\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        if (this._myParams.myResetToValidOnExitSession) {\r\n            this._myResetRealOnSynced = true;\r\n        }\r\n    }\r\n\r\n    _debugUpdate(dt) {\r\n        PP.myDebugVisualManager.drawPoint(0, this._myValidPosition, PP.vec4_create(1, 0, 0, 1), 0.05);\r\n        PP.myDebugVisualManager.drawLineEnd(0, this._myValidPosition, this.getPositionReal(), PP.vec4_create(1, 0, 0, 1), 0.05);\r\n        PP.myDebugVisualManager.drawLine(0, this._myValidPosition, this._myValidRotationQuat.quat_getForward(), 0.15, PP.vec4_create(0, 1, 0, 1), 0.025);\r\n\r\n        PP.myDebugVisualManager.drawPoint(0, this._myValidPositionHead, PP.vec4_create(1, 1, 0, 1), 0.05);\r\n    }\r\n};\r\n\r\nCleanedPlayerTransformManager.prototype.getDistanceToReal = function () {\r\n    let realPosition = PP.vec3_create();\r\n    return function getDistanceToReal() {\r\n        realPosition = this.getPositionReal(realPosition);\r\n        return realPosition.vec3_distance(this.getPosition());\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.getDistanceToRealHead = function () {\r\n    let realPosition = PP.vec3_create();\r\n    return function getDistanceToRealHead() {\r\n        realPosition = this.getPositionHeadReal(realPosition);\r\n        return realPosition.vec3_distance(this.getPositionHead());\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.resetReal = function () {\r\n    let realUp = PP.vec3_create();\r\n    let validUp = PP.vec3_create();\r\n    let position = PP.vec3_create();\r\n    let rotationQuat = PP.quat_create();\r\n    return function resetReal(resetPosition = true, resetRotation = true, resetHeight = true, updateRealFlags = false) {\r\n        let playerHeadManager = this.getPlayerHeadManager();\r\n\r\n        if (resetPosition) {\r\n            playerHeadManager.teleportPositionFeet(this.getPosition(position));\r\n        }\r\n\r\n        realUp = this.getPlayerHeadManager().getRotationFeetQuat(rotationQuat).quat_getUp(realUp);\r\n        validUp = this.getRotationQuat(rotationQuat).quat_getUp(validUp);\r\n\r\n        if (resetRotation || (realUp.vec3_angle(validUp) > Math.PP_EPSILON_DEGREES && this._myParams.myResetRealResetRotationIfUpChanged)) {\r\n            playerHeadManager.setRotationFeetQuat(this.getRotationQuat(rotationQuat), false);\r\n        }\r\n\r\n        if (resetHeight) {\r\n            playerHeadManager.setHeight(this.getHeight(), true);\r\n        }\r\n\r\n        if (updateRealFlags) {\r\n            this._updateReal(0, false);\r\n        }\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.update = function () {\r\n    let transformQuat = PP.quat2_create();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    let transformUp = PP.vec3_create();\r\n    let horizontalDirection = PP.vec3_create();\r\n    let rotationQuat = PP.quat_create();\r\n    return function update(dt) {\r\n        //#TODO this should update ground and ceiling info but not sliding info        \r\n\r\n        this._myHeadCollisionCheckParams.myHorizontalObjectsToIgnore.pp_copy(this._myParams.myMovementCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n        this._myHeadCollisionCheckParams.myVerticalObjectsToIgnore.pp_copy(this._myParams.myMovementCollisionCheckParams.myVerticalObjectsToIgnore);\r\n\r\n        this._myRealMovementCollisionCheckParams.myHorizontalObjectsToIgnore.pp_copy(this._myParams.myMovementCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n        this._myRealMovementCollisionCheckParams.myVerticalObjectsToIgnore.pp_copy(this._myParams.myMovementCollisionCheckParams.myVerticalObjectsToIgnore);\r\n\r\n        this._myParams.myTeleportCollisionCheckParams.myHorizontalObjectsToIgnore.pp_copy(this._myParams.myMovementCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n        this._myParams.myTeleportCollisionCheckParams.myVerticalObjectsToIgnore.pp_copy(this._myParams.myMovementCollisionCheckParams.myVerticalObjectsToIgnore);\r\n\r\n        if (this._myResetRealOnSynced) {\r\n            if (this.getPlayerHeadManager().isSynced()) {\r\n                this._myResetRealOnSynced = false;\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._updateReal(dt);\r\n\r\n        if (false && this._myParams.myUpdatePositionValid) {\r\n            transformQuat = this.getTransformQuat(transformQuat);\r\n            transformUp = transformQuat.quat2_getUp(transformUp);\r\n            rotationQuat = transformQuat.quat2_getRotationQuat(rotationQuat);\r\n            horizontalDirection = this._myLastValidMovementDirection.vec3_removeComponentAlongAxis(transformUp, horizontalDirection);\r\n            if (!horizontalDirection.vec3_isZero(0.00001)) {\r\n                horizontalDirection.vec3_normalize(horizontalDirection);\r\n                rotationQuat.quat_setForward(horizontalDirection);\r\n                transformQuat.quat2_setRotationQuat(rotationQuat);\r\n            }\r\n            let debugBackup = this._myParams.myMovementCollisionCheckParams.myDebugActive;\r\n            this._myParams.myMovementCollisionCheckParams.myDebugActive = false;\r\n            CollisionCheckGlobal.positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, collisionRuntimeParams);\r\n            this._myParams.myMovementCollisionCheckParams.myDebugActive = debugBackup;\r\n            this._myIsPositionValid = collisionRuntimeParams.myIsPositionOk;\r\n        }\r\n\r\n        if (this._myParams.myDebugActive) {\r\n            this._debugUpdate(dt);\r\n        }\r\n    }\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype._updateReal = function () {\r\n    let movementToCheck = PP.vec3_create();\r\n    let position = PP.vec3_create();\r\n    let positionReal = PP.vec3_create();\r\n    let transformQuat = PP.quat2_create();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n    let newPosition = PP.vec3_create();\r\n    let newPositionHead = PP.vec3_create();\r\n    let movementStep = PP.vec3_create();\r\n    let currentMovementStep = PP.vec3_create();\r\n    let transformUp = PP.vec3_create();\r\n    let verticalMovement = PP.vec3_create();\r\n    let movementChecked = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    let floatingTransformQuat = PP.quat2_create();\r\n    let horizontalDirection = PP.vec3_create();\r\n    let rotationQuat = PP.quat_create();\r\n    return function _updateReal(dt, resetRealEnabled = true) {\r\n        // check if new head is ok and update the data\r\n        // if head is not synced (blurred or session changing) avoid this and keep last valid\r\n        if (this.getPlayerHeadManager().isSynced()) {\r\n            this._updateCollisionHeight();\r\n\r\n            this._myIsBodyColliding = false;\r\n            this._myIsHeadColliding = false;\r\n            this._myIsLeaning = false;\r\n            this._myIsHopping = false;\r\n            this._myIsFar = false;\r\n\r\n            this._generateRealMovementParamsFromMovementParams();\r\n\r\n            movementToCheck = this.getPositionReal(positionReal).vec3_sub(this.getPosition(position), movementToCheck);\r\n            if (movementToCheck.vec3_length() > 0.0001) {\r\n                this._myLastValidMovementDirection = movementToCheck.vec3_normalize(this._myLastValidMovementDirection); //TEMP direction\r\n            }\r\n\r\n            // Far\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.FAR)) {\r\n                if (this._myParams.myIsMaxDistanceFromRealToSyncEnabled && movementToCheck.vec3_length() > this._myParams.myMaxDistanceFromRealToSync) {\r\n                    this._myIsFar = true;\r\n                } else if (this._myParams.myIsFarExtraCheckCallback != null && this._myParams.myIsFarExtraCheckCallback(this)) {\r\n                    this._myIsFar = true;\r\n                }\r\n            }\r\n\r\n            // Body Colliding\r\n            collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n            collisionRuntimeParams.myIsOnGround = true; //#TODO temp as long as surface infos are not actually updated\r\n            transformQuat = this.getTransformQuat(transformQuat);\r\n            newPosition.vec3_copy(this._myValidPosition);\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.BODY_COLLIDING)) {\r\n                CollisionCheckGlobal.move(movementToCheck, transformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    if (Math.pp_clamp(this._myRealMovementCollisionCheckParams.myHeight, this._myParams.myIsBodyCollidingWhenHeightBelowValue,\r\n                        this._myParams.myIsBodyCollidingWhenHeightAboveValue) != this._myRealMovementCollisionCheckParams.myHeight) {\r\n                        this._myIsBodyColliding = true;\r\n                    } else {\r\n                        if (this._myParams.myIsBodyCollidingExtraCheckCallback != null && this._myParams.myIsBodyCollidingExtraCheckCallback(this)) {\r\n                            this._myIsBodyColliding = true;\r\n                        } else {\r\n                            this._myIsBodyColliding = false;\r\n                            newPosition.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this._myIsBodyColliding = true;\r\n                }\r\n            }\r\n\r\n            // Floating \r\n            if (false && this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.FLOATING)) {\r\n\r\n                if (!this._myIsBodyColliding) {\r\n                    movementToCheck = newPosition.vec3_sub(position, movementToCheck);\r\n                } else {\r\n                    movementToCheck = positionReal.vec3_sub(position, movementToCheck);\r\n                }\r\n\r\n                collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n                floatingTransformQuat.quat2_setPositionRotationQuat(this._myValidPosition, this._myValidRotationQuat);\r\n                CollisionCheckGlobal.updateSurfaceInfo(floatingTransformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n                //#TODO utilizzare on ground del body gia calcolato, ma ora non c'\u00E8 quindi va bene cos\u00EC\r\n\r\n                if (collisionRuntimeParams.myIsOnGround) {\r\n                    transformUp = transformQuat.quat2_getUp(transformUp);\r\n                    verticalMovement = movementToCheck.vec3_componentAlongAxis(transformUp);\r\n                    let isVertical = !verticalMovement.vec3_isZero(0.00001);\r\n                    if (!isVertical || !this._myParams.myIsFloatingValidIfVerticalMovement) {\r\n                        let movementStepAmount = 1;\r\n                        movementStep.vec3_copy(movementToCheck);\r\n                        if (!movementToCheck.vec3_isZero(0.00001) && this._myParams.myFloatingSplitCheckEnabled) {\r\n                            let equalStepLength = movementToCheck.vec3_length() / this._myParams.myFloatingSplitCheckMaxSteps;\r\n                            if (!this._myParams.myFloatingSplitCheckStepEqualLength || equalStepLength < this._myParams.myFloatingSplitCheckStepEqualLengthMinLength) {\r\n                                let maxLength = this._myParams.myFloatingSplitCheckStepEqualLength ? this._myParams.myFloatingSplitCheckStepEqualLengthMinLength : this._myParams.myFloatingSplitCheckMaxLength;\r\n                                movementStepAmount = Math.ceil(movementToCheck.vec3_length() / maxLength);\r\n                                if (movementStepAmount > 1) {\r\n                                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(maxLength, movementStep);\r\n                                    movementStepAmount = (this._myParams.myFloatingSplitCheckMaxSteps != null) ? Math.min(movementStepAmount, this._myParams.myFloatingSplitCheckMaxSteps) : movementStepAmount;\r\n                                }\r\n\r\n                                movementStepAmount = Math.max(1, movementStepAmount);\r\n\r\n                                if (movementStepAmount == 1) {\r\n                                    movementStep.vec3_copy(movementToCheck);\r\n                                }\r\n                            } else {\r\n                                movementStepAmount = this._myParams.myFloatingSplitCheckMaxSteps;\r\n                                if (movementStepAmount > 1) {\r\n                                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(equalStepLength, movementStep);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let isOnValidGroundAngle = collisionRuntimeParams.myGroundAngle <= this._myRealMovementCollisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n\r\n                        movementChecked.vec3_zero();\r\n                        newFeetPosition.vec3_copy(this._myValidPosition);\r\n                        collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n\r\n                        let atLeastOneNotOnGround = false;\r\n                        let isOneOnGroundBetweenNoGround = false;\r\n                        let isLastOnGround = false;\r\n                        let isOneOnSteepGround = false;\r\n\r\n                        for (let i = 0; i < movementStepAmount; i++) {\r\n                            if (movementStepAmount == 1 || i != movementStepAmount - 1) {\r\n                                currentMovementStep.vec3_copy(movementStep);\r\n                            } else {\r\n                                currentMovementStep = movementToCheck.vec3_sub(movementChecked, currentMovementStep);\r\n                            }\r\n\r\n                            newFeetPosition = newFeetPosition.vec3_add(currentMovementStep, newFeetPosition);\r\n                            floatingTransformQuat.quat2_setPositionRotationQuat(newFeetPosition, this._myValidRotationQuat);\r\n                            collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n                            CollisionCheckGlobal.updateSurfaceInfo(floatingTransformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n                            movementChecked = movementChecked.vec3_add(currentMovementStep, movementChecked);\r\n\r\n                            if (!collisionRuntimeParams.myIsOnGround) {\r\n                                atLeastOneNotOnGround = true;\r\n                            } else {\r\n                                if (collisionRuntimeParams.myGroundAngle > this._myRealMovementCollisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n                                    isOneOnSteepGround = true;\r\n                                }\r\n\r\n                                if (atLeastOneNotOnGround) {\r\n                                    isOneOnGroundBetweenNoGround = true;\r\n                                }\r\n\r\n                                if (i == movementStepAmount - 1) {\r\n                                    isLastOnGround = true;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let isFloatingOnSteepGroundFail = isOneOnSteepGround && isOnValidGroundAngle &&\r\n                            !this._myParams.myIsFloatingValidIfSteepGround && (!isVertical || !this._myParams.myIsFloatingValidIfVerticalMovementAndSteepGround);\r\n                        if (atLeastOneNotOnGround || isFloatingOnSteepGroundFail) {\r\n                            if (isOneOnGroundBetweenNoGround) {\r\n                                this._myIsHopping = true;\r\n                            } else {\r\n                                this._myIsLeaning = true;\r\n                            }\r\n                        } else {\r\n                            this._myIsLeaning = false;\r\n                            this._myIsHopping = false;\r\n\r\n                            if (this._myParams.myIsLeaningExtraCheckCallback != null && this._myParams.myIsLeaningExtraCheckCallback(this)) {\r\n                                this._myIsLeaning = true;\r\n                            } else if (this._myParams.myIsHoppingExtraCheckCallback != null && this._myParams.myIsHoppingExtraCheckCallback(this)) {\r\n                                this._myIsHopping = true;\r\n                            }\r\n                        }\r\n\r\n                        if (this._myIsLeaning) {\r\n                            let distance = movementToCheck.vec3_length();\r\n                            if (this._myParams.myIsLeaningValidAboveDistance && distance > this._myParams.myLeaningValidDistance) {\r\n                                this._myIsLeaning = false;\r\n                            }\r\n                        }\r\n\r\n                        if (this._myIsLeaning || this._myIsHopping) {\r\n                            if (isLastOnGround && this._myParams.myIsFloatingValidIfRealOnGround) {\r\n                                this._myIsLeaning = false;\r\n                                this._myIsHopping = false;\r\n                            } else if (isLastOnGround && isVertical && this._myParams.myIsFloatingValidIfVerticalMovementAndRealOnGround) {\r\n                                this._myIsLeaning = false;\r\n                                this._myIsHopping = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Head Colliding\r\n            movementToCheck = this.getPositionHeadReal(positionReal).vec3_sub(this.getPositionHead(position), movementToCheck);\r\n            collisionRuntimeParams.reset();\r\n            transformQuat = this.getTransformHeadQuat(transformQuat); // get eyes transform\r\n            newPositionHead.vec3_copy(this._myValidPositionHead);\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.HEAD_COLLIDING)) {\r\n                CollisionCheckGlobal.move(movementToCheck, transformQuat, this._myHeadCollisionCheckParams, collisionRuntimeParams);\r\n                //CollisionCheckGlobal.positionCheck(true, transformQuat, this._myHeadCollisionCheckParams, collisionRuntimeParams);\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    this._myIsHeadColliding = false;\r\n                    newPositionHead.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n                } else {\r\n                    this._myIsHeadColliding = true;\r\n                }\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncPositionFlagMap) && !this._myParams.mySyncPositionDisabled) {\r\n                this._myValidPosition.vec3_copy(newPosition);\r\n                //reset real position dato che la posizione new potrebbe essere quella influenzata da snap\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncPositionHeadFlagMap)) {\r\n                this._myValidPositionHead = this.getPositionHeadReal(newPositionHead);\r\n            }\r\n\r\n            if (true || this.isSynced(this._myParams.mySyncRotationFlagMap)) {\r\n                this._myValidRotationQuat = this.getRotationRealQuat(this._myValidRotationQuat);\r\n            }\r\n\r\n            if (true || this.isSynced(this._myParams.mySyncHeightFlagMap)) {\r\n                this._myValidHeight = this._myRealMovementCollisionCheckParams.myHeight;\r\n                this._updateCollisionHeight();\r\n            }\r\n\r\n            if (false && this._myParams.myUpdateRealPositionValid) {\r\n                transformQuat = this.getTransformRealQuat(transformQuat);\r\n                transformUp = transformQuat.quat2_getUp(transformUp);\r\n                rotationQuat = transformQuat.quat2_getRotationQuat(rotationQuat);\r\n                horizontalDirection = this._myLastValidMovementDirection.vec3_removeComponentAlongAxis(transformUp, horizontalDirection);\r\n                if (!horizontalDirection.vec3_isZero(0.00001)) {\r\n                    horizontalDirection.vec3_normalize(horizontalDirection);\r\n                    rotationQuat.quat_setForward(horizontalDirection);\r\n                    transformQuat.quat2_setRotationQuat(rotationQuat);\r\n                }\r\n\r\n                let debugBackup = this._myParams.myMovementCollisionCheckParams.myDebugActive;\r\n                this._myParams.myMovementCollisionCheckParams.myDebugActive = false;\r\n                CollisionCheckGlobal.positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myRealCollisionRuntimeParams);\r\n                this._myIsRealPositionValid = this._myRealCollisionRuntimeParams.myIsPositionOk;\r\n                this._myParams.myMovementCollisionCheckParams.myDebugActive = debugBackup;\r\n            }\r\n        }\r\n    }\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.move = function () {\r\n    let transformQuat = PP.quat2_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    return function move(movement, outCollisionRuntimeParams = null, forceMove = false) {\r\n        transformQuat = this.getTransformQuat(transformQuat);\r\n\r\n        CollisionCheckGlobal.move(movement, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myCollisionRuntimeParams);\r\n        if (outCollisionRuntimeParams != null) {\r\n            outCollisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n        }\r\n\r\n        if (!forceMove) {\r\n            fixedMovement.vec3_copy(this._myCollisionRuntimeParams.myFixedMovement);\r\n        } else {\r\n            fixedMovement.vec3_copy(movement);\r\n        }\r\n\r\n        if (!fixedMovement.vec3_isZero(0.00001)) {\r\n            this._myValidPosition.vec3_add(fixedMovement, this._myValidPosition);\r\n            this.getPlayerHeadManager().moveFeet(fixedMovement);\r\n        }\r\n\r\n        // this make reset happens even for gravity, maybe u should do it manually\r\n        if (this._myParams.myResetRealOnMove) {\r\n            if (!this.isSynced()) {\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        //#TODO add move callback\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.teleportPosition = function () {\r\n    let teleportTransformQuat = PP.quat2_create();\r\n    return function teleportPosition(teleportPosition, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        teleportTransformQuat = this.getTransformQuat(teleportTransformQuat);\r\n        teleportTransformQuat.quat2_setPosition(teleportPosition);\r\n        this.teleportTransformQuat(teleportTransformQuat, outCollisionRuntimeParams, forceTeleport);\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.teleportTransformQuat = function () {\r\n    let currentPosition = PP.vec3_create();\r\n    let teleportPositionVec = PP.vec3_create();\r\n    let teleportRotation = PP.quat_create();\r\n    let rotatedTransformQuat = PP.quat2_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    return function teleportTransformQuat(teleportTransformQuat, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        currentPosition = this.getPosition(currentPosition);\r\n        teleportPositionVec = teleportTransformQuat.quat2_getPosition(teleportPositionVec);\r\n        teleportRotation = teleportTransformQuat.quat2_getRotationQuat(teleportRotation);\r\n\r\n        rotatedTransformQuat.quat2_setPositionRotationQuat(currentPosition, teleportRotation);\r\n\r\n        CollisionCheckGlobal.teleport(teleportPositionVec, rotatedTransformQuat, this._myParams.myTeleportCollisionCheckParams, this._myCollisionRuntimeParams);\r\n        if (outCollisionRuntimeParams != null) {\r\n            outCollisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n        }\r\n\r\n        fixedMovement.vec3_zero();\r\n        if (!forceTeleport) {\r\n            if (!this._myCollisionRuntimeParams.myTeleportCanceled) {\r\n                fixedMovement = this._myCollisionRuntimeParams.myFixedTeleportPosition.vec3_sub(currentPosition, fixedMovement);\r\n                this.getPlayerHeadManager().setRotationFeetQuat(teleportRotation);\r\n            }\r\n        } else {\r\n            fixedMovement = teleportPositionVec.vec3_sub(currentPosition, fixedMovement);\r\n            this.getPlayerHeadManager().setRotationFeetQuat(teleportRotation);\r\n        }\r\n\r\n        if (!fixedMovement.vec3_isZero(0.00001)) {\r\n            this._myValidPosition.vec3_add(fixedMovement, this._myValidPosition);\r\n            this.getPlayerHeadManager().moveFeet(fixedMovement);\r\n        }\r\n\r\n        if (this._myParams.myResetRealOnTeleport) {\r\n            if (!this.isSynced()) {\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        //#TODO add teleport callback\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.rotateQuat = function () {\r\n    return function rotateQuat(rotationQuat) {\r\n        this._myValidRotationQuat.quat_rotateQuat(rotationQuat, this._myValidRotationQuat);\r\n        this.getPlayerHeadManager().rotateFeetQuat(rotationQuat);\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.setRotationQuat = function () {\r\n    let rotationToPerform = PP.quat_create();\r\n    return function setRotationQuat(rotationQuat) {\r\n        rotationToPerform = this._myValidRotationQuat.quat_rotationToQuat(rotationQuat, rotationToPerform);\r\n        this.rotateQuat(rotationToPerform);\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.setHeight = function () {\r\n    let transformQuat = PP.quat2_create();\r\n    return function setHeight(height, forceSet = false) {\r\n        let fixedHeight = Math.pp_clamp(height, this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n        let previousHeight = this.getHeight();\r\n\r\n        this._myValidHeight = fixedHeight;\r\n        this._updateCollisionHeight();\r\n\r\n        transformQuat = this.getTransformQuat(transformQuat);\r\n\r\n        CollisionCheckGlobal.positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myCollisionRuntimeParams);\r\n\r\n        if (this._myCollisionRuntimeParams.myIsPositionOk || forceSet) {\r\n            this.getPlayerHeadManager().setHeight(this.getHeight(), true);\r\n        } else {\r\n            this._myValidHeight = previousHeight;\r\n        }\r\n\r\n        this._updateCollisionHeight();\r\n    };\r\n}();\r\n\r\n//sliding info, surface info, update", "WL.registerComponent(\"labyroots-gateway\", {\r\n    _myFromAbove: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init: function () {\r\n        Global.myGoogleAnalytics = window.gtag != null;\r\n        Global.myFromAbove = this._myFromAbove;\r\n    },\r\n    start: function () {\r\n        this._myLoadSetupDone = false;\r\n        this._loadSetup();\r\n\r\n        this._myFirstUpdate = true;\r\n        this._myReadyCounter = 10;\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n\r\n        this._myButtonPressed = false;\r\n\r\n        PP.CAUtils.setDummyServer(new LR.LRCADummyServer());\r\n        PP.CAUtils.setUseDummyServerOnSDKMissing(true);\r\n        PP.CAUtils.setUseDummyServerOnError(true);\r\n\r\n        Global.mySaveManager = new PP.SaveManager();\r\n\r\n        this._myTimePlayingVR = 0;\r\n        this._myTimePlayingVRStep = [1, 2, 3, 5, 10, 20, 30, 60];\r\n        this._myTimePlayingVRStepIndex = 0;\r\n    },\r\n    update: function (dt) {\r\n        if (!this._myLoadSetupDone) {\r\n            return;\r\n        }\r\n\r\n        Global.mySaveManager.update(dt);\r\n\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n            let gameplayItems = WL.scene.pp_getObjectByName(\"Gameplay Items\");\r\n            if (gameplayItems != null) {\r\n                let fruits = gameplayItems.pp_getObjectByName(\"Fruits\");\r\n                let fruit1 = fruits.pp_getObjectByName(\"\" + LR.MazeItemType.HUMAN_TREE_1).pp_getChildren()[0];\r\n                let fruit2 = fruits.pp_getObjectByName(\"\" + LR.MazeItemType.HUMAN_TREE_2).pp_getChildren()[0];\r\n                let fruit3 = fruits.pp_getObjectByName(\"\" + LR.MazeItemType.HUMAN_TREE_3).pp_getChildren()[0];\r\n                let fruit4 = fruits.pp_getObjectByName(\"\" + LR.MazeItemType.HUMAN_TREE_4).pp_getChildren()[0];\r\n                Global.myFruits[LR.MazeItemType.HUMAN_TREE_1] = fruit1;\r\n                Global.myFruits[LR.MazeItemType.HUMAN_TREE_2] = fruit2;\r\n                Global.myFruits[LR.MazeItemType.HUMAN_TREE_3] = fruit3;\r\n                Global.myFruits[LR.MazeItemType.HUMAN_TREE_4] = fruit4;\r\n\r\n                Global.myAxeProto = gameplayItems.pp_getObjectByName(\"Axe\");\r\n                Global.myAxe = Global.myAxeProto;\r\n                Global.myFollowAxe = gameplayItems.pp_getObjectByName(\"Follow Axe\");\r\n            }\r\n\r\n            let mazeItems = WL.scene.pp_getObjectByName(\"Maze Items\");\r\n            if (mazeItems != null) {\r\n                let tree1 = mazeItems.pp_getObjectByName(\"\" + LR.MazeItemType.HUMAN_TREE_1).pp_getChildren()[0];\r\n                let tree2 = mazeItems.pp_getObjectByName(\"\" + LR.MazeItemType.HUMAN_TREE_2).pp_getChildren()[0];\r\n                let tree3 = mazeItems.pp_getObjectByName(\"\" + LR.MazeItemType.HUMAN_TREE_3).pp_getChildren()[0];\r\n                let tree4 = mazeItems.pp_getObjectByName(\"\" + LR.MazeItemType.HUMAN_TREE_4).pp_getChildren()[0];\r\n                Global.myTrees[LR.MazeItemType.HUMAN_TREE_1] = tree1;\r\n                Global.myTrees[LR.MazeItemType.HUMAN_TREE_2] = tree2;\r\n                Global.myTrees[LR.MazeItemType.HUMAN_TREE_3] = tree3;\r\n                Global.myTrees[LR.MazeItemType.HUMAN_TREE_4] = tree4;\r\n            }\r\n\r\n            Global.myMaze.buildMaze();\r\n        } else if (this._myReadyCounter > 0) {\r\n            this._myReadyCounter--;\r\n            if (this._myReadyCounter == 0) {\r\n                Global.myStoryReady = true;\r\n            }\r\n        }\r\n        // ripulire i frutti e le asce \r\n        // aggiungere le radici\r\n\r\n        if (Global.mySessionStarted) {\r\n            if (!this._myButtonPressed) {\r\n                if (PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.SELECT).isPressEnd() || PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.SQUEEZE).isPressEnd() ||\r\n                    PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.SELECT).isPressEnd() || PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.SQUEEZE).isPressEnd()) {\r\n                    this._myButtonPressed = true;\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"button_pressed\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (Global.myReady) {\r\n            if (PP.XRUtils.isSessionActive()) {\r\n                this._myTimePlayingVR += dt;\r\n\r\n                if (this._myTimePlayingVRStepIndex < this._myTimePlayingVRStep.length && this._myTimePlayingVR > this._myTimePlayingVRStep[this._myTimePlayingVRStepIndex] * 60) {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"playing_for_\" + this._myTimePlayingVRStep[this._myTimePlayingVRStepIndex] + \"_minutes_vr\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                    this._myTimePlayingVRStepIndex++;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _loadSetup() {\r\n        loadFileJSON(\"./setup.json\", data => {\r\n            Global.mySetup = data;\r\n            this._loadMaze();\r\n            this._myLoadSetupDone = true;\r\n        });\r\n    },\r\n    _loadMaze() {\r\n        Global.myMaze = new LR.Maze(Global.mySetup.myMazeSetup, this.object);\r\n    },\r\n    _onXRSessionStart() {\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"enter_vr\", {\r\n                \"value\": 1\r\n            });\r\n        }\r\n\r\n        let isFirstEnterVR = Global.mySaveManager.loadBool(\"is_first_enter_vr\", true);\r\n        if (isFirstEnterVR) {\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"enter_vr_first_time\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n        }\r\n\r\n        Global.mySaveManager.save(\"is_first_enter_vr\", false, false);\r\n\r\n        Global.mySessionStarted = true;\r\n    }\r\n});\r\n\r\nGlobal = {\r\n    mySetup: {},\r\n    myMaze: null,\r\n    myPlayer: null,\r\n    myStoryReady: false,\r\n    myReady: false,\r\n    myStage: 0,\r\n    myRoots: null,\r\n    myAxe: null,\r\n    myTrees: [],\r\n    myFruits: [],\r\n    myAxeProto: null,\r\n    myFollowAxe: null,\r\n    myFromAbove: false\r\n};\r\n\r\nGlobal.mySessionStarted = false;\r\n\r\nLR = {};", "downloadFileText = function (filename, text) {\r\n    const blob = new Blob([text], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    let element = document.createElement('a');\r\n    element.href = url;\r\n    element.download = filename;\r\n    element.style.display = 'none';\r\n\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n\r\n    document.body.removeChild(element);\r\n\r\n    return true;\r\n};\r\n\r\ndownloadFileJSON = function (filename, object) {\r\n    let json = null;\r\n    try {\r\n        json = JSON.stringify(object);\r\n    } catch (error) { }\r\n\r\n    if (json != null) {\r\n        return downloadFileText(filename, json);\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nloadFileText = function (filepath, loadCallback, errorCallback) {\r\n    loadFile(\"text\", filepath, loadCallback, errorCallback);\r\n};\r\n\r\nloadFileJSON = function (filepath, loadCallback, errorCallback) {\r\n    loadFile(\"json\", filepath, loadCallback, errorCallback);\r\n};\r\n\r\nloadFile = function (responseBodyConversionFunction, filepath, loadCallback, errorCallback) {\r\n    fetch(filepath)\r\n        .then(\r\n            function (response) {\r\n                if (response.ok) {\r\n                    response[responseBodyConversionFunction]().then(\r\n                        function (data) {\r\n                            if (loadCallback) {\r\n                                loadCallback(data);\r\n                            }\r\n                        },\r\n                        function (response) {\r\n                            if (errorCallback != null) {\r\n                                errorCallback(response);\r\n                            }\r\n                        }\r\n                    );\r\n                } else {\r\n                    if (errorCallback != null) {\r\n                        errorCallback(response);\r\n                    }\r\n                }\r\n            },\r\n            function (response) {\r\n                if (errorCallback != null) {\r\n                    errorCallback(response);\r\n                }\r\n            }\r\n        );\r\n};", "Global.mySecretWall = null;\r\nGlobal.myIsWeddingTime = false;\r\nGlobal.myIsMazeverseTime = false;\r\n\r\nLR.Maze = class Maze {\r\n    constructor(mazeSetup, parent) {\r\n        this._myDefaultCellSize = 2;\r\n\r\n        this._myCellSize = mazeSetup.myCellSize;\r\n        this._myCells = [];\r\n        this._myTopLeftPosition = PP.vec3_create();\r\n        this._myMazeObjectsParent = parent.pp_addObject();\r\n\r\n        this.createCells(mazeSetup);\r\n\r\n        this._myCellCoordinates = [0, 0];\r\n    }\r\n\r\n    createCells(mazeSetup) {\r\n        let isWedding = Global.isWedding();\r\n        let isMazeverse = Global.isMazeverse();\r\n\r\n        this._myGridToUse = mazeSetup.myGrid;\r\n        Global.myIsWeddingTime = false;\r\n        Global.myIsMazeverseTime = false;\r\n        if (isMazeverse) {\r\n            this._myGridToUse = Global.createMazeverseMaze();\r\n            if (this._myGridToUse == null) {\r\n                this._myGridToUse = mazeSetup.myGrid;\r\n\r\n                if (Global.myGoogleAnalytics) {\r\n                    gtag(\"event\", \"mazeverse_maze_failed\", {\r\n                        \"value\": 1\r\n                    });\r\n                }\r\n            } else {\r\n                Global.myIsMazeverseTime = true;\r\n\r\n                if (Global.myGoogleAnalytics) {\r\n                    gtag(\"event\", \"is_mazeverse_maze\", {\r\n                        \"value\": 1\r\n                    });\r\n                }\r\n            }\r\n        } else if (isWedding) {\r\n            this._myGridToUse = mazeSetup.mySecretGrid;\r\n            Global.myIsWeddingTime = true;\r\n\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"is_wedding_maze\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n        } else {\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"is_normal_maze\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n        }\r\n\r\n        this._myTopLeftPosition = this.computeTopLeftPosition(mazeSetup);\r\n\r\n        let grid = this._myGridToUse;\r\n\r\n        for (let i = 0; i < grid.length; i++) {\r\n            let row = grid[i];\r\n            this._myCells[i] = [];\r\n            for (let j = 0; j < row.length; j++) {\r\n                let value = row[j];\r\n                let intValue = parseInt(value);\r\n                let mazeItemType = intValue;\r\n                let fruits = 0;\r\n                if (intValue >= 50) {\r\n                    mazeItemType = Math.floor(intValue / 10) * 10;\r\n                    fruits = intValue % 10;\r\n                }\r\n\r\n                let cell = new LR.MazeCell();\r\n                cell.myCellCoordinates.vec2_set(i, j);\r\n                cell.myCellSize = this._myCellSize;\r\n                cell.myStaticMazeItemType = mazeItemType;\r\n                cell.myFruits = fruits;\r\n\r\n                cell.myCellPosition.vec3_copy(this._myTopLeftPosition);\r\n                cell.myCellPosition.vec3_add([-((this._myCellSize / 2) + j * this._myCellSize), 0, -((this._myCellSize / 2) + i * this._myCellSize)], cell.myCellPosition);\r\n\r\n                this._myCells[i][j] = cell;\r\n            }\r\n        }\r\n    }\r\n\r\n    computeTopLeftPosition(mazeSetup) {\r\n        let row = this._myGridToUse.length;\r\n        let column = this._myGridToUse[0].length;\r\n\r\n        let width = column * this._myCellSize;\r\n        let depth = row * this._myCellSize;\r\n\r\n        let leftPosition = Math.floor(width / 2);\r\n        leftPosition += leftPosition % 2;\r\n\r\n        let topPosition = Math.floor(depth / 2);\r\n        topPosition += topPosition % 2;\r\n\r\n        return [leftPosition, 0, topPosition];\r\n    }\r\n\r\n    buildMaze() {\r\n        this._myMazeItems = WL.scene.pp_getObjectByName(\"Maze Items\");\r\n\r\n        let cellCoordinatesList = [];\r\n        for (let i = 0; i < this._myCells.length; i++) {\r\n            let row = this._myCells[i];\r\n            for (let j = 0; j < row.length; j++) {\r\n                cellCoordinatesList.push([i, j]);\r\n            }\r\n        }\r\n\r\n        let currentRow = Math.floor(this._myCells.length / 2);\r\n        let currentColumn = Math.floor(this._myCells[0].length / 2);\r\n\r\n        let found = false;\r\n        for (let i = 0; i < this._myCells.length && !found; i++) {\r\n            let row = this._myCells[i];\r\n            for (let j = 0; j < row.length; j++) {\r\n                let cell = row[j];\r\n                if (cell.myStaticMazeItemType == LR.MazeItemType.BUILD_CELL) {\r\n                    currentRow = cell.myCellCoordinates[0];\r\n                    currentColumn = cell.myCellCoordinates[1];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        let rowToAdd = 1;\r\n        let currentRowToAdd = 1;\r\n        let columnToAdd = 1;\r\n        let currentColumnToAdd = 1;\r\n        let cellCoordinatesListSpiral = [];\r\n        let useRow = false;\r\n\r\n        while (cellCoordinatesListSpiral.length < cellCoordinatesList.length) {\r\n            cellCoordinatesListSpiral.pp_pushUnique([currentRow, currentColumn], (first, second) => first[0] == second[0] && first[1] == second[1]);\r\n\r\n            if (useRow) {\r\n                currentRow += Math.pp_sign(currentRowToAdd) * 1;\r\n                let clampedCurrentRow = Math.pp_clamp(currentRow, 0, this._myCells.length - 1);\r\n                if (clampedCurrentRow != currentRow) {\r\n                    currentRowToAdd -= Math.pp_sign(currentRowToAdd) * 1;\r\n                }\r\n                rowToAdd--;\r\n                if (rowToAdd == 0) {\r\n                    useRow = false;\r\n                    currentRowToAdd += Math.pp_sign(currentRowToAdd) * 1;\r\n                    currentRowToAdd *= -1;\r\n                    rowToAdd = Math.abs(currentRowToAdd);\r\n                }\r\n            } else {\r\n                currentColumn += Math.pp_sign(currentColumnToAdd) * 1;\r\n                let clampedCurrentColumn = Math.pp_clamp(currentColumn, 0, this._myCells[0].length - 1);\r\n                if (clampedCurrentColumn != currentColumn) {\r\n                    currentColumnToAdd -= Math.pp_sign(currentColumnToAdd) * 1;\r\n                }\r\n                columnToAdd--;\r\n                if (columnToAdd == 0) {\r\n                    useRow = true;\r\n                    currentColumnToAdd += Math.pp_sign(currentColumnToAdd) * 1;\r\n                    currentColumnToAdd *= -1;\r\n                    columnToAdd = Math.abs(currentColumnToAdd);\r\n                }\r\n            }\r\n\r\n            currentRow = Math.pp_clamp(currentRow, 0, this._myCells.length - 1);\r\n            currentColumn = Math.pp_clamp(currentColumn, 0, this._myCells[0].length - 1);\r\n        }\r\n\r\n        let cellCoordinatesToBuildLater = [];\r\n        for (let i = 0; i < cellCoordinatesListSpiral.length; i++) {\r\n            if (i % 2 == 0) {\r\n                this.buildCell(this._myCells[cellCoordinatesListSpiral[i][0]][cellCoordinatesListSpiral[i][1]]);\r\n            } else {\r\n                cellCoordinatesToBuildLater.unshift(cellCoordinatesListSpiral[i]);\r\n            }\r\n        }\r\n\r\n        for (let cellCoordinates of cellCoordinatesToBuildLater) {\r\n            this.buildCell(this._myCells[cellCoordinates[0]][cellCoordinates[1]]);\r\n        }\r\n\r\n        /*\r\n        while (cellCoordinatesList.length > 0) {\r\n            let randomIndex = Math.pp_randomInt(0, cellCoordinatesList.length - 1);\r\n            let cellCoordinates = cellCoordinatesList[randomIndex];\r\n            cellCoordinatesList.pp_removeIndex(randomIndex);\r\n\r\n            this.buildCell(this._myCells[cellCoordinates[0]][cellCoordinates[1]]);\r\n        }*/\r\n\r\n        /*\r\n        for (let i = 0; i < this._myCells.length; i++) {\r\n            let row = this._myCells[i];\r\n            for (let j = 0; j < row.length; j++) {\r\n                let cell = row[j];\r\n                this.buildCell(cell);\r\n            }\r\n        }\r\n        */\r\n\r\n        // a inizio partita va a creare tutte le mesh e le physx del gioco\r\n        // questo non viene pi\u00F9 ricaricato\r\n        // muri, radicione, radici muro, il cuore, l'alberone, alberi umani\r\n    }\r\n\r\n    getCellByPosition(position) {\r\n        let cellCoordinates = this.convertCellPositionToCellCoordinates(position);\r\n        let cell = null;\r\n        if (this._myCells[cellCoordinates[0]] != null) {\r\n            cell = this._myCells[cellCoordinates[0]][cellCoordinates[1]];\r\n        }\r\n        return cell;\r\n    }\r\n\r\n    getCellNextToPositionEmpty(position) {\r\n        let cellCoordinates = this.convertCellPositionToCellCoordinates(position);\r\n        let close = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                if (!(i == 1 && j == 1)) {\r\n                    let row = cellCoordinates[0] - 1 + i;\r\n                    let column = cellCoordinates[1] - 1 + j;\r\n                    if (row >= 0 && row < this._myCells.length) {\r\n                        if (column >= 0 && column < this._myCells[row].length) {\r\n                            let currentCell = this._myCells[row][column];\r\n                            if (currentCell.myStaticMazeItemType == LR.MazeItemType.NONE ||\r\n                                currentCell.myStaticMazeItemType == LR.MazeItemType.HUMAN_TREE_0 ||\r\n                                currentCell.myStaticMazeItemType == LR.MazeItemType.HUMAN_TREE_1 ||\r\n                                currentCell.myStaticMazeItemType == LR.MazeItemType.HUMAN_TREE_2 ||\r\n                                currentCell.myStaticMazeItemType == LR.MazeItemType.HUMAN_TREE_3 ||\r\n                                currentCell.myStaticMazeItemType == LR.MazeItemType.CREDITS ||\r\n                                currentCell.myStaticMazeItemType == LR.MazeItemType.SECRET_CODES ||\r\n                                currentCell.myStaticMazeItemType == LR.MazeItemType.ZESTY ||\r\n                                currentCell.myStaticMazeItemType == LR.MazeItemType.SECRET_ZONE_CHECK ||\r\n                                currentCell.myStaticMazeItemType == LR.MazeItemType.LEADERBOARD_TOP_10 ||\r\n                                currentCell.myStaticMazeItemType == LR.MazeItemType.LEADERBOARD_AROUND_U ||\r\n                                currentCell.myStaticMazeItemType == LR.MazeItemType.BUILD_CELL) {\r\n                                close.push(currentCell);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return close;\r\n    }\r\n\r\n    convertCellPositionToCellCoordinates(position) {\r\n        let cellCoordinates = this._myCellCoordinates.vec3_zero();\r\n        let positionTopLeft = position.vec3_sub(this._myTopLeftPosition);\r\n\r\n        cellCoordinates[0] = Math.max(0, -(Math.floor(positionTopLeft[2] / this._myCellSize) + 1));\r\n        cellCoordinates[1] = Math.max(0, -(Math.floor(positionTopLeft[0] / this._myCellSize) + 1));\r\n\r\n        return cellCoordinates;\r\n    }\r\n\r\n    convertCellCoordinatesToCellPosition(cellCoordinates) {\r\n        let position = [-((this._myCellSize / 2) + cellCoordinates[1] * this._myCellSize), 0, -((this._myCellSize / 2) + cellCoordinates[0] * this._myCellSize)];\r\n        return position;\r\n    }\r\n\r\n    getCellsByType(itemType) {\r\n        let cells = [];\r\n\r\n        for (let i = 0; i < this._myCells.length; i++) {\r\n            let row = this._myCells[i];\r\n            for (let j = 0; j < row.length; j++) {\r\n                if (row[j].myStaticMazeItemType == itemType) {\r\n                    cells.push(row[j]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return cells;\r\n    }\r\n\r\n    buildCell(cell) {\r\n        if (cell.myStaticMazeItemType != LR.MazeItemType.NONE) {\r\n\r\n            let cellType = cell.myStaticMazeItemType;\r\n            if (cellType == LR.MazeItemType.HUMAN_TREE_0) {\r\n                let types = [];\r\n                types.push(Global.myPerfectFruit);\r\n                for (let i = 0; i < Global.mySetup.myTreeSetup.myPerfectTreeRatio; i++) {\r\n                    types.push(Global.myGoodFruit);\r\n                    types.push(Global.myBadFruit);\r\n                }\r\n                cellType = Math.pp_randomPick(types);\r\n            }\r\n\r\n            let cellItems = this._myMazeItems.pp_getObjectByNameChildren(\"\" + cellType);\r\n            if (cellItems != null) {\r\n                let randomChild = Math.pp_randomPick(cellItems.pp_getChildren());\r\n                if (randomChild != null) {\r\n                    let oldChildPosition = randomChild.pp_getPosition();\r\n                    randomChild.pp_setPosition(cell.myCellPosition);\r\n\r\n                    let objectToSpawn = randomChild.pp_clone();\r\n                    objectToSpawn.pp_setActive(true);\r\n                    objectToSpawn.pp_setParent(this._myMazeObjectsParent);\r\n                    //objectToSpawn.pp_setPosition(cell.myCellPosition);\r\n\r\n                    cell.myObject = objectToSpawn;\r\n\r\n                    randomChild.pp_setPosition(oldChildPosition);\r\n                    if (cell.myFruits > 0) {\r\n                        let tree = objectToSpawn.pp_getComponent(\"human-tree\");\r\n                        if (tree != null) {\r\n                            tree.spawnFruits(cell.myFruits);\r\n                        }\r\n                        // get tree component and set fruits\r\n                    }\r\n\r\n                    if (cell.myStaticMazeItemType == LR.MazeItemType.BIG_TREE_FIRST_ROOT) {\r\n                        Global.myAxeParent = objectToSpawn.pp_getComponent(\"billboard-player\").object;\r\n                        Global.myAxe.pp_setParent(objectToSpawn.pp_getComponent(\"billboard-player\").object);\r\n                        let axeComponent = Global.myAxe.pp_getComponent(\"axe\");\r\n                        if (axeComponent != null) {\r\n                            axeComponent.setStartTransforms(cell.myCellPosition);\r\n                        }\r\n                        Global.myAxeCell = cell;\r\n\r\n                        //Global.myAxeProto.pp_setParent(objectToSpawn.pp_getComponent(\"billboard-player\").object);\r\n                    }\r\n\r\n                    if (cellType == LR.MazeItemType.SECRET_WALL) {\r\n                        Global.mySecretWall = objectToSpawn;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nGlobal.myAxeCell = null;\r\nGlobal.myAxeParent = null;\r\n\r\nLR.MazeCell = class MazeCell {\r\n    constructor() {\r\n        this.myCellCoordinates = PP.vec2_create();\r\n        this.myCellPosition = PP.vec3_create();\r\n        this.myCellSize = 0;\r\n\r\n        this.myHorizontalDirection = PP.vec3_create(0, 0, 1);\r\n        this.myUpDirection = PP.vec3_create(0, 0, 1);\r\n\r\n        this.myStaticMazeItemType = LR.MazeItemType.NONE;\r\n        this.myFruits = 0;\r\n\r\n        this.myObject = null;\r\n\r\n        this._myVector = [0, 0, 0];\r\n    }\r\n\r\n    getRandomPositionOnCell() {\r\n        let randomDistance = Math.pp_random(0, this.myCellSize / 2);\r\n        let randomAngle = Math.pp_random(0, 360);\r\n        let randomDirection = this.myHorizontalDirection.vec3_rotateAxis(randomAngle, PP.vec3_create(0, 1, 0), this._myVector);\r\n        randomDirection.vec3_scale(randomDistance, randomDirection);\r\n        let randomPosition = this.myCellPosition.vec3_add(randomDirection, randomDirection);\r\n\r\n        return randomPosition;\r\n    }\r\n}\r\n\r\nGlobal.isWedding = function () {\r\n    let isWedding = Global.mySaveManager.loadBool(\"is_wedding\", false);\r\n\r\n    if (!isWedding) {\r\n        try {\r\n            let urlSearchParams = new URL(window.location).searchParams;\r\n            if (urlSearchParams != null && urlSearchParams.get(\"wedding\") != null) {\r\n                isWedding = true;\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    return isWedding;\r\n}\r\n\r\nGlobal.isMazeverse = function () {\r\n    let isMazeverse = Global.mySaveManager.loadBool(\"is_mazeverse\", false);\r\n\r\n    if (!isMazeverse) {\r\n        try {\r\n            let urlSearchParams = new URL(window.location).searchParams;\r\n            if (urlSearchParams != null && urlSearchParams.get(\"mazeverse\") != null) {\r\n                isMazeverse = true;\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    return isMazeverse && !Global.isWedding();\r\n}", "LR.MazeItemType = {\r\n    NONE: 0,\r\n    NO_HUMAN_TREE: 1,\r\n    CREDITS: 2,\r\n    SECRET_CODES: 3,\r\n    ZESTY: 4,\r\n    SECRET_WALL: 5,\r\n    SECRET_ZONE_CHECK: 6,\r\n    LEADERBOARD_TOP_10: 7,\r\n    LEADERBOARD_AROUND_U: 8,\r\n    BUILD_CELL: 9,\r\n    PLAYER_START: 10,\r\n    PLAYER_RESPAWN: 11,\r\n    WONDERMELON: 12,\r\n    BIG_TREE: 20,\r\n    BIG_TREE_HEART: 21,\r\n    BIG_TREE_ROOT: 22,\r\n    BIG_TREE_WALL_HORIZONTAL: 23,\r\n    BIG_TREE_WALL_VERTICAL: 24,\r\n    BIG_TREE_FIRST_ROOT: 25,\r\n    ROCK_WALL_HORIZONTAL: 30,\r\n    ROCK_WALL_VERTICAL: 31,\r\n    ROCK_WALL_TOP_LEFT: 32,\r\n    ROCK_WALL_TOP_RIGHT: 33,\r\n    ROCK_WALL_BOTTOM_LEFT: 34,\r\n    ROCK_WALL_BOTTOM_RIGHT: 35,\r\n    ROCK_WALL_T_UP: 36,\r\n    ROCK_WALL_T_RIGHT: 37,\r\n    ROCK_WALL_T_DOWN: 38,\r\n    ROCK_WALL_T_LEFT: 39,\r\n    ROCK_WALL_CROSS: 40,\r\n    HUMAN_TREE_0: 50,\r\n    HUMAN_TREE_1: 60,\r\n    HUMAN_TREE_2: 70,\r\n    HUMAN_TREE_3: 80,\r\n    HUMAN_TREE_4: 90,\r\n}", "LR.CreateWallsResults = class CreateWallsResults {\r\n    constructor() {\r\n        this.myFreeCells = [];\r\n        this.myWallCells = [];\r\n\r\n        this.myDoors = [];\r\n\r\n        this.myNoDoors = false;\r\n\r\n        this.myBigTreeRoom = null;\r\n        this.myBigTreeRoomSize = null;\r\n\r\n        this.myPlayerRoom = null;\r\n        this.myPlayerRoomSize = null;\r\n\r\n        this.myWoodsRoom = null;\r\n        this.myWoodsRoomSize = null;\r\n    }\r\n\r\n    reset() {\r\n        this.myNoDoors = false;\r\n\r\n        this.myFreeCells = [];\r\n        this.myWallCells = [];\r\n\r\n        this.myDoors = [];\r\n\r\n        this.myBigTreeRoom = null;\r\n        this.myPlayerRoom = null;\r\n        this.myWoodsRoom = null;\r\n    }\r\n};\r\n\r\nGlobal.cellCoordinatesEqual = function (first, second) {\r\n    return first[0] == second[0] && first[1] == second[1];\r\n}\r\n\r\nGlobal.doorsEqual = function (first, second) {\r\n    let equal = true;\r\n\r\n    if (first.length != second.length) {\r\n        equal = false;\r\n    } else {\r\n        for (let i = 0; i < first.length; i++) {\r\n            if (first[i] != second[i]) {\r\n                equal = false;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return equal;\r\n}\r\n\r\nGlobal.createMazeverseMaze = function () {\r\n    let maxAttempts = 10;\r\n\r\n    let maze = null;\r\n\r\n    while (maxAttempts > 0 && maze == null) {\r\n        maxAttempts--;\r\n\r\n        try {\r\n            maze = Global.initializeMaze();\r\n\r\n            let createWallsResults = new LR.CreateWallsResults();\r\n            let createWallsMaxAttempts = 100;\r\n            let returnedCreateWallsResults = null;\r\n\r\n            Global.chooseSpecialRoomSetups(createWallsResults);\r\n            do {\r\n                Global.emptyMaze(maze);\r\n\r\n                createWallsMaxAttempts--;\r\n\r\n                createWallsResults.reset();\r\n                returnedCreateWallsResults = Global.createWalls(maze, createWallsResults);\r\n\r\n                if (returnedCreateWallsResults == null) {\r\n                    if (Global.myFromAbove) {\r\n                        console.error(\"Create Walls Failed:\", 100 - createWallsMaxAttempts);\r\n                    }\r\n                }\r\n            } while (returnedCreateWallsResults == null && createWallsMaxAttempts > 0);\r\n\r\n            createWallsResults = returnedCreateWallsResults;\r\n\r\n            if (createWallsResults == null) {\r\n                throw \"Create Wall Failed\";\r\n            }\r\n\r\n            let addElementsResult = false;\r\n            let addElementsMaxAttempts = 100;\r\n\r\n            let mazeClone = [];\r\n            for (let i = 0; i < maze.length; i++) {\r\n                mazeClone[i] = [];\r\n                let row = maze[i];\r\n                for (let j = 0; j < row.length; j++) {\r\n                    mazeClone[i][j] = maze[i][j];\r\n                }\r\n            }\r\n\r\n            do {\r\n                for (let i = 0; i < mazeClone.length; i++) {\r\n                    let row = mazeClone[i];\r\n                    for (let j = 0; j < row.length; j++) {\r\n                        maze[i][j] = mazeClone[i][j];\r\n                    }\r\n                }\r\n\r\n                addElementsMaxAttempts--;\r\n\r\n                addElementsResult = Global.addElementsToMaze(maze, createWallsResults);\r\n\r\n                if (!addElementsResult) {\r\n                    if (Global.myFromAbove) {\r\n                        console.error(\"Add Elements Failed:\", 100 - addElementsMaxAttempts);\r\n                    }\r\n                }\r\n            } while (!addElementsResult && addElementsMaxAttempts > 0);\r\n\r\n            if (!addElementsResult) {\r\n                throw \"Add Elements Failed\";\r\n            }\r\n\r\n            Global.adjustMazeWalls(maze);\r\n\r\n        } catch (error) {\r\n            if (Global.myFromAbove) {\r\n                console.error(\"FAIL - Attempt:\", 10 - maxAttempts, \"- Error:\", error);\r\n            }\r\n            maze = null;\r\n        }\r\n    }\r\n\r\n    //Global.convertMazeToString(maze);\r\n\r\n    //console.error(maze);\r\n\r\n    return maze;\r\n}\r\n\r\nGlobal.initializeMaze = function () {\r\n    let maze = [];\r\n\r\n    let rowMax = Math.pp_randomPick(26, 30);\r\n    let columnMax = Math.pp_randomPick(26, 30);\r\n    let rowMin = Math.pp_randomPick(20, 21);\r\n    let columnMin = Math.pp_randomPick(20, 21);\r\n    let rows = Math.pp_randomInt(rowMin, rowMax);\r\n    let columns = Math.pp_randomInt(columnMin, columnMax);\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n        maze[i] = [];\r\n        for (let j = 0; j < columns; j++) {\r\n            maze[i][j] = LR.MazeItemType.NONE;\r\n        }\r\n    }\r\n\r\n    if (Global.myFromAbove) {\r\n        console.error(\"Size: [\", rows, \",\", columns, \"]\");\r\n    }\r\n\r\n    return maze;\r\n}\r\n\r\nGlobal.emptyMaze = function (maze) {\r\n    for (let i = 0; i < maze.length; i++) {\r\n        let row = maze[i];\r\n        for (let j = 0; j < row.length; j++) {\r\n            maze[i][j] = LR.MazeItemType.NONE;\r\n        }\r\n    }\r\n}\r\n\r\nGlobal.convertMazeToString = function (maze) {\r\n    for (let i = 0; i < maze.length; i++) {\r\n        let row = maze[i];\r\n        for (let j = 0; j < row.length; j++) {\r\n            maze[i][j] = row[j].toString();\r\n            if (maze[i][j].length < 2) {\r\n                maze[i][j] = \"0\" + maze[i][j];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nGlobal.lookPlayerAligned = function (position) {\r\n    let rotationQuat = PP.quat_create();\r\n\r\n    let cell = Global.myMaze.getCellsByType(LR.MazeItemType.PLAYER_START);\r\n    if (cell != null && cell.length > 0) {\r\n        let cellPosition = cell[0].myCellPosition;\r\n        let direction = cellPosition.vec3_sub(position).vec3_removeComponentAlongAxis([0, 1, 0]);\r\n        if (!direction.vec3_isZero(0.00001)) {\r\n            direction.vec3_normalize(direction);\r\n\r\n            if (Math.abs(direction[0]) > Math.abs(direction[2])) {\r\n                direction = [1 * Math.pp_sign(direction[0]), 0, 0];\r\n            } else {\r\n                direction = [0, 0, 1 * Math.pp_sign(direction[2])];\r\n            }\r\n\r\n            direction.vec3_normalize(direction);\r\n        }\r\n\r\n        rotationQuat.quat_setUp([0, 1, 0], direction);\r\n    }\r\n\r\n    return rotationQuat;\r\n}\r\n\r\n\r\nGlobal.lookBigTreeAligned = function (position) {\r\n    let rotationQuat = PP.quat_create();\r\n\r\n    let cell = Global.myMaze.getCellsByType(LR.MazeItemType.BIG_TREE);\r\n    if (cell != null && cell.length > 0) {\r\n        let cellPosition = cell[0].myCellPosition;\r\n        let direction = cellPosition.vec3_sub(position).vec3_removeComponentAlongAxis([0, 1, 0]);\r\n        if (!direction.vec3_isZero(0.00001)) {\r\n            direction.vec3_normalize(direction);\r\n\r\n            if (Math.abs(direction[0]) > Math.abs(direction[2])) {\r\n                direction = [1 * Math.pp_sign(direction[0]), 0, 0];\r\n            } else {\r\n                direction = [0, 0, 1 * Math.pp_sign(direction[2])];\r\n            }\r\n\r\n            direction.vec3_normalize(direction);\r\n        }\r\n\r\n        rotationQuat.quat_setUp([0, 1, 0], direction);\r\n    }\r\n\r\n    return rotationQuat;\r\n}", "Global.createWalls = function (maze, createWallsResults) {\r\n    for (let i = 1; i < maze.length - 1; i++) {\r\n        let row = maze[i];\r\n        for (let j = 1; j < row.length - 1; j++) {\r\n            createWallsResults.myFreeCells.pp_pushUnique([i, j], Global.cellCoordinatesEqual);\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < maze.length; i++) {\r\n        let row = maze[i];\r\n        for (let j = 0; j < row.length; j++) {\r\n            if (i < 1 || i > maze.length - 2 || j < 1 || j > row.length - 2) {\r\n                maze[i][j] = LR.MazeItemType.ROCK_WALL_HORIZONTAL;\r\n                //createWallsResults.myWallCells.pp_pushUnique([i, j], Global.cellCoordinatesEqual);\r\n            }\r\n        }\r\n    }\r\n\r\n    let rooms = [[[1, 1], [maze.length - 2, maze[0].length - 2], Math.pp_randomInt(0, 1)]];\r\n    while (rooms.length > 0) {\r\n        let room = Math.pp_randomPick(rooms);\r\n        rooms.pp_removeEqual(room);\r\n\r\n        if (!Global.useAsSpecialRoom(room, createWallsResults)) {\r\n            if (!Global.skipRoom(room, createWallsResults)) {\r\n                let start = room[0];\r\n                let end = room[1];\r\n                let usedRow = room[1];\r\n\r\n                let wall = null;\r\n                let useRow = false;\r\n                let maxAttempts = 100;\r\n\r\n                while (wall == null && maxAttempts > 0) {\r\n                    maxAttempts--;\r\n\r\n                    let wallAttempt = [[], []];\r\n\r\n                    let rowColumnDiff = (start[1] - start[0]) - (end[1] - end[0])\r\n                    if (rowColumnDiff < 0) {\r\n                        useRow = Math.pp_randomInt(0, Math.ceil(Math.abs(rowColumnDiff) / (usedRow ? 0.5 : 2))) == 0;\r\n                    } else if (rowColumnDiff > 0) {\r\n                        useRow = Math.pp_randomInt(0, Math.ceil(rowColumnDiff / (usedRow ? 2 : 0.5))) != 0;\r\n                    } else {\r\n                        if (usedRow) {\r\n                            useRow = Math.pp_randomInt(0, 2) == 0;\r\n                        } else {\r\n                            useRow = Math.pp_randomInt(0, 2) != 0;\r\n                        }\r\n                    }\r\n\r\n                    if (useRow) {\r\n                        let difference = end[0] - start[0];\r\n                        let extraDistance = Math.floor(difference / 4);\r\n                        let extraDistanceMultiplier = Math.pp_randomPick(1, 1, 1, 1, 0.5, 0.5, 0);\r\n                        extraDistance = Math.ceil(extraDistance * extraDistanceMultiplier);\r\n\r\n                        let startFixed = start[0] + 1 + extraDistance;\r\n                        let endFixed = end[0] - 1 - extraDistance;\r\n                        if (endFixed - startFixed >= 0) {\r\n                            wallAttempt[0][0] = Math.pp_randomInt(startFixed, endFixed);\r\n                            wallAttempt[0][1] = start[1];\r\n                            wallAttempt[1][0] = wallAttempt[0][0];\r\n                            wallAttempt[1][1] = end[1];\r\n\r\n                            if (maze[wallAttempt[0][0]][wallAttempt[0][1] - 1] == LR.MazeItemType.ROCK_WALL_HORIZONTAL &&\r\n                                maze[wallAttempt[1][0]][wallAttempt[1][1] + 1] == LR.MazeItemType.ROCK_WALL_HORIZONTAL) {\r\n                                wall = wallAttempt;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        let difference = end[1] - start[1];\r\n                        let extraDistance = Math.floor(difference / 4);\r\n                        let extraDistanceMultiplier = Math.pp_randomPick(1, 1, 1, 1, 0.5, 0.5, 0);\r\n                        extraDistance = Math.round(extraDistance * extraDistanceMultiplier);\r\n\r\n                        let startFixed = start[1] + 1 + extraDistance;\r\n                        let endFixed = end[1] - 1 - extraDistance;\r\n                        if (endFixed - startFixed >= 0) {\r\n                            wallAttempt[0][1] = Math.pp_randomInt(startFixed, endFixed);\r\n                            wallAttempt[0][0] = start[0];\r\n                            wallAttempt[1][1] = wallAttempt[0][1];\r\n                            wallAttempt[1][0] = end[0];\r\n\r\n                            if (maze[wallAttempt[0][0] - 1][wallAttempt[0][1]] == LR.MazeItemType.ROCK_WALL_HORIZONTAL &&\r\n                                maze[wallAttempt[1][0] + 1][wallAttempt[1][1]] == LR.MazeItemType.ROCK_WALL_HORIZONTAL) {\r\n                                wall = wallAttempt;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (wall != null) {\r\n                        if (wall[1][0] - wall[0][0] < 1 && wall[1][1] - wall[0][1] < 1) {\r\n                            wall = null;\r\n                            //console.error(\"IMPOSSIBLE\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (wall != null) {\r\n                    let wallCells = [];\r\n                    if (useRow) {\r\n                        let rowStart = wall[0][0];\r\n                        let columnStart = wall[0][1];\r\n                        for (let i = 0; i <= wall[1][1] - wall[0][1]; i++) {\r\n                            wallCells.push([rowStart, columnStart + i]);\r\n                        }\r\n                    } else {\r\n                        let rowStart = wall[0][0];\r\n                        let columnStart = wall[0][1];\r\n                        for (let i = 0; i <= wall[1][0] - wall[0][0]; i++) {\r\n                            wallCells.push([rowStart + i, columnStart]);\r\n                        }\r\n                    }\r\n\r\n                    for (let wallCell of wallCells) {\r\n                        createWallsResults.myWallCells.pp_pushUnique(wallCell, Global.cellCoordinatesEqual);\r\n                        createWallsResults.myFreeCells.pp_removeEqual(wallCell, Global.cellCoordinatesEqual);\r\n\r\n                        maze[wallCell[0]][wallCell[1]] = LR.MazeItemType.ROCK_WALL_HORIZONTAL;\r\n                    }\r\n\r\n                    if (useRow) {\r\n                        let upRoom = [[start[0], start[1]], [wall[0][0] - 1, end[1]], useRow];\r\n                        let bottomRoom = [[wall[0][0] + 1, start[1]], [end[0], end[1]], useRow];\r\n\r\n                        rooms.push(upRoom);\r\n                        rooms.push(bottomRoom);\r\n                    } else {\r\n                        let leftRoom = [[start[0], start[1]], [end[0], wall[0][1] - 1], useRow];\r\n                        let rightRoom = [[start[0], wall[0][1] + 1], [end[0], end[1]], useRow];\r\n\r\n                        rooms.push(leftRoom);\r\n                        rooms.push(rightRoom);\r\n                    }\r\n\r\n                    if (!Global.addDoorToWall(wallCells, useRow, maze, createWallsResults)) {\r\n                        if (Global.myFromAbove) {\r\n                            console.error(\"CAN'T CREATE DOOR\");\r\n                        }\r\n                        return null;\r\n                    }\r\n                } else {\r\n                    //console.error(\"WALL NULL\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (Math.pp_randomInt(0, 9) != 0) {\r\n        Global.addExtraDoors(maze, createWallsResults);\r\n    }\r\n\r\n    //Global.adjustMazeWalls(maze);\r\n\r\n    let reachable = Global.checkFreeCellsReachable(maze, createWallsResults, false);\r\n    if (!reachable) {\r\n        if (Global.myFromAbove) {\r\n            console.error(\"NOT REACHABLE\");\r\n        }\r\n        return null;\r\n    }\r\n\r\n    if ((createWallsResults.myBigTreeRoomSize != null && createWallsResults.myBigTreeRoom == null) ||\r\n        (createWallsResults.myPlayerRoomSize != null && createWallsResults.myPlayerRoom == null) ||\r\n        (createWallsResults.myWoodsRoomSize != null && createWallsResults.myWoodsRoom == null)) {\r\n        if (Global.myFromAbove) {\r\n            console.error(\"SPECIAL ROOMS FAILURE\");\r\n        }\r\n        return null;\r\n    }\r\n\r\n    if (createWallsResults.myFreeCells.length < 50) {\r\n        if (Global.myFromAbove) {\r\n            console.error(\"TOO FEW FREE CELLS\");\r\n        }\r\n        return null;\r\n    }\r\n\r\n    return createWallsResults;\r\n};\r\n\r\nGlobal.skipRoom = function (room, createWallsResults) {\r\n    let skipRoom = false;\r\n\r\n    let start = room[0];\r\n    let end = room[1];\r\n    if ((end[0] - start[0]) <= 0 || (end[1] - start[1]) <= 0) {\r\n        skipRoom = true;\r\n    } else if ((end[0] - start[0]) <= 1 && (end[1] - start[1]) <= 1) {\r\n        skipRoom = true;\r\n    }\r\n\r\n    return skipRoom;\r\n};\r\n\r\nGlobal.useAsSpecialRoom = function (room, createWallsResults) {\r\n    let used = false;\r\n\r\n    let rows = room[1][0] - room[0][0] + 1;\r\n    let columns = room[1][1] - room[0][1] + 1;\r\n\r\n    if (createWallsResults.myBigTreeRoomSize != null && createWallsResults.myBigTreeRoom == null) {\r\n        if ((rows == createWallsResults.myBigTreeRoomSize[0] && columns == createWallsResults.myBigTreeRoomSize[1]) ||\r\n            (rows == createWallsResults.myBigTreeRoomSize[1] && columns == createWallsResults.myBigTreeRoomSize[0])) {\r\n            createWallsResults.myBigTreeRoom = room;\r\n            used = true;\r\n        }\r\n    }\r\n\r\n    if (!used) {\r\n        if (createWallsResults.myPlayerRoomSize != null && createWallsResults.myPlayerRoom == null) {\r\n            if ((rows == createWallsResults.myPlayerRoomSize[0] && columns == createWallsResults.myPlayerRoomSize[1]) ||\r\n                (rows == createWallsResults.myPlayerRoomSize[1] && columns == createWallsResults.myPlayerRoomSize[0])) {\r\n                createWallsResults.myPlayerRoom = room;\r\n                used = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!used) {\r\n        if (createWallsResults.myWoodsRoomSize != null && createWallsResults.myWoodsRoom == null) {\r\n            if ((rows == createWallsResults.myWoodsRoomSize[0] && columns == createWallsResults.myWoodsRoomSize[1]) ||\r\n                (rows == createWallsResults.myWoodsRoomSize[1] && columns == createWallsResults.myWoodsRoomSize[0])) {\r\n                createWallsResults.myWoodsRoom = room;\r\n                used = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return used;\r\n};\r\n\r\nGlobal.adjustMazeWalls = function (maze) {\r\n    for (let i = 0; i < maze.length; i++) {\r\n        let row = maze[i];\r\n        for (let j = 0; j < row.length; j++) {\r\n            let item = row[j];\r\n            if (item >= LR.MazeItemType.ROCK_WALL_HORIZONTAL && item <= LR.MazeItemType.ROCK_WALL_CROSS) {\r\n                let left = Global.isWallType((j == 0) ? LR.MazeItemType.NONE : row[j - 1], true);\r\n                let right = Global.isWallType((j == row.length - 1) ? LR.MazeItemType.NONE : row[j + 1], true);\r\n                let up = Global.isWallType((i == 0) ? LR.MazeItemType.NONE : maze[i - 1][j], true);\r\n                let bottom = Global.isWallType((i == maze.length - 1) ? LR.MazeItemType.NONE : maze[i + 1][j], true);\r\n\r\n                if (left && right && !up && !bottom) {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_HORIZONTAL;\r\n                } else if (!left && !right && up && bottom) {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_VERTICAL;\r\n\r\n                } else if (left && !right && up && bottom) {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_T_LEFT;\r\n                } else if (!left && right && up && bottom) {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_T_RIGHT;\r\n                } else if (left && right && !up && bottom) {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_T_DOWN;\r\n                } else if (left && right && up && !bottom) {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_T_UP;\r\n\r\n                } else if (left && !right && up && !bottom) {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_BOTTOM_LEFT;\r\n                } else if (left && !right && !up && bottom) {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_TOP_LEFT;\r\n                } else if (!left && right && !up && bottom) {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_TOP_RIGHT;\r\n                } else if (!left && right && up && !bottom) {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_BOTTOM_RIGHT;\r\n\r\n                } else if (!left && right && !up && !bottom) {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_HORIZONTAL;\r\n                } else if (left && !right && !up && !bottom) {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_HORIZONTAL;\r\n\r\n                } else if (!left && !right && up && !bottom) {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_VERTICAL;\r\n                } else if (!left && !right && !up && bottom) {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_VERTICAL;\r\n\r\n                } else {\r\n                    row[j] = LR.MazeItemType.ROCK_WALL_CROSS;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGlobal.checkFreeCellsReachable = function (maze, createWallsResults, rootWallsBlock = false) {\r\n    let freeCellsReachable = true;\r\n\r\n    let startCell = Math.pp_randomPick(createWallsResults.myFreeCells);\r\n\r\n    let reachableCells = Global.getReachableCells(startCell, maze, rootWallsBlock);\r\n\r\n    if (reachableCells.length != createWallsResults.myFreeCells.length) {\r\n        freeCellsReachable = false;\r\n    } else {\r\n        for (let reachableCell of reachableCells) {\r\n            if (!createWallsResults.myFreeCells.pp_hasEqual(reachableCell, Global.cellCoordinatesEqual)) {\r\n                freeCellsReachable = false;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return freeCellsReachable;\r\n};\r\n\r\nGlobal.getReachableCells = function (startCell, maze, rootWallsBlock = false) {\r\n    let reachableCells = [];\r\n\r\n    let cellsToExplore = [];\r\n    cellsToExplore.push(startCell);\r\n\r\n    let exploredCells = [];\r\n\r\n    while (cellsToExplore.length > 0) {\r\n        let currentCell = cellsToExplore.shift();\r\n        reachableCells.pp_pushUnique(currentCell, Global.cellCoordinatesEqual);\r\n        exploredCells.pp_pushUnique(currentCell, Global.cellCoordinatesEqual);\r\n\r\n        let neighborCells = [];\r\n        neighborCells.push([currentCell[0] + 1, currentCell[1]]);\r\n        neighborCells.push([currentCell[0], currentCell[1] + 1]);\r\n        neighborCells.push([currentCell[0] - 1, currentCell[1]]);\r\n        neighborCells.push([currentCell[0], currentCell[1] - 1]);\r\n\r\n        for (let neighborCell of neighborCells) {\r\n            if (!exploredCells.pp_hasEqual(neighborCell, Global.cellCoordinatesEqual)) {\r\n                if (neighborCell[0] >= 0 && neighborCell[0] <= maze.length - 1) {\r\n                    if (neighborCell[1] >= 0 && neighborCell[1] <= maze[0].length - 1) {\r\n                        let mazeCell = maze[neighborCell[0]][neighborCell[1]];\r\n\r\n                        if (mazeCell < LR.MazeItemType.ROCK_WALL_HORIZONTAL || mazeCell > LR.MazeItemType.ROCK_WALL_CROSS) {\r\n                            if (!rootWallsBlock || (mazeCell != LR.MazeItemType.BIG_TREE_WALL_HORIZONTAL && mazeCell != LR.MazeItemType.BIG_TREE_WALL_VERTICAL)) {\r\n                                cellsToExplore.pp_pushUnique(neighborCell, Global.cellCoordinatesEqual);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return reachableCells;\r\n};\r\n\r\nGlobal.isWallType = function (type, rootWallIsWall = false) {\r\n    let isWallType = false;\r\n\r\n    if (type >= LR.MazeItemType.ROCK_WALL_HORIZONTAL && type <= LR.MazeItemType.ROCK_WALL_CROSS) {\r\n        isWallType = true;\r\n    } else if (rootWallIsWall) {\r\n        if (type == LR.MazeItemType.BIG_TREE_WALL_HORIZONTAL || type == LR.MazeItemType.BIG_TREE_WALL_VERTICAL) {\r\n            isWallType = true;\r\n        }\r\n    }\r\n\r\n    return isWallType;\r\n};\r\n\r\nGlobal.addDoorToWall = function (wallCells, useRow, maze, createWallsResults) {\r\n    let door = null;\r\n    let maxAttempts = 100;\r\n\r\n    let amountChance = [];\r\n    let chance1 = Math.max(Math.ceil(49 / wallCells.length), 3);\r\n    for (let i = 0; i < chance1; i++) {\r\n        amountChance.push(1);\r\n    }\r\n\r\n    amountChance.push(2, 2, 2, 3);\r\n\r\n    while (door == null && maxAttempts > 0) {\r\n        maxAttempts--;\r\n        let doorCell = Math.pp_randomPick(wallCells);\r\n\r\n        let amount = Math.pp_randomPick(amountChance);\r\n        door = Global.addDoorToMaze(doorCell, amount, maze);\r\n    }\r\n\r\n    if (door != null) {\r\n        Global.addDoorToResults(door, maze, createWallsResults);\r\n    }\r\n\r\n    return door != null;\r\n};\r\n\r\nGlobal.addExtraDoors = function (maze, createWallsResults) {\r\n    let doorsAmount = createWallsResults.myDoors.length;\r\n    let extraDoors = Math.pp_randomInt(Math.round(doorsAmount * 1), Math.round(doorsAmount * 1.25));\r\n    extraDoors = Math.round(doorsAmount / Math.pp_random(4, 6));\r\n\r\n    if (Math.pp_randomInt(0, 9) == 0) {\r\n        createWallsResults.myNoDoors = true;\r\n        extraDoors = extraDoors * 1000;\r\n    }\r\n\r\n    let maxRetry = extraDoors * 100;\r\n\r\n    for (let i = 0; i < extraDoors; i++) {\r\n        let doorCell = Math.pp_randomPick(createWallsResults.myWallCells);\r\n        if (doorCell != null) {\r\n            let amount = Math.pp_randomPick(1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3);\r\n            let door = Global.addDoorToMaze(doorCell, amount, maze);\r\n            if (door != null) {\r\n                Global.addDoorToResults(door, maze, createWallsResults, true);\r\n            }\r\n\r\n            if (door == null && maxRetry > 0) {\r\n                maxRetry--;\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGlobal.addDoorToResults = function (door, maze, createWallsResults, isExtra) {\r\n    for (let i = 1; i < door.length; i++) {\r\n        let doorCell = door[i];\r\n\r\n        if (isExtra) {\r\n            maze[doorCell[0]][doorCell[1]] = LR.MazeItemType.NONE;\r\n        } else {\r\n            maze[doorCell[0]][doorCell[1]] = LR.MazeItemType.NONE;\r\n        }\r\n\r\n        createWallsResults.myWallCells.pp_removeEqual(doorCell, Global.cellCoordinatesEqual);\r\n        createWallsResults.myFreeCells.pp_pushUnique(doorCell, Global.cellCoordinatesEqual);\r\n    }\r\n\r\n    createWallsResults.myDoors.pp_pushUnique(door, Global.doorsEqual);\r\n};\r\n\r\nGlobal.addDoorToMaze = function (doorCell, amount, maze) {\r\n    let doorDirection = Global.getDoorDirection(doorCell, maze);\r\n\r\n    if (doorDirection == null) {\r\n        return null;\r\n    }\r\n\r\n    let door = [doorDirection];\r\n    let doorCellsToReturn = [];\r\n    let doorCellsVisited = [];\r\n\r\n    let doorCells = [];\r\n    doorCells.push(doorCell);\r\n    while (doorCells.length > 0 && amount > 0) {\r\n        let currentCell = Math.pp_randomPick(doorCells);\r\n        doorCellsVisited.pp_pushUnique(currentCell, Global.cellCoordinatesEqual);\r\n\r\n        doorCells.pp_removeEqual(currentCell, Global.cellCoordinatesEqual);\r\n\r\n        let currentCellDirection = Global.getDoorDirection(currentCell, maze);\r\n        if (currentCellDirection == doorDirection) {\r\n\r\n            let backupMazeCell = maze[currentCell[0]][currentCell[1]];\r\n\r\n            maze[currentCell[0]][currentCell[1]] = LR.MazeItemType.NONE;\r\n\r\n            let isOk = true;\r\n            if (doorDirection) {\r\n                let leftIsAlone = Global.isAloneWall([currentCell[0], currentCell[1] - 1], maze);\r\n                let rightIsAlone = Global.isAloneWall([currentCell[0], currentCell[1] + 1], maze);\r\n\r\n                if (leftIsAlone || rightIsAlone) {\r\n                    isOk = false;\r\n                }\r\n            } else {\r\n                let upIsAlone = Global.isAloneWall([currentCell[0] - 1, currentCell[1]], maze);\r\n                let bottomIsAlone = Global.isAloneWall([currentCell[0] + 1, currentCell[1]], maze);\r\n\r\n                if (upIsAlone || bottomIsAlone) {\r\n                    isOk = false;\r\n                }\r\n            }\r\n\r\n            maze[currentCell[0]][currentCell[1]] = backupMazeCell;\r\n\r\n            if (isOk) {\r\n                amount--;\r\n                doorCellsToReturn.pp_pushUnique(currentCell, Global.cellCoordinatesEqual);\r\n                if (doorDirection) {\r\n                    doorCells.pp_pushUnique([currentCell[0], currentCell[1] - 1], Global.cellCoordinatesEqual);\r\n                    doorCells.pp_pushUnique([currentCell[0], currentCell[1] + 1], Global.cellCoordinatesEqual);\r\n                } else {\r\n                    doorCells.pp_pushUnique([currentCell[0] - 1, currentCell[1]], Global.cellCoordinatesEqual);\r\n                    doorCells.pp_pushUnique([currentCell[0] + 1, currentCell[1]], Global.cellCoordinatesEqual);\r\n                }\r\n\r\n                for (let doorCellVisited of doorCellsVisited) {\r\n                    doorCells.pp_removeEqual(doorCellVisited, Global.cellCoordinatesEqual);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let doorCellToReturn of doorCellsToReturn) {\r\n        door.push(doorCellToReturn);\r\n    }\r\n\r\n    return door.length > 1 ? door : null;\r\n};\r\n\r\nGlobal.getDoorDirection = function (doorCell, maze) {\r\n    let doorDirection = null;\r\n\r\n    let left = Global.isWallType((doorCell[1] == 0) ? LR.MazeItemType.NONE : maze[doorCell[0]][doorCell[1] - 1]);\r\n    let right = Global.isWallType((doorCell[1] == maze[0].length - 1) ? LR.MazeItemType.NONE : maze[doorCell[0]][doorCell[1] + 1]);\r\n    let up = Global.isWallType((doorCell[0] == 0) ? LR.MazeItemType.NONE : maze[doorCell[0] - 1][doorCell[1]]);\r\n    let bottom = Global.isWallType((doorCell[0] == maze.length - 1) ? LR.MazeItemType.NONE : maze[doorCell[0] + 1][doorCell[1]]);\r\n\r\n    if (left && right && !up && !bottom) {\r\n        doorDirection = true;\r\n    } else if (!left && !right && up && bottom) {\r\n        doorDirection = false;\r\n    }\r\n\r\n    return doorDirection;\r\n};\r\n\r\nGlobal.isAloneWall = function (wallCell, maze) {\r\n    let isAlone = true;\r\n\r\n    let left = Global.isWallType((wallCell[1] == 0) ? LR.MazeItemType.NONE : maze[wallCell[0]][wallCell[1] - 1]);\r\n    let right = Global.isWallType((wallCell[1] == maze[0].length - 1) ? LR.MazeItemType.NONE : maze[wallCell[0]][wallCell[1] + 1]);\r\n    let up = Global.isWallType((wallCell[0] == 0) ? LR.MazeItemType.NONE : maze[wallCell[0] - 1][wallCell[1]]);\r\n    let bottom = Global.isWallType((wallCell[0] == maze.length - 1) ? LR.MazeItemType.NONE : maze[wallCell[0] + 1][wallCell[1]]);\r\n\r\n    if (left || right || up || bottom) {\r\n        isAlone = false;\r\n    } else if (!Global.isWallType(maze[wallCell[0]][wallCell[1]])) {\r\n        isAlone = false;\r\n    }\r\n\r\n    return isAlone;\r\n};\r\n\r\nGlobal.chooseSpecialRoomSetups = function (createWallsResults) {\r\n    let bigTreeSize = [0, 0];\r\n\r\n    {\r\n        let randomSizes = [Math.pp_randomInt(3, 5), Math.pp_randomInt(3, 4)];\r\n        let first = Math.pp_randomInt(0, 1);\r\n        bigTreeSize[0] = randomSizes[first];\r\n        bigTreeSize[1] = randomSizes[(first + 1) % 2];\r\n        createWallsResults.myBigTreeRoomSize = bigTreeSize;\r\n    }\r\n\r\n    let createPlayerRoom = Math.pp_randomInt(0, 3) != 0;\r\n    if (createPlayerRoom) {\r\n        createWallsResults.myPlayerRoomSize = [Math.pp_randomInt(3, 4), Math.pp_randomInt(3, 4)];\r\n    }\r\n\r\n    let specialRoom = Math.pp_randomInt(0, 2) == 0;\r\n    if (specialRoom) {\r\n        createWallsResults.myWoodsRoomSize = [Math.pp_randomInt(3, 5), Math.pp_randomInt(3, 5)];\r\n    }\r\n};", "LR.AddElemenstResults = class AddElemenstResults {\r\n    constructor() {\r\n        this.myRootsMustBeFar = false;\r\n        this.myTreesMustBeFar = false;\r\n\r\n        this.myRootsToAdd = 3;\r\n\r\n        this.myAllElements = [];\r\n\r\n        this.myElementsFar = [];\r\n\r\n        this.myRootsFar = [];\r\n        this.myTreesFar = [];\r\n\r\n        this.myTreesFar = [];\r\n\r\n        this.myZestiesFar = [];\r\n\r\n        this.myPlayer = [0, 0];\r\n        this.myFirstRoot = [0, 0];\r\n    }\r\n};\r\n\r\n\r\nGlobal.addElementsToMaze = function (maze, createWallsResults) {\r\n    let freeCells = createWallsResults.myFreeCells.pp_clone();\r\n    let doors = createWallsResults.myDoors.pp_clone();\r\n\r\n    let addElementsResults = new LR.AddElemenstResults();\r\n    addElementsResults.myRootsMustBeFar = Math.pp_randomInt(0, 4) != 0;\r\n    addElementsResults.myTreesMustBeFar = Math.pp_randomInt(0, 4) != 0;\r\n\r\n    if (createWallsResults.myWoodsRoom != null) {\r\n        Global.addWoods(maze, createWallsResults, freeCells, addElementsResults);\r\n    }\r\n\r\n    Global.addBigTree(maze, createWallsResults, freeCells, addElementsResults);\r\n    let firstRootAdded = Global.addPlayer(maze, createWallsResults, freeCells, addElementsResults);\r\n\r\n    if (!firstRootAdded) {\r\n        Global.addFirstRoot(maze, createWallsResults, freeCells, addElementsResults);\r\n    }\r\n\r\n    if (Math.pp_randomInt(0, 9) != 0 && (!createWallsResults.myNoDoors || Math.pp_randomInt(0, 2) != 0)) {\r\n        //console.error(\"roots\");\r\n        Global.addRootWalls(maze, createWallsResults, freeCells, doors, addElementsResults);\r\n    }\r\n\r\n    Global.addRoots(maze, createWallsResults, freeCells, addElementsResults);\r\n    Global.addTrees(maze, createWallsResults, freeCells, addElementsResults);\r\n    Global.addZesties(maze, createWallsResults, freeCells, addElementsResults);\r\n\r\n    Global.addWondermelon(maze, createWallsResults, freeCells, addElementsResults);\r\n\r\n    let everythingReachable = Global.isEverythingReachable(maze, addElementsResults);\r\n\r\n    return everythingReachable;\r\n}\r\n\r\nGlobal.addBigTree = function (maze, createWallsResults, freeCells, addElementsResults) {\r\n    let room = createWallsResults.myBigTreeRoom;\r\n\r\n    let start = room[0];\r\n    let end = room[1];\r\n\r\n    let rowStart = start[0] + 1;\r\n    let rowEnd = end[0] - 1;\r\n\r\n    let columnStart = start[1] + 1;\r\n    let columnEnd = end[1] - 1;\r\n\r\n    let bigTreePosition = [Math.pp_randomInt(rowStart, rowEnd), Math.pp_randomInt(columnStart, columnEnd)];\r\n    maze[bigTreePosition[0]][bigTreePosition[1]] = LR.MazeItemType.BIG_TREE;\r\n\r\n    if (!freeCells.pp_hasEqual(bigTreePosition, Global.cellCoordinatesEqual)) {\r\n        //console.error(\"NOT IN A FREE CELL NOT POSSIBLE\");\r\n    }\r\n\r\n    freeCells.pp_removeEqual(bigTreePosition, Global.cellCoordinatesEqual);\r\n    freeCells.pp_removeEqual([bigTreePosition[0] - 1, bigTreePosition[1]], Global.cellCoordinatesEqual);\r\n    freeCells.pp_removeEqual([bigTreePosition[0] + 1, bigTreePosition[1]], Global.cellCoordinatesEqual);\r\n    freeCells.pp_removeEqual([bigTreePosition[0], bigTreePosition[1] - 1], Global.cellCoordinatesEqual);\r\n    freeCells.pp_removeEqual([bigTreePosition[0], bigTreePosition[1] + 1], Global.cellCoordinatesEqual);\r\n\r\n    addElementsResults.myAllElements.push(bigTreePosition);\r\n    addElementsResults.myElementsFar.push(bigTreePosition);\r\n    addElementsResults.myRootsFar.push(bigTreePosition);\r\n}\r\n\r\nGlobal.addPlayer = function (maze, createWallsResults, freeCells, addElementsResults) {\r\n    let firstRootAdded = false;\r\n\r\n    if (createWallsResults.myPlayerRoom != null) {\r\n        firstRootAdded = true;\r\n\r\n        let room = createWallsResults.myPlayerRoom;\r\n\r\n        let start = room[0];\r\n        let end = room[1];\r\n\r\n        let rowStart = start[0];\r\n        let rowEnd = end[0];\r\n\r\n        let columnStart = start[1];\r\n        let columnEnd = end[1];\r\n\r\n        let playerPosition = [Math.pp_randomInt(rowStart, rowEnd), Math.pp_randomInt(columnStart, columnEnd)];\r\n        maze[playerPosition[0]][playerPosition[1]] = LR.MazeItemType.PLAYER_START;\r\n\r\n        if (!freeCells.pp_hasEqual(playerPosition, Global.cellCoordinatesEqual)) {\r\n            //console.error(\"NOT IN A FREE CELL NOT POSSIBLE\");\r\n        }\r\n\r\n        freeCells.pp_removeEqual(playerPosition, Global.cellCoordinatesEqual);\r\n\r\n        addElementsResults.myAllElements.push(playerPosition);\r\n        addElementsResults.myElementsFar.push(playerPosition);\r\n        addElementsResults.myPlayer.pp_copy(playerPosition);\r\n        addElementsResults.myRootsFar.push(playerPosition);\r\n\r\n        let firstRootPosition = [0, 0];\r\n        let found = false;\r\n        while (!found) {\r\n            firstRootPosition = [Math.pp_randomInt(rowStart, rowEnd), Math.pp_randomInt(columnStart, columnEnd)];\r\n            if (freeCells.pp_hasEqual(firstRootPosition, Global.cellCoordinatesEqual)) {\r\n                found = true;\r\n            }\r\n        }\r\n\r\n        maze[firstRootPosition[0]][firstRootPosition[1]] = LR.MazeItemType.BIG_TREE_FIRST_ROOT;\r\n\r\n        freeCells.pp_removeEqual(firstRootPosition, Global.cellCoordinatesEqual);\r\n\r\n        addElementsResults.myAllElements.push(firstRootPosition);\r\n        addElementsResults.myElementsFar.push(firstRootPosition);\r\n        addElementsResults.myFirstRoot.pp_copy(firstRootPosition);\r\n        addElementsResults.myRootsFar.push(firstRootPosition);\r\n    } else {\r\n        let playerPosition = Math.pp_randomPick(freeCells);\r\n        freeCells.pp_removeEqual(playerPosition, Global.cellCoordinatesEqual);\r\n\r\n        maze[playerPosition[0]][playerPosition[1]] = LR.MazeItemType.PLAYER_START;\r\n\r\n        addElementsResults.myAllElements.push(playerPosition);\r\n        addElementsResults.myElementsFar.push(playerPosition);\r\n        addElementsResults.myPlayer.pp_copy(playerPosition);\r\n        addElementsResults.myRootsFar.push(playerPosition);\r\n    }\r\n\r\n    return firstRootAdded;\r\n}\r\n\r\nGlobal.addFirstRoot = function (maze, createWallsResults, freeCells, addElementsResults) {\r\n    let far = addElementsResults.myRootsMustBeFar;\r\n\r\n    let firstRootPosition = Math.pp_randomPick(freeCells);\r\n    let farDistance = 3;\r\n    let isFar = Global.isFarFromAll(firstRootPosition, addElementsResults.myRootsFar, maze, farDistance);\r\n\r\n    let maxAttempts = 100;\r\n    while (far && !isFar && maxAttempts > 0) {\r\n        maxAttempts--;\r\n\r\n        firstRootPosition = Math.pp_randomPick(freeCells);\r\n        isFar = Global.isFarFromAll(firstRootPosition, addElementsResults.myRootsFar, maze, farDistance);\r\n\r\n        if (!isFar && maxAttempts == 0 && farDistance == 3) {\r\n            farDistance = 4;\r\n            maxAttempts = 50;\r\n        }\r\n    }\r\n\r\n    maze[firstRootPosition[0]][firstRootPosition[1]] = LR.MazeItemType.BIG_TREE_FIRST_ROOT;\r\n\r\n    freeCells.pp_removeEqual(firstRootPosition, Global.cellCoordinatesEqual);\r\n\r\n    addElementsResults.myAllElements.push(firstRootPosition);\r\n    addElementsResults.myElementsFar.push(firstRootPosition);\r\n    addElementsResults.myFirstRoot.pp_copy(firstRootPosition);\r\n    addElementsResults.myRootsFar.push(firstRootPosition);\r\n}\r\n\r\nGlobal.addRootWalls = function (maze, createWallsResults, freeCells, doors, addElementsResults) {\r\n    let rootWallsToAdd = Math.round(createWallsResults.myDoors.length * (Math.pp_random(0.2, 0.4)));\r\n\r\n    let rootWallsAdded = 0;\r\n    let rootWallsToAddOriginal = rootWallsToAdd;\r\n\r\n    let allowOneBigRootWall = false;\r\n    if (Math.pp_randomInt(0, 9) == 0) {\r\n        allowOneBigRootWall = true;\r\n    }\r\n\r\n    let blockedDoors = 0;\r\n    let doorsLength = doors.length;\r\n    while (rootWallsToAdd > 0) {\r\n        rootWallsToAdd--;\r\n\r\n        let maxAttempts = 100;\r\n        while (maxAttempts > 0 && doors.length > 0) {\r\n            maxAttempts--;\r\n\r\n            let randomDoorIndex = Math.pp_randomInt(0, doors.length - 1);\r\n            let randomDoor = doors[randomDoorIndex];\r\n            doors.pp_removeIndex(randomDoorIndex);\r\n\r\n            if (randomDoor.length < 5) {\r\n                if (Global.isDoorFree(randomDoor, freeCells)) {\r\n                    if (Global.isDoorLimited(randomDoor, maze)) {\r\n                        if (!Global.isDoorBlockingPlayer(addElementsResults.myPlayer, addElementsResults.myFirstRoot, randomDoor, maze)) {\r\n                            if (randomDoor.length == 2) {\r\n                                //console.error(\"root door 2\");\r\n                                let doorCell = randomDoor[1];\r\n                                maze[doorCell[0]][doorCell[1]] = randomDoor[0] ? LR.MazeItemType.BIG_TREE_WALL_HORIZONTAL : LR.MazeItemType.BIG_TREE_WALL_VERTICAL;\r\n                                freeCells.pp_removeEqual(doorCell, Global.cellCoordinatesEqual);\r\n                                addElementsResults.myAllElements.push(doorCell);\r\n\r\n                            } else if (randomDoor.length == 3) {\r\n                                //console.error(\"root door 3\");\r\n                                let doorCellIndex = Math.pp_randomInt(0, 1);\r\n                                let doorCell = randomDoor[doorCellIndex + 1];\r\n                                maze[doorCell[0]][doorCell[1]] = randomDoor[0] ? LR.MazeItemType.BIG_TREE_WALL_HORIZONTAL : LR.MazeItemType.BIG_TREE_WALL_VERTICAL;\r\n                                freeCells.pp_removeEqual(doorCell, Global.cellCoordinatesEqual);\r\n                                addElementsResults.myAllElements.push(doorCell);\r\n\r\n                                let wallCellIndex = (doorCellIndex + 1) % 2;\r\n                                let wallCell = randomDoor[wallCellIndex + 1];\r\n                                if (!allowOneBigRootWall) {\r\n                                    maze[wallCell[0]][wallCell[1]] = LR.MazeItemType.ROCK_WALL_HORIZONTAL;\r\n                                } else {\r\n                                    allowOneBigRootWall = false;\r\n                                    maze[wallCell[0]][wallCell[1]] = randomDoor[0] ? LR.MazeItemType.BIG_TREE_WALL_HORIZONTAL : LR.MazeItemType.BIG_TREE_WALL_VERTICAL;\r\n                                }\r\n                                freeCells.pp_removeEqual(wallCell, Global.cellCoordinatesEqual);\r\n\r\n                            } else if (randomDoor.length == 4) {\r\n                                //console.error(\"root door 4\");\r\n                                let indexes = [1, 2, 3];\r\n\r\n                                let middleDoorIndex = Global.getMiddleDoorIndex(randomDoor);\r\n\r\n                                let wallCellIndex = middleDoorIndex;\r\n                                let wallCell = randomDoor[wallCellIndex];\r\n                                if (!allowOneBigRootWall) {\r\n                                    maze[wallCell[0]][wallCell[1]] = LR.MazeItemType.ROCK_WALL_HORIZONTAL;\r\n                                } else {\r\n                                    allowOneBigRootWall = false;\r\n                                    maze[wallCell[0]][wallCell[1]] = randomDoor[0] ? LR.MazeItemType.BIG_TREE_WALL_HORIZONTAL : LR.MazeItemType.BIG_TREE_WALL_VERTICAL;\r\n                                }\r\n                                freeCells.pp_removeEqual(wallCell, Global.cellCoordinatesEqual);\r\n\r\n                                indexes.pp_removeEqual(middleDoorIndex);\r\n\r\n                                for (let i = 0; i < indexes.length; i++) {\r\n                                    let doorCellIndex = indexes[i];\r\n                                    let doorCell = randomDoor[doorCellIndex];\r\n                                    maze[doorCell[0]][doorCell[1]] = randomDoor[0] ? LR.MazeItemType.BIG_TREE_WALL_HORIZONTAL : LR.MazeItemType.BIG_TREE_WALL_VERTICAL;\r\n                                    freeCells.pp_removeEqual(doorCell, Global.cellCoordinatesEqual);\r\n                                    addElementsResults.myAllElements.push(doorCell);\r\n                                }\r\n                            } else {\r\n                                //console.error(\"root door nope\", randomDoor.length);\r\n                            }\r\n\r\n                            rootWallsAdded++;\r\n\r\n                            break;\r\n                        } else {\r\n                            blockedDoors++;\r\n                            if (blockedDoors > doorsLength - 4) {\r\n                                //console.error(\"all doors are blocking?\");\r\n                            }\r\n\r\n                            //console.error(\"door blocking player\");\r\n                        }\r\n                    } else {\r\n                        //console.error(\"door not limited\");\r\n                    }\r\n                } else {\r\n                    //console.error(\"door not free\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //console.error(\"root walls:\", rootWallsToAddOriginal, \"- \", rootWallsAdded)\r\n}\r\n\r\nGlobal.addWoods = function (maze, createWallsResults, freeCells, addElementsResults) {\r\n    let addRoot = Math.pp_randomInt(0, 2) != 0;\r\n\r\n    let room = createWallsResults.myWoodsRoom;\r\n\r\n    let start = room[0];\r\n    let end = room[1];\r\n\r\n    let roomCells = [];\r\n    for (let row = start[0]; row <= end[0]; row++) {\r\n        for (let column = start[1]; column <= end[1]; column++) {\r\n            roomCells.push([row, column]);\r\n        }\r\n    }\r\n\r\n    if (addRoot) {\r\n        let rootPosition = Math.pp_randomPick(roomCells);\r\n        roomCells.pp_removeEqual(rootPosition, Global.cellCoordinatesEqual);\r\n\r\n        if (!freeCells.pp_hasEqual(rootPosition, Global.cellCoordinatesEqual)) {\r\n            //console.error(\"NOT IN A FREE CELL NOT POSSIBLE\");\r\n        }\r\n        freeCells.pp_removeEqual(rootPosition, Global.cellCoordinatesEqual);\r\n\r\n        maze[rootPosition[0]][rootPosition[1]] = LR.MazeItemType.BIG_TREE_ROOT;\r\n\r\n        addElementsResults.myAllElements.push(rootPosition);\r\n        addElementsResults.myElementsFar.push(rootPosition);\r\n        addElementsResults.myRootsFar.push(rootPosition);\r\n\r\n        addElementsResults.myRootsToAdd--;\r\n    }\r\n\r\n    while (roomCells.length > 0) {\r\n        let treePosition = Math.pp_randomPick(roomCells);\r\n        roomCells.pp_removeEqual(treePosition, Global.cellCoordinatesEqual);\r\n\r\n        if (!freeCells.pp_hasEqual(treePosition, Global.cellCoordinatesEqual)) {\r\n            //console.error(\"NOT IN A FREE CELL NOT POSSIBLE\");\r\n        }\r\n        freeCells.pp_removeEqual(treePosition, Global.cellCoordinatesEqual);\r\n\r\n        maze[treePosition[0]][treePosition[1]] = LR.MazeItemType.HUMAN_TREE_0 + 7;\r\n\r\n        addElementsResults.myAllElements.push(treePosition);\r\n        addElementsResults.myElementsFar.push(treePosition);\r\n    }\r\n}\r\n\r\nGlobal.addRoots = function (maze, createWallsResults, freeCells, addElementsResults) {\r\n    let far = addElementsResults.myRootsMustBeFar;\r\n\r\n    let rootsToAdd = addElementsResults.myRootsToAdd\r\n    for (let i = 0; i < rootsToAdd; i++) {\r\n        let rootPosition = Math.pp_randomPick(freeCells);\r\n        let farDistance = 3;\r\n        let isFar = Global.isFarFromAll(rootPosition, addElementsResults.myRootsFar, maze, farDistance);\r\n\r\n        let maxAttempts = 100;\r\n        while (far && !isFar && maxAttempts > 0) {\r\n            maxAttempts--;\r\n\r\n            rootPosition = Math.pp_randomPick(freeCells);\r\n            isFar = Global.isFarFromAll(rootPosition, addElementsResults.myRootsFar, maze, farDistance);\r\n\r\n            if (!isFar && maxAttempts == 0 && farDistance == 3) {\r\n                farDistance = 4;\r\n                maxAttempts = 50;\r\n            }\r\n        }\r\n\r\n        maze[rootPosition[0]][rootPosition[1]] = LR.MazeItemType.BIG_TREE_ROOT;\r\n\r\n        freeCells.pp_removeEqual(rootPosition, Global.cellCoordinatesEqual);\r\n\r\n        addElementsResults.myAllElements.push(rootPosition);\r\n        addElementsResults.myElementsFar.push(rootPosition);\r\n        addElementsResults.myRootsFar.push(rootPosition);\r\n    }\r\n}\r\n\r\nGlobal.addTrees = function (maze, createWallsResults, freeCells, addElementsResults) {\r\n    let far = addElementsResults.myTreesFar;\r\n\r\n    let extra = 0;\r\n    if (maze.length * maze[0].length > 700) {\r\n        extra = 2\r\n    } else if (maze.length * maze[0].length > 550) {\r\n        extra = 1\r\n    }\r\n\r\n    let treesToAdd = Math.pp_randomInt(4 + extra, 8 + extra);\r\n    if (Math.pp_randomInt(0, 9) == 0) {\r\n        treesToAdd = 0;\r\n    }\r\n\r\n    for (let i = 0; i < treesToAdd; i++) {\r\n        let treePosition = Math.pp_randomPick(freeCells);\r\n        let farDistance = 3;\r\n        let isFar = Global.isFarFromAll(treePosition, addElementsResults.myTreesFar, maze, farDistance);\r\n\r\n        let maxAttempts = 100;\r\n        while (far && !isFar && maxAttempts > 0) {\r\n            maxAttempts--;\r\n\r\n            treePosition = Math.pp_randomPick(freeCells);\r\n            isFar = Global.isFarFromAll(treePosition, addElementsResults.myTreesFar, maze, farDistance);\r\n\r\n            if (!isFar && maxAttempts == 0 && farDistance == 3) {\r\n                farDistance = 4;\r\n                maxAttempts = 50;\r\n            }\r\n        }\r\n\r\n        maze[treePosition[0]][treePosition[1]] = LR.MazeItemType.HUMAN_TREE_0 + 7;\r\n\r\n        freeCells.pp_removeEqual(treePosition, Global.cellCoordinatesEqual);\r\n\r\n        addElementsResults.myAllElements.push(treePosition);\r\n        addElementsResults.myElementsFar.push(treePosition);\r\n        addElementsResults.myTreesFar.push(treePosition);\r\n    }\r\n}\r\n\r\nGlobal.addZesties = function (maze, createWallsResults, freeCells, addElementsResults) {\r\n    let far = true;\r\n\r\n    let zestyMax = [1, 1, 1, 2];\r\n    if (maze.length * maze[0].length > 700) {\r\n        zestyMax = [1, 2];\r\n    } else if (maze.length * maze[0].length > 550) {\r\n        zestyMax = [1, 1, 2];\r\n    }\r\n\r\n    let zestiesToAdd = Math.pp_randomPick(zestyMax);\r\n    if (Math.pp_randomInt(0, 9) == 0) {\r\n        zestiesToAdd = 0;\r\n    }\r\n\r\n    for (let i = 0; i < zestiesToAdd; i++) {\r\n        let zestyPosition = Math.pp_randomPick(freeCells);\r\n        let farDistance = 3;\r\n        let isFar = Global.isFarFromAll(zestyPosition, addElementsResults.myZestiesFar, maze, farDistance);\r\n\r\n        let maxAttempts = 100;\r\n        while (far && !isFar && maxAttempts > 0) {\r\n            maxAttempts--;\r\n\r\n            zestyPosition = Math.pp_randomPick(freeCells);\r\n            isFar = Global.isFarFromAll(zestyPosition, addElementsResults.myZestiesFar, maze, farDistance);\r\n\r\n            if (!isFar && maxAttempts == 0 && farDistance == 3) {\r\n                farDistance = 4;\r\n                maxAttempts = 50;\r\n            }\r\n        }\r\n\r\n        maze[zestyPosition[0]][zestyPosition[1]] = LR.MazeItemType.ZESTY;\r\n\r\n        freeCells.pp_removeEqual(zestyPosition, Global.cellCoordinatesEqual);\r\n\r\n        addElementsResults.myAllElements.push(zestyPosition);\r\n        addElementsResults.myElementsFar.push(zestyPosition);\r\n        addElementsResults.myZestiesFar.push(zestyPosition);\r\n    }\r\n}\r\n\r\nGlobal.addWondermelon = function (maze, createWallsResults, freeCells, addElementsResults) {\r\n    let wondermelonPosition = Math.pp_randomPick(freeCells);\r\n\r\n    maze[wondermelonPosition[0]][wondermelonPosition[1]] = LR.MazeItemType.WONDERMELON;\r\n\r\n    freeCells.pp_removeEqual(wondermelonPosition, Global.cellCoordinatesEqual);\r\n\r\n    addElementsResults.myAllElements.push(wondermelonPosition);\r\n    addElementsResults.myElementsFar.push(wondermelonPosition);\r\n    addElementsResults.myZestiesFar.push(wondermelonPosition);\r\n}\r\n\r\nGlobal.isDoorFree = function isDoorFree(door, freeCells) {\r\n    let isDoorFree = true;\r\n\r\n    for (let i = 1; i < door.length; i++) {\r\n        let doorCell = door[i];\r\n\r\n        if (!freeCells.pp_hasEqual(doorCell)) {\r\n            isDoorFree = false;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return isDoorFree;\r\n}\r\n\r\nGlobal.isDoorLimited = function isDoorLimited(door, maze) {\r\n    let isDoorLimited = true;\r\n\r\n    if (door[0]) {\r\n        let min = Number.MAX_VALUE;\r\n        let max = -Number.MAX_VALUE;\r\n        for (let i = 1; i < door.length; i++) {\r\n            let doorCell = door[i];\r\n\r\n            min = Math.min(min, doorCell[1]);\r\n            max = Math.max(max, doorCell[1]);\r\n\r\n            //console.error(\"row\", doorCell[0]);\r\n        }\r\n\r\n        isDoorLimited = Global.isWallType(maze[door[1][0]][min - 1]) && Global.isWallType(maze[door[1][0]][max + 1]);\r\n    } else {\r\n        let min = Number.MAX_VALUE;\r\n        let max = -Number.MAX_VALUE;\r\n        for (let i = 1; i < door.length; i++) {\r\n            let doorCell = door[i];\r\n\r\n            min = Math.min(min, doorCell[0]);\r\n            max = Math.max(max, doorCell[0]);\r\n\r\n            //console.error(\"column\", doorCell[1]);\r\n        }\r\n\r\n        isDoorLimited = Global.isWallType(maze[min - 1][door[1][1]]) && Global.isWallType(maze[max + 1][door[1][1]]);\r\n    }\r\n\r\n    return isDoorLimited;\r\n}\r\n\r\nGlobal.isDoorBlockingPlayer = function isDoorBlockingPlayer(player, firstRoot, randomDoor, maze) {\r\n    let mazeClone = [];\r\n    for (let i = 0; i < maze.length; i++) {\r\n        mazeClone[i] = [];\r\n        let row = maze[i];\r\n        for (let j = 0; j < row.length; j++) {\r\n            mazeClone[i][j] = maze[i][j];\r\n        }\r\n    }\r\n\r\n    for (let i = 1; i < randomDoor.length; i++) {\r\n        let doorCell = randomDoor[i];\r\n\r\n        mazeClone[doorCell[0]][doorCell[1]] = randomDoor[0] ? LR.MazeItemType.BIG_TREE_WALL_HORIZONTAL : LR.MazeItemType.BIG_TREE_WALL_VERTICAL;\r\n    }\r\n\r\n    let reachableCells = Global.getReachableCells(player, mazeClone, true);\r\n\r\n    return !reachableCells.pp_hasEqual(firstRoot, Global.cellCoordinatesEqual);\r\n}\r\n\r\nGlobal.isEverythingReachable = function isEverythingReachable(maze, addElementsResult) {\r\n    let reachableCells = Global.getReachableCells(addElementsResult.myPlayer, maze, false);\r\n\r\n    let allElements = addElementsResult.myAllElements.pp_clone();\r\n    //console.error(\"Elements Not Reachable:\", allElements.length);\r\n\r\n    for (let reachableCell of reachableCells) {\r\n        allElements.pp_removeEqual(reachableCell, Global.cellCoordinatesEqual);\r\n    }\r\n\r\n    //console.error(\"Elements Not Reachable:\", allElements.length);\r\n\r\n    return allElements.length == 0;\r\n}\r\n\r\nGlobal.isFarFromAll = function isFarFromAll(cell, otherCells, maze, far = 3) {\r\n    let farFromAll = true;\r\n\r\n    for (let otherCell of otherCells) {\r\n        if (!Global.isFar(cell, otherCell, maze, far)) {\r\n            farFromAll = false;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return farFromAll;\r\n}\r\n\r\nGlobal.isFar = function isFar(first, second, maze, far = 3) {\r\n    return Global.distanceBetweenCellPositions(first, second) > Math.max(maze.length, maze[0].length) / far;\r\n}\r\n\r\nGlobal.distanceBetweenCellPositions = function distanceBetweenCellPositions(first, second) {\r\n    return Math.max(Math.abs(first[0] - second[0]), Math.abs(first[1] - second[1]))\r\n}\r\n\r\nGlobal.getMiddleDoorIndex = function getMiddleDoorIndex(door) {\r\n    let middleIndex = -1;\r\n    let direction = door[0];\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n        let currentDoor = door[1 + i];\r\n        let previousPos = [currentDoor[0], currentDoor[1] - 1];\r\n        let nextPos = [currentDoor[0], currentDoor[1] + 1];\r\n        if (!direction) {\r\n            previousPos = [currentDoor[0] - 1, currentDoor[1]];\r\n            nextPos = [currentDoor[0] + 1, currentDoor[1]];\r\n        }\r\n\r\n        let previousFound = false;\r\n        let nextFound = false;\r\n\r\n        for (let j = 0; j < 3; j++) {\r\n            let doorToCheck = door[1 + j];\r\n            if (doorToCheck[0] == previousPos[0] && doorToCheck[1] == previousPos[1]) {\r\n                previousFound = true;\r\n            }\r\n\r\n            if (doorToCheck[0] == nextPos[0] && doorToCheck[1] == nextPos[1]) {\r\n                nextFound = true;\r\n            }\r\n        }\r\n\r\n        if (previousFound && nextFound) {\r\n            middleIndex = 1 + i;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (middleIndex == -1) {\r\n        middleIndex = 1;\r\n        if (Global.myFromAbove) {\r\n            console.error(\"ERROR MIDDLE INDEX NOT FOUND\");\r\n        }\r\n    }\r\n\r\n    return middleIndex;\r\n}", "WL.registerComponent('billboard-player', {\r\n    _myKeepUp: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init() {\r\n    },\r\n    start() {\r\n        this._myUp = [0, 1, 0];\r\n        this._myPosition = PP.vec3_create();\r\n    },\r\n    update(dt) {\r\n        let playerPosition = PP.myPlayerObjects.myHead.pp_getPosition();\r\n        let directionToPlayer = playerPosition.vec3_sub(this.object.pp_getPosition(this._myPosition), this._myPosition);\r\n        if (!directionToPlayer.vec3_isZero(0.0001)) {\r\n            if (this._myKeepUp) {\r\n                this.object.pp_setUp(this._myUp, directionToPlayer);\r\n            } else {\r\n                this.object.pp_setForward(directionToPlayer, this._myUp);\r\n            }\r\n        }\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        clonedComponent._myKeepUp = this._myKeepUp;\r\n\r\n        return clonedComponent;\r\n    }\r\n});", "WL.registerComponent('story', {\r\n    _myOnlyVR: { type: WL.Type.Bool, default: true }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myStarted = false;\r\n        this._myResetPhysx = true;\r\n        this._myTimer2 = new PP.Timer(4);\r\n        this._myTimer = new PP.Timer(30);\r\n        this._myTimerSkipFirstTime = new PP.Timer(12);\r\n\r\n        this._mySteps = [];\r\n        this._myStepDelay = 0.8;\r\n        this._myStepTimer = new PP.Timer(0.1);\r\n        let delay = Math.pp_lerp(this._myStepDelay * 2, this._myStepDelay, 0.75);\r\n        this._myStepTimer.start(Math.pp_random(delay - 0.1, delay + 0.05));\r\n\r\n        this._mySkip = false;\r\n        this._myCanSkip = false;\r\n    },\r\n    update: function (dt) {\r\n        if (PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).myMultiplePressEndCount >= 2 || PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).myMultiplePressEndCount >= 2 ||\r\n            PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).myMultiplePressEndCount >= 2 || PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).myMultiplePressEndCount >= 2 ||\r\n            PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.SELECT).myMultiplePressEndCount >= 2 || PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.SQUEEZE).myMultiplePressEndCount >= 2 ||\r\n            PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.SELECT).myMultiplePressEndCount >= 2 || PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.SQUEEZE).myMultiplePressEndCount >= 2\r\n        ) {\r\n            if (this._myCanSkip) {\r\n                this._mySkip = true;\r\n            }\r\n        }\r\n\r\n        if (!this._myStarted) {\r\n            if (Global.myStoryReady) {\r\n                if (PP.XRUtils.isSessionActive() || !this._myOnlyVR) {\r\n                    let currentVersion = 21;\r\n                    console.log(\"Game Version:\", currentVersion);\r\n\r\n                    this._myStarted = true;\r\n                    this._myCanSkip = Global.mySaveManager.loadBool(\"can_skip\", false);\r\n\r\n                    if (Global.myIsWeddingTime || Global.myIsMazeverseTime) {\r\n                        if (Global.myFromAbove) {\r\n                            this._myTimer.start(0);\r\n                        } else {\r\n                            this._myTimer.start(8);\r\n                        }\r\n                    }\r\n\r\n                    if (Global.myIsMazeverseTime) {\r\n                        Global.mySky.pp_rotateAxis(Math.pp_randomInt(0, 360), [0, 1, 0]);\r\n                        Global.myLights.pp_rotateAxis(Math.pp_randomInt(0, 360), [0, 1, 0]);\r\n                    }\r\n\r\n                    Global.mySaveManager.save(\"is_wedding\", false, false);\r\n                    //Global.mySaveManager.save(\"is_mazeverse\", false, false); keep mazeverse until switch\r\n                }\r\n            }\r\n        } else {\r\n            if (this._mySteps.length == 0) {\r\n                this._mySteps[0] = PP.myAudioManager.createAudioPlayer(AudioID.PASSO_1);\r\n            }\r\n\r\n            if (this._myResetActive) {\r\n                this._myResetActive = false;\r\n                let physxs = WL.scene.pp_getComponents(\"physx\");\r\n                for (let physx of physxs) {\r\n                    physx.active = true;\r\n                }\r\n            }\r\n\r\n            if (this._myResetPhysx) {\r\n                this._myResetPhysx = false;\r\n                this._myResetActive = true;\r\n\r\n                let physxs = WL.scene.pp_getComponents(\"physx\");\r\n                for (let physx of physxs) {\r\n                    if (physx.backupExtents != null) {\r\n                        physx.extents = physx.backupExtents;\r\n                        //physx.backupExtents.vec3_error();\r\n                        physx.backupExtents = null;\r\n                    }\r\n                    physx.active = false;\r\n                }\r\n            }\r\n            if (this._myTimer.isRunning()) {\r\n\r\n                this._myStepTimer.update(dt);\r\n                if (this._myStepTimer.isDone()) {\r\n                    let delay = Math.pp_lerp(this._myStepDelay * 2, this._myStepDelay, 0.75);\r\n                    this._myStepTimer.start(Math.pp_random(delay - 0.1, delay + 0.05));\r\n\r\n                    let player = this._mySteps[0];\r\n                    player.setPosition(Global.myPlayer.getPositionReal());\r\n                    player.setPitch(Math.pp_random(1 - 0.35, 1 + 0.15));\r\n                    player.play();\r\n                }\r\n\r\n                this._myTimer.update(dt);\r\n                this._myTimer2.update(dt);\r\n\r\n                this._myTimerSkipFirstTime.update(dt);\r\n                if (this._myTimerSkipFirstTime.isDone()) {\r\n                    this._myCanSkip = true;\r\n                }\r\n\r\n                if (this._myTimer.isDone() || (this._myCanSkip && this._myTimer2.isDone() && this._mySkip)) {\r\n                    if (this._mySkip && this._myTimer2.isDone() && this._myCanSkip) {\r\n                        if (Global.myGoogleAnalytics) {\r\n                            gtag(\"event\", \"intro_skipped\", {\r\n                                \"value\": 1\r\n                            });\r\n                        }\r\n\r\n                        if (this._myTimerSkipFirstTime.isDone()) {\r\n                            if (Global.myGoogleAnalytics) {\r\n                                gtag(\"event\", \"intro_skipped_late\", {\r\n                                    \"value\": 1\r\n                                });\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (Global.myGoogleAnalytics) {\r\n                            gtag(\"event\", \"intro_watched\", {\r\n                                \"value\": 1\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"intro_done\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n\r\n                    PP.CAUtils.getUser(function (user) {\r\n                        if (user != null && user.displayName != null && user.displayName.length != null && user.displayName.length > 0) {\r\n                            if (Global.myGoogleAnalytics) {\r\n                                gtag(\"event\", \"playing_signed_in\", {\r\n                                    \"value\": 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }, null, false);\r\n\r\n                    this._myTimer.reset();\r\n                    this._myTimer2.reset();\r\n                    Global.myAxe.pp_setActive(true);\r\n                    Global.myFollowAxe.pp_setActive(true);\r\n                    Global.myReady = true;\r\n\r\n                    Global.mySaveManager.save(\"can_skip\", true, false);\r\n\r\n                    Global.myMusicPlayer = PP.myAudioManager.createAudioPlayer(AudioID.MUSIC);\r\n                    Global.myMusicPlayer.play();\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nGlobal.myMusicPlayer = null;", "import { Howler } from 'howler';\r\n\r\nWL.registerComponent('audio-load', {\r\n}, {\r\n    init() {\r\n    },\r\n    start() {\r\n        this._myStarted = false;\r\n    },\r\n    update(dt) {\r\n        if (!this._myStarted) {\r\n            if (Global.myStoryReady) {\r\n                this._myStarted = true;\r\n                this.prepareSFXSetups();\r\n            }\r\n        }\r\n    },\r\n    prepareSFXSetups() {\r\n        let manager = PP.myAudioManager;\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/music/creepy_music.mp3\");\r\n            audioSetup.myLoop = true;\r\n            audioSetup.mySpatial = false;\r\n            audioSetup.myVolume = 0.1;\r\n            manager.addAudioSetup(AudioID.MUSIC, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Lamento albero 1.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 1;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.LAMENTO_UMANO_1, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Lamento albero 2.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 1;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.LAMENTO_UMANO_2, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Lamento albero 3.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 1;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.LAMENTO_UMANO_3, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Lamento albero 1.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 1.5;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.LAMENTO_UMANO_1_MORTE, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Lamento albero 2.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 1.5;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.LAMENTO_UMANO_2_MORTE, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Lamento albero 3.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 1.5;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.LAMENTO_UMANO_3_MORTE, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Lamento albero 1.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 2.5;\r\n            audioSetup.myReferenceDistance = 2;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.LAMENTO_1, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Lamento albero 2.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 2.5;\r\n            audioSetup.myReferenceDistance = 2;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.LAMENTO_2, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Lamento albero 3.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 2.5;\r\n            audioSetup.myReferenceDistance = 2;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.LAMENTO_3, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Ascia su muro di radici.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 2.5;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.COLPO_FINALE, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Attacco ascia alberi 1.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 2;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.COLPO_NORMALE_1, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Attacco ascia alberi 2.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 2;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.COLPO_NORMALE_2, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Mangiare frutto 1.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 3;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.MANGIA_FRUTTO, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Passi nel verde 3.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 2;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.PRENDI_FRUTTO, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Passi nel verde 3.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 2;\r\n            audioSetup.myReferenceDistance = 2;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.TREE_UMANO_SPAWN, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Passi nel verde 1.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 1.5;\r\n            audioSetup.myReferenceDistance = 1.25;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.PASSO_1, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Passi nel verde 2.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 0.75;\r\n            audioSetup.myReferenceDistance = 1.5;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.PASSO_2, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Passi nel verde 3.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 0.75;\r\n            audioSetup.myReferenceDistance = 1.5;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.PASSO_3, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Attacco ascia alberi 2.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 0.75;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.HEAL, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Attacco ascia alberi 2.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 0.75;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.HEAL2, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Colpo spada su pietra 1.mp3\");\r\n            audioSetup.myRate = 0.25;\r\n            audioSetup.myVolume = 1;\r\n            audioSetup.myReferenceDistance = 2;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.SECRET_WALL_OPEN, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Colpo spada su pietra 1.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 2;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.INVINCIBLE, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/Attacco ascia alberi 2.mp3\");\r\n            audioSetup.myRate = 1;\r\n            audioSetup.myVolume = 0.5;\r\n            audioSetup.myReferenceDistance = 1;\r\n            audioSetup.myPreventPlayWhenAudioContextNotRunning = true;\r\n            manager.addAudioSetup(AudioID.BIG_TREE_DIE_HIT, audioSetup);\r\n        }\r\n\r\n        for (let i = 0; i <= AudioID.INVINCIBLE; i++) {\r\n            manager.createAudioPlayer(i);\r\n        }\r\n    }\r\n});\r\n\r\nAudioID = {\r\n    MUSIC: 0,\r\n    LAMENTO_1: 1,\r\n    LAMENTO_2: 2,\r\n    LAMENTO_3: 3,\r\n    COLPO_FINALE: 4,\r\n    COLPO_NORMALE_1: 5,\r\n    COLPO_NORMALE_2: 6,\r\n    MANGIA_FRUTTO: 7,\r\n    PRENDI_FRUTTO: 8,\r\n    PASSO_1: 10,\r\n    PASSO_2: 11,\r\n    PASSO_3: 12,\r\n    HEAL: 13,\r\n    HEAL2: 14,\r\n    LAMENTO_UMANO_1: 15,\r\n    LAMENTO_UMANO_2: 16,\r\n    LAMENTO_UMANO_3: 17,\r\n    LAMENTO_UMANO_1_MORTE: 18,\r\n    LAMENTO_UMANO_2_MORTE: 19,\r\n    LAMENTO_UMANO_3_MORTE: 20,\r\n    TREE_UMANO_SPAWN: 21,\r\n    SECRET_WALL_OPEN: 22,\r\n    BIG_TREE_DIE_HIT: 23,\r\n    INVINCIBLE: 24\r\n};", "WL.registerComponent('deactivate-on-story', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n    },\r\n    update: function (dt) {\r\n        if (Global.myReady) {\r\n            this.object.pp_setActive(false);\r\n        }\r\n    }\r\n});", "WL.registerComponent('open-ggj', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myChange = 0;\r\n        this._myEnd = 0;\r\n        this._myHit = 3;\r\n    },\r\n    update: function (dt) {\r\n        if (this._myEnd > 0) {\r\n            this._myEnd--;\r\n            if (this._myEnd == 0) {\r\n                this._myChange = 1;\r\n\r\n                Global.myUnmute = true;\r\n                Howler.mute(true);\r\n\r\n                if (Global.myAxe != null && Global.myAxe._myGrabbable != null) {\r\n                    Global.myAxe._myGrabbable.release();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myEnd == 0 && this._myChange > 0) {\r\n            this._myChange--;\r\n            if (this._myChange == 0) {\r\n                if (WL.xrSession) {\r\n                    WL.xrSession.end();\r\n                }\r\n\r\n                let onSuccess = function () {\r\n                    if (WL.xrSession) {\r\n                        WL.xrSession.end();\r\n                    }\r\n\r\n                    Global.myUnmute = true;\r\n                    Howler.mute(true);\r\n\r\n                    if (Global.myAxe != null && Global.myAxe._myGrabbable != null) {\r\n                        Global.myAxe._myGrabbable.release();\r\n                    }\r\n\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"open_ggj_success\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                }.bind(this);\r\n\r\n                let onError = function () {\r\n                    this._myChange = 10;\r\n                }.bind(this);\r\n\r\n                Global.windowOpen(\"https://globalgamejam.org/2023/games/labyroots-4\", onSuccess, onError);\r\n            }\r\n        }\r\n    },\r\n    hit() {\r\n        if (this._myHit == 0) {\r\n            this._myHit = 3;\r\n        }\r\n\r\n        this._myHit--;\r\n\r\n        return true;\r\n    },\r\n    open() {\r\n        this._myEnd = 90;\r\n        this._myChange = 1;\r\n\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"open_ggj\", {\r\n                \"value\": 1\r\n            });\r\n        }\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n        return clonedComponent;\r\n    }\r\n});", "WL.registerComponent('open-github', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myChange = 0;\r\n        this._myEnd = 0;\r\n        this._myHit = 3;\r\n    },\r\n    update: function (dt) {\r\n        if (this._myEnd > 0) {\r\n            this._myEnd--;\r\n            if (this._myEnd == 0) {\r\n                this._myChange = 1;\r\n\r\n                Global.myUnmute = true;\r\n                Howler.mute(true);\r\n\r\n                if (Global.myAxe != null && Global.myAxe._myGrabbable != null) {\r\n                    Global.myAxe._myGrabbable.release();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myEnd == 0 && this._myChange > 0) {\r\n            this._myChange--;\r\n            if (this._myChange == 0) {\r\n                if (WL.xrSession) {\r\n                    WL.xrSession.end();\r\n                }\r\n\r\n                let onSuccess = function () {\r\n                    if (WL.xrSession) {\r\n                        WL.xrSession.end();\r\n                    }\r\n\r\n                    Global.myUnmute = true;\r\n                    Howler.mute(true);\r\n\r\n                    if (Global.myAxe != null && Global.myAxe._myGrabbable != null) {\r\n                        Global.myAxe._myGrabbable.release();\r\n                    }\r\n\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"open_github_success\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                }.bind(this);\r\n\r\n                let onError = function () {\r\n                    this._myChange = 10;\r\n                }.bind(this);\r\n\r\n                Global.windowOpen(\"https://github.com/SignorPipo/labyroots\", onSuccess, onError);\r\n            }\r\n        }\r\n    },\r\n    hit() {\r\n        if (this._myHit == 0) {\r\n            this._myHit = 3;\r\n        }\r\n\r\n        this._myHit--;\r\n        return true;\r\n    },\r\n    open() {\r\n        this._myEnd = 60;\r\n        this._myChange = 1;\r\n\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"open_github\", {\r\n                \"value\": 1\r\n            });\r\n        }\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n        return clonedComponent;\r\n    }\r\n});", "WL.registerComponent('open-zesty', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myChange = 0;\r\n        this._myEnd = 0;\r\n        this._myHit = 3;\r\n    },\r\n    update: function (dt) {\r\n        if (this._myEnd > 0) {\r\n            this._myEnd--;\r\n            if (this._myEnd == 0) {\r\n                this._myChange = 1;\r\n\r\n                Global.myUnmute = true;\r\n                Howler.mute(true);\r\n\r\n                if (Global.myAxe != null && Global.myAxe._myGrabbable != null) {\r\n                    Global.myAxe._myGrabbable.release();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myEnd == 0 && this._myChange > 0) {\r\n            this._myChange--;\r\n            if (this._myChange == 0) {\r\n                this.openZestyUrl();\r\n            }\r\n        }\r\n    },\r\n    hit() {\r\n        if (this._myHit == 0) {\r\n            this._myHit = 3;\r\n        }\r\n\r\n        this._myHit--;\r\n        return true;\r\n    },\r\n    open() {\r\n        this._myEnd = 90;\r\n        this._myChange = 1;\r\n\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"open_zesty\", {\r\n                \"value\": 1\r\n            });\r\n        }\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n        return clonedComponent;\r\n    },\r\n    result(result) {\r\n    },\r\n    openZestyUrl() {\r\n        let zesty = WL.scene.pp_getComponent(\"zesty-banner\");\r\n        if (zesty != null) {\r\n            if (WL.xrSession) {\r\n                WL.xrSession.end();\r\n            }\r\n\r\n            Global.myZestyComponent = zesty;\r\n\r\n            let onSuccess = function () {\r\n                if (WL.xrSession) {\r\n                    WL.xrSession.end();\r\n                }\r\n\r\n                Global.myUnmute = true;\r\n                Howler.mute(true);\r\n\r\n                if (Global.myAxe != null && Global.myAxe._myGrabbable != null) {\r\n                    Global.myAxe._myGrabbable.release();\r\n                }\r\n\r\n                if (Global.myGoogleAnalytics) {\r\n                    gtag(\"event\", \"open_zesty_success\", {\r\n                        \"value\": 1\r\n                    });\r\n                }\r\n            }.bind(this);\r\n\r\n            let onError = function () {\r\n                this._myChange = 10;\r\n            }.bind(this);\r\n\r\n            if (zesty.banner != null) {\r\n                let onZestySuccess = function () {\r\n                    onSuccess();\r\n                    zesty.executeClick();\r\n                }.bind(this);\r\n                Global.windowOpen(zesty.banner.url, onZestySuccess, onError);\r\n            } else {\r\n                Global.windowOpen(\"https://app.zesty.market/space/11457541-0720-4287-a2a7-e3adfe7426a9\", onSuccess, onError);\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nGlobal.myZestyComponent = null;", "(()=>{var Kt=Object.create;var Ee=Object.defineProperty;var Xt=Object.getOwnPropertyDescriptor;var Gt=Object.getOwnPropertyNames;var Qt=Object.getPrototypeOf,Zt=Object.prototype.hasOwnProperty;var l=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var Yt=(t,e,r,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let n of Gt(e))!Zt.call(t,n)&&n!==r&&Ee(t,n,{get:()=>e[n],enumerable:!(i=Xt(e,n))||i.enumerable});return t};var xe=(t,e,r)=>(r=t!=null?Kt(Qt(t)):{},Yt(e||!t||!t.__esModule?Ee(r,\"default\",{value:t,enumerable:!0}):r,t));var V=l((cn,Oe)=>{\"use strict\";Oe.exports=function(e,r){return function(){for(var n=new Array(arguments.length),s=0;s<n.length;s++)n[s]=arguments[s];return e.apply(r,n)}}});var f=l((ln,Ae)=>{\"use strict\";var er=V(),X=Object.prototype.toString,G=function(t){return function(e){var r=X.call(e);return t[r]||(t[r]=r.slice(8,-1).toLowerCase())}}(Object.create(null));function C(t){return t=t.toLowerCase(),function(r){return G(r)===t}}function Q(t){return Array.isArray(t)}function j(t){return typeof t>\"u\"}function tr(t){return t!==null&&!j(t)&&t.constructor!==null&&!j(t.constructor)&&typeof t.constructor.isBuffer==\"function\"&&t.constructor.isBuffer(t)}var Re=C(\"ArrayBuffer\");function rr(t){var e;return typeof ArrayBuffer<\"u\"&&ArrayBuffer.isView?e=ArrayBuffer.isView(t):e=t&&t.buffer&&Re(t.buffer),e}function nr(t){return typeof t==\"string\"}function ir(t){return typeof t==\"number\"}function Ce(t){return t!==null&&typeof t==\"object\"}function U(t){if(G(t)!==\"object\")return!1;var e=Object.getPrototypeOf(t);return e===null||e===Object.prototype}var sr=C(\"Date\"),ar=C(\"File\"),or=C(\"Blob\"),ur=C(\"FileList\");function Z(t){return X.call(t)===\"[object Function]\"}function cr(t){return Ce(t)&&Z(t.pipe)}function lr(t){var e=\"[object FormData]\";return t&&(typeof FormData==\"function\"&&t instanceof FormData||X.call(t)===e||Z(t.toString)&&t.toString()===e)}var dr=C(\"URLSearchParams\");function fr(t){return t.trim?t.trim():t.replace(/^\\s+|\\s+$/g,\"\")}function pr(){return typeof navigator<\"u\"&&(navigator.product===\"ReactNative\"||navigator.product===\"NativeScript\"||navigator.product===\"NS\")?!1:typeof window<\"u\"&&typeof document<\"u\"}function Y(t,e){if(!(t===null||typeof t>\"u\"))if(typeof t!=\"object\"&&(t=[t]),Q(t))for(var r=0,i=t.length;r<i;r++)e.call(null,t[r],r,t);else for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e.call(null,t[n],n,t)}function K(){var t={};function e(n,s){U(t[s])&&U(n)?t[s]=K(t[s],n):U(n)?t[s]=K({},n):Q(n)?t[s]=n.slice():t[s]=n}for(var r=0,i=arguments.length;r<i;r++)Y(arguments[r],e);return t}function hr(t,e,r){return Y(e,function(n,s){r&&typeof n==\"function\"?t[s]=er(n,r):t[s]=n}),t}function mr(t){return t.charCodeAt(0)===65279&&(t=t.slice(1)),t}function yr(t,e,r,i){t.prototype=Object.create(e.prototype,i),t.prototype.constructor=t,r&&Object.assign(t.prototype,r)}function vr(t,e,r){var i,n,s,a={};e=e||{};do{for(i=Object.getOwnPropertyNames(t),n=i.length;n-- >0;)s=i[n],a[s]||(e[s]=t[s],a[s]=!0);t=Object.getPrototypeOf(t)}while(t&&(!r||r(t,e))&&t!==Object.prototype);return e}function wr(t,e,r){t=String(t),(r===void 0||r>t.length)&&(r=t.length),r-=e.length;var i=t.indexOf(e,r);return i!==-1&&i===r}function gr(t){if(!t)return null;var e=t.length;if(j(e))return null;for(var r=new Array(e);e-- >0;)r[e]=t[e];return r}var br=function(t){return function(e){return t&&e instanceof t}}(typeof Uint8Array<\"u\"&&Object.getPrototypeOf(Uint8Array));Ae.exports={isArray:Q,isArrayBuffer:Re,isBuffer:tr,isFormData:lr,isArrayBufferView:rr,isString:nr,isNumber:ir,isObject:Ce,isPlainObject:U,isUndefined:j,isDate:sr,isFile:ar,isBlob:or,isFunction:Z,isStream:cr,isURLSearchParams:dr,isStandardBrowserEnv:pr,forEach:Y,merge:K,extend:hr,trim:fr,stripBOM:mr,inherits:yr,toFlatObject:vr,kindOf:G,kindOfTest:C,endsWith:wr,toArray:gr,isTypedArray:br,isFileList:ur}});var ee=l((dn,qe)=>{\"use strict\";var q=f();function Te(t){return encodeURIComponent(t).replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%20/g,\"+\").replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\")}qe.exports=function(e,r,i){if(!r)return e;var n;if(i)n=i(r);else if(q.isURLSearchParams(r))n=r.toString();else{var s=[];q.forEach(r,function(c,h){c===null||typeof c>\"u\"||(q.isArray(c)?h=h+\"[]\":c=[c],q.forEach(c,function(d){q.isDate(d)?d=d.toISOString():q.isObject(d)&&(d=JSON.stringify(d)),s.push(Te(h)+\"=\"+Te(d))}))}),n=s.join(\"&\")}if(n){var a=e.indexOf(\"#\");a!==-1&&(e=e.slice(0,a)),e+=(e.indexOf(\"?\")===-1?\"?\":\"&\")+n}return e}});var Ne=l((fn,Se)=>{\"use strict\";var Er=f();function F(){this.handlers=[]}F.prototype.use=function(e,r,i){return this.handlers.push({fulfilled:e,rejected:r,synchronous:i?i.synchronous:!1,runWhen:i?i.runWhen:null}),this.handlers.length-1};F.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)};F.prototype.forEach=function(e){Er.forEach(this.handlers,function(i){i!==null&&e(i)})};Se.exports=F});var Pe=l((pn,ke)=>{\"use strict\";var xr=f();ke.exports=function(e,r){xr.forEach(e,function(n,s){s!==r&&s.toUpperCase()===r.toUpperCase()&&(e[r]=n,delete e[s])})}});var A=l((hn,De)=>{\"use strict\";var _e=f();function S(t,e,r,i,n){Error.call(this),this.message=t,this.name=\"AxiosError\",e&&(this.code=e),r&&(this.config=r),i&&(this.request=i),n&&(this.response=n)}_e.inherits(S,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Le=S.prototype,Be={};[\"ERR_BAD_OPTION_VALUE\",\"ERR_BAD_OPTION\",\"ECONNABORTED\",\"ETIMEDOUT\",\"ERR_NETWORK\",\"ERR_FR_TOO_MANY_REDIRECTS\",\"ERR_DEPRECATED\",\"ERR_BAD_RESPONSE\",\"ERR_BAD_REQUEST\",\"ERR_CANCELED\"].forEach(function(t){Be[t]={value:t}});Object.defineProperties(S,Be);Object.defineProperty(Le,\"isAxiosError\",{value:!0});S.from=function(t,e,r,i,n,s){var a=Object.create(Le);return _e.toFlatObject(t,a,function(c){return c!==Error.prototype}),S.call(a,t.message,e,r,i,n),a.name=t.name,s&&Object.assign(a,s),a};De.exports=S});var te=l((mn,Ue)=>{\"use strict\";Ue.exports={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1}});var re=l((yn,je)=>{\"use strict\";var b=f();function Or(t,e){e=e||new FormData;var r=[];function i(s){return s===null?\"\":b.isDate(s)?s.toISOString():b.isArrayBuffer(s)||b.isTypedArray(s)?typeof Blob==\"function\"?new Blob([s]):Buffer.from(s):s}function n(s,a){if(b.isPlainObject(s)||b.isArray(s)){if(r.indexOf(s)!==-1)throw Error(\"Circular reference detected in \"+a);r.push(s),b.forEach(s,function(c,h){if(!b.isUndefined(c)){var o=a?a+\".\"+h:h,d;if(c&&!a&&typeof c==\"object\"){if(b.endsWith(h,\"{}\"))c=JSON.stringify(c);else if(b.endsWith(h,\"[]\")&&(d=b.toArray(c))){d.forEach(function(v){!b.isUndefined(v)&&e.append(o,i(v))});return}}n(c,o)}}),r.pop()}else e.append(a,i(s))}return n(t),e}je.exports=Or});var Ie=l((vn,Fe)=>{\"use strict\";var ne=A();Fe.exports=function(e,r,i){var n=i.config.validateStatus;!i.status||!n||n(i.status)?e(i):r(new ne(\"Request failed with status code \"+i.status,[ne.ERR_BAD_REQUEST,ne.ERR_BAD_RESPONSE][Math.floor(i.status/100)-4],i.config,i.request,i))}});var Me=l((wn,ze)=>{\"use strict\";var I=f();ze.exports=I.isStandardBrowserEnv()?function(){return{write:function(r,i,n,s,a,u){var c=[];c.push(r+\"=\"+encodeURIComponent(i)),I.isNumber(n)&&c.push(\"expires=\"+new Date(n).toGMTString()),I.isString(s)&&c.push(\"path=\"+s),I.isString(a)&&c.push(\"domain=\"+a),u===!0&&c.push(\"secure\"),document.cookie=c.join(\"; \")},read:function(r){var i=document.cookie.match(new RegExp(\"(^|;\\\\s*)(\"+r+\")=([^;]*)\"));return i?decodeURIComponent(i[3]):null},remove:function(r){this.write(r,\"\",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}()});var We=l((gn,$e)=>{\"use strict\";$e.exports=function(e){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(e)}});var Je=l((bn,He)=>{\"use strict\";He.exports=function(e,r){return r?e.replace(/\\/+$/,\"\")+\"/\"+r.replace(/^\\/+/,\"\"):e}});var ie=l((En,Ve)=>{\"use strict\";var Rr=We(),Cr=Je();Ve.exports=function(e,r){return e&&!Rr(r)?Cr(e,r):r}});var Xe=l((xn,Ke)=>{\"use strict\";var se=f(),Ar=[\"age\",\"authorization\",\"content-length\",\"content-type\",\"etag\",\"expires\",\"from\",\"host\",\"if-modified-since\",\"if-unmodified-since\",\"last-modified\",\"location\",\"max-forwards\",\"proxy-authorization\",\"referer\",\"retry-after\",\"user-agent\"];Ke.exports=function(e){var r={},i,n,s;return e&&se.forEach(e.split(`\r\n`),function(u){if(s=u.indexOf(\":\"),i=se.trim(u.substr(0,s)).toLowerCase(),n=se.trim(u.substr(s+1)),i){if(r[i]&&Ar.indexOf(i)>=0)return;i===\"set-cookie\"?r[i]=(r[i]?r[i]:[]).concat([n]):r[i]=r[i]?r[i]+\", \"+n:n}}),r}});var Ze=l((On,Qe)=>{\"use strict\";var Ge=f();Qe.exports=Ge.isStandardBrowserEnv()?function(){var e=/(msie|trident)/i.test(navigator.userAgent),r=document.createElement(\"a\"),i;function n(s){var a=s;return e&&(r.setAttribute(\"href\",a),a=r.href),r.setAttribute(\"href\",a),{href:r.href,protocol:r.protocol?r.protocol.replace(/:$/,\"\"):\"\",host:r.host,search:r.search?r.search.replace(/^\\?/,\"\"):\"\",hash:r.hash?r.hash.replace(/^#/,\"\"):\"\",hostname:r.hostname,port:r.port,pathname:r.pathname.charAt(0)===\"/\"?r.pathname:\"/\"+r.pathname}}return i=n(window.location.href),function(a){var u=Ge.isString(a)?n(a):a;return u.protocol===i.protocol&&u.host===i.host}}():function(){return function(){return!0}}()});var B=l((Rn,et)=>{\"use strict\";var ae=A(),Tr=f();function Ye(t){ae.call(this,t??\"canceled\",ae.ERR_CANCELED),this.name=\"CanceledError\"}Tr.inherits(Ye,ae,{__CANCEL__:!0});et.exports=Ye});var rt=l((Cn,tt)=>{\"use strict\";tt.exports=function(e){var r=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(e);return r&&r[1]||\"\"}});var oe=l((An,nt)=>{\"use strict\";var D=f(),qr=Ie(),Sr=Me(),Nr=ee(),kr=ie(),Pr=Xe(),_r=Ze(),Lr=te(),E=A(),Br=B(),Dr=rt();nt.exports=function(e){return new Promise(function(i,n){var s=e.data,a=e.headers,u=e.responseType,c;function h(){e.cancelToken&&e.cancelToken.unsubscribe(c),e.signal&&e.signal.removeEventListener(\"abort\",c)}D.isFormData(s)&&D.isStandardBrowserEnv()&&delete a[\"Content-Type\"];var o=new XMLHttpRequest;if(e.auth){var d=e.auth.username||\"\",v=e.auth.password?unescape(encodeURIComponent(e.auth.password)):\"\";a.Authorization=\"Basic \"+btoa(d+\":\"+v)}var m=kr(e.baseURL,e.url);o.open(e.method.toUpperCase(),Nr(m,e.params,e.paramsSerializer),!0),o.timeout=e.timeout;function ge(){if(o){var g=\"getAllResponseHeaders\"in o?Pr(o.getAllResponseHeaders()):null,T=!u||u===\"text\"||u===\"json\"?o.responseText:o.response,R={data:T,status:o.status,statusText:o.statusText,headers:g,config:e,request:o};qr(function(J){i(J),h()},function(J){n(J),h()},R),o=null}}if(\"onloadend\"in o?o.onloadend=ge:o.onreadystatechange=function(){!o||o.readyState!==4||o.status===0&&!(o.responseURL&&o.responseURL.indexOf(\"file:\")===0)||setTimeout(ge)},o.onabort=function(){o&&(n(new E(\"Request aborted\",E.ECONNABORTED,e,o)),o=null)},o.onerror=function(){n(new E(\"Network Error\",E.ERR_NETWORK,e,o,o)),o=null},o.ontimeout=function(){var T=e.timeout?\"timeout of \"+e.timeout+\"ms exceeded\":\"timeout exceeded\",R=e.transitional||Lr;e.timeoutErrorMessage&&(T=e.timeoutErrorMessage),n(new E(T,R.clarifyTimeoutError?E.ETIMEDOUT:E.ECONNABORTED,e,o)),o=null},D.isStandardBrowserEnv()){var be=(e.withCredentials||_r(m))&&e.xsrfCookieName?Sr.read(e.xsrfCookieName):void 0;be&&(a[e.xsrfHeaderName]=be)}\"setRequestHeader\"in o&&D.forEach(a,function(T,R){typeof s>\"u\"&&R.toLowerCase()===\"content-type\"?delete a[R]:o.setRequestHeader(R,T)}),D.isUndefined(e.withCredentials)||(o.withCredentials=!!e.withCredentials),u&&u!==\"json\"&&(o.responseType=e.responseType),typeof e.onDownloadProgress==\"function\"&&o.addEventListener(\"progress\",e.onDownloadProgress),typeof e.onUploadProgress==\"function\"&&o.upload&&o.upload.addEventListener(\"progress\",e.onUploadProgress),(e.cancelToken||e.signal)&&(c=function(g){o&&(n(!g||g&&g.type?new Br:g),o.abort(),o=null)},e.cancelToken&&e.cancelToken.subscribe(c),e.signal&&(e.signal.aborted?c():e.signal.addEventListener(\"abort\",c))),s||(s=null);var H=Dr(m);if(H&&[\"http\",\"https\",\"file\"].indexOf(H)===-1){n(new E(\"Unsupported protocol \"+H+\":\",E.ERR_BAD_REQUEST,e));return}o.send(s)})}});var st=l((Tn,it)=>{it.exports=null});var M=l((qn,ct)=>{\"use strict\";var p=f(),at=Pe(),ot=A(),Ur=te(),jr=re(),Fr={\"Content-Type\":\"application/x-www-form-urlencoded\"};function ut(t,e){!p.isUndefined(t)&&p.isUndefined(t[\"Content-Type\"])&&(t[\"Content-Type\"]=e)}function Ir(){var t;return typeof XMLHttpRequest<\"u\"?t=oe():typeof process<\"u\"&&Object.prototype.toString.call(process)===\"[object process]\"&&(t=oe()),t}function zr(t,e,r){if(p.isString(t))try{return(e||JSON.parse)(t),p.trim(t)}catch(i){if(i.name!==\"SyntaxError\")throw i}return(r||JSON.stringify)(t)}var z={transitional:Ur,adapter:Ir(),transformRequest:[function(e,r){if(at(r,\"Accept\"),at(r,\"Content-Type\"),p.isFormData(e)||p.isArrayBuffer(e)||p.isBuffer(e)||p.isStream(e)||p.isFile(e)||p.isBlob(e))return e;if(p.isArrayBufferView(e))return e.buffer;if(p.isURLSearchParams(e))return ut(r,\"application/x-www-form-urlencoded;charset=utf-8\"),e.toString();var i=p.isObject(e),n=r&&r[\"Content-Type\"],s;if((s=p.isFileList(e))||i&&n===\"multipart/form-data\"){var a=this.env&&this.env.FormData;return jr(s?{\"files[]\":e}:e,a&&new a)}else if(i||n===\"application/json\")return ut(r,\"application/json\"),zr(e);return e}],transformResponse:[function(e){var r=this.transitional||z.transitional,i=r&&r.silentJSONParsing,n=r&&r.forcedJSONParsing,s=!i&&this.responseType===\"json\";if(s||n&&p.isString(e)&&e.length)try{return JSON.parse(e)}catch(a){if(s)throw a.name===\"SyntaxError\"?ot.from(a,ot.ERR_BAD_RESPONSE,this,null,this.response):a}return e}],timeout:0,xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",maxContentLength:-1,maxBodyLength:-1,env:{FormData:st()},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:\"application/json, text/plain, */*\"}}};p.forEach([\"delete\",\"get\",\"head\"],function(e){z.headers[e]={}});p.forEach([\"post\",\"put\",\"patch\"],function(e){z.headers[e]=p.merge(Fr)});ct.exports=z});var dt=l((Sn,lt)=>{\"use strict\";var Mr=f(),$r=M();lt.exports=function(e,r,i){var n=this||$r;return Mr.forEach(i,function(a){e=a.call(n,e,r)}),e}});var ue=l((Nn,ft)=>{\"use strict\";ft.exports=function(e){return!!(e&&e.__CANCEL__)}});var mt=l((kn,ht)=>{\"use strict\";var pt=f(),ce=dt(),Wr=ue(),Hr=M(),Jr=B();function le(t){if(t.cancelToken&&t.cancelToken.throwIfRequested(),t.signal&&t.signal.aborted)throw new Jr}ht.exports=function(e){le(e),e.headers=e.headers||{},e.data=ce.call(e,e.data,e.headers,e.transformRequest),e.headers=pt.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),pt.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\",\"common\"],function(n){delete e.headers[n]});var r=e.adapter||Hr.adapter;return r(e).then(function(n){return le(e),n.data=ce.call(e,n.data,n.headers,e.transformResponse),n},function(n){return Wr(n)||(le(e),n&&n.response&&(n.response.data=ce.call(e,n.response.data,n.response.headers,e.transformResponse))),Promise.reject(n)})}});var de=l((Pn,yt)=>{\"use strict\";var w=f();yt.exports=function(e,r){r=r||{};var i={};function n(o,d){return w.isPlainObject(o)&&w.isPlainObject(d)?w.merge(o,d):w.isPlainObject(d)?w.merge({},d):w.isArray(d)?d.slice():d}function s(o){if(w.isUndefined(r[o])){if(!w.isUndefined(e[o]))return n(void 0,e[o])}else return n(e[o],r[o])}function a(o){if(!w.isUndefined(r[o]))return n(void 0,r[o])}function u(o){if(w.isUndefined(r[o])){if(!w.isUndefined(e[o]))return n(void 0,e[o])}else return n(void 0,r[o])}function c(o){if(o in r)return n(e[o],r[o]);if(o in e)return n(void 0,e[o])}var h={url:a,method:a,data:a,baseURL:u,transformRequest:u,transformResponse:u,paramsSerializer:u,timeout:u,timeoutMessage:u,withCredentials:u,adapter:u,responseType:u,xsrfCookieName:u,xsrfHeaderName:u,onUploadProgress:u,onDownloadProgress:u,decompress:u,maxContentLength:u,maxBodyLength:u,beforeRedirect:u,transport:u,httpAgent:u,httpsAgent:u,cancelToken:u,socketPath:u,responseEncoding:u,validateStatus:c};return w.forEach(Object.keys(e).concat(Object.keys(r)),function(d){var v=h[d]||s,m=v(d);w.isUndefined(m)&&v!==c||(i[d]=m)}),i}});var fe=l((_n,vt)=>{vt.exports={version:\"0.27.2\"}});var bt=l((Ln,gt)=>{\"use strict\";var Vr=fe().version,O=A(),pe={};[\"object\",\"boolean\",\"number\",\"function\",\"string\",\"symbol\"].forEach(function(t,e){pe[t]=function(i){return typeof i===t||\"a\"+(e<1?\"n \":\" \")+t}});var wt={};pe.transitional=function(e,r,i){function n(s,a){return\"[Axios v\"+Vr+\"] Transitional option '\"+s+\"'\"+a+(i?\". \"+i:\"\")}return function(s,a,u){if(e===!1)throw new O(n(a,\" has been removed\"+(r?\" in \"+r:\"\")),O.ERR_DEPRECATED);return r&&!wt[a]&&(wt[a]=!0,console.warn(n(a,\" has been deprecated since v\"+r+\" and will be removed in the near future\"))),e?e(s,a,u):!0}};function Kr(t,e,r){if(typeof t!=\"object\")throw new O(\"options must be an object\",O.ERR_BAD_OPTION_VALUE);for(var i=Object.keys(t),n=i.length;n-- >0;){var s=i[n],a=e[s];if(a){var u=t[s],c=u===void 0||a(u,s,t);if(c!==!0)throw new O(\"option \"+s+\" must be \"+c,O.ERR_BAD_OPTION_VALUE);continue}if(r!==!0)throw new O(\"Unknown option \"+s,O.ERR_BAD_OPTION)}}gt.exports={assertOptions:Kr,validators:pe}});var At=l((Bn,Ct)=>{\"use strict\";var Ot=f(),Xr=ee(),Et=Ne(),xt=mt(),$=de(),Gr=ie(),Rt=bt(),N=Rt.validators;function k(t){this.defaults=t,this.interceptors={request:new Et,response:new Et}}k.prototype.request=function(e,r){typeof e==\"string\"?(r=r||{},r.url=e):r=e||{},r=$(this.defaults,r),r.method?r.method=r.method.toLowerCase():this.defaults.method?r.method=this.defaults.method.toLowerCase():r.method=\"get\";var i=r.transitional;i!==void 0&&Rt.assertOptions(i,{silentJSONParsing:N.transitional(N.boolean),forcedJSONParsing:N.transitional(N.boolean),clarifyTimeoutError:N.transitional(N.boolean)},!1);var n=[],s=!0;this.interceptors.request.forEach(function(m){typeof m.runWhen==\"function\"&&m.runWhen(r)===!1||(s=s&&m.synchronous,n.unshift(m.fulfilled,m.rejected))});var a=[];this.interceptors.response.forEach(function(m){a.push(m.fulfilled,m.rejected)});var u;if(!s){var c=[xt,void 0];for(Array.prototype.unshift.apply(c,n),c=c.concat(a),u=Promise.resolve(r);c.length;)u=u.then(c.shift(),c.shift());return u}for(var h=r;n.length;){var o=n.shift(),d=n.shift();try{h=o(h)}catch(v){d(v);break}}try{u=xt(h)}catch(v){return Promise.reject(v)}for(;a.length;)u=u.then(a.shift(),a.shift());return u};k.prototype.getUri=function(e){e=$(this.defaults,e);var r=Gr(e.baseURL,e.url);return Xr(r,e.params,e.paramsSerializer)};Ot.forEach([\"delete\",\"get\",\"head\",\"options\"],function(e){k.prototype[e]=function(r,i){return this.request($(i||{},{method:e,url:r,data:(i||{}).data}))}});Ot.forEach([\"post\",\"put\",\"patch\"],function(e){function r(i){return function(s,a,u){return this.request($(u||{},{method:e,headers:i?{\"Content-Type\":\"multipart/form-data\"}:{},url:s,data:a}))}}k.prototype[e]=r(),k.prototype[e+\"Form\"]=r(!0)});Ct.exports=k});var qt=l((Dn,Tt)=>{\"use strict\";var Qr=B();function P(t){if(typeof t!=\"function\")throw new TypeError(\"executor must be a function.\");var e;this.promise=new Promise(function(n){e=n});var r=this;this.promise.then(function(i){if(r._listeners){var n,s=r._listeners.length;for(n=0;n<s;n++)r._listeners[n](i);r._listeners=null}}),this.promise.then=function(i){var n,s=new Promise(function(a){r.subscribe(a),n=a}).then(i);return s.cancel=function(){r.unsubscribe(n)},s},t(function(n){r.reason||(r.reason=new Qr(n),e(r.reason))})}P.prototype.throwIfRequested=function(){if(this.reason)throw this.reason};P.prototype.subscribe=function(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]};P.prototype.unsubscribe=function(e){if(this._listeners){var r=this._listeners.indexOf(e);r!==-1&&this._listeners.splice(r,1)}};P.source=function(){var e,r=new P(function(n){e=n});return{token:r,cancel:e}};Tt.exports=P});var Nt=l((Un,St)=>{\"use strict\";St.exports=function(e){return function(i){return e.apply(null,i)}}});var Pt=l((jn,kt)=>{\"use strict\";var Zr=f();kt.exports=function(e){return Zr.isObject(e)&&e.isAxiosError===!0}});var Bt=l((Fn,he)=>{\"use strict\";var _t=f(),Yr=V(),W=At(),en=de(),tn=M();function Lt(t){var e=new W(t),r=Yr(W.prototype.request,e);return _t.extend(r,W.prototype,e),_t.extend(r,e),r.create=function(n){return Lt(en(t,n))},r}var y=Lt(tn);y.Axios=W;y.CanceledError=B();y.CancelToken=qt();y.isCancel=ue();y.VERSION=fe().version;y.toFormData=re();y.AxiosError=A();y.Cancel=y.CanceledError;y.all=function(e){return Promise.all(e)};y.spread=Nt();y.isAxiosError=Pt();he.exports=y;he.exports.default=y});var me=l((In,Dt)=>{Dt.exports=Bt()});var L=xe(me(),1);var x=\"https://zesty-storage-prod.s3.amazonaws.com/images/zesty\",_={tall:{width:.75,height:1,style:{standard:`${x}/zesty-banner-tall.png`,minimal:`${x}/zesty-banner-tall-minimal.png`,transparent:`${x}/zesty-banner-tall-transparent.png`}},wide:{width:4,height:1,style:{standard:`${x}/zesty-banner-wide.png`,minimal:`${x}/zesty-banner-wide-minimal.png`,transparent:`${x}/zesty-banner-wide-transparent.png`}},square:{width:1,height:1,style:{standard:`${x}/zesty-banner-square.png`,minimal:`${x}/zesty-banner-square-minimal.png`,transparent:`${x}/zesty-banner-square-transparent.png`}}},Ut=\"square\";var rn=xe(me(),1);var ye=()=>{let t=window.XRHand!=null&&window.XRMediaBinding!=null,e=navigator.userAgent.includes(\"OculusBrowser\"),r=t&&e?\"Full\":t||e?\"Partial\":\"None\";return{match:r!==\"None\",confidence:r}},ve=()=>{let t=window.mozInnerScreenX!=null&&window.speechSynthesis==null,e=navigator.userAgent.includes(\"Mobile VR\")&&!navigator.userAgent.includes(\"OculusBrowser\"),r=t&&e?\"Full\":t||e?\"Partial\":\"None\";return{match:r!==\"None\",confidence:r}},jt=async()=>{let t=navigator.xr&&await navigator.xr.isSessionSupported(\"immersive-vr\")&&await navigator.xr.isSessionSupported(\"immersive-ar\"),e=navigator.userAgent.includes(\"Pico Neo 3 Link\"),r=t&&e?\"Full\":t||e?\"Partial\":\"None\";return{match:r!==\"None\",confidence:r}},Ft=()=>{let t=navigator.maxTouchPoints===0||navigator.msMaxTouchPoints===0,e=!navigator.userAgent.includes(\"Android\")&&!navigator.userAgent.includes(\"Mobile\"),r=t&&e?\"Full\":t||e?\"Partial\":\"None\";return{match:r!==\"None\",confidence:r}},we=async()=>{let t={platform:\"\",confidence:\"\"};return ye().match?t={platform:\"Oculus\",confidence:ye().confidence}:ve().match?t={platform:\"Wolvic\",confidence:ve().confidence}:await jt().match?t={platform:\"Pico\",confidence:await jt().confidence}:Ft().match?t={platform:\"Desktop\",confidence:Ft().confidence}:t={platform:\"Unknown\",confidence:\"None\"},t},It=t=>{if(t){if(ye().match){if(t.includes(\"https://www.oculus.com/experiences/quest/\")){setTimeout(()=>{window.open(t,\"_blank\")},1e3);return}}else if(ve().match){let e=document.createElement(\"div\"),r=document.createElement(\"div\"),i=document.createElement(\"p\"),n=document.createElement(\"button\"),s=document.createElement(\"button\");e.style.backgroundColor=\"rgb(0, 0, 0, 0.75)\",e.style.color=\"white\",e.style.textAlign=\"center\",e.style.position=\"fixed\",e.style.top=\"50%\",e.style.left=\"50%\",e.style.padding=\"5%\",e.style.borderRadius=\"5%\",e.style.transform=\"translate(-50%, -50%)\",i.innerHTML=`<b>This billboard leads to ${t}. Continue?</b>`,n.innerText=\"Move cursor back into window.\",n.style.width=\"100vw\",n.style.height=\"100vh\",n.onmouseenter=()=>{n.style.width=\"auto\",n.style.height=\"auto\",n.innerText=\"Yes\"},n.onclick=()=>{window.open(t,\"_blank\"),e.remove()},s.innerText=\"No\",s.onclick=()=>{e.remove()},e.append(r),r.append(i),r.append(n),r.append(s),document.body.append(e);return}window.open(t,\"_blank\")}};var zt=\"https://beacon.zesty.market\",Mt=\"https://beacon2.zesty.market/zgraphql\",nn=\"https://api.zesty.market/api\";var $t=async(t,e=\"tall\",r=\"standard\")=>{try{let i=encodeURI(window.top.location.href).replace(/\\/$/,\"\");return(await L.default.get(`${nn}/ad?ad_unit_id=${t}&url=${i}`)).data}catch{return console.warn(\"No active campaign banner could be located. Displaying default banner.\"),{Ads:[{asset_url:_[e].style[r],cta_url:\"https://www.zesty.market\"}],CampaignId:\"TestCampaign\"}}},Wt=async(t,e=null)=>{let{platform:r,confidence:i}=await we();try{let n=zt+`/api/v1/space/${t}`;await L.default.put(n),await L.default.post(Mt,{query:`mutation { increment(eventType: visits, spaceId: \"${t}\", campaignId: \"${e}\", platform: { name: ${r}, confidence: ${i} }) { message } }`},{headers:{\"Content-Type\":\"application/json\"}})}catch(n){console.log(\"Failed to emit onload event\",n.message)}},Ht=async(t,e=null)=>{let{platform:r,confidence:i}=await we();try{let n=zt+`/api/v1/space/click/${t}`;await L.default.put(n),await L.default.post(Mt,{query:`mutation { increment(eventType: clicks, spaceId: \"${t}\", campaignId: \"${e}\", platform: { name: ${r}, confidence: ${i} }) { message } }`},{headers:{\"Content-Type\":\"application/json\"}})}catch(n){console.log(\"Failed to emit onclick event\",n.message)}};var Jt=\"2.0.5\";console.log(`Zesty SDK Version: ${Jt} (compatibility)`);var an=\"https://ipfs.io/ipns/libv2.zesty.market/zesty-formats.js\",on=\"https://ipfs.io/ipns/libv2.zesty.market/zesty-networking.js\";WL.registerComponent(\"zesty-banner\",{adUnit:{type:WL.Type.String},format:{type:WL.Type.Enum,values:Object.keys(_),default:Ut},style:{type:WL.Type.Enum,values:[\"standard\",\"minimal\",\"transparent\"],default:\"transparent\"},scaleToRatio:{type:WL.Type.Bool,default:!0},textureProperty:{type:WL.Type.String,default:\"auto\"},beacon:{type:WL.Type.Bool,default:!0},dynamicFormats:{type:WL.Type.Bool,default:!0},createAutomaticCollision:{type:WL.Type.Bool,default:!0},dynamicNetworking:{type:WL.Type.Bool,default:!0}},{init:function(){this.formats=Object.values(_),this.formatKeys=Object.keys(_),this.styleKeys=[\"standard\",\"minimal\",\"transparent\"]},start:function(){if(this.mesh=this.object.getComponent(\"mesh\"),!this.mesh)throw new Error(\"'zesty-banner ' missing mesh component\");if(this.createAutomaticCollision&&(this.collision=this.object.getComponent(\"collision\")||this.object.addComponent(\"collision\",{collider:WL.Collider.Box,group:2}),this.cursorTarget=this.object.getComponent(\"cursor-target\")||this.object.addComponent(\"cursor-target\"),this.cursorTarget.addClickFunction(this.onClick.bind(this))),this.dynamicFormats){let t=document.createElement(\"script\");t.onload=()=>{this.formatsOverride=zestyFormats.formats},t.setAttribute(\"src\",an),t.setAttribute(\"crossorigin\",\"anonymous\"),document.body.appendChild(t)}this.dynamicNetworking?import(on).then(t=>{this.zestyNetworking=Object.assign({},t),this.startLoading()}):this.startLoading()},startLoading:function(){this.loadBanner(this.adUnit,this.formatKeys[this.format],this.styleKeys[this.style]).then(t=>{this.banner=t,this.scaleToRatio&&(this.height=this.object.scalingLocal[1],this.object.resetScaling(),this.createAutomaticCollision&&(this.collision.extents=[this.formats[this.format].width*this.height,this.height,.1]),this.object.scale([this.formats[this.format].width*this.height,this.height,1]));let e=this.mesh.material;if(this.textureProperty===\"auto\"){let r=e.pipeline||e.shader;if(r===\"Phong Opaque Textured Blend\")e.diffuseTexture=t.texture,e.alphaMaskThreshold=.3;else if(r===\"Flat Opaque Textured\")e.flatTexture=t.texture,e.alphaMaskThreshold=.8;else throw Error(\"'zesty-banner ' unable to apply banner texture: unsupported pipeline \"+e.shader);this.mesh.material=e}else this.mesh.material[this.textureProperty]=t.texture;this.beacon&&(this.dynamicNetworking?this.zestyNetworking.sendOnLoadMetric(this.adUnit,this.banner.campaignId):Wt(this.adUnit,this.banner.campaignId))})},onClick:function(){this.banner?.url&&(WL.xrSession?WL.xrSession.end().then(this.executeClick.bind(this)):this.executeClick())},executeClick:function(){this.beacon&&(this.dynamicNetworking?this.zestyNetworking.sendOnClickMetric(this.adUnit,this.banner.campaignId):Ht(this.adUnit,this.banner.campaignId))},loadBanner:async function(t,e,r){let i=this.dynamicNetworking?await this.zestyNetworking.fetchCampaignAd(t,e,r):await $t(t,e,r),{asset_url:n,cta_url:s}=i.Ads[0];return WL.textures.load(n,\"\").then(a=>({texture:a,imageSrc:n,url:s,campaignId:i.CampaignId}))}});})();\r\n//# sourceMappingURL=zesty-wonderland-sdk-compat.js.map\r\n", "WL.registerComponent('set-texture-after-delay', {\r\n    _myToSet: { type: WL.Type.Object }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myTimer = new PP.Timer(5);\r\n    },\r\n    update: function (dt) {\r\n        if (Global.myStoryReady) {\r\n            if (this._myTimer.isRunning()) {\r\n                this._myTimer.update(dt);\r\n                if (this._myTimer.isDone()) {\r\n                    let myMesh = this.object.pp_getComponent(\"mesh\");\r\n                    if (myMesh) {\r\n                        let setMesh = this._myToSet.pp_getComponent(\"mesh\");\r\n                        if (setMesh && setMesh.material.diffuseTexture._id == 0 && WL.scene.pp_getComponent(\"zesty-banner\").banner == null) {\r\n                            setMesh.material.diffuseTexture = myMesh.material.diffuseTexture;\r\n\r\n                            if (Global.myGoogleAnalytics) {\r\n                                gtag(\"event\", \"zesty_load_fail\", {\r\n                                    \"value\": 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});", "WL.registerComponent('secret-zone-check', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myReached = false;\r\n        this._myStarted = false;\r\n        this._myCell = null;\r\n\r\n        this._myUp = [0, 1, 0];\r\n        this._myPosition = [0, 1, 0];\r\n    },\r\n    update: function (dt) {\r\n        if (Global.myReady) {\r\n            if (!this._myStarted) {\r\n                this._myStarted = true;\r\n\r\n                this._myCell = Global.myMaze.getCellByPosition(this.object.pp_getPosition());\r\n            }\r\n\r\n            if (!this._myReached) {\r\n                if (this._myCell != null) {\r\n                    let distanceFromPlayer = Global.myPlayer.getPosition(this._myPosition).vec3_removeComponentAlongAxis(this._myUp, this._myPosition).vec3_distance(this._myCell.myCellPosition.vec3_removeComponentAlongAxis(this._myUp));\r\n                    if (distanceFromPlayer <= this._myCell.myCellSize) {\r\n                        this._myReached = true;\r\n\r\n                        if (Global.myGoogleAnalytics) {\r\n                            gtag(\"event\", \"enter_secret_zone\", {\r\n                                \"value\": 1\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n        return clonedComponent;\r\n    },\r\n});", "WL.registerComponent(\"display-leaderboard\", {\r\n    _myName: { type: WL.Type.String, default: '' },\r\n    _myIsLocal: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myStarted = false;\r\n    },\r\n    update: function (dt) {\r\n        if (!this._myStarted) {\r\n            this._myStarted = true;\r\n            this._myNamesTextComponent = this.object.pp_getObjectByName(\"Names\").pp_getComponent(\"text\");\r\n            this._myScoresTextComponent = this.object.pp_getObjectByName(\"Scores\").pp_getComponent(\"text\");\r\n\r\n            this.updateLeaderboard();\r\n        }\r\n    },\r\n    updateLeaderboard: function () {\r\n        PP.CAUtils.getLeaderboard(this._myName, true, this._myIsLocal, 10, this._onLeaderboardRetrieved.bind(this));\r\n    },\r\n    _onLeaderboardRetrieved(leaderboard) {\r\n        let namesText = \"\";\r\n        let scoresText = \"\";\r\n\r\n        let maxRankDigit = 0;\r\n        for (let value of leaderboard) {\r\n            let rank = value.rank + 1;\r\n            if (rank.toFixed(0).length > maxRankDigit) {\r\n                maxRankDigit = rank.toFixed(0).length;\r\n            }\r\n        }\r\n\r\n        for (let value of leaderboard) {\r\n            let rank = value.rank + 1;\r\n            let fixedRank = rank.toFixed(0);\r\n            while (fixedRank.length < maxRankDigit) {\r\n                fixedRank = \"0\".concat(fixedRank);\r\n            }\r\n\r\n            namesText = namesText.concat(fixedRank, \" - \", value.displayName, \"\\n\\n\");\r\n\r\n            let convertedScore = this._convertTime(value.score);\r\n            scoresText = scoresText.concat(convertedScore, \"\\n\\n\");\r\n        }\r\n\r\n        if (this._myNamesTextComponent != null && this._myScoresTextComponent != null) {\r\n            this._myNamesTextComponent.text = namesText;\r\n            this._myScoresTextComponent.text = scoresText;\r\n        }\r\n    },\r\n    _convertTime(score) {\r\n        let time = Math.floor(score / 1000);\r\n\r\n        let hours = Math.floor(time / 3600);\r\n        time -= hours * 3600;\r\n        let minutes = Math.floor(time / 60);\r\n        time -= minutes * 60;\r\n        let seconds = Math.floor(time);\r\n\r\n\r\n        let secondsText = (seconds.toFixed(0).length < 2) ? \"0\".concat(seconds.toFixed(0)) : seconds.toFixed(0);\r\n        let minutesText = (minutes.toFixed(0).length < 2) ? \"0\".concat(minutes.toFixed(0)) : minutes.toFixed(0);\r\n        let hoursText = (hours.toFixed(0).length < 2) ? \"0\".concat(hours.toFixed(0)) : hours.toFixed(0);\r\n\r\n        let convertedTime = hoursText.concat(\":\", minutesText, \":\", secondsText);\r\n\r\n        return convertedTime;\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        clonedComponent._myName = this._myName;\r\n        clonedComponent._myIsLocal = this._myIsLocal;\r\n\r\n        return clonedComponent;\r\n    },\r\n});", "LR.LRCADummyServer = class LRCADummyServer {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError) {\r\n        let leaderboard = null;\r\n\r\n        if (PP.CAUtils.isSDKAvailable()) {\r\n            leaderboard = [\r\n                { rank: 0, displayName: \"An\", score: 0 },\r\n                { rank: 1, displayName: \"Error\", score: 0 },\r\n                { rank: 2, displayName: \"Has\", score: 0 },\r\n                { rank: 3, displayName: \"Occurred\", score: 0 },\r\n                { rank: 4, displayName: \"While\", score: 0 },\r\n                { rank: 5, displayName: \"Trying\", score: 0 },\r\n                { rank: 6, displayName: \"To\", score: 0 },\r\n                { rank: 7, displayName: \"Retrieve\", score: 0 },\r\n                { rank: 8, displayName: \"The\", score: 0 },\r\n                { rank: 9, displayName: \"Leaderboard\", score: 0 }\r\n            ];\r\n        } else {\r\n            if (isAroundPlayer) {\r\n                leaderboard = [\r\n                    { rank: 0, displayName: \"Sign In\", score: 0 },\r\n                    { rank: 1, displayName: \"And\", score: 0 },\r\n                    { rank: 2, displayName: \"Play\", score: 0 },\r\n                    { rank: 3, displayName: \"On\", score: 0 },\r\n                    { rank: 4, displayName: \"HeyVR\", score: 0 },\r\n                    { rank: 5, displayName: \"To\", score: 0 },\r\n                    { rank: 6, displayName: \"Submit\", score: 0 },\r\n                    { rank: 7, displayName: \"Your\", score: 0 },\r\n                    { rank: 8, displayName: \"Own\", score: 0 },\r\n                    { rank: 9, displayName: \"Score\", score: 0 }\r\n                ];\r\n            } else {\r\n                leaderboard = [\r\n                    { rank: 0, displayName: \"The\", score: 0 },\r\n                    { rank: 1, displayName: \"Top 10\", score: 0 },\r\n                    { rank: 2, displayName: \"Leaderboard\", score: 0 },\r\n                    { rank: 3, displayName: \"Is\", score: 0 },\r\n                    { rank: 4, displayName: \"Available\", score: 0 },\r\n                    { rank: 5, displayName: \"Only\", score: 0 },\r\n                    { rank: 5, displayName: \"When\", score: 0 },\r\n                    { rank: 7, displayName: \"Playing\", score: 0 },\r\n                    { rank: 8, displayName: \"On\", score: 0 },\r\n                    { rank: 9, displayName: \"HeyVR\", score: 0 },\r\n                ];\r\n            }\r\n        }\r\n\r\n        while (leaderboard.length > scoresAmount) {\r\n            leaderboard.pop();\r\n        }\r\n\r\n        if (callbackOnDone) {\r\n            callbackOnDone(leaderboard);\r\n        }\r\n    }\r\n\r\n    submitScore(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError) {\r\n        if (callbackOnDone) {\r\n            callbackOnDone();\r\n        }\r\n    }\r\n\r\n    getUser(callbackOnDone, callbackOnError) {\r\n        let user = {};\r\n        user.displayName = \"I Polaretti\";\r\n\r\n        if (callbackOnDone) {\r\n            callbackOnDone(user);\r\n        }\r\n    }\r\n}\r\n", "WL.registerComponent('activate-if-wedding', {\r\n    _myIsWedding: { type: WL.Type.Bool, default: false },\r\n    _myIsMazeverse: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myDone = false;\r\n    },\r\n    update: function (dt) {\r\n        if (!this._myDone) {\r\n            this._myDone = true;\r\n            let isWedding = Global.isWedding();\r\n            let isMazeverse = Global.isMazeverse();\r\n\r\n            if (isMazeverse) {\r\n                if (!this._myIsMazeverse) {\r\n                    this.object.pp_setActive(false);\r\n                } else {\r\n                    this.object.pp_setActive(true);\r\n                }\r\n            } else if (isWedding) {\r\n                if (!this._myIsWedding) {\r\n                    this.object.pp_setActive(false);\r\n                } else {\r\n                    this.object.pp_setActive(true);\r\n                }\r\n            } else {\r\n                if (this._myIsWedding || this._myIsMazeverse) {\r\n                    this.object.pp_setActive(false);\r\n                } else {\r\n                    this.object.pp_setActive(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n});", "\r\nWL.registerComponent('deactivate-physx-if-far-from-player', {\r\n}, {\r\n    init() {\r\n    },\r\n    start() {\r\n        this._myStartd = false;\r\n        this._myPhysxList = [];\r\n\r\n        this._myMaxDistance = 4;\r\n        this._myPosition = PP.vec3_create();\r\n        this._myPlayerPosition = PP.vec3_create();\r\n\r\n        this._myActive = false;\r\n    },\r\n    update(dt) {\r\n        if (!this._myStartd) {\r\n            this._myStartd = true;\r\n            this._myPhysxList = this.object.pp_getComponents(\"physx\");\r\n\r\n            for (let physx of this._myPhysxList) {\r\n                //physx.static = true;\r\n            }\r\n        } else if (this._myActive) {\r\n            let position = this.object.pp_getPosition(this._myPosition);\r\n            let playerPosition = Global.myPlayer.getPosition(this._myPlayerPosition);\r\n            if (position.vec3_distance(playerPosition) > this._myMaxDistance) {\r\n                for (let physx of this._myPhysxList) {\r\n                    physx.active = false;\r\n                }\r\n            } else {\r\n                for (let physx of this._myPhysxList) {\r\n                    physx.active = true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n        return clonedComponent;\r\n    }\r\n});", "WL.registerComponent('follow-axe', {\r\n}, {\r\n    init() {\r\n    },\r\n    start() {\r\n        this._myOffset = [0.13, 0.17, 0];\r\n        this._myPosition = PP.vec3_create();\r\n        this._myTransformQuat = PP.quat2_create();\r\n    },\r\n    update(dt) {\r\n        if (Global.myReady) {\r\n            if (Global.myAxe) {\r\n                let transform = Global.myAxe.pp_getTransformQuat(this._myTransformQuat);\r\n                let position = this._myOffset.vec3_convertPositionToWorldQuat(transform, this._myPosition);\r\n\r\n                this.object.pp_setTransformQuat(transform);\r\n                this.object.pp_setPosition(position);\r\n            }\r\n        }\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n        return clonedComponent;\r\n    }\r\n});", "WL.registerComponent('fix-drifting', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n    },\r\n    update: function (dt) {\r\n        this.object.pp_resetPositionLocal();\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n        return clonedComponent;\r\n    }\r\n});", "WL.registerComponent('show-drifting', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n    },\r\n    update: function (dt) {\r\n        this.object.pp_getPosition().vec_error(8);\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n        return clonedComponent;\r\n    }\r\n});", "WL.registerComponent('increase-floor-tile', {\r\n    _myAmount: { type: WL.Type.Float, default: 1.0 }\r\n}, {\r\n    init() {\r\n    },\r\n    start() {\r\n        this._myStarted = false;\r\n    },\r\n    update(dt) {\r\n        if (!this._myStarted) {\r\n            /*\r\n            this._myStarted = true;\r\n            let meshes = this.object.pp_getComponents(\"mesh\");\r\n            for (let mesh of meshes) {\r\n                mesh.object.pp_scaleObject(this._myAmount);\r\n            }*/\r\n        }\r\n    }\r\n});", "WL.registerComponent('render-closest-wall-first', {\r\n}, {\r\n    init() {\r\n    },\r\n    start() {\r\n        this._myStarted = false;\r\n        this._myWalls = [];\r\n\r\n        this._myPlayerPosition = PP.vec3_create();\r\n        this._myFirstPosition = PP.vec3_create();\r\n        this._mySecondPosition = PP.vec3_create();\r\n\r\n        this._myUpdateTimer = new PP.Timer(3);\r\n    },\r\n    update(dt) {\r\n        if (Global.myReady) {\r\n            if (!this._myStarted) {\r\n                this._myStarted = true;\r\n                this._myWalls = [];\r\n\r\n                for (let i = 0; i < Global.myMaze._myCells.length; i++) {\r\n                    let row = Global.myMaze._myCells[i];\r\n                    for (let j = 0; j < row.length; j++) {\r\n                        let currentCell = row[j];\r\n                        if (currentCell.myStaticMazeItemType >= LR.MazeItemType.ROCK_WALL_HORIZONTAL && currentCell.myStaticMazeItemType <= LR.MazeItemType.ROCK_WALL_T_LEFT) {\r\n\r\n                            let meshes = currentCell.myObject.pp_getComponents(\"mesh\");\r\n                            for (let mesh of meshes) {\r\n                                this._myWalls.push([PP.vec3_create(), mesh.object]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this._myUpdateTimer.update(dt);\r\n                if (this._myUpdateTimer.isDone()) {\r\n                    this._myUpdateTimer.start();\r\n\r\n                    for (let wall of this._myWalls) {\r\n                        wall[1].pp_getPosition(wall[0]);\r\n                    }\r\n\r\n                    Global.myPlayer.getPosition(this._myPlayerPosition);\r\n                    this._myWalls.sort(function (first, second) {\r\n                        return first[0].vec3_distance(this._myPlayerPosition) - second[0].vec3_distance(this._myPlayerPosition);\r\n                    }.bind(this));\r\n\r\n                    for (let wall of this._myWalls) {\r\n                        wall[1].pp_setActive(false);\r\n                        wall[1].pp_setActive(true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});", "WL.registerComponent('send-all-events', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myStarted = false;\r\n    },\r\n    update: function (dt) {\r\n        if (!this._myStarted) {\r\n            if (Global.myReady) {\r\n                this._myStarted = true;\r\n                if (Global.myGoogleAnalytics) {\r\n                    gtag(\"event\", \"button_pressed\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"enter_vr\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"open_ggj_success\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"open_ggj\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"open_github_success\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"open_github\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"open_zesty\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"open_zesty_success\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"enter_secret_zone\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"zesty_load_fail\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"intro_skipped\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"intro_watched\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"playing_signed_in\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"is_wedding_maze\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"is_mazeverse_maze\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"is_normal_maze\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"collect_axe\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"collect_axe_after_death\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"collect_axe_before_death\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"secret_code_wedding_success\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"secret_code_human_tree_success\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"secret_code_human_tree\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"secret_code_wedding\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"secret_code_mazeverse\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"secret_code_mazeverse_success\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"death\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"survive_for_seconds\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"survive_bear_grills\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"survive_a_lot\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"survive_more\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"defeat_mother_tree\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"defeat_mother_tree_seconds\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"collect_fruit\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"eat_fruit\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"eat_fruit_perfect\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"eat_fruit_good\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"eat_fruit_evil\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"eat_fruit_bad\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"defeat_human_tree\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"defeat_bride_tree\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"defeat_root_wall\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"defeat_root\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"switch_teleport\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"switch_smooth\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"moving_non_vr\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"audio_load_error\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"defeat_root_axe_spawn\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"defeat_root_normal\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"mother_tree_hit_invincible\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"mother_tree_hit\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"root_hit_normal\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"root_hit_axe_spawn\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"root_hit\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"intro_done\", {\r\n                        \"value\": 1\r\n                    });\r\n                    gtag(\"event\", \"enter_vr_first_time\", {\r\n                        \"value\": 1\r\n                    });\r\n\r\n                    let timeMovingSteps = [1, 2, 3, 5, 10, 20, 30, 60];\r\n                    for (let timeMovingStep of timeMovingSteps) {\r\n                        gtag(\"event\", \"playing_for_\" + timeMovingStep + \"_minutes_vr\", {\r\n                            \"value\": 1\r\n                        });\r\n\r\n                        gtag(\"event\", \"moving_for_\" + timeMovingStep + \"_minutes_vr\", {\r\n                            \"value\": 1\r\n                        });\r\n\r\n                        gtag(\"event\", \"moving_for_\" + timeMovingStep + \"_minutes_non_vr\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n\r\n                    let timeGrabbedSteps = [5, 10, 15, 30];\r\n                    for (let timeGrabbedStep of timeGrabbedSteps) {\r\n                        gtag(\"event\", \"fruit_grab_for_\" + timeGrabbedStep + \"_seconds\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n\r\n                    for (let i = 0; i <= 4; i++) {\r\n                        gtag(\"event\", \"root_hit_normal_\" + i, {\r\n                            \"value\": 1\r\n                        });\r\n                        gtag(\"event\", \"root_hit_axe_spawn_\" + i, {\r\n                            \"value\": 1\r\n                        });\r\n                        gtag(\"event\", \"root_hit_\" + i, {\r\n                            \"value\": 1\r\n                        });\r\n\r\n                        gtag(\"event\", \"defeat_root_axe_spawn_\" + i, {\r\n                            \"value\": 1\r\n                        });\r\n\r\n                        gtag(\"event\", \"defeat_root_normal_\" + i, {\r\n                            \"value\": 1\r\n                        });\r\n\r\n                        gtag(\"event\", \"defeat_root_\" + i, {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});", "WL.registerComponent('sky-setter', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        Global.mySky = this.object;\r\n    },\r\n    update: function (dt) {\r\n    }\r\n});\r\n\r\nGlobal.mySky = null;", "WL.registerComponent('lights-setter', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        Global.myLights = this.object;\r\n    },\r\n    update: function (dt) {\r\n    }\r\n});\r\n\r\nGlobal.myLights = null;", "WL.registerComponent('wondermelon', {\r\n}, {\r\n    start: function () {\r\n        this._myGathered = false;\r\n        this._myUsed = false;\r\n        this._myGrabbable = this.object.pp_getComponent(\"pp-grabbable\");\r\n        this._myIsGrabbed = false;\r\n\r\n        this._myStarted = false;\r\n\r\n        this._myChange = 0;\r\n        this._myEnd = 0;\r\n\r\n        this._myPhysx = this.object.pp_getComponent(\"physx\");\r\n        if (this._myPhysx != null) {\r\n            this._myPhysx.kinematic = true;\r\n            this._myPulseCounter = 90;\r\n        }\r\n\r\n        this._myDisable = false;\r\n    },\r\n    update: function (dt) {\r\n        if (!this._myStarted) {\r\n            if (Global.myStoryReady) {\r\n                this.object.pp_translate([0, 0.5, 0]);\r\n                this._myStarted = true;\r\n                this._myAudioMangia = PP.myAudioManager.createAudioPlayer(AudioID.MANGIA_FRUTTO);\r\n            }\r\n        } else {\r\n            if (this._myDisable) {\r\n                this._myDisable = false;\r\n                this.object.pp_setActive(false);\r\n                this.active = true;\r\n            }\r\n\r\n            if (this._myGrabbable != null) {\r\n                if (this._myGrabbable.isGrabbed()) {\r\n                    if (!this._myGathered) {\r\n                        if (Global.myGoogleAnalytics) {\r\n                            gtag(\"event\", \"collect_wondermelon\", {\r\n                                \"value\": 1\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    this._myGathered = true;\r\n                    this._myIsGrabbed = true;\r\n                } else {\r\n                    this._myIsGrabbed = false;\r\n                }\r\n            } else {\r\n                this._myGrabbable = this.object.pp_getComponent(\"pp-grabbable\");\r\n            }\r\n\r\n            if (Global.myStoryReady) {\r\n                if (this._myPulseCounter > 0) {\r\n                    this._myPulseCounter--;\r\n                    this._myPhysx.kinematic = false;\r\n\r\n                    if (this._myPulseCounter == 0) {\r\n                        let maxLinear = 2;\r\n                        let maxAngular = 1;\r\n                        this._myPhysx.linearVelocity = [Math.pp_random(maxLinear / 2, maxLinear) * Math.pp_randomSign(), 1, Math.pp_random(maxLinear / 2, maxLinear) * Math.pp_randomSign()];\r\n                        this._myPhysx.angularVelocity = [Math.pp_random(maxAngular / 2, maxAngular) * Math.pp_randomSign(), Math.pp_random(maxAngular / 2, maxAngular) * Math.pp_randomSign(), Math.pp_random(maxAngular / 2, maxAngular) * Math.pp_randomSign()];\r\n                    }\r\n                }\r\n            }\r\n\r\n            this._updateOpenLink(dt);\r\n        }\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        return clonedComponent;\r\n    },\r\n    pp_clonePostProcess(clonedComponent) {\r\n        clonedComponent.start();\r\n    },\r\n    activateEffect() {\r\n        if (!this._myUsed && this._myGrabbable != null && this._myGrabbable.isGrabbed()) {\r\n\r\n            this._myEnd = 90;\r\n            this._myChange = 1;\r\n\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"open_wondermelon\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n\r\n            this._myUsed = true;\r\n\r\n            //this._myAudioMangia.setPosition(this.object.pp_getPosition());\r\n            this._myAudioMangia.setPitch(Math.pp_random(1.25 - 0.15, 1.25 + 0.05));\r\n            this._myAudioMangia.play();\r\n\r\n            this._myDisable = true;\r\n        }\r\n    },\r\n    _updateOpenLink(dt) {\r\n        if (this._myEnd > 0) {\r\n            this._myEnd--;\r\n            if (this._myEnd == 0) {\r\n                this._myChange = 1;\r\n\r\n                Global.myUnmute = true;\r\n                Howler.mute(true);\r\n\r\n                if (Global.myAxe != null && Global.myAxe._myGrabbable != null) {\r\n                    Global.myAxe._myGrabbable.release();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myEnd == 0 && this._myChange > 0) {\r\n            this._myChange--;\r\n            if (this._myChange == 0) {\r\n                if (WL.xrSession) {\r\n                    WL.xrSession.end();\r\n                }\r\n\r\n                let onSuccess = function () {\r\n                    if (WL.xrSession) {\r\n                        WL.xrSession.end();\r\n                    }\r\n\r\n                    Global.myUnmute = true;\r\n                    Howler.mute(true);\r\n\r\n                    if (Global.myAxe != null && Global.myAxe._myGrabbable != null) {\r\n                        Global.myAxe._myGrabbable.release();\r\n                    }\r\n\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"open_wondermelon_success\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n\r\n                    this.active = false;\r\n                }.bind(this);\r\n\r\n                let onError = function () {\r\n                    this._myChange = 10;\r\n                }.bind(this);\r\n\r\n                Global.windowOpen(\"https://signor-pipo.itch.io\", onSuccess, onError);\r\n            }\r\n        }\r\n    }\r\n});\r\n", "WL.registerComponent('spawn-floor', {\r\n    _myOnlyIfFromAbove: { type: WL.Type.Bool, default: false },\r\n    _myFloor: { type: WL.Type.Object },\r\n    _myStartTile: { type: WL.Type.Object }\r\n}, {\r\n    start: function () {\r\n        if (!this._myOnlyIfFromAbove || Global.myFromAbove) {\r\n            let spawnedFloorObject = this.object.pp_addObject();\r\n\r\n            let spawnedTile = this._myStartTile.pp_clone();\r\n            spawnedTile.pp_setParent(spawnedFloorObject);\r\n\r\n            this._myFloor.pp_setActive(false);\r\n\r\n            for (let i = 0; i < 10; i++) {\r\n                for (let j = 0; j < 10; j++) {\r\n                    if (i != 0) {\r\n                        newTile = spawnedTile.pp_clone();\r\n                        newTile.pp_translate([i * 5, 0, j * -5]);\r\n                        //[i * 5, 0, j * -5].vec_error();\r\n\r\n                        newTile = spawnedTile.pp_clone();\r\n                        newTile.pp_translate([i * -5, 0, j * 5]);\r\n                        //[i * -5, 0, j * 5].vec_error();\r\n                    }\r\n\r\n                    if (j != 0) {\r\n                        let newTile = spawnedTile.pp_clone();\r\n                        newTile.pp_translate([i * 5, 0, j * 5]);\r\n                        //[i * 5, 0, j * 5].vec_error();\r\n\r\n                        newTile = spawnedTile.pp_clone();\r\n                        newTile.pp_translate([i * -5, 0, j * -5]);\r\n                        //[i * -5, 0, j * -5].vec_error();\r\n                    }\r\n\r\n                    //console.error(\"\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n});", "WL.registerComponent('hide-if-pose-not-valid', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myHand: { type: WL.Type.Object }\r\n}, {\r\n    start() {\r\n        this._myGamepad = PP.myGamepads[PP.InputUtils.getHandednessByIndex(this._myHandedness)];\r\n        this._myGrabberHand = this._myHand.pp_getComponent(\"pp-grabber-hand\");\r\n    },\r\n    update(dt) {\r\n        if (this._myGamepad.getHandPose() != null) {\r\n            if (this._myGamepad.getHandPose().isValid()) {\r\n                this._myHand.pp_setActive(true);\r\n            } else {\r\n                if (this._myGrabberHand != null) {\r\n                    this._myGrabberHand.throw();\r\n                }\r\n\r\n                this._myHand.pp_setActive(false);\r\n            }\r\n        }\r\n    }\r\n});", "WL.registerComponent('transformation', {\r\n}, {\r\n    init: function () {\r\n        Global.myTransformation = this;\r\n    },\r\n    start: function () {\r\n        this._myStarted = false;\r\n        this._myTransformationTimersSetup = null;\r\n        this._myTransformationTimer = new PP.Timer(0);\r\n        Global.myStage = 0;\r\n\r\n        this._myLastFreeCell = null;\r\n\r\n        this._myLamentoFinalePitch = 1.4;\r\n\r\n        this._myObjectToIgnore = [];\r\n\r\n        this._myWeddingDelay = 2;\r\n        this._myWeddingTimer = new PP.Timer(this._myWeddingDelay);\r\n        this._myMazeverseTimer = new PP.Timer(this._myWeddingDelay);\r\n\r\n        this._myChange = 0;\r\n        this._myEnd = 0;\r\n\r\n        this._myTimeAlive = 0;\r\n        this._myStageTotalTime = 0;\r\n\r\n        this._myResetAxePosition = 0;\r\n\r\n        this._myRepeatHealSound = 0;\r\n        this._myRepeatHealSoundTimer = new PP.Timer(0.4);\r\n\r\n        this._myPosition = [0, 0, 0];\r\n\r\n        this._myIsWedding = false;\r\n    },\r\n    update: function (dt) {\r\n        this._secretMazeCodeUpdate(dt);\r\n\r\n        Global.myCancelTeleport = Math.max(Global.myCancelTeleport - 1, 0)\r\n        if (!this._myStarted) {\r\n            if (Global.myReady) {\r\n                this._start();\r\n            }\r\n        } else {\r\n            if (this._myRepeatHealSound > 0) {\r\n                this._myRepeatHealSoundTimer.update(dt);\r\n                if (this._myRepeatHealSoundTimer.isDone()) {\r\n                    this._myRepeatHealSoundTimer.start();\r\n\r\n                    this._myRepeatHealSound--;\r\n\r\n                    PP.myLeftGamepad.pulse(0.35, 0.25);\r\n                    PP.myRightGamepad.pulse(0.35, 0.25);\r\n\r\n                    let player = this._myAudioHeal2;\r\n                    player.setPitch(Math.pp_random(1.4 - 0.15, 1.4 + 0.05));\r\n                    player.play();\r\n                }\r\n            }\r\n\r\n            if (this._myResetAxePosition > 0) {\r\n                this._myResetAxePosition--;\r\n\r\n                let axeComponent = Global.myAxe.pp_getComponent(\"axe\");\r\n                if (axeComponent != null) {\r\n                    axeComponent.setStartTransforms(Global.myAxeCell.myCellPosition);\r\n                }\r\n            }\r\n\r\n            let playerPosition = Global.myPlayer.getPosition(this._myPosition);\r\n            let currentCell = Global.myMaze.getCellByPosition(playerPosition);\r\n            if (currentCell) {\r\n                if (currentCell.myStaticMazeItemType == LR.MazeItemType.NONE ||\r\n                    currentCell.myStaticMazeItemType == LR.MazeItemType.HUMAN_TREE_0 ||\r\n                    currentCell.myStaticMazeItemType == LR.MazeItemType.HUMAN_TREE_1 ||\r\n                    currentCell.myStaticMazeItemType == LR.MazeItemType.HUMAN_TREE_2 ||\r\n                    currentCell.myStaticMazeItemType == LR.MazeItemType.HUMAN_TREE_3 ||\r\n                    currentCell.myStaticMazeItemType == LR.MazeItemType.CREDITS ||\r\n                    currentCell.myStaticMazeItemType == LR.MazeItemType.SECRET_CODES ||\r\n                    currentCell.myStaticMazeItemType == LR.MazeItemType.ZESTY ||\r\n                    currentCell.myStaticMazeItemType == LR.MazeItemType.SECRET_ZONE_CHECK ||\r\n                    currentCell.myStaticMazeItemType == LR.MazeItemType.LEADERBOARD_TOP_10 ||\r\n                    currentCell.myStaticMazeItemType == LR.MazeItemType.LEADERBOARD_AROUND_U ||\r\n                    currentCell.myStaticMazeItemType == LR.MazeItemType.BUILD_CELL) {\r\n                    this._myLastFreeCell = currentCell;\r\n                }\r\n            }\r\n\r\n            this._myTimeAlive += dt;\r\n\r\n            if (!Global.myBigTreeDead || Global.myStage >= this._myTransformationTimersSetup.length - 1) {\r\n                this._myTransformationTimer.update(dt);\r\n                if (this._myTransformationTimer.isDone()) {\r\n                    if (Global.myStage + 1 >= this._myTransformationTimersSetup.length) {\r\n                        Global.myCancelTeleport = 5;\r\n                        if (Global.myPlayerLocomotion.canStop()) {\r\n                            Global.myPlayerLocomotion.setIdle(true);\r\n                            this._nextStage();\r\n                            Global.myPlayerLocomotion.setIdle(false);\r\n                        }\r\n                    } else {\r\n                        this._nextStage();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._myLastFreeCell != null) {\r\n                //PP.myDebugVisualManager.drawPoint(0, this._myLastFreeCell.myCellPosition, [0, 0, 0, 1], 0.05);\r\n            }\r\n\r\n            if (PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressEnd()\r\n                && PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).myMultiplePressEndCount >= 3) {\r\n                let oldLast = this._myLastFreeCell;\r\n                this._myLastFreeCell = Math.pp_randomPick(Global.myMaze.getCellNextToPositionEmpty(Global.myPlayer.getPosition()));\r\n                if (this._myLastFreeCell != null) {\r\n                    this._spawnTree();\r\n\r\n                    this._myAudioPrendi.setPosition(this._myLastFreeCell.myCellPosition.vec3_add([0, 1, 0]));\r\n                    this._myAudioPrendi.setPitch(Math.pp_random(1.25 - 0.15, 1.25 + 0.05));\r\n                    this._myAudioPrendi.play();\r\n\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"secret_code_human_tree_success\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                }\r\n                this._myLastFreeCell = oldLast;\r\n\r\n                if (Global.myGoogleAnalytics) {\r\n                    gtag(\"event\", \"secret_code_human_tree\", {\r\n                        \"value\": 1\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _start() {\r\n        this._myLamentiFinale = [];\r\n        this._myLamentiFinale[0] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_1);\r\n        this._myLamentiFinale[1] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_2);\r\n        this._myLamentiFinale[2] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_3);\r\n\r\n        this._myLamenti = [];\r\n        this._myLamenti[0] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_UMANO_1);\r\n        this._myLamenti[1] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_UMANO_2);\r\n        this._myLamenti[2] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_UMANO_3);\r\n\r\n        this._myLamentiMorte = [];\r\n        this._myLamentiMorte[0] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_UMANO_1_MORTE);\r\n        this._myLamentiMorte[1] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_UMANO_2_MORTE);\r\n        this._myLamentiMorte[2] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_UMANO_3_MORTE);\r\n\r\n        this._myAudioPrendi = PP.myAudioManager.createAudioPlayer(AudioID.TREE_UMANO_SPAWN);\r\n\r\n        this._myAudioHeal = PP.myAudioManager.createAudioPlayer(AudioID.HEAL);\r\n        this._myAudioHeal2 = PP.myAudioManager.createAudioPlayer(AudioID.HEAL2);\r\n\r\n        this._myStarted = true;\r\n        this._myTransformationTimersSetup = Global.mySetup.myPlayerSetup.myTransformationTimers;\r\n        if (Global.myIsMazeverseTime) {\r\n            this._myTransformationTimersSetup = Global.mySetup.myPlayerSetup.myMazeverseTransformationTimers;\r\n        }\r\n\r\n        if (Global.myFromAbove) {\r\n            this._myTransformationTimersSetup[0] = 1000000;\r\n        }\r\n        for (let timer of this._myTransformationTimersSetup) {\r\n            this._myStageTotalTime += timer;\r\n        }\r\n\r\n        this._resetTransformation();\r\n\r\n        this._myObjectToIgnore.pp_copy(Global.myPlayer.getMovementCollisionCheckParams().myHorizontalObjectsToIgnore);\r\n\r\n        let physXComponents = Global.myAxe.pp_getComponentsHierarchy(\"physx\");\r\n        for (let physXComponent of physXComponents) {\r\n            Global.myPlayer.getMovementCollisionCheckParams().myHorizontalObjectsToIgnore.pp_pushUnique(physXComponent.object, (first, second) => first.pp_equals(second));\r\n        }\r\n        Global.myPlayer.getMovementCollisionCheckParams().myVerticalObjectsToIgnore.pp_copy(Global.myPlayer.getMovementCollisionCheckParams().myHorizontalObjectsToIgnore);\r\n\r\n        let rotationQuat = [0, 0, 0].vec3_degreesToQuat();\r\n        Global.myPlayer.setRotationQuat(rotationQuat);\r\n\r\n        if (Global.myMaze.getCellsByType(LR.MazeItemType.BIG_TREE) != null && Global.myMaze.getCellsByType(LR.MazeItemType.BIG_TREE).length > 0) {\r\n            rotationQuat = Global.lookBigTreeAligned(Global.myPlayer.getPosition());\r\n            Global.myPlayer.setRotationQuat(rotationQuat);\r\n        }\r\n\r\n        if (Global.myFromAbove) {\r\n            Global.myPlayer.teleportPosition([0, 40, 0], null, true);\r\n            Global.myPlayer.resetReal(true, false, false, true);\r\n            Global.myPlayer.resetHeadToReal();\r\n            Global.myPlayer.getPlayerHeadManager().setRotationHeadQuat(rotationQuat.quat_setForward([0, -1, 0]));\r\n        }\r\n    },\r\n    _resetTransformation() {\r\n        Global.myStage = 0;\r\n        this._myTransformationTimer.start(this._myTransformationTimersSetup[Global.myStage]);\r\n    },\r\n    _nextStage(noSound = false, eat = false, full = false) {\r\n        Global.myStage = Math.max(Global.myStage + 1, 0);\r\n        let dead = false;\r\n        if (Global.myStage >= this._myTransformationTimersSetup.length) {\r\n            PP.myLeftGamepad.pulse(0.5, 0.5);\r\n            PP.myRightGamepad.pulse(0.5, 0.5);\r\n\r\n            this._death();\r\n            dead = true;\r\n        } else {\r\n            this._myTransformationTimer.start(this._myTransformationTimersSetup[Global.myStage]);\r\n\r\n            if (!noSound && (eat && !full)) {\r\n                PP.myLeftGamepad.pulse(0.35, 0.25);\r\n                PP.myRightGamepad.pulse(0.35, 0.25);\r\n            }\r\n\r\n            if (!noSound && (!eat || full)) {\r\n                PP.myLeftGamepad.pulse(0.5, 0.5);\r\n                PP.myRightGamepad.pulse(0.5, 0.5);\r\n            }\r\n        }\r\n\r\n        if (!noSound) {\r\n            let player = Math.pp_randomPick(this._myLamenti);\r\n            player.setPitch(Math.pp_random(1 - 0.15, 1 + 0.05));\r\n\r\n            if (full) {\r\n                player = Math.pp_randomPick(this._myLamentiMorte);\r\n                player.setPitch(Math.pp_random(0.75 - 0.15, 0.75 + 0.05));\r\n            }\r\n\r\n            if (dead) {\r\n                player = Math.pp_randomPick(this._myLamentiFinale);\r\n                player.setPitch(Math.pp_random(this._myLamentoFinalePitch - 0.15, this._myLamentoFinalePitch + 0.05));\r\n            }\r\n\r\n            player.play();\r\n        }\r\n    },\r\n    _death() {\r\n        Global.myDeadOnce = true;\r\n\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"death\", {\r\n                \"value\": 1\r\n            });\r\n        }\r\n\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"survive_for_seconds\", {\r\n                \"value\": Math.round(this._myTimeAlive)\r\n            });\r\n\r\n            if (this._myTimeAlive > this._myStageTotalTime * 3) {\r\n                gtag(\"event\", \"survive_bear_grills\", {\r\n                    \"value\": 1\r\n                });\r\n            } else if (this._myTimeAlive > this._myStageTotalTime * 2) {\r\n                gtag(\"event\", \"survive_a_lot\", {\r\n                    \"value\": 1\r\n                });\r\n            } else if (this._myTimeAlive > this._myStageTotalTime * 1.1) {\r\n                gtag(\"event\", \"survive_more\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n        }\r\n        this._myTimeAlive = 0;\r\n\r\n        this._spawnTree();\r\n        // crea albero nella cella corrente\r\n        // dici alle radici che sei morto\r\n\r\n        let cell = Global.myMaze.getCellsByType(LR.MazeItemType.PLAYER_START);\r\n\r\n        if (cell != null && cell.length > 0) {\r\n            Global.myPlayer.teleportPosition(cell[0].myCellPosition, null, true);\r\n\r\n            let rotationQuat = [0, 0, 0].vec3_degreesToQuat();\r\n            Global.myPlayer.setRotationQuat(rotationQuat);\r\n\r\n            if (Global.myMaze.getCellsByType(LR.MazeItemType.BIG_TREE) != null && Global.myMaze.getCellsByType(LR.MazeItemType.BIG_TREE).length > 0) {\r\n                rotationQuat = Global.lookBigTreeAligned(Global.myPlayer.getPosition());\r\n                Global.myPlayer.setRotationQuat(rotationQuat);\r\n            }\r\n\r\n            PP.myPlayerObjects.myNonVRCamera.pp_setUp([0, 1, 0]);\r\n\r\n            Global.myPlayer.resetReal(true, false, false, true);\r\n            Global.myPlayer.resetHeadToReal();\r\n        }\r\n\r\n        if (Global.myAxe != null) {\r\n            let physx = Global.myAxe.pp_getComponentSelf(\"physx\");\r\n            let grabbable = Global.myAxe.pp_getComponentSelf(\"pp-grabbable\");\r\n            grabbable.release();\r\n            physx.kinematic = true;\r\n\r\n            Global.myAxe.pp_setParent(Global.myAxeParent);\r\n\r\n            this._myResetAxePosition = 2;\r\n\r\n            let physXComponents = Global.myAxe.pp_getComponentsHierarchy(\"physx\");\r\n            Global.myPlayer.getMovementCollisionCheckParams().myHorizontalObjectsToIgnore.pp_copy(this._myObjectToIgnore);\r\n            for (let physXComponent of physXComponents) {\r\n                Global.myPlayer.getMovementCollisionCheckParams().myHorizontalObjectsToIgnore.pp_pushUnique(physXComponent.object, (first, second) => first.pp_equals(second));\r\n            }\r\n            Global.myPlayer.getMovementCollisionCheckParams().myVerticalObjectsToIgnore.pp_copy(Global.myPlayer.getMovementCollisionCheckParams().myHorizontalObjectsToIgnore);\r\n        }\r\n\r\n        this._myLastFreeCell = null;\r\n\r\n        this._resetTransformation();\r\n\r\n        let grabbers = WL.scene.pp_getComponents(\"pp-grabber-hand\");\r\n        for (let grabber of grabbers) {\r\n            grabber.throw();\r\n        }\r\n\r\n    },\r\n    _spawnTree() {\r\n        if (this._myLastFreeCell != null) {\r\n            let positionTree = this._myLastFreeCell.getRandomPositionOnCell();\r\n            let types = [];\r\n            types.push(Global.myPerfectFruit);\r\n            for (let i = 0; i < Global.mySetup.myTreeSetup.myPerfectTreeRatio; i++) {\r\n                types.push(Global.myGoodFruit);\r\n                types.push(Global.myBadFruit);\r\n            }\r\n            let randomType = Math.pp_randomPick(types);\r\n\r\n            let tree = Global.myTrees[randomType].pp_clone();\r\n            tree.pp_setPosition(positionTree);\r\n            tree.pp_getComponent(\"human-tree\").spawnFruits(Math.pp_randomInt(Global.mySetup.myTreeSetup.myMinHumanFruits, Global.mySetup.myTreeSetup.myMaxHumanFruits));\r\n            tree.pp_setActive(true);\r\n        }\r\n\r\n    },\r\n    addStage(full = false) {\r\n        if (Global.myStage < this._myTransformationTimersSetup.length - 1) {\r\n            if (full) {\r\n                Global.myStage = Math.max(0, this._myTransformationTimersSetup.length - 2);\r\n                this._nextStage(false, true, true);\r\n            } else {\r\n                this._nextStage(false, true);\r\n            }\r\n        }\r\n    },\r\n    removeStage(full = false) {\r\n        if (Global.myStage >= 0) {\r\n            if (full) {\r\n                Global.myStage = -1;\r\n                this._nextStage(true, true);\r\n\r\n                let player = this._myAudioHeal2;\r\n                player.setPitch(Math.pp_random(1.4 - 0.15, 1.4 + 0.05));\r\n                player.play();\r\n\r\n                PP.myLeftGamepad.pulse(0.35, 0.25);\r\n                PP.myRightGamepad.pulse(0.35, 0.25);\r\n\r\n                this._myRepeatHealSound = 2;\r\n                this._myRepeatHealSoundTimer.start();\r\n            } else {\r\n                Global.myStage = Math.max(-1, Global.myStage - 2);\r\n                this._nextStage(true, true);\r\n\r\n                let player = this._myAudioHeal;\r\n                player.setPitch(Math.pp_random(1 - 0.15, 1 + 0.05));\r\n                player.play();\r\n\r\n                PP.myLeftGamepad.pulse(0.35, 0.25);\r\n                PP.myRightGamepad.pulse(0.35, 0.25);\r\n            }\r\n        }\r\n    },\r\n    _secretMazeCodeUpdate(dt) {\r\n        if (Global.myUnmute && PP.XRUtils.isSessionActive()) {\r\n            Global.myUnmute = false;\r\n            Howler.mute(false);\r\n        }\r\n\r\n        if (this._myEnd > 0) {\r\n            this._myEnd--;\r\n            if (this._myEnd == 0) {\r\n                this._myChange = 1;\r\n\r\n                Global.myUnmute = true;\r\n                Howler.mute(true);\r\n\r\n                if (Global.myAxe != null && Global.myAxe._myGrabbable != null) {\r\n                    Global.myAxe._myGrabbable.release();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myEnd == 0 && this._myChange > 0) {\r\n            this._myChange--;\r\n            if (this._myChange == 0) {\r\n                if (WL.xrSession) {\r\n                    WL.xrSession.end();\r\n                }\r\n\r\n                let url = window.location.origin;\r\n\r\n                if (window.location != window.parent.location) {\r\n                    url = \"https://heyvr.io/game/labyroots\";\r\n                    if (window.location.ancestorOrigins != null && window.location.ancestorOrigins.length > 0) {\r\n                        let ancestorOrigin = window.location.ancestorOrigins[0];\r\n\r\n                        if (ancestorOrigin.includes(\"itch.io\")) {\r\n                            url = \"https://signor-pipo.itch.io/labyroots\";\r\n                        } else if (ancestorOrigin.includes(\"heyvr.io\")) {\r\n                            url = \"https://heyvr.io/game/labyroots\";\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (this._myIsWedding) {\r\n                        url = url + \"/?wedding=1\";\r\n                    } else {\r\n                        if (!Global.myIsMazeverseTime) {\r\n                            url = url + \"/?mazeverse=1\";\r\n                        }\r\n                    }\r\n                }\r\n\r\n                let onSuccess = function () {\r\n                    if (WL.xrSession) {\r\n                        WL.xrSession.end();\r\n                    }\r\n\r\n                    Global.myUnmute = true;\r\n                    Howler.mute(true);\r\n                    if (Global.myAxe != null && Global.myAxe._myGrabbable != null) {\r\n                        Global.myAxe._myGrabbable.release();\r\n                    }\r\n\r\n                    if (Global.myGoogleAnalytics) {\r\n                        if (this._myIsWedding) {\r\n                            gtag(\"event\", \"secret_code_wedding_success\", {\r\n                                \"value\": 1\r\n                            });\r\n                        } else {\r\n                            gtag(\"event\", \"secret_code_mazeverse_success\", {\r\n                                \"value\": 1\r\n                            });\r\n                        }\r\n                    }\r\n                }.bind(this);\r\n\r\n                let onError = function () {\r\n                    this._myChange = 10;\r\n                }.bind(this);\r\n\r\n                Global.windowOpen(url, onSuccess, onError);\r\n\r\n                this._myIsWedding = false;\r\n            }\r\n        }\r\n\r\n        if (this._myChange == 0 && PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressed()\r\n            && PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressed()) {\r\n            if (this._myMazeverseTimer.isRunning()) {\r\n                this._myMazeverseTimer.update(dt);\r\n                if (this._myMazeverseTimer.isDone()) {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"secret_code_mazeverse\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n\r\n                    Global.mySaveManager.save(\"is_mazeverse\", !Global.myIsMazeverseTime, false);\r\n\r\n                    this._myEnd = 1;\r\n                    this._myChange = 1;\r\n                    this._myIsWedding = false;\r\n                }\r\n            }\r\n        } else {\r\n            this._myMazeverseTimer.start();\r\n        }\r\n\r\n        if (this._myChange == 0 && !PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressed() &&\r\n            PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressed() &&\r\n            PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.SELECT).isPressed()) {\r\n            if (this._myWeddingTimer.isRunning()) {\r\n                this._myWeddingTimer.update(dt);\r\n                if (this._myWeddingTimer.isDone()) {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"secret_code_wedding\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n\r\n                    Global.mySaveManager.save(\"is_wedding\", true, false);\r\n\r\n                    this._myEnd = 1;\r\n                    this._myChange = 1;\r\n                    this._myIsWedding = true;\r\n                }\r\n            }\r\n        } else {\r\n            this._myWeddingTimer.start();\r\n        }\r\n    }\r\n});\r\n\r\nGlobal.myUnmute = false;\r\n\r\nGlobal.myExitSession = false;\r\nGlobal.myDeadOnce = false;\r\n\r\nGlobal.myWindowOpenResult = false;\r\nGlobal.windowOpen = function (urlString, successCallback, errorCallback) {\r\n    let result = true;\r\n\r\n    let element = document.createElement(\"a\");\r\n    //element.href = urlString;\r\n    //element.target = \"_blank\";\r\n    element.style.display = \"none\";\r\n\r\n    document.body.appendChild(element);\r\n\r\n    element.addEventListener(\"click\", function () {\r\n        let result = window.open(urlString, \"_blank\");\r\n\r\n        if (result != null) {\r\n            if (successCallback != null) {\r\n                successCallback();\r\n            }\r\n        } else {\r\n            if (errorCallback != null) {\r\n                errorCallback();\r\n            }\r\n        }\r\n    });\r\n\r\n    element.click();\r\n\r\n    document.body.removeChild(element);\r\n\r\n    return result;\r\n}", "WL.registerComponent('stage-switch', {\r\n    _myOnlyVR: { type: WL.Type.Bool, default: false },\r\n    _myStage1: { type: WL.Type.Object },\r\n    _myStage2: { type: WL.Type.Object },\r\n    _myStage3: { type: WL.Type.Object },\r\n    _myStage4: { type: WL.Type.Object },\r\n    _myStage5: { type: WL.Type.Object },\r\n    _myStage6: { type: WL.Type.Object }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myStages = [];\r\n        this._myStages[0] = this._myStage1;\r\n        this._myStages[1] = this._myStage2;\r\n        this._myStages[2] = this._myStage3;\r\n        this._myStages[3] = this._myStage4;\r\n        this._myStages[4] = this._myStage5;\r\n        this._myStages[5] = this._myStage6;\r\n\r\n        for (let stage of this._myStages) {\r\n            if (stage != null) {\r\n                stage.pp_setActive(false);\r\n            }\r\n        }\r\n\r\n        this._myCurrentStage = -1;\r\n    },\r\n    update: function (dt) {\r\n        if (PP.XRUtils.isSessionActive() || !this._myOnlyVR) {\r\n            if (Global.myReady) {\r\n                if (Global.myStage != this._myCurrentStage) {\r\n                    this.setStageActive(Global.myStage);\r\n                }\r\n            } else {\r\n\r\n                for (let stage of this._myStages) {\r\n                    if (stage != null) {\r\n                        stage.pp_setActive(false);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            for (let stage of this._myStages) {\r\n                if (stage != null) {\r\n                    stage.pp_setActive(false);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    setStageActive(index) {\r\n        for (let stage of this._myStages) {\r\n            if (stage != null) {\r\n                stage.pp_setActive(false);\r\n            }\r\n        }\r\n\r\n        if (this._myStages[index] != null) {\r\n            this._myStages[index].pp_setActive(true);\r\n        }\r\n\r\n        this._myCurrentStage = index;\r\n    }\r\n});", "WL.registerComponent('mouth', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myPhysX = this.object.pp_getComponent('physx');\r\n        this._myPhysX.onCollision(this._onCollision.bind(this));\r\n        this._myTimerDestroy = new PP.Timer(0, false);\r\n        this._myFruitToDestroy = [];\r\n    },\r\n    update: function (dt) {\r\n        if (this._myTimerDestroy.isRunning()) {\r\n            this._myTimerDestroy.update(dt)\r\n            if (this._myTimerDestroy.isDone()) {\r\n                for (let object of this._myFruitToDestroy) {\r\n                    //object.pp_destroy();\r\n                    object.pp_setActive(false);\r\n                }\r\n                this._myFruitToDestroy = [];\r\n            }\r\n        }\r\n    },\r\n    _onCollision(type, physXComponent) {\r\n        if (type == WL.CollisionEventType.Touch || type == WL.CollisionEventType.TriggerTouch) {\r\n            let fruit = physXComponent.object.pp_getComponent(\"fruit\");\r\n            if (fruit != null) {\r\n                if (!fruit._myUsed) {\r\n                    fruit.activateEffect();\r\n                    if (fruit._myUsed) {\r\n                        //fruit.object.pp_setActive(false);\r\n                        this._myFruitToDestroy.push(fruit.object);\r\n                        this._myTimerDestroy.start();\r\n                    }\r\n                }\r\n            } else {\r\n                let wondermelon = physXComponent.object.pp_getComponent(\"wondermelon\");\r\n\r\n                if (wondermelon != null) {\r\n                    if (!wondermelon._myUsed) {\r\n                        wondermelon.activateEffect();\r\n                        if (wondermelon._myUsed) {\r\n                            //fruit.object.pp_setActive(false);\r\n                            //this._myFruitToDestroy.push(wondermelon.object);\r\n                            //this._myTimerDestroy.start();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});", "WL.registerComponent('swap-grab-hand', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myNormalHand: { type: WL.Type.Object },\r\n    _myGrabHand: { type: WL.Type.Object },\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        if (this._myHandedness == PP.HandednessIndex.LEFT) {\r\n            this._myGamepad = PP.myLeftGamepad;\r\n        } else {\r\n            this._myGamepad = PP.myRightGamepad;\r\n        }\r\n    },\r\n    update: function (dt) {\r\n        if (this._myGamepad.getButtonInfo(PP.GamepadButtonID.SQUEEZE).isPressed()) {\r\n            this._myNormalHand.pp_setActive(false);\r\n            this._myGrabHand.pp_setActive(true);\r\n        } else {\r\n            this._myNormalHand.pp_setActive(true);\r\n            this._myGrabHand.pp_setActive(false);\r\n        }\r\n    }\r\n});", "WL.registerComponent('axe', {\r\n}, {\r\n    init: function () {\r\n        this._myFirstUpdate = true;\r\n        this._myStartTransform = PP.quat2_create();\r\n        this._myRespawnTransform = PP.quat2_create();\r\n        this._myPrevPosition = [0, 0, 0];\r\n        this._myPosition = [0, 0, 0];\r\n\r\n        this._mySpeed = 0;\r\n    },\r\n    start: function () {\r\n        this._myIsGrabbed = false;\r\n\r\n        this._myLamentoPitch = 1.4;\r\n        this._myInvinciblePitch = 0.85;\r\n        this._myColpoFinalePitch = 1.25;\r\n\r\n        this._myCollected = false;\r\n\r\n        this._myStarted = false;\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Pitch\", 1, 0.1, 3));\r\n    },\r\n\r\n    update: function (dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n\r\n            this._myPhysX = Global.myFollowAxe.pp_getComponent('physx');\r\n            if (this._myPhysX != null) {\r\n                this._myPhysX.onCollision(this._onCollision.bind(this));\r\n            }\r\n            this._myToDestroy = [];\r\n            this._myTimerDestroy = new PP.Timer(0, false);\r\n\r\n            this._myGrabbable = this.object.pp_getComponent('pp-grabbable');\r\n        }\r\n\r\n        if (!this._myStarted) {\r\n            if (Global.myStoryReady) {\r\n                this._myStarted = true;\r\n                this._myAudioColpi = [];\r\n                this._myAudioColpi[0] = PP.myAudioManager.createAudioPlayer(AudioID.COLPO_NORMALE_1);\r\n                this._myAudioColpi[1] = PP.myAudioManager.createAudioPlayer(AudioID.COLPO_NORMALE_2);\r\n                this._myAudioColpoFinale = PP.myAudioManager.createAudioPlayer(AudioID.COLPO_FINALE);\r\n\r\n                this._myLamenti = [];\r\n                this._myLamenti[0] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_1);\r\n                this._myLamenti[1] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_2);\r\n                this._myLamenti[2] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_3);\r\n\r\n                this._myInvincible = PP.myAudioManager.createAudioPlayer(AudioID.INVINCIBLE);\r\n\r\n            }\r\n        }\r\n\r\n        if (this._myTimerDestroy.isRunning()) {\r\n            this._myTimerDestroy.update(dt)\r\n            if (this._myTimerDestroy.isDone()) {\r\n                for (let object of this._myToDestroy) {\r\n                    //object.pp_destroy();\r\n                    if (object[1]) {\r\n                        let fruits = object[0].pp_getComponent(\"human-tree\")._myFruits;\r\n                        for (let fruit of fruits) {\r\n                            if (!fruit._myGathered) {\r\n                                let fruitFall = true;\r\n\r\n                                if (!fruitFall) {\r\n                                    //this._myToDestroy.push([fruit, false]);\r\n                                } else {\r\n                                    fruit.pp_setParent(null);\r\n                                    fruit.pp_getComponent(\"physx\").kinematic = false;\r\n                                }\r\n                                //fruit.pp_setActive(false);\r\n                            }\r\n                        }\r\n                    }\r\n                    object[0].pp_setActive(false);\r\n                }\r\n\r\n                this._myToDestroy = [];\r\n            }\r\n        }\r\n\r\n        if (this._myGrabbable != null) {\r\n            if (this._myGrabbable.isGrabbed()) {\r\n                if (!this._myCollected) {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"collect_axe\", {\r\n                            \"value\": 1\r\n                        });\r\n\r\n                        if (Global.myDeadOnce) {\r\n                            gtag(\"event\", \"collect_axe_after_death\", {\r\n                                \"value\": 1\r\n                            });\r\n                        } else {\r\n                            gtag(\"event\", \"collect_axe_before_death\", {\r\n                                \"value\": 1\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                this._myCollected = true;\r\n                this._myIsGrabbed = true;\r\n            } else {\r\n                this._myIsGrabbed = false;\r\n            }\r\n        }\r\n\r\n        let currentPosition = this.object.pp_getPosition(this._myPosition);\r\n\r\n        if (Global.myReady) {\r\n            let distance = currentPosition.vec3_distance(this._myPrevPosition);\r\n            if (distance < 1) {\r\n                this._mySpeed = (this._mySpeed + (distance / Math.max(dt, 1))) / 2;\r\n            }\r\n        }\r\n\r\n        this._myPrevPosition.vec3_copy(currentPosition);\r\n    },\r\n    setStartTransforms(cellPosition) {\r\n        let axePosition = [0, 1.4, 0.20];\r\n        let axeRotation = [45, -55, -15];\r\n        //axeRotation.vec3_rotateAxis(180, [0, 1, 0], axeRotation);\r\n        this._myStartTransform.quat2_setPositionRotationQuat(axePosition, axeRotation.vec3_degreesToQuat());\r\n        this._myRespawnTransform = this._myStartTransform;\r\n\r\n        this.object.pp_setTransformLocalQuat(this._myStartTransform);\r\n        this.object.pp_rotateAxis(180, [0, 1, 0]);\r\n    },\r\n    resetTransformRespawn() {\r\n        this._myGrabbable.release();\r\n        this._myResetPos = true;\r\n        this.object.pp_setTransformLocalQuat(this._myRespawnTransform);\r\n    },\r\n    _onCollision(type, physXComponent) {\r\n        if (!Global.myReady) {\r\n            return;\r\n        }\r\n\r\n        if (this._myGrabbable.isGrabbed() && this._mySpeed >= Global.mySetup.myPlayerSetup.myAxeSpeedToHit) {\r\n            if (type == WL.CollisionEventType.Touch || type == WL.CollisionEventType.TriggerTouch) {\r\n                let root = physXComponent.object.pp_getComponent(\"root\");\r\n                if (root) {\r\n                    if (root._myHit > 0) {\r\n                        if (root.hit()) {\r\n\r\n                            if (root._myHit == 0) {\r\n                                PP.myLeftGamepad.pulse(0.5, 0.5);\r\n                                PP.myRightGamepad.pulse(0.5, 0.5);\r\n                            } else {\r\n                                this._myGrabbable.getGrabber().pp_getComponent(\"pp-grabber-hand\")._myGamepad.pulse(0.5, 0.25);\r\n                            }\r\n                            let player = this._myAudioColpoFinale;\r\n                            let pitch = 1;\r\n                            if (root._myHit > 0) {\r\n                                if (root._myHit > 1) {\r\n                                    player = this._myAudioColpi[1];\r\n                                } else {\r\n                                    player = this._myAudioColpi[0];\r\n                                }\r\n                            } else {\r\n                                pitch = this._myColpoFinalePitch;\r\n                            }\r\n\r\n                            player.setPosition(this.object.pp_getPosition());\r\n                            player.setPitch(Math.pp_random(pitch - 0.15, pitch + 0.05));\r\n                            player.play();\r\n\r\n                            if (root._myHit == 0) {\r\n                                let player = Math.pp_randomPick(this._myLamenti);\r\n                                player.setPosition(root.object.pp_getPosition().vec3_add([0, 2, 0]));\r\n                                player.setPitch(Math.pp_random(this._myLamentoPitch - 0.15, this._myLamentoPitch + 0.05));\r\n                                player.play();\r\n                            }\r\n                        }\r\n                    } else {\r\n                        this._myGrabbable.getGrabber().pp_getComponent(\"pp-grabber-hand\")._myGamepad.pulse(0.5, 0.25);\r\n                    }\r\n                }\r\n\r\n                let rootWall = physXComponent.object.pp_getComponent(\"root-wall\");\r\n                if (rootWall) {\r\n                    if (rootWall._myHit > 0) {\r\n                        if (rootWall.hit()) {\r\n\r\n                            if (rootWall._myHit == 0) {\r\n                                PP.myLeftGamepad.pulse(0.5, 0.5);\r\n                                PP.myRightGamepad.pulse(0.5, 0.5);\r\n                            } else {\r\n                                this._myGrabbable.getGrabber().pp_getComponent(\"pp-grabber-hand\")._myGamepad.pulse(0.5, 0.25);\r\n                            }\r\n\r\n                            let player = this._myAudioColpoFinale;\r\n                            let pitch = 1;\r\n                            if (rootWall._myHit > 0) {\r\n                                if (rootWall._myHit > 1) {\r\n                                    player = this._myAudioColpi[1];\r\n                                } else {\r\n                                    player = this._myAudioColpi[0];\r\n                                }\r\n                            } else {\r\n                                pitch = this._myColpoFinalePitch;\r\n                            }\r\n\r\n                            player.setPosition(this.object.pp_getPosition());\r\n                            player.setPitch(Math.pp_random(pitch - 0.15, pitch + 0.05));\r\n                            player.play();\r\n\r\n                            if (rootWall._myHit == 0) {\r\n                                let player = Math.pp_randomPick(this._myLamenti);\r\n                                player.setPosition(rootWall.object.pp_getPosition().vec3_add([0, 2, 0]));\r\n                                player.setPitch(Math.pp_random(this._myLamentoPitch - 0.15, this._myLamentoPitch + 0.05));\r\n                                player.play();\r\n                            }\r\n                        }\r\n                        if (rootWall._myHit == 0) {\r\n                            //rootWall.object.pp_setActive(false);\r\n                            this._myToDestroy.push([rootWall.object, false]);\r\n                            this._myTimerDestroy.start();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                let bigTree = physXComponent.object.pp_getComponent(\"big-tree\");\r\n                if (bigTree) {\r\n                    if (bigTree._myHit > 0) {\r\n                        if (bigTree.hit()) {\r\n                            if (bigTree._myHit != 0) {\r\n                                this._myGrabbable.getGrabber().pp_getComponent(\"pp-grabber-hand\")._myGamepad.pulse(0.5, 0.25);\r\n                            }\r\n\r\n                            let player = this._myAudioColpoFinale;\r\n                            let pitch = 1;\r\n                            if (bigTree._myHit > 0) {\r\n                                if (bigTree._myHit % 2 == 0) {\r\n                                    player = this._myAudioColpi[1];\r\n                                } else {\r\n                                    player = this._myAudioColpi[0];\r\n                                }\r\n                            } else {\r\n                                pitch = this._myColpoFinalePitch;\r\n                            }\r\n\r\n                            player.setPosition(this.object.pp_getPosition());\r\n                            player.setPitch(Math.pp_random(pitch - 0.15, pitch + 0.05));\r\n                            player.play();\r\n\r\n                            if (bigTree._myHit == 0) {\r\n                                let player = Math.pp_randomPick(this._myLamenti);\r\n                                player.setPosition(bigTree.object.pp_getPosition().vec3_add([0, 2, 0]));\r\n                                player.setPitch(Math.pp_random(this._myLamentoPitch - 0.15, this._myLamentoPitch + 0.05));\r\n                                //player.play();\r\n                            }\r\n                        } else {\r\n                            this._myGrabbable.getGrabber().pp_getComponent(\"pp-grabber-hand\")._myGamepad.pulse(0.5, 0.25);\r\n\r\n                            let player = this._myInvincible;\r\n                            player.setPosition(bigTree.object.pp_getPosition().vec3_add([0, 2, 0]));\r\n                            player.setPitch(Math.pp_random(this._myInvinciblePitch - 0.15, this._myInvinciblePitch + 0.05));\r\n                            player.play();\r\n                        }\r\n\r\n                        if (bigTree._myHit == 0) {\r\n                            //bigTree.object.pp_setActive(false);\r\n                            //this._myToDestroy.push(bigTree.object);\r\n                            //this._myTimerDestroy.start();\r\n                            // suono vittoria\r\n                            // vibrazione\r\n                        }\r\n                    } else {\r\n                        this._myGrabbable.getGrabber().pp_getComponent(\"pp-grabber-hand\")._myGamepad.pulse(0.5, 0.25);\r\n                    }\r\n                }\r\n\r\n                let humanTree = physXComponent.object.pp_getComponent(\"human-tree\");\r\n                if (humanTree) {\r\n                    if (humanTree._myHit > 0) {\r\n                        if (humanTree.hit()) {\r\n\r\n                            if (humanTree._myHit == 0) {\r\n                                PP.myLeftGamepad.pulse(0.5, 0.5);\r\n                                PP.myRightGamepad.pulse(0.5, 0.5);\r\n                            } else {\r\n                                this._myGrabbable.getGrabber().pp_getComponent(\"pp-grabber-hand\")._myGamepad.pulse(0.5, 0.25);\r\n                            }\r\n                            let player = this._myAudioColpoFinale;\r\n                            let pitch = 1;\r\n                            if (humanTree._myHit > 0) {\r\n                                if (humanTree._myHit > 1) {\r\n                                    player = this._myAudioColpi[1];\r\n                                } else {\r\n                                    player = this._myAudioColpi[0];\r\n                                }\r\n                            } else {\r\n                                pitch = this._myColpoFinalePitch;\r\n                            }\r\n\r\n                            player.setPosition(this.object.pp_getPosition());\r\n                            player.setPitch(Math.pp_random(pitch - 0.15, pitch + 0.05));\r\n                            player.play();\r\n                        }\r\n\r\n                        if (humanTree._myHit == 0) {\r\n\r\n                            let player = Math.pp_randomPick(this._myLamenti);\r\n                            player.setPosition(humanTree.object.pp_getPosition().vec3_add([0, 2, 0]));\r\n                            player.setPitch(Math.pp_random(this._myLamentoPitch - 0.15, this._myLamentoPitch + 0.05));\r\n                            player.play();\r\n\r\n                            //humanTree.object.pp_setActive(false);\r\n                            this._myToDestroy.push([humanTree.object, true]);\r\n\r\n                            if (false) {\r\n                                let fruits = humanTree._myFruits;\r\n                                for (let fruit of fruits) {\r\n                                    if (!fruit._myGathered) {\r\n                                        let fruitFall = true;\r\n\r\n                                        if (!fruitFall) {\r\n                                            this._myToDestroy.push(fruit);\r\n                                        } else {\r\n                                            fruit.pp_setParent(null);\r\n                                            fruit.pp_getComponent(\"physx\").kinematic = false;\r\n                                        }\r\n                                        //fruit.pp_setActive(false);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            this._myTimerDestroy.start();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                let openComponents = [\"open-ggj\", \"open-zesty\", \"open-github\"];\r\n                for (let component of openComponents) {\r\n                    let openComponent = physXComponent.object.pp_getComponent(component);\r\n                    if (openComponent) {\r\n                        if (openComponent.hit()) {\r\n\r\n                            if (openComponent._myHit == 0) {\r\n                                PP.myLeftGamepad.pulse(0.5, 0.5);\r\n                                PP.myRightGamepad.pulse(0.5, 0.5);\r\n                            } else {\r\n                                this._myGrabbable.getGrabber().pp_getComponent(\"pp-grabber-hand\")._myGamepad.pulse(0.5, 0.25);\r\n                            }\r\n\r\n                            let player = this._myAudioColpoFinale;\r\n                            let pitch = 1;\r\n                            if (openComponent._myHit > 0) {\r\n                                if (openComponent._myHit > 1) {\r\n                                    player = this._myAudioColpi[1];\r\n                                } else {\r\n                                    player = this._myAudioColpi[0];\r\n                                }\r\n                            } else {\r\n                                pitch = this._myColpoFinalePitch;\r\n                            }\r\n\r\n                            player.setPosition(this.object.pp_getPosition());\r\n                            player.setPitch(Math.pp_random(pitch - 0.15, pitch + 0.05));\r\n                            player.play();\r\n\r\n                            if (openComponent._myHit == 0) {\r\n                                let player = Math.pp_randomPick(this._myLamenti);\r\n                                player.setPosition(openComponent.object.pp_getPosition().vec3_add([0, 2, 0]));\r\n                                player.setPitch(Math.pp_random(this._myLamentoPitch - 0.15, this._myLamentoPitch + 0.05));\r\n                                player.play();\r\n\r\n                                openComponent.open();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        clonedComponent._myStartTransform.quat2_copy(this._myStartTransform);\r\n\r\n        return clonedComponent;\r\n    }\r\n});", "WL.registerComponent('fruit', {\r\n    _myType: { type: WL.Type.Int, default: 60 }\r\n}, {\r\n    init: function () {\r\n        if (Global.myFruitRandomPowers.length == 0) {\r\n            let indexes = [0, 1, 2];\r\n            let firstIndex = LR.MazeItemType.HUMAN_TREE_1;\r\n            while (indexes.length > 0) {\r\n                let random = Math.pp_randomPick(indexes);\r\n                indexes.pp_removeEqual(random);\r\n                Global.myFruitRandomPowers[firstIndex] = Global.myFruitPowers[random];\r\n\r\n                if (random == 0) {\r\n                    Global.myGoodFruit = firstIndex;\r\n                }\r\n\r\n                if (random == 1) {\r\n                    Global.myBadFruit = firstIndex;\r\n                }\r\n\r\n                if (random == 2) {\r\n                    Global.myPerfectFruit = firstIndex;\r\n                }\r\n\r\n                if (random == 3) {\r\n                    Global.myEvilFruit = firstIndex;\r\n                }\r\n\r\n                firstIndex += 10;\r\n            }\r\n        }\r\n\r\n        Global.myFruitRandomPowers[LR.MazeItemType.HUMAN_TREE_4] = Global.myFruitPowers[3];\r\n    },\r\n    start: function () {\r\n        this._myGathered = false;\r\n        this._myUsed = false;\r\n        this._myGrabbable = this.object.pp_getComponent(\"pp-grabbable\");\r\n        this._myIsGrabbed = false;\r\n\r\n        this._myTimeGrabbed = 0;\r\n        this._myTimeGrabbedStep = [5, 10, 15, 30];\r\n        this._myTimeGrabbedStepIndex = 0;\r\n\r\n        this._myStarted = false;\r\n    },\r\n    update: function (dt) {\r\n        if (!this._myStarted) {\r\n            if (Global.myStoryReady) {\r\n                this._myStarted = true;\r\n                this._myAudioMangia = PP.myAudioManager.createAudioPlayer(AudioID.MANGIA_FRUTTO);\r\n            }\r\n        }\r\n\r\n        if (this._myGrabbable != null) {\r\n            if (this._myGrabbable.isGrabbed()) {\r\n                if (!this._myGathered) {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"collect_fruit\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                }\r\n\r\n                this._myGathered = true;\r\n                this._myIsGrabbed = true;\r\n\r\n                this._myTimeGrabbed += dt;\r\n                if (this._myTimeGrabbedStepIndex < this._myTimeGrabbedStep.length && this._myTimeGrabbed > this._myTimeGrabbedStep[this._myTimeGrabbedStepIndex]) {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"fruit_grab_for_\" + this._myTimeGrabbedStep[this._myTimeGrabbedStepIndex] + \"_seconds\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                    this._myTimeGrabbedStepIndex++;\r\n                }\r\n            } else {\r\n                this._myIsGrabbed = false;\r\n            }\r\n        } else {\r\n            this._myGrabbable = this.object.pp_getComponent(\"pp-grabbable\");\r\n        }\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        clonedComponent._myType = this._myType;\r\n\r\n        return clonedComponent;\r\n    },\r\n    pp_clonePostProcess(clonedComponent) {\r\n        clonedComponent.start();\r\n    },\r\n    activateEffect() {\r\n        if (!this._myUsed && this._myGrabbable != null && this._myGrabbable.isGrabbed()) {\r\n\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"eat_fruit\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n\r\n            Global.myFruitRandomPowers[this._myType]();\r\n            this._myUsed = true;\r\n\r\n            //this._myAudioMangia.setPosition(this.object.pp_getPosition());\r\n            this._myAudioMangia.setPitch(Math.pp_random(1.25 - 0.15, 1.25 + 0.05));\r\n            this._myAudioMangia.play();\r\n        }\r\n    }\r\n});\r\n\r\nGlobal.myFruitRandomPowers = [];\r\n\r\ndecreaseStage = function (full) {\r\n    if (full) {\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"eat_fruit_perfect\", {\r\n                \"value\": 1\r\n            });\r\n        }\r\n    } else {\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"eat_fruit_good\", {\r\n                \"value\": 1\r\n            });\r\n        }\r\n    }\r\n\r\n    Global.myTransformation.removeStage(full);\r\n};\r\n\r\nincreaseStage = function (full) {\r\n    if (full) {\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"eat_fruit_evil\", {\r\n                \"value\": 1\r\n            });\r\n        }\r\n    } else {\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"eat_fruit_bad\", {\r\n                \"value\": 1\r\n            });\r\n        }\r\n    }\r\n\r\n    Global.myTransformation.addStage(full);\r\n};\r\n\r\nGlobal.myFruitPowers = [];\r\nGlobal.myFruitPowers[0] = decreaseStage.bind(null, false);\r\nGlobal.myFruitPowers[1] = increaseStage.bind(null, false);\r\nGlobal.myFruitPowers[2] = decreaseStage.bind(null, true);\r\nGlobal.myFruitPowers[3] = increaseStage.bind(null, true);\r\n\r\nGlobal.myGoodFruit = null;\r\nGlobal.myBadFruit = null;\r\nGlobal.myPerfectFruit = null;\r\nGlobal.myEvilFruit = null;\r\n\r\n", "WL.registerComponent('root', {\r\n    _myNormal: { type: WL.Type.Object },\r\n    _myHurt: { type: WL.Type.Object },\r\n    _myDead: { type: WL.Type.Object },\r\n    _myAxeSpawnRoot: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myStarted = false;\r\n        this._myHit = 0;\r\n\r\n        this._myCurrentPhase = 0;\r\n        this._myPhases = [];\r\n    },\r\n    update: function (dt) {\r\n        if (!this._myStarted) {\r\n            if (Global.myReady) {\r\n                let children = this.object.pp_getChildren();\r\n                for (let i = 0; i < children.length; i++) {\r\n                    this._myPhases[parseInt(children[i].pp_getName()) - 1] = children[i];\r\n                }\r\n\r\n                for (let phase of this._myPhases) {\r\n                    phase.pp_setActive(false);\r\n                }\r\n\r\n                this._myStarted = true;\r\n                this._myHit = Global.mySetup.myTreeSetup.myRootHit;\r\n                this._myPhases[0].pp_setActive(true);\r\n            }\r\n        } else {\r\n\r\n        }\r\n    },\r\n    hit() {\r\n        let hitted = false;\r\n\r\n        if (this._myHit > 0) {\r\n            this._myHit--;\r\n            hitted = true;\r\n\r\n            for (let phase of this._myPhases) {\r\n                phase.pp_setActive(false);\r\n            }\r\n\r\n            // suono\r\n            if (this._myHit == 0) {\r\n                Global.myRootsDefeated += 1;\r\n\r\n                this._myPhases[2].pp_setActive(true);\r\n                let tree = WL.scene.pp_getComponent(\"big-tree\");\r\n                if (tree) {\r\n                    tree.rootDie();\r\n                }\r\n\r\n                if (Global.myGoogleAnalytics) {\r\n                    gtag(\"event\", \"defeat_root\", {\r\n                        \"value\": 1\r\n                    });\r\n\r\n                    gtag(\"event\", \"defeat_root_\" + Global.myRootsDefeated, {\r\n                        \"value\": 1\r\n                    });\r\n\r\n                    if (this._myAxeSpawnRoot) {\r\n                        gtag(\"event\", \"defeat_root_axe_spawn\", {\r\n                            \"value\": 1\r\n                        });\r\n\r\n                        gtag(\"event\", \"defeat_root_axe_spawn_\" + Global.myRootsDefeated, {\r\n                            \"value\": 1\r\n                        });\r\n                    } else {\r\n                        gtag(\"event\", \"defeat_root_normal\", {\r\n                            \"value\": 1\r\n                        });\r\n\r\n                        gtag(\"event\", \"defeat_root_normal_\" + Global.myRootsDefeated, {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                this._myPhases[1].pp_setActive(true);\r\n\r\n                if (Global.myGoogleAnalytics) {\r\n                    gtag(\"event\", \"root_hit\", {\r\n                        \"value\": 1\r\n                    });\r\n\r\n                    let rootHit = Global.myRootsDefeated + 1;\r\n                    gtag(\"event\", \"root_hit_\" + rootHit, {\r\n                        \"value\": 1\r\n                    });\r\n\r\n                    if (this._myAxeSpawnRoot) {\r\n                        gtag(\"event\", \"root_hit_axe_spawn\", {\r\n                            \"value\": 1\r\n                        });\r\n\r\n                        gtag(\"event\", \"root_hit_axe_spawn_\" + rootHit, {\r\n                            \"value\": 1\r\n                        });\r\n                    } else {\r\n                        gtag(\"event\", \"root_hit_normal\", {\r\n                            \"value\": 1\r\n                        });\r\n\r\n                        gtag(\"event\", \"root_hit_normal_\" + rootHit, {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return hitted;\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        clonedComponent._myAxeSpawnRoot = this._myAxeSpawnRoot;\r\n\r\n        return clonedComponent;\r\n    },\r\n});\r\n\r\nGlobal.myRootsDefeated = 0;", "WL.registerComponent('root-wall', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myStarted = false;\r\n        this._myHit = 0;\r\n    },\r\n    update: function (dt) {\r\n        if (!this._myStarted) {\r\n            if (Global.myReady) {\r\n                this._myStarted = true;\r\n                this._myHit = Global.mySetup.myTreeSetup.myRootWallHit;\r\n            }\r\n        } else {\r\n\r\n        }\r\n    },\r\n    hit() {\r\n        let hitted = false;\r\n\r\n        if (this._myHit > 0) {\r\n            this._myHit--;\r\n            hitted = true;\r\n            // suono\r\n\r\n            if (this._myHit == 0) {\r\n                if (Global.myGoogleAnalytics) {\r\n                    gtag(\"event\", \"defeat_root_wall\", {\r\n                        \"value\": 1\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        return hitted;\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        return clonedComponent;\r\n    }\r\n});", "Global.myBigTree = null;\r\nGlobal.myBigTreeDead = false;\r\n\r\nWL.registerComponent('big-tree', {\r\n    _myPhase1: { type: WL.Type.Object },\r\n    _myPhase2: { type: WL.Type.Object },\r\n    _myPhase3: { type: WL.Type.Object },\r\n    _myPhase4: { type: WL.Type.Object },\r\n    _myPhase5: { type: WL.Type.Object }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myStarted = false;\r\n        this._myBigTreeRoots = 0;\r\n        this._myHit = 0;\r\n\r\n        this._myPhases = [];\r\n\r\n        this._myCurrentPhase = 0;\r\n        this._myAvoidIncrement = false;\r\n\r\n        Global.myBigTree = this;\r\n\r\n        this._myTimeToWin = 0;\r\n    },\r\n    update: function (dt) {\r\n        if (!this._myStarted) {\r\n            if (Global.myReady) {\r\n                this._myBigTreeDie = new LR.BigTreeDie();\r\n\r\n                let children = this.object.pp_getChildren();\r\n                for (let i = 0; i < children.length; i++) {\r\n                    this._myPhases[parseInt(children[i].pp_getName()) - 1] = children[i];\r\n                }\r\n\r\n                for (let phase of this._myPhases) {\r\n                    phase.pp_setActive(false);\r\n                }\r\n\r\n                this._myStarted = true;\r\n                this._myBigTreeRoots = Global.mySetup.myTreeSetup.myBigTreeRoots;\r\n                this._myHit = Global.mySetup.myTreeSetup.myBigTreeHit;\r\n\r\n                this._myPhases[0].pp_setActive(true);\r\n\r\n                let rotationQuat = Global.lookPlayerAligned(this.object.pp_getPosition());\r\n                this.object.pp_setRotationQuat(rotationQuat);\r\n            }\r\n        } else if (this._myHit == 0) {\r\n            this._myBigTreeDie.update(dt);\r\n        }\r\n\r\n        if (this._myStarted && Global.myReady) {\r\n            if (this._myHit > 0) {\r\n                this._myTimeToWin += dt;\r\n            }\r\n        }\r\n    },\r\n    rootDie() {\r\n        if (this._myBigTreeRoots > 0) {\r\n            this._myBigTreeRoots--;\r\n\r\n            for (let phase of this._myPhases) {\r\n                phase.pp_setActive(false);\r\n            }\r\n\r\n            this._myCurrentPhase++;\r\n            this._myPhases[Math.floor(this._myCurrentPhase / 2)].pp_setActive(true);\r\n        }\r\n    },\r\n    hit() {\r\n        let hitted = false;\r\n\r\n        if (this._myBigTreeRoots == 0) {\r\n\r\n            if (!this._myAvoidIncrement) {\r\n                this._myCurrentPhase++;\r\n            }\r\n\r\n            if (this._myHit > 0) {\r\n\r\n                this._myHit--;\r\n                hitted = true;\r\n                //suono\r\n\r\n                for (let phase of this._myPhases) {\r\n                    phase.pp_setActive(false);\r\n                }\r\n\r\n                if (this._myHit > 4) {\r\n                    this._myPhases[2].pp_setActive(true);\r\n                } else if (this._myHit > 0) {\r\n                    this._myPhases[3].pp_setActive(true);\r\n                } else {\r\n                    this._myPhases[4].pp_setActive(true);\r\n                }\r\n                this._myAvoidIncrement = true;\r\n\r\n                if (this._myHit == 0) {\r\n                    Global.myBigTreeDead = true;\r\n                    Global.myStage = 0;\r\n\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"defeat_mother_tree\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n\r\n\r\n                    if (Global.myGoogleAnalytics) {\r\n                        if (Global.myIsMazeverseTime) {\r\n                            gtag(\"event\", \"defeat_mother_tree_mazeverse\", {\r\n                                \"value\": 1\r\n                            });\r\n                        } else {\r\n                            gtag(\"event\", \"defeat_mother_tree_normal\", {\r\n                                \"value\": 1\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"defeat_mother_tree_seconds\", {\r\n                            \"value\": Math.round(this._myTimeToWin)\r\n                        });\r\n                    }\r\n\r\n                    if (!Global.myIsMazeverseTime) {\r\n                        let score = Math.floor(this._myTimeToWin * 1000);\r\n                        PP.CAUtils.submitScore(\"labyroots\", score, function () {\r\n                            let leaderboards = WL.scene.pp_getComponents(\"display-leaderboard\");\r\n                            for (let leaderboard of leaderboards) {\r\n                                leaderboard.updateLeaderboard();\r\n                            }\r\n                        });\r\n                    }\r\n                } else {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"mother_tree_hit\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"mother_tree_hit_invincible\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n        }\r\n\r\n        return hitted;\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        return clonedComponent;\r\n    },\r\n    pp_clonePostProcess(clonedComponent) {\r\n        clonedComponent.start();\r\n    }\r\n});", "WL.registerComponent('human-tree', {\r\n    _myType: { type: WL.Type.Int, default: 60 }\r\n}, {\r\n    init: function () {\r\n        this._myPoints = null;\r\n    },\r\n    start: function () {\r\n        this._myStarted = false;\r\n        this._myHit = 0;\r\n\r\n        this._myFruits = [];\r\n    },\r\n    update: function (dt) {\r\n        if (!this._myStarted) {\r\n            if (Global.myReady) {\r\n                this._myStarted = true;\r\n                if (this._myType == 90) {\r\n                    this._myHit = Global.mySetup.myTreeSetup.myHumanTreeHit * 100;\r\n                } else {\r\n                    this._myHit = Global.mySetup.myTreeSetup.myHumanTreeHit;\r\n                }\r\n            }\r\n        } else {\r\n\r\n        }\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        clonedComponent._myType = this._myType;\r\n\r\n        return clonedComponent;\r\n    },\r\n    spawnFruits(fruitAmount) {\r\n        if (this._myPoints == null) {\r\n            this._myPoints = this.object.pp_getChildren();\r\n            this._myPoints.pp_remove((object) => object.pp_getComponent(\"physx\") != null);\r\n        }\r\n        if (fruitAmount == 8) {\r\n            fruitAmount = Math.pp_randomInt(0, this._myPoints.length);\r\n        } else if (fruitAmount == 9) {\r\n            fruitAmount = Math.pp_randomInt(1, this._myPoints.length);\r\n        } else if (fruitAmount == 7) {\r\n            fruitAmount = Math.pp_randomInt(Global.mySetup.myTreeSetup.myMinHumanFruits, Global.mySetup.myTreeSetup.myMaxHumanFruits);\r\n        }\r\n\r\n        let points = this._myPoints.pp_clone();\r\n        while (fruitAmount > 0 && points.length > 0) {\r\n            fruitAmount--;\r\n            let point = Math.pp_randomPick(points);\r\n            points.pp_removeEqual(point);\r\n\r\n            let fruit = Global.myFruits[this._myType].pp_clone();\r\n            fruit.pp_setParent(this.object);\r\n            fruit.pp_setTransformLocalQuat(point.pp_getTransformLocalQuat());\r\n            fruit.pp_setActive(true);\r\n\r\n            this._myFruits.push(fruit);\r\n        }\r\n    },\r\n    hit() {\r\n        let hitted = false;\r\n\r\n        if (this._myHit > 0) {\r\n            this._myHit--;\r\n            hitted = true;\r\n            // suono\r\n\r\n            if (this._myHit == 0) {\r\n                if (this._myType != 90) {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"defeat_human_tree\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                } else {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"defeat_bride_tree\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n\r\n                    Global.myBigTreeDead = true;\r\n                    Global.myStage = 0;\r\n                }\r\n            } else {\r\n                if (this._myType != 90) {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"human_tree_hit\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                } else {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"bride_tree_hit\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return hitted;\r\n    },\r\n    pp_clonePostProcess(clonedComponent) {\r\n        clonedComponent.start();\r\n    }\r\n});", "LR.BigTreeDie = class BigTreeDie {\r\n    constructor() {\r\n        this._myTimer = new PP.Timer(0);\r\n        this._myMaxCounter = 7;\r\n        this._myCounter = this._myMaxCounter;\r\n\r\n        this._myLamenti = [];\r\n        this._myLamenti[0] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_1);\r\n        this._myLamenti[1] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_2);\r\n        this._myLamenti[2] = PP.myAudioManager.createAudioPlayer(AudioID.LAMENTO_3);\r\n\r\n        this._mySecretWallDie = PP.myAudioManager.createAudioPlayer(AudioID.SECRET_WALL_OPEN);\r\n\r\n        this._myAudioColpi = PP.myAudioManager.createAudioPlayer(AudioID.BIG_TREE_DIE_HIT);\r\n\r\n        this._myLamentoPitch = 1.4;\r\n    }\r\n\r\n    update(dt) {\r\n        let tempoBase = 1.0;\r\n        if (this._myCounter > 0) {\r\n            this._myTimer.update(dt);\r\n            if (this._myTimer.isDone()) {\r\n                if (this._myCounter > 1) {\r\n                    this._myTimer.start(tempoBase);\r\n                    let player = Math.pp_randomPick(this._myLamenti);\r\n                    let position = Global.myBigTree.object.pp_getPosition().vec3_add([Math.pp_random(-1, 1), Math.pp_random(1.75, 3), 0]);\r\n                    player.setPosition(position);\r\n                    player.setPitch(Math.pp_random(this._myLamentoPitch - 0.15, this._myLamentoPitch + 0.05));\r\n                    player.play();\r\n\r\n                    if (this._myCounter != this._myMaxCounter) {\r\n                        let playerColpo = this._myAudioColpi;\r\n                        playerColpo.setPosition(position);\r\n                        let pitch = 0.6;\r\n                        playerColpo.setPitch(Math.pp_random(pitch - 0.15, pitch + 0.05));\r\n                        //playerColpo.play();\r\n                    }\r\n\r\n                    PP.myLeftGamepad.pulse(0.5, 0.5);\r\n                    PP.myRightGamepad.pulse(0.5, 0.5);\r\n\r\n                    if (this._myCounter == 2) {\r\n                        this._myTimer.start(tempoBase + 0.5);\r\n                    }\r\n                } else {\r\n                    let wallPosition = Global.mySecretWall.pp_getPosition();\r\n                    this._mySecretWallDie.setPosition(wallPosition.vec3_add([0, 1.5, 0]));\r\n                    if (!Global.myIsMazeverseTime) {\r\n                        this._mySecretWallDie.play();\r\n                        Global.mySecretWall.pp_setActive(false);\r\n                    }\r\n\r\n                    PP.myLeftGamepad.pulse(0.75, 0.75);\r\n                    PP.myRightGamepad.pulse(0.75, 0.75);\r\n                }\r\n\r\n                this._myCounter--;\r\n            }\r\n        }\r\n\r\n    }\r\n};", "WL.registerComponent(\"test\", {\r\n}, {    \r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myState = 3;\r\n        this._myTimer = 15;\r\n    },\r\n    update: function (dt) {\r\n        this._myTimer -= dt;\r\n        //console.log(this._myTimer + \" | \" + this._myState);\r\n        if(this._myState == 3 && this._myTimer <= 10){\r\n            console.log(this._myState + \" --> \" + --this._myState);\r\n            console.log(10 + \"secondi rimanenti\");\r\n        }else if(this._myState == 2 && this._myTimer <= 6){\r\n            console.log(this._myState + \" --> \" + --this._myState);\r\n            console.log(6 + \"secondi rimanenti\");\r\n        }else if(this._myState == 1 && this._myTimer <= 3){\r\n            console.log(this._myState + \" --> \" + --this._myState);\r\n            console.log(3 + \"secondi rimanenti\");\r\n        }else if(this._myState == 0 && this._myTimer <= 0){\r\n            console.log(this._myState + \" --> \" + --this._myState);\r\n            console.log(\"Sei un albero\");\r\n        }\r\n    }\r\n});", "//WLE \r\n\r\nrequire('@wonderlandengine/components/8thwall-camera');\r\nrequire('@wonderlandengine/components/cursor-target');\r\nrequire('@wonderlandengine/components/cursor');\r\nrequire('@wonderlandengine/components/debug-object');\r\nrequire('@wonderlandengine/components/device-orientation-look');\r\nrequire('@wonderlandengine/components/finger-cursor');\r\nrequire('@wonderlandengine/components/fixed-foveation');\r\nrequire('@wonderlandengine/components/hand-tracking');\r\nrequire('@wonderlandengine/components/hit-test-location');\r\nrequire('@wonderlandengine/components/howler-audio-listener');\r\nrequire('@wonderlandengine/components/howler-audio-source');\r\nrequire('@wonderlandengine/components/image-texture');\r\nrequire('@wonderlandengine/components/mouse-look');\r\n//require('@wonderlandengine/components/player-height'); \r\nrequire('@wonderlandengine/components/target-framerate');\r\nrequire('@wonderlandengine/components/teleport');\r\nrequire('@wonderlandengine/components/two-joint-ik-solver');\r\nrequire('@wonderlandengine/components/video-texture');\r\nrequire('@wonderlandengine/components/vr-mode-active-switch');\r\nrequire('@wonderlandengine/components/wasd-controls');\r\nrequire('@wonderlandengine/components/wonderleap-ad');\r\n\r\n//PP\r\n\r\nrequire('./pp/pp');\r\n\r\n//\tPLUGIN\r\nrequire('./pp/plugin/extensions/array_extension');\r\nrequire('./pp/plugin/extensions/object_extension');\r\nrequire('./pp/plugin/extensions/math_extension');\r\nrequire('./pp/plugin/extensions/scene_extension');\r\n\r\nrequire('./pp/plugin/component_mods/clone_component_mod');\r\nrequire('./pp/plugin/component_mods/cursor_component_mod');\r\nrequire('./pp/plugin/component_mods/cursor_target_component_mod');\r\nrequire('./pp/plugin/component_mods/mouse_look_component_mod');\r\n\r\n//\tAUDIO\r\nrequire('./pp/audio/spatial_audio_listener');\r\nrequire('./pp/audio/audio_manager_component');\r\nrequire('./pp/audio/audio_manager');\r\nrequire('./pp/audio/audio_player');\r\nrequire('./pp/audio/audio_setup');\r\nrequire('./pp/audio/audio_utils');\r\nrequire('./pp/audio/mute_everything');\r\n\r\nrequire('./pp/audio/howler/howler_audio_player');\r\n\r\n//\tCAULDRON\r\nrequire('./pp/cauldron/benchmarks/max_physx');\r\nrequire('./pp/cauldron/benchmarks/max_visible_triangles');\r\n\r\nrequire('./pp/cauldron/cauldron/object_pool_manager');\r\nrequire('./pp/cauldron/cauldron/save_manager');\r\nrequire('./pp/cauldron/cauldron/timer');\r\n\r\nrequire('./pp/cauldron/components/clear_console_on_xr_session_start');\r\nrequire('./pp/cauldron/components/set_active');\r\nrequire('./pp/cauldron/components/adjust_hierarchy_physx_scale');\r\nrequire('./pp/cauldron/components/get_player_objects');\r\nrequire('./pp/cauldron/components/get_default_resources');\r\nrequire('./pp/cauldron/components/show_fps');\r\n\r\nrequire('./pp/cauldron/fsm/fsm');\r\nrequire('./pp/cauldron/fsm/state');\r\nrequire('./pp/cauldron/fsm/transition');\r\nrequire('./pp/cauldron/fsm/states/timer_state');\r\n\r\nrequire('./pp/cauldron/utils/color_utils');\r\nrequire('./pp/cauldron/utils/material_utils');\r\nrequire('./pp/cauldron/utils/mesh_utils');\r\nrequire('./pp/cauldron/utils/save_utils');\r\nrequire('./pp/cauldron/utils/text_utils');\r\nrequire('./pp/cauldron/utils/xr_utils');\r\nrequire('./pp/cauldron/utils/browser_utils');\r\n\r\nrequire('./pp/cauldron/physics/physics_utils');\r\nrequire('./pp/cauldron/physics/physics_raycast_data');\r\nrequire('./pp/cauldron/physics/physics_layer_flags');\r\nrequire('./pp/cauldron/physics/physics_collision_collector');\r\n\r\nrequire('./pp/cauldron/visual/visual_manager');\r\n\r\nrequire('./pp/cauldron/visual/elements/visual_element_types');\r\nrequire('./pp/cauldron/visual/elements/visual_line');\r\nrequire('./pp/cauldron/visual/elements/visual_mesh');\r\nrequire('./pp/cauldron/visual/elements/visual_point');\r\nrequire('./pp/cauldron/visual/elements/visual_arrow');\r\nrequire('./pp/cauldron/visual/elements/visual_text');\r\nrequire('./pp/cauldron/visual/elements/visual_transform');\r\nrequire('./pp/cauldron/visual/elements/visual_raycast');\r\nrequire('./pp/cauldron/visual/elements/visual_torus');\r\n\r\nrequire('./pp/cauldron/visual/components/visual_manager_component');\r\n\r\n//\tDEBUG\r\nrequire('./pp/debug/debug_manager');\r\nrequire('./pp/debug/debug_visual_manager');\r\n\r\nrequire('./pp/debug/components/debug_transform_component');\r\nrequire('./pp/debug/components/debug_manager_component');\r\n\r\n//\tGAMEPLAY\r\n\r\n//    CAULDRON\r\nrequire('./pp/gameplay/cauldron/cauldron/direction_2D_to_3D_converter');\r\nrequire('./pp/gameplay/cauldron/cauldron/number_over_value');\r\n\r\nrequire('./pp/gameplay/cauldron/player/player_head_controller');\r\nrequire('./pp/gameplay/cauldron/player/player_occlusion');\r\nrequire('./pp/gameplay/cauldron/player/components/player_head_controller_component');\r\nrequire('./pp/gameplay/cauldron/player/components/player_occlusion_component');\r\n\r\n//    CHARACTER CONTROLLER\r\nrequire('./pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/collision_params');\r\nrequire('./pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/collision_check');\r\nrequire('./pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/collision_movement_check');\r\nrequire('./pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/collision_teleport_check');\r\nrequire('./pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/collision_position_check');\r\nrequire('./pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/horizontal_collision_check');\r\nrequire('./pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/horizontal_collision_sliding');\r\nrequire('./pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/horizontal_collision_movement_check');\r\nrequire('./pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/horizontal_collision_position_check');\r\nrequire('./pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/vertical_collision_check');\r\nrequire('./pp/gameplay/character_controller/collision/collision_check_bridge/collision_check/collision_surface_check');\r\nrequire('./pp/gameplay/character_controller/collision/collision_check_bridge/collision_check_bridge');\r\n\r\nrequire('./pp/gameplay/character_controller/collision/character_collider_setup');\r\nrequire('./pp/gameplay/character_controller/collision/character_collider_utils');\r\nrequire('./pp/gameplay/character_controller/collision/character_collision_results');\r\nrequire('./pp/gameplay/character_controller/collision/character_collision_system');\r\nrequire('./pp/gameplay/character_controller/collision/components/character_collision_system_component');\r\n\r\nrequire('./pp/gameplay/character_controller/character_controller');\r\nrequire('./pp/gameplay/character_controller/synced_character_controller');\r\nrequire('./pp/gameplay/character_controller/character_controller_utils');\r\n\r\nrequire('./pp/gameplay/character_controller/components/character_controller_component');\r\n\r\nrequire('./pp/gameplay/character_controller/player/player_character_controller');\r\nrequire('./pp/gameplay/character_controller/player/player_head_character_controller');\r\nrequire('./pp/gameplay/character_controller/player/player_hand_character_controller');\r\n\r\nrequire('./pp/gameplay/character_controller/player/components/player_character_controller_component');\r\nrequire('./pp/gameplay/character_controller/player/components/player_head_character_controller_component');\r\nrequire('./pp/gameplay/character_controller/player/components/player_hand_character_controller_component');\r\n\r\nrequire('./pp/gameplay/character_controller/character_controller_utils');\r\n\r\n//    GRAB & THROW\r\nrequire('./pp/gameplay/grab_throw/grabbable');\r\nrequire('./pp/gameplay/grab_throw/grabber_hand');\r\n\r\n//    LOCOMOTION\r\nrequire('./pp/gameplay/locomotion/components/global_gravity');\r\n\r\nrequire('./pp/gameplay/locomotion/player/player_locomotion_smooth');\r\nrequire('./pp/gameplay/locomotion/player/player_locomotion_rotate');\r\nrequire('./pp/gameplay/locomotion/player/player_locomotion_gravity');\r\n\r\nrequire('./pp/gameplay/locomotion/player/teleport/player_locomotion_teleport');\r\n\r\nrequire('./pp/gameplay/locomotion/player/components/player_locomotion_teleport_component');\r\nrequire('./pp/gameplay/locomotion/player/components/player_locomotion_smooth_component');\r\nrequire('./pp/gameplay/locomotion/player/components/player_locomotion_rotate_component');\r\nrequire('./pp/gameplay/locomotion/player/components/player_locomotion_gravity_component');\r\n\r\n//    UTILS\r\nrequire('./pp/gameplay/utils/ca_utils');\r\n\r\n//\tINPUT\r\nrequire('./pp/input/cauldron/finger_cursor');\r\nrequire('./pp/input/cauldron/input_types');\r\nrequire('./pp/input/cauldron/input_utils');\r\nrequire('./pp/input/cauldron/keyboard');\r\nrequire('./pp/input/cauldron/mouse');\r\nrequire('./pp/input/cauldron/input_manager');\r\nrequire('./pp/input/cauldron/input_manager_component');\r\nrequire('./pp/input/cauldron/switch_hand_object');\r\nrequire('./pp/input/cauldron/tracked_hand_draw_joint');\r\nrequire('./pp/input/cauldron/tracked_hand_draw_all_joints');\r\nrequire('./pp/input/cauldron/tracked_hand_draw_skin');\r\n\r\nrequire('./pp/input/gamepad/gamepad_buttons');\r\nrequire('./pp/input/gamepad/base_gamepad');\r\nrequire('./pp/input/gamepad/universal_gamepad');\r\nrequire('./pp/input/gamepad/gamepad_cores/gamepad_core');\r\nrequire('./pp/input/gamepad/gamepad_cores/xr_gamepad_core');\r\nrequire('./pp/input/gamepad/gamepad_cores/keyboard_gamepad_core');\r\nrequire('./pp/input/gamepad/gamepad_cores/virtual_gamepad_gamepad_core');\r\nrequire('./pp/input/gamepad/cauldron/gamepad_mesh_animator');\r\nrequire('./pp/input/gamepad/cauldron/gamepad_manager');\r\nrequire('./pp/input/gamepad/cauldron/gamepad_utils');\r\nrequire('./pp/input/gamepad/cauldron/gamepad_control_scheme');\r\n\r\nrequire('./pp/input/gamepad/virtual_gamepad/virtual_gamepad');\r\nrequire('./pp/input/gamepad/virtual_gamepad/virtual_gamepad_component');\r\nrequire('./pp/input/gamepad/virtual_gamepad/virtual_gamepad_params');\r\nrequire('./pp/input/gamepad/virtual_gamepad/virtual_gamepad_virtual_button');\r\nrequire('./pp/input/gamepad/virtual_gamepad/virtual_gamepad_virtual_thumbstick');\r\nrequire('./pp/input/gamepad/virtual_gamepad/virtual_gamepad_icon');\r\n\r\nrequire('./pp/input/pose/base_pose.js');\r\nrequire('./pp/input/pose/hand_pose');\r\nrequire('./pp/input/pose/head_pose');\r\nrequire('./pp/input/pose/tracked_hand_joint_pose');\r\nrequire('./pp/input/pose/tracked_hand_pose');\r\nrequire('./pp/input/pose/components/set_player_height');\r\nrequire('./pp/input/pose/components/set_hand_local_transform');\r\nrequire('./pp/input/pose/components/set_head_local_transform');\r\nrequire('./pp/input/pose/components/set_vr_head_local_transform');\r\nrequire('./pp/input/pose/components/set_non_vr_head_local_transform');\r\nrequire('./pp/input/pose/components/set_tracked_hand_joint_local_transform');\r\nrequire('./pp/input/pose/components/copy_hand_transform');\r\nrequire('./pp/input/pose/components/copy_head_transform');\r\nrequire('./pp/input/pose/components/copy_player_transform');\r\nrequire('./pp/input/pose/components/copy_player_pivot_transform');\r\n\r\n//\tTOOL\r\nrequire('./pp/tool/cauldron/cauldron/tool_types');\r\nrequire('./pp/tool/cauldron/components/tool_cursor');\r\n\r\nrequire('./pp/tool/console_vr/console_vr_widget_setup');\r\nrequire('./pp/tool/console_vr/console_vr_widget_ui');\r\nrequire('./pp/tool/console_vr/console_vr_widget');\r\nrequire('./pp/tool/console_vr/console_vr');\r\nrequire('./pp/tool/console_vr/console_vr_component');\r\n\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_object_tuner');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_light_attenuation');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_light_color');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_mesh_color');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_mesh_ambient_factor');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_scale');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_set_tune_target_child_number');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_set_tune_target_grab');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_transform');\r\n\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_ui');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_setup');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_ui');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_setup');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_selector');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_ui');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_setup');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_ui');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_setup');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_widget_selector');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_ui');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_setup');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/easy_tune_widget');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/easy_tune_widget_setup');\r\n\r\nrequire('./pp/tool/easy_tune/easy_tune_variables');\r\nrequire('./pp/tool/easy_tune/easy_tune_variable_types');\r\nrequire('./pp/tool/easy_tune/easy_tune_globals');\r\n\r\nrequire('./pp/tool/easy_tune/components/easy_tune_component');\r\nrequire('./pp/tool/easy_tune/components/easy_tune_import_variables');\r\n\r\nrequire('./pp/tool/widget_frame/widget_frame_setup');\r\nrequire('./pp/tool/widget_frame/widget_frame_ui');\r\nrequire('./pp/tool/widget_frame/widget_frame');\r\n\r\n//LOCOMOTION\r\n\r\nrequire('./locomotion/locomotion_utils');\r\nrequire('./locomotion/player_head_manager');\r\nrequire('./locomotion/player_transform_manager');\r\nrequire('./locomotion/player_locomotion_rotate');\r\nrequire('./locomotion/player_locomotion_movement');\r\nrequire('./locomotion/player_locomotion_smooth');\r\nrequire('./locomotion/player_obscure_manager');\r\nrequire('./locomotion/player_locomotion');\r\nrequire('./locomotion/player_locomotion_component');\r\n\r\nrequire('./locomotion/teleport/player_locomotion_teleport_parable');\r\nrequire('./locomotion/teleport/player_locomotion_teleport_state');\r\nrequire('./locomotion/teleport/player_locomotion_teleport_detection_visualizer');\r\nrequire('./locomotion/teleport/player_locomotion_teleport_detection_state');\r\nrequire('./locomotion/teleport/player_locomotion_teleport_detection_state_visibility');\r\nrequire('./locomotion/teleport/player_locomotion_teleport_teleport_state');\r\nrequire('./locomotion/teleport/player_locomotion_teleport_teleport_blink_state');\r\nrequire('./locomotion/teleport/player_locomotion_teleport_teleport_shift_state');\r\nrequire('./locomotion/teleport/player_locomotion_teleport');\r\n\r\nrequire('./locomotion/cleaned/player_locomotion_cleaned');\r\nrequire('./locomotion/cleaned/player_locomotion_smooth_cleaned');\r\nrequire('./locomotion/cleaned/player_transform_manager_cleaned');\r\n\r\n//LABYROOTS\r\n\r\nrequire('./labyroots/labyroots_gateway');\r\n\r\nrequire('./labyroots/json/file_manager');\r\n\r\nrequire('./labyroots/maze/maze');\r\nrequire('./labyroots/maze/maze_item_type');\r\nrequire('./labyroots/maze/mazeverse_maze');\r\nrequire('./labyroots/maze/mazeverse_create_walls');\r\nrequire('./labyroots/maze/mazeverse_add_elements');\r\n\r\nrequire('./labyroots/cauldron/billboard_player');\r\nrequire('./labyroots/cauldron/story');\r\nrequire('./labyroots/cauldron/audio_load');\r\nrequire('./labyroots/cauldron/deactivate_on_story');\r\nrequire('./labyroots/cauldron/open_ggj');\r\nrequire('./labyroots/cauldron/open_github');\r\nrequire('./labyroots/cauldron/open_zesty');\r\nrequire('./labyroots/cauldron/zesty-wonderland-sdk-compat');\r\nrequire('./labyroots/cauldron/set_texture_after_delay');\r\nrequire('./labyroots/cauldron/secret_zone_check');\r\nrequire('./labyroots/cauldron/display_leaderboard');\r\nrequire('./labyroots/cauldron/lr_ca_dummy_server');\r\nrequire('./labyroots/cauldron/activate_if_wedding');\r\nrequire('./labyroots/cauldron/deactivate_physx_if_far_from_player');\r\nrequire('./labyroots/cauldron/follow_axe');\r\nrequire('./labyroots/cauldron/fix_drifting');\r\nrequire('./labyroots/cauldron/show_drifting');\r\nrequire('./labyroots/cauldron/increase_floor_tile');\r\nrequire('./labyroots/cauldron/render_closest_walls_first');\r\nrequire('./labyroots/cauldron/send_all_events');\r\nrequire('./labyroots/cauldron/sky_setter');\r\nrequire('./labyroots/cauldron/lights_setter');\r\nrequire('./labyroots/cauldron/wondermelon');\r\nrequire('./labyroots/cauldron/spawn_floor');\r\nrequire('./labyroots/cauldron/hide_if_pose_not_valid');\r\n\r\nrequire('./labyroots/player/transformation');\r\nrequire('./labyroots/player/stage_switch');\r\nrequire('./labyroots/player/mouth');\r\nrequire('./labyroots/player/swap_grab_hand');\r\nrequire('./labyroots/player/axe');\r\n\r\nrequire('./labyroots/tree/fruit');\r\nrequire('./labyroots/tree/root');\r\nrequire('./labyroots/tree/root_wall');\r\nrequire('./labyroots/tree/big_tree');\r\nrequire('./labyroots/tree/human_tree');\r\nrequire('./labyroots/tree/big_tree_die');\r\n\r\nrequire('./labyroots/test/test');\r\n"],
  "mappings": "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CJ;AAAA,MACJ,CAAC;AAAA;AAAA;;;ACvBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;",
  "names": ["type", "equals", "scale", "add", "adjoint", "clone", "copy", "create", "determinant", "equals", "exactEquals", "frob", "fromQuat", "fromRotation", "fromScaling", "fromTranslation", "fromValues", "identity", "invert", "mul", "multiply", "multiplyScalar", "multiplyScalarAndAdd", "rotate", "scale", "set", "str", "sub", "subtract", "translate", "transpose", "len", "add", "clone", "copy", "create", "equals", "exactEquals", "fromValues", "length", "mul", "multiply", "rotateX", "rotateY", "rotateZ", "scale", "set", "str", "sub", "subtract", "len", "add", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat4", "transformQuat", "zero", "add", "clone", "copy", "create", "dot", "equals", "exactEquals", "fromValues", "identity", "invert", "len", "length", "lerp", "mul", "multiply", "normalize", "random", "rotateX", "rotateY", "rotateZ", "scale", "set", "sqrLen", "squaredLength", "str", "add", "clone", "conjugate", "copy", "create", "dot", "equals", "exactEquals", "fromMat4", "fromRotation", "fromRotationTranslation", "fromTranslation", "fromValues", "getTranslation", "identity", "invert", "len", "length", "lerp", "mul", "multiply", "normalize", "rotateX", "rotateY", "rotateZ", "scale", "set", "sqrLen", "squaredLength", "str", "translate", "add", "angle", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "rotate", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat3", "transformMat4", "zero", "dist", "cursorTarget", "HowlerGlobal", "self", "Howler", "e", "i", "Howl", "str", "Sound", "len", "type", "import_howler", "a", "length", "clone", "equals", "min", "max", "quat", "angle", "zero", "inverse", "projection", "scale", "transformQuat", "quat", "scale", "transformQuat", "zero", "identity", "angle", "type", "min", "max", "min", "max", "angle", "random", "distance", "type", "dist", "cursorTarget", "import_howler", "init_esm", "type", "Type", "Collider", "Alignment", "Justification", "TextEffect", "InputType", "LightType", "AnimationState", "ForceMode", "CollisionEventType", "Shape", "MeshAttribute", "MaterialParamType", "MeshIndexType", "_a", "animId", "init_esm", "import_howler", "import_howler", "import_howler", "distance", "scale", "clone", "equals", "result", "defaultValue", "scale", "fsm", "fsm", "fsm", "max", "min", "result", "defaultValue", "result", "copy", "length", "type", "visualElements", "type", "clone", "clone", "clone", "clone", "clone", "clone", "scale", "result", "clone", "clone", "length", "raycastResult", "startNumber", "endNumber", "min", "max", "_a", "_a", "other", "transformQuat", "distance", "raycastResult", "transformQuat", "zero", "transformQuat", "transformQuat", "distance", "raycastResult", "angleNormalWithMovementThreshold", "firstHeightPosition", "zero", "distance", "raycastResult", "transformQuat", "distance", "raycastResult", "currentTransformQuat", "other", "other", "currentTransformQuat", "_a", "_a", "_a", "_a", "_a", "_a", "_a", "_a", "_a", "_a", "result", "require_finger_cursor", "callbacks", "length", "angle", "scale", "transformQuat", "dt", "transformQuat", "min", "max", "defaultValue", "length", "type", "min", "max", "response", "angle", "transformQuat", "distance", "require_player_locomotion_rotate", "require_player_locomotion_smooth", "distance", "params", "distance", "fsm", "raycastResult", "hit", "raycastResult", "distance", "angle", "fsm", "fsm", "fsm", "distance", "require_player_locomotion_teleport", "params", "transformQuat", "distance", "response", "type", "isDoorFree", "isDoorLimited", "min", "max", "import_howler", "result", "ln", "newTile", "result", "type", "distance", "type", "player", "random"]
}
